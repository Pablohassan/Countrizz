import{r as d9,e as dl,R as Df,g as If,_ as Bf,l as Of}from"./vendor.03dad307.js";import{j as J1,a as _4,d as qf,H as Ff,g as kf,r as Nf}from"./index.c202641d.js";var p7={exports:{}};(function(i,e){(function(t,n){i.exports=n(d9.exports)})(typeof self!="undefined"?self:dl,function(t){return function(n){function r(s){if(o[s])return o[s].exports;var a=o[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,r),a.l=!0,a.exports}var o={};return r.m=n,r.c=o,r.d=function(s,a,h){r.o(s,a)||Object.defineProperty(s,a,{configurable:!1,enumerable:!0,get:h})},r.n=function(s){var a=s&&s.__esModule?function(){return s.default}:function(){return s};return r.d(a,"a",a),a},r.o=function(s,a){return Object.prototype.hasOwnProperty.call(s,a)},r.p="",r(r.s=8)}([function(n,r,o){var s=this&&this.__importDefault||function(R){return R&&R.__esModule?R:{default:R}};Object.defineProperty(r,"__esModule",{value:!0});var a=s(o(1)),h=s(o(9)),f=s(o(2)),d=o(11),m=s(o(3)),y=s(o(7)),v=function(R){return R.query||(0,m.default)(R)},b=function(R){if(R)return Object.keys(R).reduce(function(I,q){return I[(0,f.default)(q)]=R[q],I},{})},M=function(){var R=a.default.useRef(!1);return a.default.useEffect(function(){R.current=!0},[]),R.current},w=function(R){var I=a.default.useContext(y.default),q=function(){return b(R)||b(I)},D=a.default.useState(q),O=D[0],k=D[1];return a.default.useEffect(function(){var B=q();(0,d.shallowEqualObjects)(O,B)||k(B)},[R,I]),O},E=function(R){var I=function(){return v(R)},q=a.default.useState(I),D=q[0],O=q[1];return a.default.useEffect(function(){var k=I();D!==k&&O(k)},[R]),D},T=function(R,I){var q=function(){return(0,h.default)(R,I||{},!!I)},D=a.default.useState(q),O=D[0],k=D[1],B=M();return a.default.useEffect(function(){if(B){var j=q();return k(j),function(){j&&j.dispose()}}},[R,I]),O},C=function(R){var I=a.default.useState(R.matches),q=I[0],D=I[1];return a.default.useEffect(function(){var O=function(){D(R.matches)};return R.addListener(O),O(),function(){R.removeListener(O)}},[R]),q},P=function(R,I,q){var D=w(I),O=E(R);if(!O)throw new Error("Invalid or missing MediaQuery!");var k=T(O,D),B=C(k),j=M();return a.default.useEffect(function(){j&&q&&q(B)},[B]),a.default.useEffect(function(){return function(){k&&k.dispose()}},[]),B};r.default=P},function(n,r){n.exports=t},function(n,r,o){function s(m){return"-"+m.toLowerCase()}function a(m){if(d.hasOwnProperty(m))return d[m];var y=m.replace(h,s);return d[m]=f.test(y)?"-"+y:y}Object.defineProperty(r,"__esModule",{value:!0});var h=/[A-Z]/g,f=/^ms-/,d={};r.default=a},function(n,r,o){var s=this&&this.__importDefault||function(v){return v&&v.__esModule?v:{default:v}};Object.defineProperty(r,"__esModule",{value:!0});var a=s(o(2)),h=s(o(12)),f=function(v){return"not ".concat(v)},d=function(v,b){var M=(0,a.default)(v);return typeof b=="number"&&(b="".concat(b,"px")),b===!0?M:b===!1?f(M):"(".concat(M,": ").concat(b,")")},m=function(v){return v.join(" and ")},y=function(v){var b=[];return Object.keys(h.default.all).forEach(function(M){var w=v[M];w!=null&&b.push(d(M,w))}),m(b)};r.default=y},function(n,r,o){n.exports=o(14)},function(n,r,o){n.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(n,r){n.exports=Function.call.bind(Object.prototype.hasOwnProperty)},function(n,r,o){var s=this&&this.__importDefault||function(f){return f&&f.__esModule?f:{default:f}};Object.defineProperty(r,"__esModule",{value:!0});var a=s(o(1)),h=a.default.createContext(void 0);r.default=h},function(n,r,o){var s=this&&this.__importDefault||function(m){return m&&m.__esModule?m:{default:m}};Object.defineProperty(r,"__esModule",{value:!0}),r.Context=r.toQuery=r.useMediaQuery=r.default=void 0;var a=s(o(0));r.useMediaQuery=a.default;var h=s(o(18));r.default=h.default;var f=s(o(3));r.toQuery=f.default;var d=s(o(7));r.Context=d.default},function(n,r,o){function s(d,m,y){function v(C){T&&T.addListener(C)}function b(C){T&&T.removeListener(C)}function M(C){E.matches=C.matches,E.media=C.media}function w(){T&&T.removeListener(M)}var E=this;if(f&&!y){var T=f.call(window,d);this.matches=T.matches,this.media=T.media,T.addListener(M)}else this.matches=h(d,m),this.media=d;this.addListener=v,this.removeListener=b,this.dispose=w}function a(d,m,y){return new s(d,m,y)}var h=o(10).match,f=typeof window!="undefined"?window.matchMedia:null;n.exports=a},function(n,r,o){function s(w,E){return a(w).some(function(T){var C=T.inverse,P=T.type==="all"||E.type===T.type;if(P&&C||!P&&!C)return!1;var R=T.expressions.every(function(I){var q=I.feature,D=I.modifier,O=I.value,k=E[q];if(!k)return!1;switch(q){case"orientation":case"scan":return k.toLowerCase()===O.toLowerCase();case"width":case"height":case"device-width":case"device-height":O=d(O),k=d(k);break;case"resolution":O=f(O),k=f(k);break;case"aspect-ratio":case"device-aspect-ratio":case"device-pixel-ratio":O=h(O),k=h(k);break;case"grid":case"color":case"color-index":case"monochrome":O=parseInt(O,10)||1,k=parseInt(k,10)||0}switch(D){case"min":return k>=O;case"max":return k<=O;default:return k===O}});return R&&!C||!R&&C})}function a(w){return w.split(",").map(function(E){E=E.trim();var T=E.match(m),C=T[1],P=T[2],R=T[3]||"",I={};return I.inverse=!!C&&C.toLowerCase()==="not",I.type=P?P.toLowerCase():"all",R=R.match(/\([^\)]+\)/g)||[],I.expressions=R.map(function(q){var D=q.match(y),O=D[1].toLowerCase().match(v);return{modifier:O[1],feature:O[2],value:D[2]}}),I})}function h(w){var E,T=Number(w);return T||(E=w.match(/^(\d+)\s*\/\s*(\d+)$/),T=E[1]/E[2]),T}function f(w){var E=parseFloat(w);switch(String(w).match(M)[1]){case"dpcm":return E/2.54;case"dppx":return 96*E;default:return E}}function d(w){var E=parseFloat(w);switch(String(w).match(b)[1]){case"em":case"rem":return 16*E;case"cm":return 96*E/2.54;case"mm":return 96*E/2.54/10;case"in":return 96*E;case"pt":return 72*E;case"pc":return 72*E/12;default:return E}}r.match=s,r.parse=a;var m=/(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i,y=/\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/,v=/^(?:(min|max)-)?(.+)/,b=/(em|rem|px|cm|mm|in|pt|pc)?$/,M=/(dpi|dpcm|dppx)?$/},function(n,r,o){function s(h,f){if(h===f)return!0;if(!h||!f)return!1;var d=Object.keys(h),m=Object.keys(f),y=d.length;if(m.length!==y)return!1;for(var v=0;v<y;v++){var b=d[v];if(h[b]!==f[b]||!Object.prototype.hasOwnProperty.call(f,b))return!1}return!0}function a(h,f){if(h===f)return!0;if(!h||!f)return!1;var d=h.length;if(f.length!==d)return!1;for(var m=0;m<d;m++)if(h[m]!==f[m])return!1;return!0}Object.defineProperty(r,"__esModule",{value:!0}),o.d(r,"shallowEqualArrays",function(){return a}),o.d(r,"shallowEqualObjects",function(){return s})},function(n,r,o){var s=this&&this.__assign||function(){return s=Object.assign||function(w){for(var E,T=1,C=arguments.length;T<C;T++){E=arguments[T];for(var P in E)Object.prototype.hasOwnProperty.call(E,P)&&(w[P]=E[P])}return w},s.apply(this,arguments)},a=this&&this.__rest||function(w,E){var T={};for(var C in w)Object.prototype.hasOwnProperty.call(w,C)&&E.indexOf(C)<0&&(T[C]=w[C]);if(w!=null&&typeof Object.getOwnPropertySymbols=="function")for(var P=0,C=Object.getOwnPropertySymbols(w);P<C.length;P++)E.indexOf(C[P])<0&&Object.prototype.propertyIsEnumerable.call(w,C[P])&&(T[C[P]]=w[C[P]]);return T},h=this&&this.__importDefault||function(w){return w&&w.__esModule?w:{default:w}};Object.defineProperty(r,"__esModule",{value:!0});var f=h(o(13)),d=f.default.oneOfType([f.default.string,f.default.number]),m={all:f.default.bool,grid:f.default.bool,aural:f.default.bool,braille:f.default.bool,handheld:f.default.bool,print:f.default.bool,projection:f.default.bool,screen:f.default.bool,tty:f.default.bool,tv:f.default.bool,embossed:f.default.bool},y={orientation:f.default.oneOf(["portrait","landscape"]),scan:f.default.oneOf(["progressive","interlace"]),aspectRatio:f.default.string,deviceAspectRatio:f.default.string,height:d,deviceHeight:d,width:d,deviceWidth:d,color:f.default.bool,colorIndex:f.default.bool,monochrome:f.default.bool,resolution:d,type:Object.keys(m)},v=a(y,["type"]),b=s({minAspectRatio:f.default.string,maxAspectRatio:f.default.string,minDeviceAspectRatio:f.default.string,maxDeviceAspectRatio:f.default.string,minHeight:d,maxHeight:d,minDeviceHeight:d,maxDeviceHeight:d,minWidth:d,maxWidth:d,minDeviceWidth:d,maxDeviceWidth:d,minColor:f.default.number,maxColor:f.default.number,minColorIndex:f.default.number,maxColorIndex:f.default.number,minMonochrome:f.default.number,maxMonochrome:f.default.number,minResolution:d,maxResolution:d},v),M=s(s({},m),b);r.default={all:M,types:m,matchers:y,features:b}},function(n,r,o){var s=o(4);n.exports=o(15)(s.isElement,!0)},function(n,r,o){(function(){function s(m0){return typeof m0=="string"||typeof m0=="function"||m0===D||m0===z||m0===k||m0===O||m0===X||m0===o0||typeof m0=="object"&&m0!==null&&(m0.$$typeof===u0||m0.$$typeof===a0||m0.$$typeof===B||m0.$$typeof===j||m0.$$typeof===G||m0.$$typeof===b0||m0.$$typeof===i0||m0.$$typeof===g0||m0.$$typeof===l0)}function a(m0){if(typeof m0=="object"&&m0!==null){var U0=m0.$$typeof;switch(U0){case I:var c1=m0.type;switch(c1){case Y:case z:case D:case k:case O:case X:return c1;default:var s1=c1&&c1.$$typeof;switch(s1){case j:case G:case u0:case a0:case B:return s1;default:return U0}}case q:return U0}}}function h(m0){return L0||(L0=!0,console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")),f(m0)||a(m0)===Y}function f(m0){return a(m0)===z}function d(m0){return a(m0)===j}function m(m0){return a(m0)===B}function y(m0){return typeof m0=="object"&&m0!==null&&m0.$$typeof===I}function v(m0){return a(m0)===G}function b(m0){return a(m0)===D}function M(m0){return a(m0)===u0}function w(m0){return a(m0)===a0}function E(m0){return a(m0)===q}function T(m0){return a(m0)===k}function C(m0){return a(m0)===O}function P(m0){return a(m0)===X}var R=typeof Symbol=="function"&&Symbol.for,I=R?Symbol.for("react.element"):60103,q=R?Symbol.for("react.portal"):60106,D=R?Symbol.for("react.fragment"):60107,O=R?Symbol.for("react.strict_mode"):60108,k=R?Symbol.for("react.profiler"):60114,B=R?Symbol.for("react.provider"):60109,j=R?Symbol.for("react.context"):60110,Y=R?Symbol.for("react.async_mode"):60111,z=R?Symbol.for("react.concurrent_mode"):60111,G=R?Symbol.for("react.forward_ref"):60112,X=R?Symbol.for("react.suspense"):60113,o0=R?Symbol.for("react.suspense_list"):60120,a0=R?Symbol.for("react.memo"):60115,u0=R?Symbol.for("react.lazy"):60116,l0=R?Symbol.for("react.block"):60121,b0=R?Symbol.for("react.fundamental"):60117,i0=R?Symbol.for("react.responder"):60118,g0=R?Symbol.for("react.scope"):60119,P0=Y,T0=z,d0=j,p0=B,E0=I,I0=G,_0=D,H0=u0,w0=a0,N=q,Z=k,H=O,v0=X,L0=!1;r.AsyncMode=P0,r.ConcurrentMode=T0,r.ContextConsumer=d0,r.ContextProvider=p0,r.Element=E0,r.ForwardRef=I0,r.Fragment=_0,r.Lazy=H0,r.Memo=w0,r.Portal=N,r.Profiler=Z,r.StrictMode=H,r.Suspense=v0,r.isAsyncMode=h,r.isConcurrentMode=f,r.isContextConsumer=d,r.isContextProvider=m,r.isElement=y,r.isForwardRef=v,r.isFragment=b,r.isLazy=M,r.isMemo=w,r.isPortal=E,r.isProfiler=T,r.isStrictMode=C,r.isSuspense=P,r.isValidElementType=s,r.typeOf=a})()},function(n,r,o){function s(){return null}var a=o(4),h=o(16),f=o(5),d=o(6),m=o(17),y=function(){};y=function(v){var b="Warning: "+v;typeof console!="undefined"&&console.error(b);try{throw new Error(b)}catch{}},n.exports=function(v,b){function M(i0){var g0=i0&&(a0&&i0[a0]||i0[u0]);if(typeof g0=="function")return g0}function w(i0,g0){return i0===g0?i0!==0||1/i0==1/g0:i0!==i0&&g0!==g0}function E(i0,g0){this.message=i0,this.data=g0&&typeof g0=="object"?g0:{},this.stack=""}function T(i0){function g0(p0,E0,I0,_0,H0,w0,N){if(_0=_0||l0,w0=w0||I0,N!==f){if(b){var Z=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");throw Z.name="Invariant Violation",Z}if(typeof console!="undefined"){var H=_0+":"+I0;!P0[H]&&T0<3&&(y("You are manually calling a React.PropTypes validation function for the `"+w0+"` prop on `"+_0+"`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."),P0[H]=!0,T0++)}}return E0[I0]==null?p0?new E(E0[I0]===null?"The "+H0+" `"+w0+"` is marked as required in `"+_0+"`, but its value is `null`.":"The "+H0+" `"+w0+"` is marked as required in `"+_0+"`, but its value is `undefined`."):null:i0(E0,I0,_0,H0,w0)}var P0={},T0=0,d0=g0.bind(null,!1);return d0.isRequired=g0.bind(null,!0),d0}function C(i0){function g0(P0,T0,d0,p0,E0,I0){var _0=P0[T0];return z(_0)!==i0?new E("Invalid "+p0+" `"+E0+"` of type `"+G(_0)+"` supplied to `"+d0+"`, expected `"+i0+"`.",{expectedType:i0}):null}return T(g0)}function P(i0){function g0(P0,T0,d0,p0,E0){if(typeof i0!="function")return new E("Property `"+E0+"` of component `"+d0+"` has invalid PropType notation inside arrayOf.");var I0=P0[T0];if(!Array.isArray(I0))return new E("Invalid "+p0+" `"+E0+"` of type `"+z(I0)+"` supplied to `"+d0+"`, expected an array.");for(var _0=0;_0<I0.length;_0++){var H0=i0(I0,_0,d0,p0,E0+"["+_0+"]",f);if(H0 instanceof Error)return H0}return null}return T(g0)}function R(i0){function g0(P0,T0,d0,p0,E0){if(!(P0[T0]instanceof i0)){var I0=i0.name||l0;return new E("Invalid "+p0+" `"+E0+"` of type `"+o0(P0[T0])+"` supplied to `"+d0+"`, expected instance of `"+I0+"`.")}return null}return T(g0)}function I(i0){function g0(P0,T0,d0,p0,E0){for(var I0=P0[T0],_0=0;_0<i0.length;_0++)if(w(I0,i0[_0]))return null;var H0=JSON.stringify(i0,function(w0,N){return G(N)==="symbol"?String(N):N});return new E("Invalid "+p0+" `"+E0+"` of value `"+String(I0)+"` supplied to `"+d0+"`, expected one of "+H0+".")}return Array.isArray(i0)?T(g0):(y(arguments.length>1?"Invalid arguments supplied to oneOf, expected an array, got "+arguments.length+" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).":"Invalid argument supplied to oneOf, expected an array."),s)}function q(i0){function g0(P0,T0,d0,p0,E0){if(typeof i0!="function")return new E("Property `"+E0+"` of component `"+d0+"` has invalid PropType notation inside objectOf.");var I0=P0[T0],_0=z(I0);if(_0!=="object")return new E("Invalid "+p0+" `"+E0+"` of type `"+_0+"` supplied to `"+d0+"`, expected an object.");for(var H0 in I0)if(d(I0,H0)){var w0=i0(I0,H0,d0,p0,E0+"."+H0,f);if(w0 instanceof Error)return w0}return null}return T(g0)}function D(i0){function g0(d0,p0,E0,I0,_0){for(var H0=[],w0=0;w0<i0.length;w0++){var N=i0[w0],Z=N(d0,p0,E0,I0,_0,f);if(Z==null)return null;Z.data&&d(Z.data,"expectedType")&&H0.push(Z.data.expectedType)}return new E("Invalid "+I0+" `"+_0+"` supplied to `"+E0+"`"+(H0.length>0?", expected one of type ["+H0.join(", ")+"]":"")+".")}if(!Array.isArray(i0))return y("Invalid argument supplied to oneOfType, expected an instance of array."),s;for(var P0=0;P0<i0.length;P0++){var T0=i0[P0];if(typeof T0!="function")return y("Invalid argument supplied to oneOfType. Expected an array of check functions, but received "+X(T0)+" at index "+P0+"."),s}return T(g0)}function O(i0,g0,P0,T0,d0){return new E((i0||"React class")+": "+g0+" type `"+P0+"."+T0+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+d0+"`.")}function k(i0){function g0(P0,T0,d0,p0,E0){var I0=P0[T0],_0=z(I0);if(_0!=="object")return new E("Invalid "+p0+" `"+E0+"` of type `"+_0+"` supplied to `"+d0+"`, expected `object`.");for(var H0 in i0){var w0=i0[H0];if(typeof w0!="function")return O(d0,p0,E0,H0,G(w0));var N=w0(I0,H0,d0,p0,E0+"."+H0,f);if(N)return N}return null}return T(g0)}function B(i0){function g0(P0,T0,d0,p0,E0){var I0=P0[T0],_0=z(I0);if(_0!=="object")return new E("Invalid "+p0+" `"+E0+"` of type `"+_0+"` supplied to `"+d0+"`, expected `object`.");var H0=h({},P0[T0],i0);for(var w0 in H0){var N=i0[w0];if(d(i0,w0)&&typeof N!="function")return O(d0,p0,E0,w0,G(N));if(!N)return new E("Invalid "+p0+" `"+E0+"` key `"+w0+"` supplied to `"+d0+"`.\nBad object: "+JSON.stringify(P0[T0],null,"  ")+`
Valid keys: `+JSON.stringify(Object.keys(i0),null,"  "));var Z=N(I0,w0,d0,p0,E0+"."+w0,f);if(Z)return Z}return null}return T(g0)}function j(i0){switch(typeof i0){case"number":case"string":case"undefined":return!0;case"boolean":return!i0;case"object":if(Array.isArray(i0))return i0.every(j);if(i0===null||v(i0))return!0;var g0=M(i0);if(!g0)return!1;var P0,T0=g0.call(i0);if(g0!==i0.entries){for(;!(P0=T0.next()).done;)if(!j(P0.value))return!1}else for(;!(P0=T0.next()).done;){var d0=P0.value;if(d0&&!j(d0[1]))return!1}return!0;default:return!1}}function Y(i0,g0){return i0==="symbol"||!!g0&&(g0["@@toStringTag"]==="Symbol"||typeof Symbol=="function"&&g0 instanceof Symbol)}function z(i0){var g0=typeof i0;return Array.isArray(i0)?"array":i0 instanceof RegExp?"object":Y(g0,i0)?"symbol":g0}function G(i0){if(i0==null)return""+i0;var g0=z(i0);if(g0==="object"){if(i0 instanceof Date)return"date";if(i0 instanceof RegExp)return"regexp"}return g0}function X(i0){var g0=G(i0);switch(g0){case"array":case"object":return"an "+g0;case"boolean":case"date":case"regexp":return"a "+g0;default:return g0}}function o0(i0){return i0.constructor&&i0.constructor.name?i0.constructor.name:l0}var a0=typeof Symbol=="function"&&Symbol.iterator,u0="@@iterator",l0="<<anonymous>>",b0={array:C("array"),bigint:C("bigint"),bool:C("boolean"),func:C("function"),number:C("number"),object:C("object"),string:C("string"),symbol:C("symbol"),any:function(){return T(s)}(),arrayOf:P,element:function(){function i0(g0,P0,T0,d0,p0){var E0=g0[P0];return v(E0)?null:new E("Invalid "+d0+" `"+p0+"` of type `"+z(E0)+"` supplied to `"+T0+"`, expected a single ReactElement.")}return T(i0)}(),elementType:function(){function i0(g0,P0,T0,d0,p0){var E0=g0[P0];return a.isValidElementType(E0)?null:new E("Invalid "+d0+" `"+p0+"` of type `"+z(E0)+"` supplied to `"+T0+"`, expected a single ReactElement type.")}return T(i0)}(),instanceOf:R,node:function(){function i0(g0,P0,T0,d0,p0){return j(g0[P0])?null:new E("Invalid "+d0+" `"+p0+"` supplied to `"+T0+"`, expected a ReactNode.")}return T(i0)}(),objectOf:q,oneOf:I,oneOfType:D,shape:k,exact:B};return E.prototype=Error.prototype,b0.checkPropTypes=m,b0.resetWarningCache=m.resetWarningCache,b0.PropTypes=b0,b0}},function(n,r,o){function s(d){if(d==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(d)}/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var a=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;n.exports=function(){try{if(!Object.assign)return!1;var d=new String("abc");if(d[5]="de",Object.getOwnPropertyNames(d)[0]==="5")return!1;for(var m={},y=0;y<10;y++)m["_"+String.fromCharCode(y)]=y;if(Object.getOwnPropertyNames(m).map(function(b){return m[b]}).join("")!=="0123456789")return!1;var v={};return"abcdefghijklmnopqrst".split("").forEach(function(b){v[b]=b}),Object.keys(Object.assign({},v)).join("")==="abcdefghijklmnopqrst"}catch{return!1}}()?Object.assign:function(d,m){for(var y,v,b=s(d),M=1;M<arguments.length;M++){y=Object(arguments[M]);for(var w in y)h.call(y,w)&&(b[w]=y[w]);if(a){v=a(y);for(var E=0;E<v.length;E++)f.call(y,v[E])&&(b[v[E]]=y[v[E]])}}return b}},function(n,r,o){function s(m,y,v,b,M){for(var w in m)if(d(m,w)){var E;try{if(typeof m[w]!="function"){var T=Error((b||"React class")+": "+v+" type `"+w+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof m[w]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw T.name="Invariant Violation",T}E=m[w](y,w,b,v,null,h)}catch(P){E=P}if(!E||E instanceof Error||a((b||"React class")+": type specification of "+v+" `"+w+"` is invalid; the type checker function must return `null` or an `Error` but returned a "+typeof E+". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."),E instanceof Error&&!(E.message in f)){f[E.message]=!0;var C=M?M():"";a("Failed "+v+" type: "+E.message+(C!=null?C:""))}}}var a=function(){},h=o(5),f={},d=o(6);a=function(m){var y="Warning: "+m;typeof console!="undefined"&&console.error(y);try{throw new Error(y)}catch{}},s.resetWarningCache=function(){f={}},n.exports=s},function(n,r,o){var s=this&&this.__rest||function(d,m){var y={};for(var v in d)Object.prototype.hasOwnProperty.call(d,v)&&m.indexOf(v)<0&&(y[v]=d[v]);if(d!=null&&typeof Object.getOwnPropertySymbols=="function")for(var b=0,v=Object.getOwnPropertySymbols(d);b<v.length;b++)m.indexOf(v[b])<0&&Object.prototype.propertyIsEnumerable.call(d,v[b])&&(y[v[b]]=d[v[b]]);return y},a=this&&this.__importDefault||function(d){return d&&d.__esModule?d:{default:d}};Object.defineProperty(r,"__esModule",{value:!0});var h=a(o(0)),f=function(d){var m=d.children,y=d.device,v=d.onChange,b=s(d,["children","device","onChange"]),M=(0,h.default)(b,y,v);return typeof m=="function"?m(M):M?m:null};r.default=f}])})})(p7);var Ve="/assets/bump4k.add63812.jpg",We="/assets/bump4kD.036c929a.jpg";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ti="140",t4={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},V5={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Uf=0,Fr=1,zf=2,pl=1,Gf=2,m7=3,C7=0,y2=1,E4=2,ml=1,X4=0,Z4=1,kr=2,Nr=3,Ur=4,Hf=5,p6=100,Vf=101,Wf=102,zr=103,Gr=104,jf=200,Qf=201,$f=202,Yf=203,gl=204,yl=205,Xf=206,Zf=207,Jf=208,Kf=209,eh=210,th=0,nh=1,ih=2,Xt=3,rh=4,oh=5,sh=6,ah=7,ue=0,lh=1,Ah=2,b4=0,uh=1,ch=2,fh=3,hh=4,dh=5,vl=300,L6=301,D6=302,Zt=303,Jt=304,ce=306,Kt=1e3,G2=1001,en=1002,R9=1003,Hr=1004,Vr=1005,s2=1006,ph=1007,fe=1008,B5=1009,mh=1010,gh=1011,P7=1012,yh=1013,p3=1014,T5=1015,R7=1016,vh=1017,xh=1018,C6=1020,_h=1021,bh=1022,V2=1023,wh=1024,Mh=1025,L5=1026,I6=1027,Sh=1028,Eh=1029,Th=1030,Ch=1031,Ph=1033,je=33776,Qe=33777,$e=33778,Ye=33779,Wr=35840,jr=35841,Qr=35842,$r=35843,Rh=36196,Yr=37492,Xr=37496,Zr=37808,Jr=37809,Kr=37810,eo=37811,to=37812,no=37813,io=37814,ro=37815,oo=37816,so=37817,ao=37818,lo=37819,Ao=37820,uo=37821,co=36492,Lh=2200,Dh=2201,Ih=2202,S3=2300,E3=2301,Xe=2302,g6=2400,y6=2401,T3=2402,ni=2500,xl=2501,_l=0,Bh=1,fo=2,e5=3e3,a9=3001,Oh=3200,qh=3201,H6=0,Fh=1,g4="srgb",C5="srgb-linear",Ze=7680,kh=519,L7=35044,C3=35048,ho="300 es",tn=1035;class Q2{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const o=r.indexOf(t);o!==-1&&r.splice(o,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let o=0,s=r.length;o<s;o++)r[o].call(this,e);e.target=null}}}const O9=[];for(let i=0;i<256;i++)O9[i]=(i<16?"0":"")+i.toString(16);let po=1234567;const _7=Math.PI/180,D7=180/Math.PI;function j2(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(O9[i&255]+O9[i>>8&255]+O9[i>>16&255]+O9[i>>24&255]+"-"+O9[e&255]+O9[e>>8&255]+"-"+O9[e>>16&15|64]+O9[e>>24&255]+"-"+O9[t&63|128]+O9[t>>8&255]+"-"+O9[t>>16&255]+O9[t>>24&255]+O9[n&255]+O9[n>>8&255]+O9[n>>16&255]+O9[n>>24&255]).toLowerCase()}function E9(i,e,t){return Math.max(e,Math.min(t,i))}function ii(i,e){return(i%e+e)%e}function Nh(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function Uh(i,e,t){return i!==e?(t-i)/(e-i):0}function b7(i,e,t){return(1-t)*i+t*e}function zh(i,e,t,n){return b7(i,e,1-Math.exp(-t*n))}function Gh(i,e=1){return e-Math.abs(ii(i,e*2)-e)}function Hh(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function Vh(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function Wh(i,e){return i+Math.floor(Math.random()*(e-i+1))}function jh(i,e){return i+Math.random()*(e-i)}function Qh(i){return i*(.5-Math.random())}function $h(i){i!==void 0&&(po=i);let e=po+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Yh(i){return i*_7}function Xh(i){return i*D7}function nn(i){return(i&i-1)===0&&i!==0}function Zh(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function P3(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Jh(i,e,t,n,r){const o=Math.cos,s=Math.sin,a=o(t/2),h=s(t/2),f=o((e+n)/2),d=s((e+n)/2),m=o((e-n)/2),y=s((e-n)/2),v=o((n-e)/2),b=s((n-e)/2);switch(r){case"XYX":i.set(a*d,h*m,h*y,a*f);break;case"YZY":i.set(h*y,a*d,h*m,a*f);break;case"ZXZ":i.set(h*m,h*y,a*d,a*f);break;case"XZX":i.set(a*d,h*b,h*v,a*f);break;case"YXY":i.set(h*v,a*d,h*b,a*f);break;case"ZYZ":i.set(h*b,h*v,a*d,a*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Kh(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function ed(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}var m3=Object.freeze({__proto__:null,DEG2RAD:_7,RAD2DEG:D7,generateUUID:j2,clamp:E9,euclideanModulo:ii,mapLinear:Nh,inverseLerp:Uh,lerp:b7,damp:zh,pingpong:Gh,smoothstep:Hh,smootherstep:Vh,randInt:Wh,randFloat:jh,randFloatSpread:Qh,seededRandom:$h,degToRad:Yh,radToDeg:Xh,isPowerOfTwo:nn,ceilPowerOfTwo:Zh,floorPowerOfTwo:P3,setQuaternionFromProperEuler:Jh,normalize:ed,denormalize:Kh});class D0{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),o=this.x-e.x,s=this.y-e.y;return this.x=o*n-s*r+e.x,this.y=o*r+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}D0.prototype.isVector2=!0;class q9{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,o,s,a,h,f){const d=this.elements;return d[0]=e,d[1]=r,d[2]=a,d[3]=t,d[4]=o,d[5]=h,d[6]=n,d[7]=s,d[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,o=this.elements,s=n[0],a=n[3],h=n[6],f=n[1],d=n[4],m=n[7],y=n[2],v=n[5],b=n[8],M=r[0],w=r[3],E=r[6],T=r[1],C=r[4],P=r[7],R=r[2],I=r[5],q=r[8];return o[0]=s*M+a*T+h*R,o[3]=s*w+a*C+h*I,o[6]=s*E+a*P+h*q,o[1]=f*M+d*T+m*R,o[4]=f*w+d*C+m*I,o[7]=f*E+d*P+m*q,o[2]=y*M+v*T+b*R,o[5]=y*w+v*C+b*I,o[8]=y*E+v*P+b*q,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],o=e[3],s=e[4],a=e[5],h=e[6],f=e[7],d=e[8];return t*s*d-t*a*f-n*o*d+n*a*h+r*o*f-r*s*h}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],o=e[3],s=e[4],a=e[5],h=e[6],f=e[7],d=e[8],m=d*s-a*f,y=a*h-d*o,v=f*o-s*h,b=t*m+n*y+r*v;if(b===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/b;return e[0]=m*M,e[1]=(r*f-d*n)*M,e[2]=(a*n-r*s)*M,e[3]=y*M,e[4]=(d*t-r*h)*M,e[5]=(r*o-a*t)*M,e[6]=v*M,e[7]=(n*h-f*t)*M,e[8]=(s*t-n*o)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,o,s,a){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*s+f*a)+s+e,-r*f,r*h,-r*(-f*s+h*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,o=r[0],s=r[3],a=r[6],h=r[1],f=r[4],d=r[7];return r[0]=t*o+n*h,r[3]=t*s+n*f,r[6]=t*a+n*d,r[1]=-n*o+t*h,r[4]=-n*s+t*f,r[7]=-n*a+t*d,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}q9.prototype.isMatrix3=!0;function bl(i){for(let e=i.length-1;e>=0;--e)if(i[e]>65535)return!0;return!1}function I7(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function D5(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function g3(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const Je={[g4]:{[C5]:D5},[C5]:{[g4]:g3}},F2={legacyMode:!0,get workingColorSpace(){return C5},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.legacyMode||e===t||!e||!t)return i;if(Je[e]&&Je[e][t]!==void 0){const n=Je[e][t];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}},wl={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},S9={r:0,g:0,b:0},k2={h:0,s:0,l:0},p8={h:0,s:0,l:0};function Ke(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function m8(i,e){return e.r=i.r,e.g=i.g,e.b=i.b,e}class l1{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=g4){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,F2.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=C5){return this.r=e,this.g=t,this.b=n,F2.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=C5){if(e=ii(e,1),t=E9(t,0,1),n=E9(n,0,1),t===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+t):n+t-n*t,s=2*n-o;this.r=Ke(s,o,e+1/3),this.g=Ke(s,o,e),this.b=Ke(s,o,e-1/3)}return F2.toWorkingColorSpace(this,r),this}setStyle(e,t=g4){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let o;const s=r[1],a=r[2];switch(s){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(o[1],10))/255,this.g=Math.min(255,parseInt(o[2],10))/255,this.b=Math.min(255,parseInt(o[3],10))/255,F2.toWorkingColorSpace(this,t),n(o[4]),this;if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(o[1],10))/100,this.g=Math.min(100,parseInt(o[2],10))/100,this.b=Math.min(100,parseInt(o[3],10))/100,F2.toWorkingColorSpace(this,t),n(o[4]),this;break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const h=parseFloat(o[1])/360,f=parseInt(o[2],10)/100,d=parseInt(o[3],10)/100;return n(o[4]),this.setHSL(h,f,d,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const o=r[1],s=o.length;if(s===3)return this.r=parseInt(o.charAt(0)+o.charAt(0),16)/255,this.g=parseInt(o.charAt(1)+o.charAt(1),16)/255,this.b=parseInt(o.charAt(2)+o.charAt(2),16)/255,F2.toWorkingColorSpace(this,t),this;if(s===6)return this.r=parseInt(o.charAt(0)+o.charAt(1),16)/255,this.g=parseInt(o.charAt(2)+o.charAt(3),16)/255,this.b=parseInt(o.charAt(4)+o.charAt(5),16)/255,F2.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=g4){const n=wl[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=D5(e.r),this.g=D5(e.g),this.b=D5(e.b),this}copyLinearToSRGB(e){return this.r=g3(e.r),this.g=g3(e.g),this.b=g3(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=g4){return F2.fromWorkingColorSpace(m8(this,S9),e),E9(S9.r*255,0,255)<<16^E9(S9.g*255,0,255)<<8^E9(S9.b*255,0,255)<<0}getHexString(e=g4){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=C5){F2.fromWorkingColorSpace(m8(this,S9),t);const n=S9.r,r=S9.g,o=S9.b,s=Math.max(n,r,o),a=Math.min(n,r,o);let h,f;const d=(a+s)/2;if(a===s)h=0,f=0;else{const m=s-a;switch(f=d<=.5?m/(s+a):m/(2-s-a),s){case n:h=(r-o)/m+(r<o?6:0);break;case r:h=(o-n)/m+2;break;case o:h=(n-r)/m+4;break}h/=6}return e.h=h,e.s=f,e.l=d,e}getRGB(e,t=C5){return F2.fromWorkingColorSpace(m8(this,S9),t),e.r=S9.r,e.g=S9.g,e.b=S9.b,e}getStyle(e=g4){return F2.fromWorkingColorSpace(m8(this,S9),e),e!==g4?`color(${e} ${S9.r} ${S9.g} ${S9.b})`:`rgb(${S9.r*255|0},${S9.g*255|0},${S9.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(k2),k2.h+=e,k2.s+=t,k2.l+=n,this.setHSL(k2.h,k2.s,k2.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(k2),e.getHSL(p8);const n=b7(k2.h,p8.h,t),r=b7(k2.s,p8.s,t),o=b7(k2.l,p8.l,t);return this.setHSL(n,r,o),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}l1.NAMES=wl;l1.prototype.isColor=!0;l1.prototype.r=1;l1.prototype.g=1;l1.prototype.b=1;let W5;class q5{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{W5===void 0&&(W5=I7("canvas")),W5.width=e.width,W5.height=e.height;const n=W5.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=W5}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=I7("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),o=r.data;for(let s=0;s<o.length;s++)o[s]=D5(o[s]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(D5(t[n]/255)*255):t[n]=D5(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ri{constructor(e=null){this.uuid=j2(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let o;if(Array.isArray(r)){o=[];for(let s=0,a=r.length;s<a;s++)r[s].isDataTexture?o.push(et(r[s].image)):o.push(et(r[s]))}else o=et(r);n.url=o}return t||(e.images[this.uuid]=n),n}}function et(i){return typeof HTMLImageElement!="undefined"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&i instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&i instanceof ImageBitmap?q5.getDataURL(i):i.data?{data:Array.prototype.slice.call(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ri.prototype.isSource=!0;let td=0;class D9 extends Q2{constructor(e=D9.DEFAULT_IMAGE,t=D9.DEFAULT_MAPPING,n=G2,r=G2,o=s2,s=fe,a=V2,h=B5,f=1,d=e5){super();Object.defineProperty(this,"id",{value:td++}),this.uuid=j2(),this.name="",this.source=new ri(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=o,this.minFilter=s,this.anisotropy=f,this.format=a,this.internalFormat=null,this.type=h,this.offset=new D0(0,0),this.repeat=new D0(1,1),this.center=new D0(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new q9,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==vl)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Kt:e.x=e.x-Math.floor(e.x);break;case G2:e.x=e.x<0?0:1;break;case en:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Kt:e.y=e.y-Math.floor(e.y);break;case G2:e.y=e.y<0?0:1;break;case en:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}D9.DEFAULT_IMAGE=null;D9.DEFAULT_MAPPING=vl;D9.prototype.isTexture=!0;class Y1{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,o=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12]*o,this.y=s[1]*t+s[5]*n+s[9]*r+s[13]*o,this.z=s[2]*t+s[6]*n+s[10]*r+s[14]*o,this.w=s[3]*t+s[7]*n+s[11]*r+s[15]*o,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,o;const h=e.elements,f=h[0],d=h[4],m=h[8],y=h[1],v=h[5],b=h[9],M=h[2],w=h[6],E=h[10];if(Math.abs(d-y)<.01&&Math.abs(m-M)<.01&&Math.abs(b-w)<.01){if(Math.abs(d+y)<.1&&Math.abs(m+M)<.1&&Math.abs(b+w)<.1&&Math.abs(f+v+E-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const C=(f+1)/2,P=(v+1)/2,R=(E+1)/2,I=(d+y)/4,q=(m+M)/4,D=(b+w)/4;return C>P&&C>R?C<.01?(n=0,r=.707106781,o=.707106781):(n=Math.sqrt(C),r=I/n,o=q/n):P>R?P<.01?(n=.707106781,r=0,o=.707106781):(r=Math.sqrt(P),n=I/r,o=D/r):R<.01?(n=.707106781,r=.707106781,o=0):(o=Math.sqrt(R),n=q/o,r=D/o),this.set(n,r,o,t),this}let T=Math.sqrt((w-b)*(w-b)+(m-M)*(m-M)+(y-d)*(y-d));return Math.abs(T)<.001&&(T=1),this.x=(w-b)/T,this.y=(m-M)/T,this.z=(y-d)/T,this.w=Math.acos((f+v+E-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Y1.prototype.isVector4=!0;class u2 extends Q2{constructor(e,t,n={}){super();this.width=e,this.height=t,this.depth=1,this.scissor=new Y1(0,0,e,t),this.scissorTest=!1,this.viewport=new Y1(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new D9(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:s2,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ri(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}u2.prototype.isWebGLRenderTarget=!0;class he extends D9{constructor(e=null,t=1,n=1,r=1){super(null);this.image={data:e,width:t,height:n,depth:r},this.magFilter=R9,this.minFilter=R9,this.wrapR=G2,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}he.prototype.isDataArrayTexture=!0;class nd extends u2{constructor(e,t,n){super(e,t);this.depth=n,this.texture=new he(null,e,t,n),this.texture.isRenderTargetTexture=!0}}nd.prototype.isWebGLArrayRenderTarget=!0;class oi extends D9{constructor(e=null,t=1,n=1,r=1){super(null);this.image={data:e,width:t,height:n,depth:r},this.magFilter=R9,this.minFilter=R9,this.wrapR=G2,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}oi.prototype.isData3DTexture=!0;class id extends u2{constructor(e,t,n){super(e,t);this.depth=n,this.texture=new oi(null,e,t,n),this.texture.isRenderTargetTexture=!0}}id.prototype.isWebGL3DRenderTarget=!0;class rd extends u2{constructor(e,t,n,r={}){super(e,t,r);const o=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=o.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,o=this.texture.length;r<o;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}rd.prototype.isWebGLMultipleRenderTargets=!0;class b9{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,o,s,a){let h=n[r+0],f=n[r+1],d=n[r+2],m=n[r+3];const y=o[s+0],v=o[s+1],b=o[s+2],M=o[s+3];if(a===0){e[t+0]=h,e[t+1]=f,e[t+2]=d,e[t+3]=m;return}if(a===1){e[t+0]=y,e[t+1]=v,e[t+2]=b,e[t+3]=M;return}if(m!==M||h!==y||f!==v||d!==b){let w=1-a;const E=h*y+f*v+d*b+m*M,T=E>=0?1:-1,C=1-E*E;if(C>Number.EPSILON){const R=Math.sqrt(C),I=Math.atan2(R,E*T);w=Math.sin(w*I)/R,a=Math.sin(a*I)/R}const P=a*T;if(h=h*w+y*P,f=f*w+v*P,d=d*w+b*P,m=m*w+M*P,w===1-a){const R=1/Math.sqrt(h*h+f*f+d*d+m*m);h*=R,f*=R,d*=R,m*=R}}e[t]=h,e[t+1]=f,e[t+2]=d,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,r,o,s){const a=n[r],h=n[r+1],f=n[r+2],d=n[r+3],m=o[s],y=o[s+1],v=o[s+2],b=o[s+3];return e[t]=a*b+d*m+h*v-f*y,e[t+1]=h*b+d*y+f*m-a*v,e[t+2]=f*b+d*v+a*y-h*m,e[t+3]=d*b-a*m-h*y-f*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,o=e._z,s=e._order,a=Math.cos,h=Math.sin,f=a(n/2),d=a(r/2),m=a(o/2),y=h(n/2),v=h(r/2),b=h(o/2);switch(s){case"XYZ":this._x=y*d*m+f*v*b,this._y=f*v*m-y*d*b,this._z=f*d*b+y*v*m,this._w=f*d*m-y*v*b;break;case"YXZ":this._x=y*d*m+f*v*b,this._y=f*v*m-y*d*b,this._z=f*d*b-y*v*m,this._w=f*d*m+y*v*b;break;case"ZXY":this._x=y*d*m-f*v*b,this._y=f*v*m+y*d*b,this._z=f*d*b+y*v*m,this._w=f*d*m-y*v*b;break;case"ZYX":this._x=y*d*m-f*v*b,this._y=f*v*m+y*d*b,this._z=f*d*b-y*v*m,this._w=f*d*m+y*v*b;break;case"YZX":this._x=y*d*m+f*v*b,this._y=f*v*m+y*d*b,this._z=f*d*b-y*v*m,this._w=f*d*m-y*v*b;break;case"XZY":this._x=y*d*m-f*v*b,this._y=f*v*m-y*d*b,this._z=f*d*b+y*v*m,this._w=f*d*m+y*v*b;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],o=t[8],s=t[1],a=t[5],h=t[9],f=t[2],d=t[6],m=t[10],y=n+a+m;if(y>0){const v=.5/Math.sqrt(y+1);this._w=.25/v,this._x=(d-h)*v,this._y=(o-f)*v,this._z=(s-r)*v}else if(n>a&&n>m){const v=2*Math.sqrt(1+n-a-m);this._w=(d-h)/v,this._x=.25*v,this._y=(r+s)/v,this._z=(o+f)/v}else if(a>m){const v=2*Math.sqrt(1+a-n-m);this._w=(o-f)/v,this._x=(r+s)/v,this._y=.25*v,this._z=(h+d)/v}else{const v=2*Math.sqrt(1+m-n-a);this._w=(s-r)/v,this._x=(o+f)/v,this._y=(h+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(E9(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,o=e._z,s=e._w,a=t._x,h=t._y,f=t._z,d=t._w;return this._x=n*d+s*a+r*f-o*h,this._y=r*d+s*h+o*a-n*f,this._z=o*d+s*f+n*h-r*a,this._w=s*d-n*a-r*h-o*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,o=this._z,s=this._w;let a=s*e._w+n*e._x+r*e._y+o*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=n,this._y=r,this._z=o,this;const h=1-a*a;if(h<=Number.EPSILON){const v=1-t;return this._w=v*s+t*this._w,this._x=v*n+t*this._x,this._y=v*r+t*this._y,this._z=v*o+t*this._z,this.normalize(),this._onChangeCallback(),this}const f=Math.sqrt(h),d=Math.atan2(f,a),m=Math.sin((1-t)*d)/f,y=Math.sin(t*d)/f;return this._w=s*m+this._w*y,this._x=n*m+this._x*y,this._y=r*m+this._y*y,this._z=o*m+this._z*y,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),o=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(o),n*Math.cos(o),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}b9.prototype.isQuaternion=!0;class ${constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(mo.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(mo.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,o=e.elements;return this.x=o[0]*t+o[3]*n+o[6]*r,this.y=o[1]*t+o[4]*n+o[7]*r,this.z=o[2]*t+o[5]*n+o[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,o=e.elements,s=1/(o[3]*t+o[7]*n+o[11]*r+o[15]);return this.x=(o[0]*t+o[4]*n+o[8]*r+o[12])*s,this.y=(o[1]*t+o[5]*n+o[9]*r+o[13])*s,this.z=(o[2]*t+o[6]*n+o[10]*r+o[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,o=e.x,s=e.y,a=e.z,h=e.w,f=h*t+s*r-a*n,d=h*n+a*t-o*r,m=h*r+o*n-s*t,y=-o*t-s*n-a*r;return this.x=f*h+y*-o+d*-a-m*-s,this.y=d*h+y*-s+m*-o-f*-a,this.z=m*h+y*-a+f*-s-d*-o,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r,this.y=o[1]*t+o[5]*n+o[9]*r,this.z=o[2]*t+o[6]*n+o[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,o=e.z,s=t.x,a=t.y,h=t.z;return this.x=r*h-o*a,this.y=o*s-n*h,this.z=n*a-r*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return tt.copy(this).projectOnVector(e),this.sub(tt)}reflect(e){return this.sub(tt.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(E9(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}$.prototype.isVector3=!0;const tt=new $,mo=new b9;class c2{constructor(e=new $(1/0,1/0,1/0),t=new $(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,o=-1/0,s=-1/0,a=-1/0;for(let h=0,f=e.length;h<f;h+=3){const d=e[h],m=e[h+1],y=e[h+2];d<t&&(t=d),m<n&&(n=m),y<r&&(r=y),d>o&&(o=d),m>s&&(s=m),y>a&&(a=y)}return this.min.set(t,n,r),this.max.set(o,s,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,o=-1/0,s=-1/0,a=-1/0;for(let h=0,f=e.count;h<f;h++){const d=e.getX(h),m=e.getY(h),y=e.getZ(h);d<t&&(t=d),m<n&&(n=m),y<r&&(r=y),d>o&&(o=d),m>s&&(s=m),y>a&&(a=y)}return this.min.set(t,n,r),this.max.set(o,s,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=v5.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const o=n.attributes.position;for(let s=0,a=o.count;s<a;s++)v5.fromBufferAttribute(o,s).applyMatrix4(e.matrixWorld),this.expandByPoint(v5)}else n.boundingBox===null&&n.computeBoundingBox(),nt.copy(n.boundingBox),nt.applyMatrix4(e.matrixWorld),this.union(nt);const r=e.children;for(let o=0,s=r.length;o<s;o++)this.expandByObject(r[o],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,v5),v5.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(n7),g8.subVectors(this.max,n7),j5.subVectors(e.a,n7),Q5.subVectors(e.b,n7),$5.subVectors(e.c,n7),F4.subVectors(Q5,j5),k4.subVectors($5,Q5),x5.subVectors(j5,$5);let t=[0,-F4.z,F4.y,0,-k4.z,k4.y,0,-x5.z,x5.y,F4.z,0,-F4.x,k4.z,0,-k4.x,x5.z,0,-x5.x,-F4.y,F4.x,0,-k4.y,k4.x,0,-x5.y,x5.x,0];return!it(t,j5,Q5,$5,g8)||(t=[1,0,0,0,1,0,0,0,1],!it(t,j5,Q5,$5,g8))?!1:(y8.crossVectors(F4,k4),t=[y8.x,y8.y,y8.z],it(t,j5,Q5,$5,g8))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return v5.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(v5).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(u4[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),u4[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),u4[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),u4[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),u4[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),u4[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),u4[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),u4[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(u4),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}c2.prototype.isBox3=!0;const u4=[new $,new $,new $,new $,new $,new $,new $,new $],v5=new $,nt=new c2,j5=new $,Q5=new $,$5=new $,F4=new $,k4=new $,x5=new $,n7=new $,g8=new $,y8=new $,_5=new $;function it(i,e,t,n,r){for(let o=0,s=i.length-3;o<=s;o+=3){_5.fromArray(i,o);const a=r.x*Math.abs(_5.x)+r.y*Math.abs(_5.y)+r.z*Math.abs(_5.z),h=e.dot(_5),f=t.dot(_5),d=n.dot(_5);if(Math.max(-Math.max(h,f,d),Math.min(h,f,d))>a)return!1}return!0}const od=new c2,go=new $,v8=new $,rt=new $;class s5{constructor(e=new $,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):od.setFromPoints(e).getCenter(n);let r=0;for(let o=0,s=e.length;o<s;o++)r=Math.max(r,n.distanceToSquared(e[o]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){rt.subVectors(e,this.center);const t=rt.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(rt.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?v8.set(0,0,1).multiplyScalar(e.radius):v8.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(go.copy(e.center).add(v8)),this.expandByPoint(go.copy(e.center).sub(v8)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const c4=new $,ot=new $,x8=new $,N4=new $,st=new $,_8=new $,at=new $;class F5{constructor(e=new $,t=new $(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,c4)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=c4.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(c4.copy(this.direction).multiplyScalar(t).add(this.origin),c4.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){ot.copy(e).add(t).multiplyScalar(.5),x8.copy(t).sub(e).normalize(),N4.copy(this.origin).sub(ot);const o=e.distanceTo(t)*.5,s=-this.direction.dot(x8),a=N4.dot(this.direction),h=-N4.dot(x8),f=N4.lengthSq(),d=Math.abs(1-s*s);let m,y,v,b;if(d>0)if(m=s*h-a,y=s*a-h,b=o*d,m>=0)if(y>=-b)if(y<=b){const M=1/d;m*=M,y*=M,v=m*(m+s*y+2*a)+y*(s*m+y+2*h)+f}else y=o,m=Math.max(0,-(s*y+a)),v=-m*m+y*(y+2*h)+f;else y=-o,m=Math.max(0,-(s*y+a)),v=-m*m+y*(y+2*h)+f;else y<=-b?(m=Math.max(0,-(-s*o+a)),y=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+y*(y+2*h)+f):y<=b?(m=0,y=Math.min(Math.max(-o,-h),o),v=y*(y+2*h)+f):(m=Math.max(0,-(s*o+a)),y=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+y*(y+2*h)+f);else y=s>0?-o:o,m=Math.max(0,-(s*y+a)),v=-m*m+y*(y+2*h)+f;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),r&&r.copy(x8).multiplyScalar(y).add(ot),v}intersectSphere(e,t){c4.subVectors(e.center,this.origin);const n=c4.dot(this.direction),r=c4.dot(c4)-n*n,o=e.radius*e.radius;if(r>o)return null;const s=Math.sqrt(o-r),a=n-s,h=n+s;return a<0&&h<0?null:a<0?this.at(h,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,o,s,a,h;const f=1/this.direction.x,d=1/this.direction.y,m=1/this.direction.z,y=this.origin;return f>=0?(n=(e.min.x-y.x)*f,r=(e.max.x-y.x)*f):(n=(e.max.x-y.x)*f,r=(e.min.x-y.x)*f),d>=0?(o=(e.min.y-y.y)*d,s=(e.max.y-y.y)*d):(o=(e.max.y-y.y)*d,s=(e.min.y-y.y)*d),n>s||o>r||((o>n||n!==n)&&(n=o),(s<r||r!==r)&&(r=s),m>=0?(a=(e.min.z-y.z)*m,h=(e.max.z-y.z)*m):(a=(e.max.z-y.z)*m,h=(e.min.z-y.z)*m),n>h||a>r)||((a>n||n!==n)&&(n=a),(h<r||r!==r)&&(r=h),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,c4)!==null}intersectTriangle(e,t,n,r,o){st.subVectors(t,e),_8.subVectors(n,e),at.crossVectors(st,_8);let s=this.direction.dot(at),a;if(s>0){if(r)return null;a=1}else if(s<0)a=-1,s=-s;else return null;N4.subVectors(this.origin,e);const h=a*this.direction.dot(_8.crossVectors(N4,_8));if(h<0)return null;const f=a*this.direction.dot(st.cross(N4));if(f<0||h+f>s)return null;const d=-a*N4.dot(at);return d<0?null:this.at(d/s,o)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class m1{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,o,s,a,h,f,d,m,y,v,b,M,w){const E=this.elements;return E[0]=e,E[4]=t,E[8]=n,E[12]=r,E[1]=o,E[5]=s,E[9]=a,E[13]=h,E[2]=f,E[6]=d,E[10]=m,E[14]=y,E[3]=v,E[7]=b,E[11]=M,E[15]=w,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new m1().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Y5.setFromMatrixColumn(e,0).length(),o=1/Y5.setFromMatrixColumn(e,1).length(),s=1/Y5.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*o,t[5]=n[5]*o,t[6]=n[6]*o,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,o=e.z,s=Math.cos(n),a=Math.sin(n),h=Math.cos(r),f=Math.sin(r),d=Math.cos(o),m=Math.sin(o);if(e.order==="XYZ"){const y=s*d,v=s*m,b=a*d,M=a*m;t[0]=h*d,t[4]=-h*m,t[8]=f,t[1]=v+b*f,t[5]=y-M*f,t[9]=-a*h,t[2]=M-y*f,t[6]=b+v*f,t[10]=s*h}else if(e.order==="YXZ"){const y=h*d,v=h*m,b=f*d,M=f*m;t[0]=y+M*a,t[4]=b*a-v,t[8]=s*f,t[1]=s*m,t[5]=s*d,t[9]=-a,t[2]=v*a-b,t[6]=M+y*a,t[10]=s*h}else if(e.order==="ZXY"){const y=h*d,v=h*m,b=f*d,M=f*m;t[0]=y-M*a,t[4]=-s*m,t[8]=b+v*a,t[1]=v+b*a,t[5]=s*d,t[9]=M-y*a,t[2]=-s*f,t[6]=a,t[10]=s*h}else if(e.order==="ZYX"){const y=s*d,v=s*m,b=a*d,M=a*m;t[0]=h*d,t[4]=b*f-v,t[8]=y*f+M,t[1]=h*m,t[5]=M*f+y,t[9]=v*f-b,t[2]=-f,t[6]=a*h,t[10]=s*h}else if(e.order==="YZX"){const y=s*h,v=s*f,b=a*h,M=a*f;t[0]=h*d,t[4]=M-y*m,t[8]=b*m+v,t[1]=m,t[5]=s*d,t[9]=-a*d,t[2]=-f*d,t[6]=v*m+b,t[10]=y-M*m}else if(e.order==="XZY"){const y=s*h,v=s*f,b=a*h,M=a*f;t[0]=h*d,t[4]=-m,t[8]=f*d,t[1]=y*m+M,t[5]=s*d,t[9]=v*m-b,t[2]=b*m-v,t[6]=a*d,t[10]=M*m+y}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(sd,e,ad)}lookAt(e,t,n){const r=this.elements;return h2.subVectors(e,t),h2.lengthSq()===0&&(h2.z=1),h2.normalize(),U4.crossVectors(n,h2),U4.lengthSq()===0&&(Math.abs(n.z)===1?h2.x+=1e-4:h2.z+=1e-4,h2.normalize(),U4.crossVectors(n,h2)),U4.normalize(),b8.crossVectors(h2,U4),r[0]=U4.x,r[4]=b8.x,r[8]=h2.x,r[1]=U4.y,r[5]=b8.y,r[9]=h2.y,r[2]=U4.z,r[6]=b8.z,r[10]=h2.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,o=this.elements,s=n[0],a=n[4],h=n[8],f=n[12],d=n[1],m=n[5],y=n[9],v=n[13],b=n[2],M=n[6],w=n[10],E=n[14],T=n[3],C=n[7],P=n[11],R=n[15],I=r[0],q=r[4],D=r[8],O=r[12],k=r[1],B=r[5],j=r[9],Y=r[13],z=r[2],G=r[6],X=r[10],o0=r[14],a0=r[3],u0=r[7],l0=r[11],b0=r[15];return o[0]=s*I+a*k+h*z+f*a0,o[4]=s*q+a*B+h*G+f*u0,o[8]=s*D+a*j+h*X+f*l0,o[12]=s*O+a*Y+h*o0+f*b0,o[1]=d*I+m*k+y*z+v*a0,o[5]=d*q+m*B+y*G+v*u0,o[9]=d*D+m*j+y*X+v*l0,o[13]=d*O+m*Y+y*o0+v*b0,o[2]=b*I+M*k+w*z+E*a0,o[6]=b*q+M*B+w*G+E*u0,o[10]=b*D+M*j+w*X+E*l0,o[14]=b*O+M*Y+w*o0+E*b0,o[3]=T*I+C*k+P*z+R*a0,o[7]=T*q+C*B+P*G+R*u0,o[11]=T*D+C*j+P*X+R*l0,o[15]=T*O+C*Y+P*o0+R*b0,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],o=e[12],s=e[1],a=e[5],h=e[9],f=e[13],d=e[2],m=e[6],y=e[10],v=e[14],b=e[3],M=e[7],w=e[11],E=e[15];return b*(+o*h*m-r*f*m-o*a*y+n*f*y+r*a*v-n*h*v)+M*(+t*h*v-t*f*y+o*s*y-r*s*v+r*f*d-o*h*d)+w*(+t*f*m-t*a*v-o*s*m+n*s*v+o*a*d-n*f*d)+E*(-r*a*d-t*h*m+t*a*y+r*s*m-n*s*y+n*h*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],o=e[3],s=e[4],a=e[5],h=e[6],f=e[7],d=e[8],m=e[9],y=e[10],v=e[11],b=e[12],M=e[13],w=e[14],E=e[15],T=m*w*f-M*y*f+M*h*v-a*w*v-m*h*E+a*y*E,C=b*y*f-d*w*f-b*h*v+s*w*v+d*h*E-s*y*E,P=d*M*f-b*m*f+b*a*v-s*M*v-d*a*E+s*m*E,R=b*m*h-d*M*h-b*a*y+s*M*y+d*a*w-s*m*w,I=t*T+n*C+r*P+o*R;if(I===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const q=1/I;return e[0]=T*q,e[1]=(M*y*o-m*w*o-M*r*v+n*w*v+m*r*E-n*y*E)*q,e[2]=(a*w*o-M*h*o+M*r*f-n*w*f-a*r*E+n*h*E)*q,e[3]=(m*h*o-a*y*o-m*r*f+n*y*f+a*r*v-n*h*v)*q,e[4]=C*q,e[5]=(d*w*o-b*y*o+b*r*v-t*w*v-d*r*E+t*y*E)*q,e[6]=(b*h*o-s*w*o-b*r*f+t*w*f+s*r*E-t*h*E)*q,e[7]=(s*y*o-d*h*o+d*r*f-t*y*f-s*r*v+t*h*v)*q,e[8]=P*q,e[9]=(b*m*o-d*M*o-b*n*v+t*M*v+d*n*E-t*m*E)*q,e[10]=(s*M*o-b*a*o+b*n*f-t*M*f-s*n*E+t*a*E)*q,e[11]=(d*a*o-s*m*o-d*n*f+t*m*f+s*n*v-t*a*v)*q,e[12]=R*q,e[13]=(d*M*r-b*m*r+b*n*y-t*M*y-d*n*w+t*m*w)*q,e[14]=(b*a*r-s*M*r-b*n*h+t*M*h+s*n*w-t*a*w)*q,e[15]=(s*m*r-d*a*r+d*n*h-t*m*h-s*n*y+t*a*y)*q,this}scale(e){const t=this.elements,n=e.x,r=e.y,o=e.z;return t[0]*=n,t[4]*=r,t[8]*=o,t[1]*=n,t[5]*=r,t[9]*=o,t[2]*=n,t[6]*=r,t[10]*=o,t[3]*=n,t[7]*=r,t[11]*=o,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),o=1-n,s=e.x,a=e.y,h=e.z,f=o*s,d=o*a;return this.set(f*s+n,f*a-r*h,f*h+r*a,0,f*a+r*h,d*a+n,d*h-r*s,0,f*h-r*a,d*h+r*s,o*h*h+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,o,s){return this.set(1,n,o,0,e,1,s,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,o=t._x,s=t._y,a=t._z,h=t._w,f=o+o,d=s+s,m=a+a,y=o*f,v=o*d,b=o*m,M=s*d,w=s*m,E=a*m,T=h*f,C=h*d,P=h*m,R=n.x,I=n.y,q=n.z;return r[0]=(1-(M+E))*R,r[1]=(v+P)*R,r[2]=(b-C)*R,r[3]=0,r[4]=(v-P)*I,r[5]=(1-(y+E))*I,r[6]=(w+T)*I,r[7]=0,r[8]=(b+C)*q,r[9]=(w-T)*q,r[10]=(1-(y+M))*q,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let o=Y5.set(r[0],r[1],r[2]).length();const s=Y5.set(r[4],r[5],r[6]).length(),a=Y5.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),e.x=r[12],e.y=r[13],e.z=r[14],N2.copy(this);const f=1/o,d=1/s,m=1/a;return N2.elements[0]*=f,N2.elements[1]*=f,N2.elements[2]*=f,N2.elements[4]*=d,N2.elements[5]*=d,N2.elements[6]*=d,N2.elements[8]*=m,N2.elements[9]*=m,N2.elements[10]*=m,t.setFromRotationMatrix(N2),n.x=o,n.y=s,n.z=a,this}makePerspective(e,t,n,r,o,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,h=2*o/(t-e),f=2*o/(n-r),d=(t+e)/(t-e),m=(n+r)/(n-r),y=-(s+o)/(s-o),v=-2*s*o/(s-o);return a[0]=h,a[4]=0,a[8]=d,a[12]=0,a[1]=0,a[5]=f,a[9]=m,a[13]=0,a[2]=0,a[6]=0,a[10]=y,a[14]=v,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,o,s){const a=this.elements,h=1/(t-e),f=1/(n-r),d=1/(s-o),m=(t+e)*h,y=(n+r)*f,v=(s+o)*d;return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-m,a[1]=0,a[5]=2*f,a[9]=0,a[13]=-y,a[2]=0,a[6]=0,a[10]=-2*d,a[14]=-v,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}m1.prototype.isMatrix4=!0;const Y5=new $,N2=new m1,sd=new $(0,0,0),ad=new $(1,1,1),U4=new $,b8=new $,h2=new $,yo=new m1,vo=new b9;class a5{constructor(e=0,t=0,n=0,r=a5.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,o=r[0],s=r[4],a=r[8],h=r[1],f=r[5],d=r[9],m=r[2],y=r[6],v=r[10];switch(t){case"XYZ":this._y=Math.asin(E9(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(y,f),this._z=0);break;case"YXZ":this._x=Math.asin(-E9(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(a,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(E9(y,-1,1)),Math.abs(y)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-s,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-E9(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(y,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-s,f));break;case"YZX":this._z=Math.asin(E9(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-d,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(a,v));break;case"XZY":this._z=Math.asin(-E9(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(y,f),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return yo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(yo,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return vo.setFromEuler(this),this.setFromQuaternion(vo,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}a5.prototype.isEuler=!0;a5.DefaultOrder="XYZ";a5.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class si{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ld=0;const xo=new $,X5=new b9,f4=new m1,w8=new $,i7=new $,Ad=new $,ud=new b9,_o=new $(1,0,0),bo=new $(0,1,0),wo=new $(0,0,1),cd={type:"added"},Mo={type:"removed"};class H1 extends Q2{constructor(){super();Object.defineProperty(this,"id",{value:ld++}),this.uuid=j2(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=H1.DefaultUp.clone();const e=new $,t=new a5,n=new b9,r=new $(1,1,1);function o(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(o),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new m1},normalMatrix:{value:new q9}}),this.matrix=new m1,this.matrixWorld=new m1,this.matrixAutoUpdate=H1.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new si,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return X5.setFromAxisAngle(e,t),this.quaternion.multiply(X5),this}rotateOnWorldAxis(e,t){return X5.setFromAxisAngle(e,t),this.quaternion.premultiply(X5),this}rotateX(e){return this.rotateOnAxis(_o,e)}rotateY(e){return this.rotateOnAxis(bo,e)}rotateZ(e){return this.rotateOnAxis(wo,e)}translateOnAxis(e,t){return xo.copy(e).applyQuaternion(this.quaternion),this.position.add(xo.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_o,e)}translateY(e){return this.translateOnAxis(bo,e)}translateZ(e){return this.translateOnAxis(wo,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(f4.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?w8.copy(e):w8.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),i7.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?f4.lookAt(i7,w8,this.up):f4.lookAt(w8,i7,this.up),this.quaternion.setFromRotationMatrix(f4),r&&(f4.extractRotation(r.matrixWorld),X5.setFromRotationMatrix(f4),this.quaternion.premultiply(X5.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(cd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Mo)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Mo)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),f4.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),f4.multiply(e.parent.matrixWorld)),e.applyMatrix4(f4),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const s=this.children[n].getObjectByProperty(e,t);if(s!==void 0)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(i7,e,Ad),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(i7,ud,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let o=0,s=r.length;o<s;o++)r[o].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function o(a,h){return a[h.uuid]===void 0&&(a[h.uuid]=h.toJSON(e)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=o(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const h=a.shapes;if(Array.isArray(h))for(let f=0,d=h.length;f<d;f++){const m=h[f];o(e.shapes,m)}else o(e.shapes,h)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let h=0,f=this.material.length;h<f;h++)a.push(o(e.materials,this.material[h]));r.material=a}else r.material=o(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const h=this.animations[a];r.animations.push(o(e.animations,h))}}if(t){const a=s(e.geometries),h=s(e.materials),f=s(e.textures),d=s(e.images),m=s(e.shapes),y=s(e.skeletons),v=s(e.animations),b=s(e.nodes);a.length>0&&(n.geometries=a),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),d.length>0&&(n.images=d),m.length>0&&(n.shapes=m),y.length>0&&(n.skeletons=y),v.length>0&&(n.animations=v),b.length>0&&(n.nodes=b)}return n.object=r,n;function s(a){const h=[];for(const f in a){const d=a[f];delete d.metadata,h.push(d)}return h}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}H1.DefaultUp=new $(0,1,0);H1.DefaultMatrixAutoUpdate=!0;H1.prototype.isObject3D=!0;const U2=new $,h4=new $,lt=new $,d4=new $,Z5=new $,J5=new $,So=new $,At=new $,ut=new $,ct=new $;class _9{constructor(e=new $,t=new $,n=new $){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),U2.subVectors(e,t),r.cross(U2);const o=r.lengthSq();return o>0?r.multiplyScalar(1/Math.sqrt(o)):r.set(0,0,0)}static getBarycoord(e,t,n,r,o){U2.subVectors(r,t),h4.subVectors(n,t),lt.subVectors(e,t);const s=U2.dot(U2),a=U2.dot(h4),h=U2.dot(lt),f=h4.dot(h4),d=h4.dot(lt),m=s*f-a*a;if(m===0)return o.set(-2,-1,-1);const y=1/m,v=(f*h-a*d)*y,b=(s*d-a*h)*y;return o.set(1-v-b,b,v)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,d4),d4.x>=0&&d4.y>=0&&d4.x+d4.y<=1}static getUV(e,t,n,r,o,s,a,h){return this.getBarycoord(e,t,n,r,d4),h.set(0,0),h.addScaledVector(o,d4.x),h.addScaledVector(s,d4.y),h.addScaledVector(a,d4.z),h}static isFrontFacing(e,t,n,r){return U2.subVectors(n,t),h4.subVectors(e,t),U2.cross(h4).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return U2.subVectors(this.c,this.b),h4.subVectors(this.a,this.b),U2.cross(h4).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return _9.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return _9.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,o){return _9.getUV(e,this.a,this.b,this.c,t,n,r,o)}containsPoint(e){return _9.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return _9.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,o=this.c;let s,a;Z5.subVectors(r,n),J5.subVectors(o,n),At.subVectors(e,n);const h=Z5.dot(At),f=J5.dot(At);if(h<=0&&f<=0)return t.copy(n);ut.subVectors(e,r);const d=Z5.dot(ut),m=J5.dot(ut);if(d>=0&&m<=d)return t.copy(r);const y=h*m-d*f;if(y<=0&&h>=0&&d<=0)return s=h/(h-d),t.copy(n).addScaledVector(Z5,s);ct.subVectors(e,o);const v=Z5.dot(ct),b=J5.dot(ct);if(b>=0&&v<=b)return t.copy(o);const M=v*f-h*b;if(M<=0&&f>=0&&b<=0)return a=f/(f-b),t.copy(n).addScaledVector(J5,a);const w=d*b-v*m;if(w<=0&&m-d>=0&&v-b>=0)return So.subVectors(o,r),a=(m-d)/(m-d+(v-b)),t.copy(r).addScaledVector(So,a);const E=1/(w+M+y);return s=M*E,a=y*E,t.copy(n).addScaledVector(Z5,s).addScaledVector(J5,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let fd=0;class T9 extends Q2{constructor(){super();Object.defineProperty(this,"id",{value:fd++}),this.uuid=j2(),this.name="",this.type="Material",this.blending=Z4,this.side=C7,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=gl,this.blendDst=yl,this.blendEquation=p6,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Xt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=kh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ze,this.stencilZFail=Ze,this.stencilZPass=Ze,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===ml;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Z4&&(n.blending=this.blending),this.side!==C7&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(o){const s=[];for(const a in o){const h=o[a];delete h.metadata,s.push(h)}return s}if(t){const o=r(e.textures),s=r(e.images);o.length>0&&(n.textures=o),s.length>0&&(n.images=s)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let o=0;o!==r;++o)n[o]=t[o].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}T9.prototype.isMaterial=!0;T9.fromType=function(){return null};class l5 extends T9{constructor(e){super();this.type="MeshBasicMaterial",this.color=new l1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ue,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}l5.prototype.isMeshBasicMaterial=!0;const v9=new $,M8=new D0;class t9{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=L7,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,o=this.itemSize;r<o;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let r=0,o=e.length;r<o;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),s=new l1),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let r=0,o=e.length;r<o;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),s=new D0),t[n++]=s.x,t[n++]=s.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let r=0,o=e.length;r<o;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),s=new $),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let r=0,o=e.length;r<o;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),s=new Y1),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)M8.fromBufferAttribute(this,t),M8.applyMatrix3(e),this.setXY(t,M8.x,M8.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)v9.fromBufferAttribute(this,t),v9.applyMatrix3(e),this.setXYZ(t,v9.x,v9.y,v9.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)v9.fromBufferAttribute(this,t),v9.applyMatrix4(e),this.setXYZ(t,v9.x,v9.y,v9.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)v9.fromBufferAttribute(this,t),v9.applyNormalMatrix(e),this.setXYZ(t,v9.x,v9.y,v9.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)v9.fromBufferAttribute(this,t),v9.transformDirection(e),this.setXYZ(t,v9.x,v9.y,v9.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,o){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=o,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==L7&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}t9.prototype.isBufferAttribute=!0;class Ml extends t9{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Sl extends t9{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class hd extends t9{constructor(e,t,n){super(new Uint16Array(e),t,n)}}hd.prototype.isFloat16BufferAttribute=!0;class T1 extends t9{constructor(e,t,n){super(new Float32Array(e),t,n)}}let dd=0;const S2=new m1,ft=new H1,K5=new $,d2=new c2,r7=new c2,P9=new $;class C1 extends Q2{constructor(){super();Object.defineProperty(this,"id",{value:dd++}),this.uuid=j2(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(bl(e)?Sl:Ml)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new q9().getNormalMatrix(e);n.applyNormalMatrix(o),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return S2.makeRotationFromQuaternion(e),this.applyMatrix4(S2),this}rotateX(e){return S2.makeRotationX(e),this.applyMatrix4(S2),this}rotateY(e){return S2.makeRotationY(e),this.applyMatrix4(S2),this}rotateZ(e){return S2.makeRotationZ(e),this.applyMatrix4(S2),this}translate(e,t,n){return S2.makeTranslation(e,t,n),this.applyMatrix4(S2),this}scale(e,t,n){return S2.makeScale(e,t,n),this.applyMatrix4(S2),this}lookAt(e){return ft.lookAt(e),ft.updateMatrix(),this.applyMatrix4(ft.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(K5).negate(),this.translate(K5.x,K5.y,K5.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const o=e[n];t.push(o.x,o.y,o.z||0)}return this.setAttribute("position",new T1(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new c2);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new $(-1/0,-1/0,-1/0),new $(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const o=t[n];d2.setFromBufferAttribute(o),this.morphTargetsRelative?(P9.addVectors(this.boundingBox.min,d2.min),this.boundingBox.expandByPoint(P9),P9.addVectors(this.boundingBox.max,d2.max),this.boundingBox.expandByPoint(P9)):(this.boundingBox.expandByPoint(d2.min),this.boundingBox.expandByPoint(d2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new s5);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new $,1/0);return}if(e){const n=this.boundingSphere.center;if(d2.setFromBufferAttribute(e),t)for(let o=0,s=t.length;o<s;o++){const a=t[o];r7.setFromBufferAttribute(a),this.morphTargetsRelative?(P9.addVectors(d2.min,r7.min),d2.expandByPoint(P9),P9.addVectors(d2.max,r7.max),d2.expandByPoint(P9)):(d2.expandByPoint(r7.min),d2.expandByPoint(r7.max))}d2.getCenter(n);let r=0;for(let o=0,s=e.count;o<s;o++)P9.fromBufferAttribute(e,o),r=Math.max(r,n.distanceToSquared(P9));if(t)for(let o=0,s=t.length;o<s;o++){const a=t[o],h=this.morphTargetsRelative;for(let f=0,d=a.count;f<d;f++)P9.fromBufferAttribute(a,f),h&&(K5.fromBufferAttribute(e,f),P9.add(K5)),r=Math.max(r,n.distanceToSquared(P9))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,r=t.position.array,o=t.normal.array,s=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new t9(new Float32Array(4*a),4));const h=this.getAttribute("tangent").array,f=[],d=[];for(let k=0;k<a;k++)f[k]=new $,d[k]=new $;const m=new $,y=new $,v=new $,b=new D0,M=new D0,w=new D0,E=new $,T=new $;function C(k,B,j){m.fromArray(r,k*3),y.fromArray(r,B*3),v.fromArray(r,j*3),b.fromArray(s,k*2),M.fromArray(s,B*2),w.fromArray(s,j*2),y.sub(m),v.sub(m),M.sub(b),w.sub(b);const Y=1/(M.x*w.y-w.x*M.y);!isFinite(Y)||(E.copy(y).multiplyScalar(w.y).addScaledVector(v,-M.y).multiplyScalar(Y),T.copy(v).multiplyScalar(M.x).addScaledVector(y,-w.x).multiplyScalar(Y),f[k].add(E),f[B].add(E),f[j].add(E),d[k].add(T),d[B].add(T),d[j].add(T))}let P=this.groups;P.length===0&&(P=[{start:0,count:n.length}]);for(let k=0,B=P.length;k<B;++k){const j=P[k],Y=j.start,z=j.count;for(let G=Y,X=Y+z;G<X;G+=3)C(n[G+0],n[G+1],n[G+2])}const R=new $,I=new $,q=new $,D=new $;function O(k){q.fromArray(o,k*3),D.copy(q);const B=f[k];R.copy(B),R.sub(q.multiplyScalar(q.dot(B))).normalize(),I.crossVectors(D,B);const Y=I.dot(d[k])<0?-1:1;h[k*4]=R.x,h[k*4+1]=R.y,h[k*4+2]=R.z,h[k*4+3]=Y}for(let k=0,B=P.length;k<B;++k){const j=P[k],Y=j.start,z=j.count;for(let G=Y,X=Y+z;G<X;G+=3)O(n[G+0]),O(n[G+1]),O(n[G+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new t9(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let y=0,v=n.count;y<v;y++)n.setXYZ(y,0,0,0);const r=new $,o=new $,s=new $,a=new $,h=new $,f=new $,d=new $,m=new $;if(e)for(let y=0,v=e.count;y<v;y+=3){const b=e.getX(y+0),M=e.getX(y+1),w=e.getX(y+2);r.fromBufferAttribute(t,b),o.fromBufferAttribute(t,M),s.fromBufferAttribute(t,w),d.subVectors(s,o),m.subVectors(r,o),d.cross(m),a.fromBufferAttribute(n,b),h.fromBufferAttribute(n,M),f.fromBufferAttribute(n,w),a.add(d),h.add(d),f.add(d),n.setXYZ(b,a.x,a.y,a.z),n.setXYZ(M,h.x,h.y,h.z),n.setXYZ(w,f.x,f.y,f.z)}else for(let y=0,v=t.count;y<v;y+=3)r.fromBufferAttribute(t,y+0),o.fromBufferAttribute(t,y+1),s.fromBufferAttribute(t,y+2),d.subVectors(s,o),m.subVectors(r,o),d.cross(m),n.setXYZ(y+0,d.x,d.y,d.z),n.setXYZ(y+1,d.x,d.y,d.z),n.setXYZ(y+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(e.attributes[r]===void 0)continue;const s=n[r].array,a=e.attributes[r],h=a.array,f=a.itemSize*t,d=Math.min(h.length,s.length-f);for(let m=0,y=f;m<d;m++,y++)s[y]=h[m]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)P9.fromBufferAttribute(e,t),P9.normalize(),e.setXYZ(t,P9.x,P9.y,P9.z)}toNonIndexed(){function e(a,h){const f=a.array,d=a.itemSize,m=a.normalized,y=new f.constructor(h.length*d);let v=0,b=0;for(let M=0,w=h.length;M<w;M++){a.isInterleavedBufferAttribute?v=h[M]*a.data.stride+a.offset:v=h[M]*d;for(let E=0;E<d;E++)y[b++]=f[v++]}return new t9(y,d,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new C1,n=this.index.array,r=this.attributes;for(const a in r){const h=r[a],f=e(h,n);t.setAttribute(a,f)}const o=this.morphAttributes;for(const a in o){const h=[],f=o[a];for(let d=0,m=f.length;d<m;d++){const y=f[d],v=e(y,n);h.push(v)}t.morphAttributes[a]=h}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,h=s.length;a<h;a++){const f=s[a];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(e[f]=h[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const h in n){const f=n[h];e.data.attributes[h]=f.toJSON(e.data)}const r={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],d=[];for(let m=0,y=f.length;m<y;m++){const v=f[m];d.push(v.toJSON(e.data))}d.length>0&&(r[h]=d,o=!0)}o&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const f in r){const d=r[f];this.setAttribute(f,d.clone(t))}const o=e.morphAttributes;for(const f in o){const d=[],m=o[f];for(let y=0,v=m.length;y<v;y++)d.push(m[y].clone(t));this.morphAttributes[f]=d}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let f=0,d=s.length;f<d;f++){const m=s[f];this.addGroup(m.start,m.count,m.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}C1.prototype.isBufferGeometry=!0;const Eo=new m1,e6=new F5,ht=new s5,z4=new $,G4=new $,H4=new $,dt=new $,pt=new $,mt=new $,S8=new $,E8=new $,T8=new $,C8=new D0,P8=new D0,R8=new D0,gt=new $,L8=new $;class K1 extends H1{constructor(e=new C1,t=new l5){super();this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,s=r.length;o<s;o++){const a=r[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=o}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,r=this.material,o=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),ht.copy(n.boundingSphere),ht.applyMatrix4(o),e.ray.intersectsSphere(ht)===!1)||(Eo.copy(o).invert(),e6.copy(e.ray).applyMatrix4(Eo),n.boundingBox!==null&&e6.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const a=n.index,h=n.attributes.position,f=n.morphAttributes.position,d=n.morphTargetsRelative,m=n.attributes.uv,y=n.attributes.uv2,v=n.groups,b=n.drawRange;if(a!==null)if(Array.isArray(r))for(let M=0,w=v.length;M<w;M++){const E=v[M],T=r[E.materialIndex],C=Math.max(E.start,b.start),P=Math.min(a.count,Math.min(E.start+E.count,b.start+b.count));for(let R=C,I=P;R<I;R+=3){const q=a.getX(R),D=a.getX(R+1),O=a.getX(R+2);s=D8(this,T,e,e6,h,f,d,m,y,q,D,O),s&&(s.faceIndex=Math.floor(R/3),s.face.materialIndex=E.materialIndex,t.push(s))}}else{const M=Math.max(0,b.start),w=Math.min(a.count,b.start+b.count);for(let E=M,T=w;E<T;E+=3){const C=a.getX(E),P=a.getX(E+1),R=a.getX(E+2);s=D8(this,r,e,e6,h,f,d,m,y,C,P,R),s&&(s.faceIndex=Math.floor(E/3),t.push(s))}}else if(h!==void 0)if(Array.isArray(r))for(let M=0,w=v.length;M<w;M++){const E=v[M],T=r[E.materialIndex],C=Math.max(E.start,b.start),P=Math.min(h.count,Math.min(E.start+E.count,b.start+b.count));for(let R=C,I=P;R<I;R+=3){const q=R,D=R+1,O=R+2;s=D8(this,T,e,e6,h,f,d,m,y,q,D,O),s&&(s.faceIndex=Math.floor(R/3),s.face.materialIndex=E.materialIndex,t.push(s))}}else{const M=Math.max(0,b.start),w=Math.min(h.count,b.start+b.count);for(let E=M,T=w;E<T;E+=3){const C=E,P=E+1,R=E+2;s=D8(this,r,e,e6,h,f,d,m,y,C,P,R),s&&(s.faceIndex=Math.floor(E/3),t.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}K1.prototype.isMesh=!0;function pd(i,e,t,n,r,o,s,a){let h;if(e.side===y2?h=n.intersectTriangle(s,o,r,!0,a):h=n.intersectTriangle(r,o,s,e.side!==E4,a),h===null)return null;L8.copy(a),L8.applyMatrix4(i.matrixWorld);const f=t.ray.origin.distanceTo(L8);return f<t.near||f>t.far?null:{distance:f,point:L8.clone(),object:i}}function D8(i,e,t,n,r,o,s,a,h,f,d,m){z4.fromBufferAttribute(r,f),G4.fromBufferAttribute(r,d),H4.fromBufferAttribute(r,m);const y=i.morphTargetInfluences;if(o&&y){S8.set(0,0,0),E8.set(0,0,0),T8.set(0,0,0);for(let b=0,M=o.length;b<M;b++){const w=y[b],E=o[b];w!==0&&(dt.fromBufferAttribute(E,f),pt.fromBufferAttribute(E,d),mt.fromBufferAttribute(E,m),s?(S8.addScaledVector(dt,w),E8.addScaledVector(pt,w),T8.addScaledVector(mt,w)):(S8.addScaledVector(dt.sub(z4),w),E8.addScaledVector(pt.sub(G4),w),T8.addScaledVector(mt.sub(H4),w)))}z4.add(S8),G4.add(E8),H4.add(T8)}i.isSkinnedMesh&&(i.boneTransform(f,z4),i.boneTransform(d,G4),i.boneTransform(m,H4));const v=pd(i,e,t,n,z4,G4,H4,gt);if(v){a&&(C8.fromBufferAttribute(a,f),P8.fromBufferAttribute(a,d),R8.fromBufferAttribute(a,m),v.uv=_9.getUV(gt,z4,G4,H4,C8,P8,R8,new D0)),h&&(C8.fromBufferAttribute(h,f),P8.fromBufferAttribute(h,d),R8.fromBufferAttribute(h,m),v.uv2=_9.getUV(gt,z4,G4,H4,C8,P8,R8,new D0));const b={a:f,b:d,c:m,normal:new $,materialIndex:0};_9.getNormal(z4,G4,H4,b.normal),v.face=b}return v}class Y7 extends C1{constructor(e=1,t=1,n=1,r=1,o=1,s=1){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:o,depthSegments:s};const a=this;r=Math.floor(r),o=Math.floor(o),s=Math.floor(s);const h=[],f=[],d=[],m=[];let y=0,v=0;b("z","y","x",-1,-1,n,t,e,s,o,0),b("z","y","x",1,-1,n,t,-e,s,o,1),b("x","z","y",1,1,e,n,t,r,s,2),b("x","z","y",1,-1,e,n,-t,r,s,3),b("x","y","z",1,-1,e,t,n,r,o,4),b("x","y","z",-1,-1,e,t,-n,r,o,5),this.setIndex(h),this.setAttribute("position",new T1(f,3)),this.setAttribute("normal",new T1(d,3)),this.setAttribute("uv",new T1(m,2));function b(M,w,E,T,C,P,R,I,q,D,O){const k=P/q,B=R/D,j=P/2,Y=R/2,z=I/2,G=q+1,X=D+1;let o0=0,a0=0;const u0=new $;for(let l0=0;l0<X;l0++){const b0=l0*B-Y;for(let i0=0;i0<G;i0++){const g0=i0*k-j;u0[M]=g0*T,u0[w]=b0*C,u0[E]=z,f.push(u0.x,u0.y,u0.z),u0[M]=0,u0[w]=0,u0[E]=I>0?1:-1,d.push(u0.x,u0.y,u0.z),m.push(i0/q),m.push(1-l0/D),o0+=1}}for(let l0=0;l0<D;l0++)for(let b0=0;b0<q;b0++){const i0=y+b0+G*l0,g0=y+b0+G*(l0+1),P0=y+(b0+1)+G*(l0+1),T0=y+(b0+1)+G*l0;h.push(i0,g0,T0),h.push(g0,P0,T0),a0+=6}a.addGroup(v,a0,O),v+=a0,y+=o0}}static fromJSON(e){return new Y7(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function B6(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function U9(i){const e={};for(let t=0;t<i.length;t++){const n=B6(i[t]);for(const r in n)e[r]=n[r]}return e}const ai={clone:B6,merge:U9};var md=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,gd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class F9 extends T9{constructor(e){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=md,this.fragmentShader=gd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=B6(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const s=this.uniforms[r].value;s&&s.isTexture?t.uniforms[r]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[r]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[r]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[r]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[r]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[r]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[r]={type:"m4",value:s.toArray()}:t.uniforms[r]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}F9.prototype.isShaderMaterial=!0;class li extends H1{constructor(){super();this.type="Camera",this.matrixWorldInverse=new m1,this.projectionMatrix=new m1,this.projectionMatrixInverse=new m1}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}li.prototype.isCamera=!0;class $9 extends li{constructor(e=50,t=1,n=.1,r=2e3){super();this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=D7*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(_7*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return D7*2*Math.atan(Math.tan(_7*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,o,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(_7*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,o=-.5*r;const s=this.view;if(this.view!==null&&this.view.enabled){const h=s.fullWidth,f=s.fullHeight;o+=s.offsetX*r/h,t-=s.offsetY*n/f,r*=s.width/h,n*=s.height/f}const a=this.filmOffset;a!==0&&(o+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}$9.prototype.isPerspectiveCamera=!0;const t6=90,n6=1;class Ai extends H1{constructor(e,t,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const r=new $9(t6,n6,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new $(1,0,0)),this.add(r);const o=new $9(t6,n6,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new $(-1,0,0)),this.add(o);const s=new $9(t6,n6,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new $(0,1,0)),this.add(s);const a=new $9(t6,n6,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new $(0,-1,0)),this.add(a);const h=new $9(t6,n6,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new $(0,0,1)),this.add(h);const f=new $9(t6,n6,e,t);f.layers=this.layers,f.up.set(0,-1,0),f.lookAt(new $(0,0,-1)),this.add(f)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,o,s,a,h,f]=this.children,d=e.getRenderTarget(),m=e.toneMapping,y=e.xr.enabled;e.toneMapping=b4,e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,o),e.setRenderTarget(n,2),e.render(t,s),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,h),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,f),e.setRenderTarget(d),e.toneMapping=m,e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class de extends D9{constructor(e,t,n,r,o,s,a,h,f,d){e=e!==void 0?e:[],t=t!==void 0?t:L6;super(e,t,n,r,o,s,a,h,f,d);this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}de.prototype.isCubeTexture=!0;class El extends u2{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new de(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:s2}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Y7(5,5,5),o=new F9({name:"CubemapFromEquirect",uniforms:B6(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:y2,blending:X4});o.uniforms.tEquirect.value=t;const s=new K1(r,o),a=t.minFilter;return t.minFilter===fe&&(t.minFilter=s2),new Ai(1,10,this).update(e,s),t.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,n,r){const o=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,r);e.setRenderTarget(o)}}El.prototype.isWebGLCubeRenderTarget=!0;const yt=new $,yd=new $,vd=new q9;class y4{constructor(e=new $(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=yt.subVectors(n,t).cross(yd.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(yt),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const o=-(e.start.dot(this.normal)+this.constant)/r;return o<0||o>1?null:t.copy(n).multiplyScalar(o).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||vd.getNormalMatrix(e),r=this.coplanarPoint(yt).applyMatrix4(e),o=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(o),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}y4.prototype.isPlane=!0;const i6=new s5,I8=new $;class pe{constructor(e=new y4,t=new y4,n=new y4,r=new y4,o=new y4,s=new y4){this.planes=[e,t,n,r,o,s]}set(e,t,n,r,o,s){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(o),a[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],o=n[1],s=n[2],a=n[3],h=n[4],f=n[5],d=n[6],m=n[7],y=n[8],v=n[9],b=n[10],M=n[11],w=n[12],E=n[13],T=n[14],C=n[15];return t[0].setComponents(a-r,m-h,M-y,C-w).normalize(),t[1].setComponents(a+r,m+h,M+y,C+w).normalize(),t[2].setComponents(a+o,m+f,M+v,C+E).normalize(),t[3].setComponents(a-o,m-f,M-v,C-E).normalize(),t[4].setComponents(a-s,m-d,M-b,C-T).normalize(),t[5].setComponents(a+s,m+d,M+b,C+T).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),i6.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(i6)}intersectsSprite(e){return i6.center.set(0,0,0),i6.radius=.7071067811865476,i6.applyMatrix4(e.matrixWorld),this.intersectsSphere(i6)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let o=0;o<6;o++)if(t[o].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(I8.x=r.normal.x>0?e.max.x:e.min.x,I8.y=r.normal.y>0?e.max.y:e.min.y,I8.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(I8)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Tl(){let i=null,e=!1,t=null,n=null;function r(o,s){t(o,s),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(o){t=o},setContext:function(o){i=o}}}function xd(i,e){const t=e.isWebGL2,n=new WeakMap;function r(f,d){const m=f.array,y=f.usage,v=i.createBuffer();i.bindBuffer(d,v),i.bufferData(d,m,y),f.onUploadCallback();let b;if(m instanceof Float32Array)b=5126;else if(m instanceof Uint16Array)if(f.isFloat16BufferAttribute)if(t)b=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else b=5123;else if(m instanceof Int16Array)b=5122;else if(m instanceof Uint32Array)b=5125;else if(m instanceof Int32Array)b=5124;else if(m instanceof Int8Array)b=5120;else if(m instanceof Uint8Array)b=5121;else if(m instanceof Uint8ClampedArray)b=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:v,type:b,bytesPerElement:m.BYTES_PER_ELEMENT,version:f.version}}function o(f,d,m){const y=d.array,v=d.updateRange;i.bindBuffer(m,f),v.count===-1?i.bufferSubData(m,0,y):(t?i.bufferSubData(m,v.offset*y.BYTES_PER_ELEMENT,y,v.offset,v.count):i.bufferSubData(m,v.offset*y.BYTES_PER_ELEMENT,y.subarray(v.offset,v.offset+v.count)),v.count=-1)}function s(f){return f.isInterleavedBufferAttribute&&(f=f.data),n.get(f)}function a(f){f.isInterleavedBufferAttribute&&(f=f.data);const d=n.get(f);d&&(i.deleteBuffer(d.buffer),n.delete(f))}function h(f,d){if(f.isGLBufferAttribute){const y=n.get(f);(!y||y.version<f.version)&&n.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,version:f.version});return}f.isInterleavedBufferAttribute&&(f=f.data);const m=n.get(f);m===void 0?n.set(f,r(f,d)):m.version<f.version&&(o(m.buffer,f,d),m.version=f.version)}return{get:s,remove:a,update:h}}class ui extends C1{constructor(e=1,t=1,n=1,r=1){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const o=e/2,s=t/2,a=Math.floor(n),h=Math.floor(r),f=a+1,d=h+1,m=e/a,y=t/h,v=[],b=[],M=[],w=[];for(let E=0;E<d;E++){const T=E*y-s;for(let C=0;C<f;C++){const P=C*m-o;b.push(P,-T,0),M.push(0,0,1),w.push(C/a),w.push(1-E/h)}}for(let E=0;E<h;E++)for(let T=0;T<a;T++){const C=T+f*E,P=T+f*(E+1),R=T+1+f*(E+1),I=T+1+f*E;v.push(C,P,I),v.push(P,R,I)}this.setIndex(v),this.setAttribute("position",new T1(b,3)),this.setAttribute("normal",new T1(M,3)),this.setAttribute("uv",new T1(w,2))}static fromJSON(e){return new ui(e.width,e.height,e.widthSegments,e.heightSegments)}}var _d=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,bd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wd=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Md=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Sd=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Ed=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Td="vec3 transformed = vec3( position );",Cd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Pd=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Rd=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Ld=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Dd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Id=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Bd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Od=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,qd=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Fd=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,kd=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Nd=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Ud=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,zd=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Gd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Hd=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Vd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Wd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,jd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Qd=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,$d=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Yd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Xd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Zd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Jd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Kd=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,ep=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,tp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,np=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ip=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,rp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,op=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sp=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,ap=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lp=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Ap=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,up=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,cp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fp=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,hp=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,dp=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,pp=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,mp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gp=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,yp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,vp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,xp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,_p=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,bp=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,wp=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Mp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Sp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ep=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Tp=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Cp=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Pp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Rp=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Lp=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Dp=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Ip=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Bp=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Op=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,qp=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Fp=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,kp=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Np=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Up=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,zp=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Gp=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Hp=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Vp=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Wp=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,jp=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Qp=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,$p=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Yp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Xp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Zp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Jp=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Kp=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,em=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,tm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,nm=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,im=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,rm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,om=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sm=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,am=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,lm=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Am=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,um=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,cm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,fm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,hm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,dm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,pm=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const mm=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,gm=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ym=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vm=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,xm=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,_m=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,bm=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,wm=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Mm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Sm=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Em=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Tm=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cm=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Pm=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rm=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lm=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dm=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Im=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bm=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Om=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,qm=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fm=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,km=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Nm=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Um=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zm=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gm=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Hm=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Vm=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wm=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,jm=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Qm=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,I1={alphamap_fragment:_d,alphamap_pars_fragment:bd,alphatest_fragment:wd,alphatest_pars_fragment:Md,aomap_fragment:Sd,aomap_pars_fragment:Ed,begin_vertex:Td,beginnormal_vertex:Cd,bsdfs:Pd,bumpmap_pars_fragment:Rd,clipping_planes_fragment:Ld,clipping_planes_pars_fragment:Dd,clipping_planes_pars_vertex:Id,clipping_planes_vertex:Bd,color_fragment:Od,color_pars_fragment:qd,color_pars_vertex:Fd,color_vertex:kd,common:Nd,cube_uv_reflection_fragment:Ud,defaultnormal_vertex:zd,displacementmap_pars_vertex:Gd,displacementmap_vertex:Hd,emissivemap_fragment:Vd,emissivemap_pars_fragment:Wd,encodings_fragment:jd,encodings_pars_fragment:Qd,envmap_fragment:$d,envmap_common_pars_fragment:Yd,envmap_pars_fragment:Xd,envmap_pars_vertex:Zd,envmap_physical_pars_fragment:lp,envmap_vertex:Jd,fog_vertex:Kd,fog_pars_vertex:ep,fog_fragment:tp,fog_pars_fragment:np,gradientmap_pars_fragment:ip,lightmap_fragment:rp,lightmap_pars_fragment:op,lights_lambert_vertex:sp,lights_pars_begin:ap,lights_toon_fragment:Ap,lights_toon_pars_fragment:up,lights_phong_fragment:cp,lights_phong_pars_fragment:fp,lights_physical_fragment:hp,lights_physical_pars_fragment:dp,lights_fragment_begin:pp,lights_fragment_maps:mp,lights_fragment_end:gp,logdepthbuf_fragment:yp,logdepthbuf_pars_fragment:vp,logdepthbuf_pars_vertex:xp,logdepthbuf_vertex:_p,map_fragment:bp,map_pars_fragment:wp,map_particle_fragment:Mp,map_particle_pars_fragment:Sp,metalnessmap_fragment:Ep,metalnessmap_pars_fragment:Tp,morphcolor_vertex:Cp,morphnormal_vertex:Pp,morphtarget_pars_vertex:Rp,morphtarget_vertex:Lp,normal_fragment_begin:Dp,normal_fragment_maps:Ip,normal_pars_fragment:Bp,normal_pars_vertex:Op,normal_vertex:qp,normalmap_pars_fragment:Fp,clearcoat_normal_fragment_begin:kp,clearcoat_normal_fragment_maps:Np,clearcoat_pars_fragment:Up,output_fragment:zp,packing:Gp,premultiplied_alpha_fragment:Hp,project_vertex:Vp,dithering_fragment:Wp,dithering_pars_fragment:jp,roughnessmap_fragment:Qp,roughnessmap_pars_fragment:$p,shadowmap_pars_fragment:Yp,shadowmap_pars_vertex:Xp,shadowmap_vertex:Zp,shadowmask_pars_fragment:Jp,skinbase_vertex:Kp,skinning_pars_vertex:em,skinning_vertex:tm,skinnormal_vertex:nm,specularmap_fragment:im,specularmap_pars_fragment:rm,tonemapping_fragment:om,tonemapping_pars_fragment:sm,transmission_fragment:am,transmission_pars_fragment:lm,uv_pars_fragment:Am,uv_pars_vertex:um,uv_vertex:cm,uv2_pars_fragment:fm,uv2_pars_vertex:hm,uv2_vertex:dm,worldpos_vertex:pm,background_vert:mm,background_frag:gm,cube_vert:ym,cube_frag:vm,depth_vert:xm,depth_frag:_m,distanceRGBA_vert:bm,distanceRGBA_frag:wm,equirect_vert:Mm,equirect_frag:Sm,linedashed_vert:Em,linedashed_frag:Tm,meshbasic_vert:Cm,meshbasic_frag:Pm,meshlambert_vert:Rm,meshlambert_frag:Lm,meshmatcap_vert:Dm,meshmatcap_frag:Im,meshnormal_vert:Bm,meshnormal_frag:Om,meshphong_vert:qm,meshphong_frag:Fm,meshphysical_vert:km,meshphysical_frag:Nm,meshtoon_vert:Um,meshtoon_frag:zm,points_vert:Gm,points_frag:Hm,shadow_vert:Vm,shadow_frag:Wm,sprite_vert:jm,sprite_frag:Qm},X0={common:{diffuse:{value:new l1(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new q9},uv2Transform:{value:new q9},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new D0(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new l1(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new l1(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q9}},sprite:{diffuse:{value:new l1(16777215)},opacity:{value:1},center:{value:new D0(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new q9}}},z2={basic:{uniforms:U9([X0.common,X0.specularmap,X0.envmap,X0.aomap,X0.lightmap,X0.fog]),vertexShader:I1.meshbasic_vert,fragmentShader:I1.meshbasic_frag},lambert:{uniforms:U9([X0.common,X0.specularmap,X0.envmap,X0.aomap,X0.lightmap,X0.emissivemap,X0.fog,X0.lights,{emissive:{value:new l1(0)}}]),vertexShader:I1.meshlambert_vert,fragmentShader:I1.meshlambert_frag},phong:{uniforms:U9([X0.common,X0.specularmap,X0.envmap,X0.aomap,X0.lightmap,X0.emissivemap,X0.bumpmap,X0.normalmap,X0.displacementmap,X0.fog,X0.lights,{emissive:{value:new l1(0)},specular:{value:new l1(1118481)},shininess:{value:30}}]),vertexShader:I1.meshphong_vert,fragmentShader:I1.meshphong_frag},standard:{uniforms:U9([X0.common,X0.envmap,X0.aomap,X0.lightmap,X0.emissivemap,X0.bumpmap,X0.normalmap,X0.displacementmap,X0.roughnessmap,X0.metalnessmap,X0.fog,X0.lights,{emissive:{value:new l1(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:I1.meshphysical_vert,fragmentShader:I1.meshphysical_frag},toon:{uniforms:U9([X0.common,X0.aomap,X0.lightmap,X0.emissivemap,X0.bumpmap,X0.normalmap,X0.displacementmap,X0.gradientmap,X0.fog,X0.lights,{emissive:{value:new l1(0)}}]),vertexShader:I1.meshtoon_vert,fragmentShader:I1.meshtoon_frag},matcap:{uniforms:U9([X0.common,X0.bumpmap,X0.normalmap,X0.displacementmap,X0.fog,{matcap:{value:null}}]),vertexShader:I1.meshmatcap_vert,fragmentShader:I1.meshmatcap_frag},points:{uniforms:U9([X0.points,X0.fog]),vertexShader:I1.points_vert,fragmentShader:I1.points_frag},dashed:{uniforms:U9([X0.common,X0.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:I1.linedashed_vert,fragmentShader:I1.linedashed_frag},depth:{uniforms:U9([X0.common,X0.displacementmap]),vertexShader:I1.depth_vert,fragmentShader:I1.depth_frag},normal:{uniforms:U9([X0.common,X0.bumpmap,X0.normalmap,X0.displacementmap,{opacity:{value:1}}]),vertexShader:I1.meshnormal_vert,fragmentShader:I1.meshnormal_frag},sprite:{uniforms:U9([X0.sprite,X0.fog]),vertexShader:I1.sprite_vert,fragmentShader:I1.sprite_frag},background:{uniforms:{uvTransform:{value:new q9},t2D:{value:null}},vertexShader:I1.background_vert,fragmentShader:I1.background_frag},cube:{uniforms:U9([X0.envmap,{opacity:{value:1}}]),vertexShader:I1.cube_vert,fragmentShader:I1.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:I1.equirect_vert,fragmentShader:I1.equirect_frag},distanceRGBA:{uniforms:U9([X0.common,X0.displacementmap,{referencePosition:{value:new $},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:I1.distanceRGBA_vert,fragmentShader:I1.distanceRGBA_frag},shadow:{uniforms:U9([X0.lights,X0.fog,{color:{value:new l1(0)},opacity:{value:1}}]),vertexShader:I1.shadow_vert,fragmentShader:I1.shadow_frag}};z2.physical={uniforms:U9([z2.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new D0(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new l1(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new D0},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new l1(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new l1(1,1,1)},specularColorMap:{value:null}}]),vertexShader:I1.meshphysical_vert,fragmentShader:I1.meshphysical_frag};function $m(i,e,t,n,r,o){const s=new l1(0);let a=r===!0?0:1,h,f,d=null,m=0,y=null;function v(M,w){let E=!1,T=w.isScene===!0?w.background:null;T&&T.isTexture&&(T=e.get(T));const C=i.xr,P=C.getSession&&C.getSession();P&&P.environmentBlendMode==="additive"&&(T=null),T===null?b(s,a):T&&T.isColor&&(b(T,1),E=!0),(i.autoClear||E)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),T&&(T.isCubeTexture||T.mapping===ce)?(f===void 0&&(f=new K1(new Y7(1,1,1),new F9({name:"BackgroundCubeMaterial",uniforms:B6(z2.cube.uniforms),vertexShader:z2.cube.vertexShader,fragmentShader:z2.cube.fragmentShader,side:y2,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(R,I,q){this.matrixWorld.copyPosition(q.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(f)),f.material.uniforms.envMap.value=T,f.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,(d!==T||m!==T.version||y!==i.toneMapping)&&(f.material.needsUpdate=!0,d=T,m=T.version,y=i.toneMapping),f.layers.enableAll(),M.unshift(f,f.geometry,f.material,0,0,null)):T&&T.isTexture&&(h===void 0&&(h=new K1(new ui(2,2),new F9({name:"BackgroundMaterial",uniforms:B6(z2.background.uniforms),vertexShader:z2.background.vertexShader,fragmentShader:z2.background.fragmentShader,side:C7,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(h)),h.material.uniforms.t2D.value=T,T.matrixAutoUpdate===!0&&T.updateMatrix(),h.material.uniforms.uvTransform.value.copy(T.matrix),(d!==T||m!==T.version||y!==i.toneMapping)&&(h.material.needsUpdate=!0,d=T,m=T.version,y=i.toneMapping),h.layers.enableAll(),M.unshift(h,h.geometry,h.material,0,0,null))}function b(M,w){t.buffers.color.setClear(M.r,M.g,M.b,w,o)}return{getClearColor:function(){return s},setClearColor:function(M,w=1){s.set(M),a=w,b(s,a)},getClearAlpha:function(){return a},setClearAlpha:function(M){a=M,b(s,a)},render:v}}function Ym(i,e,t,n){const r=i.getParameter(34921),o=n.isWebGL2?null:e.get("OES_vertex_array_object"),s=n.isWebGL2||o!==null,a={},h=w(null);let f=h,d=!1;function m(z,G,X,o0,a0){let u0=!1;if(s){const l0=M(o0,X,G);f!==l0&&(f=l0,v(f.object)),u0=E(z,o0,X,a0),u0&&T(z,o0,X,a0)}else{const l0=G.wireframe===!0;(f.geometry!==o0.id||f.program!==X.id||f.wireframe!==l0)&&(f.geometry=o0.id,f.program=X.id,f.wireframe=l0,u0=!0)}a0!==null&&t.update(a0,34963),(u0||d)&&(d=!1,D(z,G,X,o0),a0!==null&&i.bindBuffer(34963,t.get(a0).buffer))}function y(){return n.isWebGL2?i.createVertexArray():o.createVertexArrayOES()}function v(z){return n.isWebGL2?i.bindVertexArray(z):o.bindVertexArrayOES(z)}function b(z){return n.isWebGL2?i.deleteVertexArray(z):o.deleteVertexArrayOES(z)}function M(z,G,X){const o0=X.wireframe===!0;let a0=a[z.id];a0===void 0&&(a0={},a[z.id]=a0);let u0=a0[G.id];u0===void 0&&(u0={},a0[G.id]=u0);let l0=u0[o0];return l0===void 0&&(l0=w(y()),u0[o0]=l0),l0}function w(z){const G=[],X=[],o0=[];for(let a0=0;a0<r;a0++)G[a0]=0,X[a0]=0,o0[a0]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:G,enabledAttributes:X,attributeDivisors:o0,object:z,attributes:{},index:null}}function E(z,G,X,o0){const a0=f.attributes,u0=G.attributes;let l0=0;const b0=X.getAttributes();for(const i0 in b0)if(b0[i0].location>=0){const P0=a0[i0];let T0=u0[i0];if(T0===void 0&&(i0==="instanceMatrix"&&z.instanceMatrix&&(T0=z.instanceMatrix),i0==="instanceColor"&&z.instanceColor&&(T0=z.instanceColor)),P0===void 0||P0.attribute!==T0||T0&&P0.data!==T0.data)return!0;l0++}return f.attributesNum!==l0||f.index!==o0}function T(z,G,X,o0){const a0={},u0=G.attributes;let l0=0;const b0=X.getAttributes();for(const i0 in b0)if(b0[i0].location>=0){let P0=u0[i0];P0===void 0&&(i0==="instanceMatrix"&&z.instanceMatrix&&(P0=z.instanceMatrix),i0==="instanceColor"&&z.instanceColor&&(P0=z.instanceColor));const T0={};T0.attribute=P0,P0&&P0.data&&(T0.data=P0.data),a0[i0]=T0,l0++}f.attributes=a0,f.attributesNum=l0,f.index=o0}function C(){const z=f.newAttributes;for(let G=0,X=z.length;G<X;G++)z[G]=0}function P(z){R(z,0)}function R(z,G){const X=f.newAttributes,o0=f.enabledAttributes,a0=f.attributeDivisors;X[z]=1,o0[z]===0&&(i.enableVertexAttribArray(z),o0[z]=1),a0[z]!==G&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,G),a0[z]=G)}function I(){const z=f.newAttributes,G=f.enabledAttributes;for(let X=0,o0=G.length;X<o0;X++)G[X]!==z[X]&&(i.disableVertexAttribArray(X),G[X]=0)}function q(z,G,X,o0,a0,u0){n.isWebGL2===!0&&(X===5124||X===5125)?i.vertexAttribIPointer(z,G,X,a0,u0):i.vertexAttribPointer(z,G,X,o0,a0,u0)}function D(z,G,X,o0){if(n.isWebGL2===!1&&(z.isInstancedMesh||o0.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;C();const a0=o0.attributes,u0=X.getAttributes(),l0=G.defaultAttributeValues;for(const b0 in u0){const i0=u0[b0];if(i0.location>=0){let g0=a0[b0];if(g0===void 0&&(b0==="instanceMatrix"&&z.instanceMatrix&&(g0=z.instanceMatrix),b0==="instanceColor"&&z.instanceColor&&(g0=z.instanceColor)),g0!==void 0){const P0=g0.normalized,T0=g0.itemSize,d0=t.get(g0);if(d0===void 0)continue;const p0=d0.buffer,E0=d0.type,I0=d0.bytesPerElement;if(g0.isInterleavedBufferAttribute){const _0=g0.data,H0=_0.stride,w0=g0.offset;if(_0.isInstancedInterleavedBuffer){for(let N=0;N<i0.locationSize;N++)R(i0.location+N,_0.meshPerAttribute);z.isInstancedMesh!==!0&&o0._maxInstanceCount===void 0&&(o0._maxInstanceCount=_0.meshPerAttribute*_0.count)}else for(let N=0;N<i0.locationSize;N++)P(i0.location+N);i.bindBuffer(34962,p0);for(let N=0;N<i0.locationSize;N++)q(i0.location+N,T0/i0.locationSize,E0,P0,H0*I0,(w0+T0/i0.locationSize*N)*I0)}else{if(g0.isInstancedBufferAttribute){for(let _0=0;_0<i0.locationSize;_0++)R(i0.location+_0,g0.meshPerAttribute);z.isInstancedMesh!==!0&&o0._maxInstanceCount===void 0&&(o0._maxInstanceCount=g0.meshPerAttribute*g0.count)}else for(let _0=0;_0<i0.locationSize;_0++)P(i0.location+_0);i.bindBuffer(34962,p0);for(let _0=0;_0<i0.locationSize;_0++)q(i0.location+_0,T0/i0.locationSize,E0,P0,T0*I0,T0/i0.locationSize*_0*I0)}}else if(l0!==void 0){const P0=l0[b0];if(P0!==void 0)switch(P0.length){case 2:i.vertexAttrib2fv(i0.location,P0);break;case 3:i.vertexAttrib3fv(i0.location,P0);break;case 4:i.vertexAttrib4fv(i0.location,P0);break;default:i.vertexAttrib1fv(i0.location,P0)}}}}I()}function O(){j();for(const z in a){const G=a[z];for(const X in G){const o0=G[X];for(const a0 in o0)b(o0[a0].object),delete o0[a0];delete G[X]}delete a[z]}}function k(z){if(a[z.id]===void 0)return;const G=a[z.id];for(const X in G){const o0=G[X];for(const a0 in o0)b(o0[a0].object),delete o0[a0];delete G[X]}delete a[z.id]}function B(z){for(const G in a){const X=a[G];if(X[z.id]===void 0)continue;const o0=X[z.id];for(const a0 in o0)b(o0[a0].object),delete o0[a0];delete X[z.id]}}function j(){Y(),d=!0,f!==h&&(f=h,v(f.object))}function Y(){h.geometry=null,h.program=null,h.wireframe=!1}return{setup:m,reset:j,resetDefaultState:Y,dispose:O,releaseStatesOfGeometry:k,releaseStatesOfProgram:B,initAttributes:C,enableAttribute:P,disableUnusedAttributes:I}}function Xm(i,e,t,n){const r=n.isWebGL2;let o;function s(f){o=f}function a(f,d){i.drawArrays(o,f,d),t.update(d,o,1)}function h(f,d,m){if(m===0)return;let y,v;if(r)y=i,v="drawArraysInstanced";else if(y=e.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",y===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[v](o,f,d,m),t.update(d,o,m)}this.setMode=s,this.render=a,this.renderInstances=h}function Zm(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const q=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(q.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(q){if(q==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";q="mediump"}return q==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext!="undefined"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&i instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const h=o(a);h!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",h,"instead."),a=h);const f=s||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,m=i.getParameter(34930),y=i.getParameter(35660),v=i.getParameter(3379),b=i.getParameter(34076),M=i.getParameter(34921),w=i.getParameter(36347),E=i.getParameter(36348),T=i.getParameter(36349),C=y>0,P=s||e.has("OES_texture_float"),R=C&&P,I=s?i.getParameter(36183):0;return{isWebGL2:s,drawBuffers:f,getMaxAnisotropy:r,getMaxPrecision:o,precision:a,logarithmicDepthBuffer:d,maxTextures:m,maxVertexTextures:y,maxTextureSize:v,maxCubemapSize:b,maxAttributes:M,maxVertexUniforms:w,maxVaryings:E,maxFragmentUniforms:T,vertexTextures:C,floatFragmentTextures:P,floatVertexTextures:R,maxSamples:I}}function Jm(i){const e=this;let t=null,n=0,r=!1,o=!1;const s=new y4,a=new q9,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,y,v){const b=m.length!==0||y||n!==0||r;return r=y,t=d(m,v,0),n=m.length,b},this.beginShadows=function(){o=!0,d(null)},this.endShadows=function(){o=!1,f()},this.setState=function(m,y,v){const b=m.clippingPlanes,M=m.clipIntersection,w=m.clipShadows,E=i.get(m);if(!r||b===null||b.length===0||o&&!w)o?d(null):f();else{const T=o?0:n,C=T*4;let P=E.clippingState||null;h.value=P,P=d(b,y,C,v);for(let R=0;R!==C;++R)P[R]=t[R];E.clippingState=P,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=T}};function f(){h.value!==t&&(h.value=t,h.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(m,y,v,b){const M=m!==null?m.length:0;let w=null;if(M!==0){if(w=h.value,b!==!0||w===null){const E=v+M*4,T=y.matrixWorldInverse;a.getNormalMatrix(T),(w===null||w.length<E)&&(w=new Float32Array(E));for(let C=0,P=v;C!==M;++C,P+=4)s.copy(m[C]).applyMatrix4(T,a),s.normal.toArray(w,P),w[P+3]=s.constant}h.value=w,h.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,w}}function Km(i){let e=new WeakMap;function t(s,a){return a===Zt?s.mapping=L6:a===Jt&&(s.mapping=D6),s}function n(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const a=s.mapping;if(a===Zt||a===Jt)if(e.has(s)){const h=e.get(s).texture;return t(h,s.mapping)}else{const h=s.image;if(h&&h.height>0){const f=new El(h.height/2);return f.fromEquirectangularTexture(i,s),e.set(s,f),s.addEventListener("dispose",r),t(f.texture,s.mapping)}else return null}}return s}function r(s){const a=s.target;a.removeEventListener("dispose",r);const h=e.get(a);h!==void 0&&(e.delete(a),h.dispose())}function o(){e=new WeakMap}return{get:n,dispose:o}}class X7 extends li{constructor(e=-1,t=1,n=1,r=-1,o=.1,s=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=o,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,o,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=o,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let o=n-e,s=n+e,a=r+t,h=r-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,s=o+f*this.view.width,a-=d*this.view.offsetY,h=a-d*this.view.height}this.projectionMatrix.makeOrthographic(o,s,a,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}X7.prototype.isOrthographicCamera=!0;const v6=4,To=[.125,.215,.35,.446,.526,.582],M5=20,vt=new X7,Co=new l1;let xt=null;const b5=(1+Math.sqrt(5))/2,r6=1/b5,Po=[new $(1,1,1),new $(-1,1,1),new $(1,1,-1),new $(-1,1,-1),new $(0,b5,r6),new $(0,b5,-r6),new $(r6,0,b5),new $(-r6,0,b5),new $(b5,r6,0),new $(-b5,r6,0)];class Ro{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){xt=this._renderer.getRenderTarget(),this._setSize(256);const o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(e,n,r,o),t>0&&this._blur(o,0,0,t),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Io(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Do(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(xt),e.scissorTest=!1,B8(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===L6||e.mapping===D6?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),xt=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:s2,minFilter:s2,generateMipmaps:!1,type:R7,format:V2,encoding:e5,depthBuffer:!1},r=Lo(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Lo(e,t,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=eg(o)),this._blurMaterial=tg(o,e,t)}return r}_compileMaterial(e){const t=new K1(this._lodPlanes[0],e);this._renderer.compile(t,vt)}_sceneToCubeUV(e,t,n,r){const a=new $9(90,1,t,n),h=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],d=this._renderer,m=d.autoClear,y=d.toneMapping;d.getClearColor(Co),d.toneMapping=b4,d.autoClear=!1;const v=new l5({name:"PMREM.Background",side:y2,depthWrite:!1,depthTest:!1}),b=new K1(new Y7,v);let M=!1;const w=e.background;w?w.isColor&&(v.color.copy(w),e.background=null,M=!0):(v.color.copy(Co),M=!0);for(let E=0;E<6;E++){const T=E%3;T===0?(a.up.set(0,h[E],0),a.lookAt(f[E],0,0)):T===1?(a.up.set(0,0,h[E]),a.lookAt(0,f[E],0)):(a.up.set(0,h[E],0),a.lookAt(0,0,f[E]));const C=this._cubeSize;B8(r,T*C,E>2?C:0,C,C),d.setRenderTarget(r),M&&d.render(b,a),d.render(e,a)}b.geometry.dispose(),b.material.dispose(),d.toneMapping=y,d.autoClear=m,e.background=w}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===L6||e.mapping===D6;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Io()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Do());const o=r?this._cubemapMaterial:this._equirectMaterial,s=new K1(this._lodPlanes[0],o),a=o.uniforms;a.envMap.value=e;const h=this._cubeSize;B8(t,0,0,3*h,2*h),n.setRenderTarget(t),n.render(s,vt)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),s=Po[(r-1)%Po.length];this._blur(e,r-1,r,o,s)}t.autoClear=n}_blur(e,t,n,r,o){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,r,"latitudinal",o),this._halfBlur(s,e,n,n,r,"longitudinal",o)}_halfBlur(e,t,n,r,o,s,a){const h=this._renderer,f=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,m=new K1(this._lodPlanes[r],f),y=f.uniforms,v=this._sizeLods[n]-1,b=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*M5-1),M=o/b,w=isFinite(o)?1+Math.floor(d*M):M5;w>M5&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${w} samples when the maximum is set to ${M5}`);const E=[];let T=0;for(let q=0;q<M5;++q){const D=q/M,O=Math.exp(-D*D/2);E.push(O),q===0?T+=O:q<w&&(T+=2*O)}for(let q=0;q<E.length;q++)E[q]=E[q]/T;y.envMap.value=e.texture,y.samples.value=w,y.weights.value=E,y.latitudinal.value=s==="latitudinal",a&&(y.poleAxis.value=a);const{_lodMax:C}=this;y.dTheta.value=b,y.mipInt.value=C-n;const P=this._sizeLods[r],R=3*P*(r>C-v6?r-C+v6:0),I=4*(this._cubeSize-P);B8(t,R,I,3*P,2*P),h.setRenderTarget(t),h.render(m,vt)}}function eg(i){const e=[],t=[],n=[];let r=i;const o=i-v6+1+To.length;for(let s=0;s<o;s++){const a=Math.pow(2,r);t.push(a);let h=1/a;s>i-v6?h=To[s-i+v6-1]:s===0&&(h=0),n.push(h);const f=1/(a-2),d=-f,m=1+f,y=[d,d,m,d,m,m,d,d,m,m,d,m],v=6,b=6,M=3,w=2,E=1,T=new Float32Array(M*b*v),C=new Float32Array(w*b*v),P=new Float32Array(E*b*v);for(let I=0;I<v;I++){const q=I%3*2/3-1,D=I>2?0:-1,O=[q,D,0,q+2/3,D,0,q+2/3,D+1,0,q,D,0,q+2/3,D+1,0,q,D+1,0];T.set(O,M*b*I),C.set(y,w*b*I);const k=[I,I,I,I,I,I];P.set(k,E*b*I)}const R=new C1;R.setAttribute("position",new t9(T,M)),R.setAttribute("uv",new t9(C,w)),R.setAttribute("faceIndex",new t9(P,E)),e.push(R),r>v6&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Lo(i,e,t){const n=new u2(i,e,t);return n.texture.mapping=ce,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function B8(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function tg(i,e,t){const n=new Float32Array(M5),r=new $(0,1,0);return new F9({name:"SphericalGaussianBlur",defines:{n:M5,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:ci(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:X4,depthTest:!1,depthWrite:!1})}function Do(){return new F9({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ci(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:X4,depthTest:!1,depthWrite:!1})}function Io(){return new F9({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ci(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:X4,depthTest:!1,depthWrite:!1})}function ci(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ng(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const h=a.mapping,f=h===Zt||h===Jt,d=h===L6||h===D6;if(f||d)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let m=e.get(a);return t===null&&(t=new Ro(i)),m=f?t.fromEquirectangular(a,m):t.fromCubemap(a,m),e.set(a,m),m.texture}else{if(e.has(a))return e.get(a).texture;{const m=a.image;if(f&&m&&m.height>0||d&&m&&r(m)){t===null&&(t=new Ro(i));const y=f?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,y),a.addEventListener("dispose",o),y.texture}else return null}}}return a}function r(a){let h=0;const f=6;for(let d=0;d<f;d++)a[d]!==void 0&&h++;return h===f}function o(a){const h=a.target;h.removeEventListener("dispose",o);const f=e.get(h);f!==void 0&&(e.delete(h),f.dispose())}function s(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:s}}function ig(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function rg(i,e,t,n){const r={},o=new WeakMap;function s(m){const y=m.target;y.index!==null&&e.remove(y.index);for(const b in y.attributes)e.remove(y.attributes[b]);y.removeEventListener("dispose",s),delete r[y.id];const v=o.get(y);v&&(e.remove(v),o.delete(y)),n.releaseStatesOfGeometry(y),y.isInstancedBufferGeometry===!0&&delete y._maxInstanceCount,t.memory.geometries--}function a(m,y){return r[y.id]===!0||(y.addEventListener("dispose",s),r[y.id]=!0,t.memory.geometries++),y}function h(m){const y=m.attributes;for(const b in y)e.update(y[b],34962);const v=m.morphAttributes;for(const b in v){const M=v[b];for(let w=0,E=M.length;w<E;w++)e.update(M[w],34962)}}function f(m){const y=[],v=m.index,b=m.attributes.position;let M=0;if(v!==null){const T=v.array;M=v.version;for(let C=0,P=T.length;C<P;C+=3){const R=T[C+0],I=T[C+1],q=T[C+2];y.push(R,I,I,q,q,R)}}else{const T=b.array;M=b.version;for(let C=0,P=T.length/3-1;C<P;C+=3){const R=C+0,I=C+1,q=C+2;y.push(R,I,I,q,q,R)}}const w=new(bl(y)?Sl:Ml)(y,1);w.version=M;const E=o.get(m);E&&e.remove(E),o.set(m,w)}function d(m){const y=o.get(m);if(y){const v=m.index;v!==null&&y.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:a,update:h,getWireframeAttribute:d}}function og(i,e,t,n){const r=n.isWebGL2;let o;function s(y){o=y}let a,h;function f(y){a=y.type,h=y.bytesPerElement}function d(y,v){i.drawElements(o,v,a,y*h),t.update(v,o,1)}function m(y,v,b){if(b===0)return;let M,w;if(r)M=i,w="drawElementsInstanced";else if(M=e.get("ANGLE_instanced_arrays"),w="drawElementsInstancedANGLE",M===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}M[w](o,v,a,y*h,b),t.update(v,o,b)}this.setMode=s,this.setIndex=f,this.render=d,this.renderInstances=m}function sg(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,s,a){switch(t.calls++,s){case 4:t.triangles+=a*(o/3);break;case 1:t.lines+=a*(o/2);break;case 3:t.lines+=a*(o-1);break;case 2:t.lines+=a*o;break;case 0:t.points+=a*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function ag(i,e){return i[0]-e[0]}function lg(i,e){return Math.abs(e[1])-Math.abs(i[1])}function _t(i,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),i.divideScalar(t)}function Ag(i,e,t){const n={},r=new Float32Array(8),o=new WeakMap,s=new Y1,a=[];for(let f=0;f<8;f++)a[f]=[f,0];function h(f,d,m,y){const v=f.morphTargetInfluences;if(e.isWebGL2===!0){const b=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,M=b!==void 0?b.length:0;let w=o.get(d);if(w===void 0||w.count!==M){let G=function(){Y.dispose(),o.delete(d),d.removeEventListener("dispose",G)};w!==void 0&&w.texture.dispose();const C=d.morphAttributes.position!==void 0,P=d.morphAttributes.normal!==void 0,R=d.morphAttributes.color!==void 0,I=d.morphAttributes.position||[],q=d.morphAttributes.normal||[],D=d.morphAttributes.color||[];let O=0;C===!0&&(O=1),P===!0&&(O=2),R===!0&&(O=3);let k=d.attributes.position.count*O,B=1;k>e.maxTextureSize&&(B=Math.ceil(k/e.maxTextureSize),k=e.maxTextureSize);const j=new Float32Array(k*B*4*M),Y=new he(j,k,B,M);Y.type=T5,Y.needsUpdate=!0;const z=O*4;for(let X=0;X<M;X++){const o0=I[X],a0=q[X],u0=D[X],l0=k*B*4*X;for(let b0=0;b0<o0.count;b0++){const i0=b0*z;C===!0&&(s.fromBufferAttribute(o0,b0),o0.normalized===!0&&_t(s,o0),j[l0+i0+0]=s.x,j[l0+i0+1]=s.y,j[l0+i0+2]=s.z,j[l0+i0+3]=0),P===!0&&(s.fromBufferAttribute(a0,b0),a0.normalized===!0&&_t(s,a0),j[l0+i0+4]=s.x,j[l0+i0+5]=s.y,j[l0+i0+6]=s.z,j[l0+i0+7]=0),R===!0&&(s.fromBufferAttribute(u0,b0),u0.normalized===!0&&_t(s,u0),j[l0+i0+8]=s.x,j[l0+i0+9]=s.y,j[l0+i0+10]=s.z,j[l0+i0+11]=u0.itemSize===4?s.w:1)}}w={count:M,texture:Y,size:new D0(k,B)},o.set(d,w),d.addEventListener("dispose",G)}let E=0;for(let C=0;C<v.length;C++)E+=v[C];const T=d.morphTargetsRelative?1:1-E;y.getUniforms().setValue(i,"morphTargetBaseInfluence",T),y.getUniforms().setValue(i,"morphTargetInfluences",v),y.getUniforms().setValue(i,"morphTargetsTexture",w.texture,t),y.getUniforms().setValue(i,"morphTargetsTextureSize",w.size)}else{const b=v===void 0?0:v.length;let M=n[d.id];if(M===void 0||M.length!==b){M=[];for(let P=0;P<b;P++)M[P]=[P,0];n[d.id]=M}for(let P=0;P<b;P++){const R=M[P];R[0]=P,R[1]=v[P]}M.sort(lg);for(let P=0;P<8;P++)P<b&&M[P][1]?(a[P][0]=M[P][0],a[P][1]=M[P][1]):(a[P][0]=Number.MAX_SAFE_INTEGER,a[P][1]=0);a.sort(ag);const w=d.morphAttributes.position,E=d.morphAttributes.normal;let T=0;for(let P=0;P<8;P++){const R=a[P],I=R[0],q=R[1];I!==Number.MAX_SAFE_INTEGER&&q?(w&&d.getAttribute("morphTarget"+P)!==w[I]&&d.setAttribute("morphTarget"+P,w[I]),E&&d.getAttribute("morphNormal"+P)!==E[I]&&d.setAttribute("morphNormal"+P,E[I]),r[P]=q,T+=q):(w&&d.hasAttribute("morphTarget"+P)===!0&&d.deleteAttribute("morphTarget"+P),E&&d.hasAttribute("morphNormal"+P)===!0&&d.deleteAttribute("morphNormal"+P),r[P]=0)}const C=d.morphTargetsRelative?1:1-T;y.getUniforms().setValue(i,"morphTargetBaseInfluence",C),y.getUniforms().setValue(i,"morphTargetInfluences",r)}}return{update:h}}function ug(i,e,t,n){let r=new WeakMap;function o(h){const f=n.render.frame,d=h.geometry,m=e.get(h,d);return r.get(m)!==f&&(e.update(m),r.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",a)===!1&&h.addEventListener("dispose",a),t.update(h.instanceMatrix,34962),h.instanceColor!==null&&t.update(h.instanceColor,34962)),m}function s(){r=new WeakMap}function a(h){const f=h.target;f.removeEventListener("dispose",a),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:o,dispose:s}}const Cl=new D9,Pl=new he,Rl=new oi,Ll=new de,Bo=[],Oo=[],qo=new Float32Array(16),Fo=new Float32Array(9),ko=new Float32Array(4);function V6(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let o=Bo[r];if(o===void 0&&(o=new Float32Array(r),Bo[r]=o),e!==0){n.toArray(o,0);for(let s=1,a=0;s!==e;++s)a+=t,i[s].toArray(o,a)}return o}function J9(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function K9(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function me(i,e){let t=Oo[e];t===void 0&&(t=new Int32Array(e),Oo[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function cg(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function fg(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(J9(t,e))return;i.uniform2fv(this.addr,e),K9(t,e)}}function hg(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(J9(t,e))return;i.uniform3fv(this.addr,e),K9(t,e)}}function dg(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(J9(t,e))return;i.uniform4fv(this.addr,e),K9(t,e)}}function pg(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(J9(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),K9(t,e)}else{if(J9(t,n))return;ko.set(n),i.uniformMatrix2fv(this.addr,!1,ko),K9(t,n)}}function mg(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(J9(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),K9(t,e)}else{if(J9(t,n))return;Fo.set(n),i.uniformMatrix3fv(this.addr,!1,Fo),K9(t,n)}}function gg(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(J9(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),K9(t,e)}else{if(J9(t,n))return;qo.set(n),i.uniformMatrix4fv(this.addr,!1,qo),K9(t,n)}}function yg(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function vg(i,e){const t=this.cache;J9(t,e)||(i.uniform2iv(this.addr,e),K9(t,e))}function xg(i,e){const t=this.cache;J9(t,e)||(i.uniform3iv(this.addr,e),K9(t,e))}function _g(i,e){const t=this.cache;J9(t,e)||(i.uniform4iv(this.addr,e),K9(t,e))}function bg(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function wg(i,e){const t=this.cache;J9(t,e)||(i.uniform2uiv(this.addr,e),K9(t,e))}function Mg(i,e){const t=this.cache;J9(t,e)||(i.uniform3uiv(this.addr,e),K9(t,e))}function Sg(i,e){const t=this.cache;J9(t,e)||(i.uniform4uiv(this.addr,e),K9(t,e))}function Eg(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2D(e||Cl,r)}function Tg(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||Rl,r)}function Cg(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||Ll,r)}function Pg(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||Pl,r)}function Rg(i){switch(i){case 5126:return cg;case 35664:return fg;case 35665:return hg;case 35666:return dg;case 35674:return pg;case 35675:return mg;case 35676:return gg;case 5124:case 35670:return yg;case 35667:case 35671:return vg;case 35668:case 35672:return xg;case 35669:case 35673:return _g;case 5125:return bg;case 36294:return wg;case 36295:return Mg;case 36296:return Sg;case 35678:case 36198:case 36298:case 36306:case 35682:return Eg;case 35679:case 36299:case 36307:return Tg;case 35680:case 36300:case 36308:case 36293:return Cg;case 36289:case 36303:case 36311:case 36292:return Pg}}function Lg(i,e){i.uniform1fv(this.addr,e)}function Dg(i,e){const t=V6(e,this.size,2);i.uniform2fv(this.addr,t)}function Ig(i,e){const t=V6(e,this.size,3);i.uniform3fv(this.addr,t)}function Bg(i,e){const t=V6(e,this.size,4);i.uniform4fv(this.addr,t)}function Og(i,e){const t=V6(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function qg(i,e){const t=V6(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function Fg(i,e){const t=V6(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function kg(i,e){i.uniform1iv(this.addr,e)}function Ng(i,e){i.uniform2iv(this.addr,e)}function Ug(i,e){i.uniform3iv(this.addr,e)}function zg(i,e){i.uniform4iv(this.addr,e)}function Gg(i,e){i.uniform1uiv(this.addr,e)}function Hg(i,e){i.uniform2uiv(this.addr,e)}function Vg(i,e){i.uniform3uiv(this.addr,e)}function Wg(i,e){i.uniform4uiv(this.addr,e)}function jg(i,e,t){const n=e.length,r=me(t,n);i.uniform1iv(this.addr,r);for(let o=0;o!==n;++o)t.setTexture2D(e[o]||Cl,r[o])}function Qg(i,e,t){const n=e.length,r=me(t,n);i.uniform1iv(this.addr,r);for(let o=0;o!==n;++o)t.setTexture3D(e[o]||Rl,r[o])}function $g(i,e,t){const n=e.length,r=me(t,n);i.uniform1iv(this.addr,r);for(let o=0;o!==n;++o)t.setTextureCube(e[o]||Ll,r[o])}function Yg(i,e,t){const n=e.length,r=me(t,n);i.uniform1iv(this.addr,r);for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||Pl,r[o])}function Xg(i){switch(i){case 5126:return Lg;case 35664:return Dg;case 35665:return Ig;case 35666:return Bg;case 35674:return Og;case 35675:return qg;case 35676:return Fg;case 5124:case 35670:return kg;case 35667:case 35671:return Ng;case 35668:case 35672:return Ug;case 35669:case 35673:return zg;case 5125:return Gg;case 36294:return Hg;case 36295:return Vg;case 36296:return Wg;case 35678:case 36198:case 36298:case 36306:case 35682:return jg;case 35679:case 36299:case 36307:return Qg;case 35680:case 36300:case 36308:case 36293:return $g;case 36289:case 36303:case 36311:case 36292:return Yg}}function Zg(i,e,t){this.id=i,this.addr=t,this.cache=[],this.setValue=Rg(e.type)}function Jg(i,e,t){this.id=i,this.addr=t,this.cache=[],this.size=e.size,this.setValue=Xg(e.type)}function Dl(i){this.id=i,this.seq=[],this.map={}}Dl.prototype.setValue=function(i,e,t){const n=this.seq;for(let r=0,o=n.length;r!==o;++r){const s=n[r];s.setValue(i,e[s.id],t)}};const bt=/(\w+)(\])?(\[|\.)?/g;function No(i,e){i.seq.push(e),i.map[e.id]=e}function Kg(i,e,t){const n=i.name,r=n.length;for(bt.lastIndex=0;;){const o=bt.exec(n),s=bt.lastIndex;let a=o[1];const h=o[2]==="]",f=o[3];if(h&&(a=a|0),f===void 0||f==="["&&s+2===r){No(t,f===void 0?new Zg(a,i,e):new Jg(a,i,e));break}else{let m=t.map[a];m===void 0&&(m=new Dl(a),No(t,m)),t=m}}}function J4(i,e){this.seq=[],this.map={};const t=i.getProgramParameter(e,35718);for(let n=0;n<t;++n){const r=i.getActiveUniform(e,n),o=i.getUniformLocation(e,r.name);Kg(r,o,this)}}J4.prototype.setValue=function(i,e,t,n){const r=this.map[e];r!==void 0&&r.setValue(i,t,n)};J4.prototype.setOptional=function(i,e,t){const n=e[t];n!==void 0&&this.setValue(i,t,n)};J4.upload=function(i,e,t,n){for(let r=0,o=e.length;r!==o;++r){const s=e[r],a=t[s.id];a.needsUpdate!==!1&&s.setValue(i,a.value,n)}};J4.seqWithValue=function(i,e){const t=[];for(let n=0,r=i.length;n!==r;++n){const o=i[n];o.id in e&&t.push(o)}return t};function Uo(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let ey=0;function ty(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),o=Math.min(e+6,t.length);for(let s=r;s<o;s++)n.push(s+1+": "+t[s]);return n.join(`
`)}function ny(i){switch(i){case e5:return["Linear","( value )"];case a9:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function zo(i,e,t){const n=i.getShaderParameter(e,35713),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const o=/ERROR: 0:(\d+)/.exec(r);if(o){const s=parseInt(o[0]);return t.toUpperCase()+`

`+r+`

`+ty(i.getShaderSource(e),s)}else return r}function iy(i,e){const t=ny(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function ry(i,e){let t;switch(e){case uh:t="Linear";break;case ch:t="Reinhard";break;case fh:t="OptimizedCineon";break;case hh:t="ACESFilmic";break;case dh:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function oy(i){return[i.extensionDerivatives||!!i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(g7).join(`
`)}function sy(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function ay(i,e){const t={},n=i.getProgramParameter(e,35721);for(let r=0;r<n;r++){const o=i.getActiveAttrib(e,r),s=o.name;let a=1;o.type===35674&&(a=2),o.type===35675&&(a=3),o.type===35676&&(a=4),t[s]={type:o.type,location:i.getAttribLocation(e,s),locationSize:a}}return t}function g7(i){return i!==""}function Go(i,e){return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ho(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ly=/^[ \t]*#include +<([\w\d./]+)>/gm;function rn(i){return i.replace(ly,Ay)}function Ay(i,e){const t=I1[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return rn(t)}const uy=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,cy=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vo(i){return i.replace(cy,Il).replace(uy,fy)}function fy(i,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Il(i,e,t,n)}function Il(i,e,t,n){let r="";for(let o=parseInt(e);o<parseInt(t);o++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return r}function Wo(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function hy(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===pl?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===Gf?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===m7&&(e="SHADOWMAP_TYPE_VSM"),e}function dy(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case L6:case D6:e="ENVMAP_TYPE_CUBE";break;case ce:e="ENVMAP_TYPE_CUBE_UV";break}return e}function py(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case D6:e="ENVMAP_MODE_REFRACTION";break}return e}function my(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case ue:e="ENVMAP_BLENDING_MULTIPLY";break;case lh:e="ENVMAP_BLENDING_MIX";break;case Ah:e="ENVMAP_BLENDING_ADD";break}return e}function gy(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function yy(i,e,t,n){const r=i.getContext(),o=t.defines;let s=t.vertexShader,a=t.fragmentShader;const h=hy(t),f=dy(t),d=py(t),m=my(t),y=gy(t),v=t.isWebGL2?"":oy(t),b=sy(o),M=r.createProgram();let w,E,T=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(w=[b].filter(g7).join(`
`),w.length>0&&(w+=`
`),E=[v,b].filter(g7).join(`
`),E.length>0&&(E+=`
`)):(w=[Wo(t),"#define SHADER_NAME "+t.shaderName,b,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(g7).join(`
`),E=[v,Wo(t),"#define SHADER_NAME "+t.shaderName,b,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+d:"",t.envMap?"#define "+m:"",y?"#define CUBEUV_TEXEL_WIDTH "+y.texelWidth:"",y?"#define CUBEUV_TEXEL_HEIGHT "+y.texelHeight:"",y?"#define CUBEUV_MAX_MIP "+y.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==b4?"#define TONE_MAPPING":"",t.toneMapping!==b4?I1.tonemapping_pars_fragment:"",t.toneMapping!==b4?ry("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",I1.encodings_pars_fragment,iy("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(g7).join(`
`)),s=rn(s),s=Go(s,t),s=Ho(s,t),a=rn(a),a=Go(a,t),a=Ho(a,t),s=Vo(s),a=Vo(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(T=`#version 300 es
`,w=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+w,E=["#define varying in",t.glslVersion===ho?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ho?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+E);const C=T+w+s,P=T+E+a,R=Uo(r,35633,C),I=Uo(r,35632,P);if(r.attachShader(M,R),r.attachShader(M,I),t.index0AttributeName!==void 0?r.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(M,0,"position"),r.linkProgram(M),i.debug.checkShaderErrors){const O=r.getProgramInfoLog(M).trim(),k=r.getShaderInfoLog(R).trim(),B=r.getShaderInfoLog(I).trim();let j=!0,Y=!0;if(r.getProgramParameter(M,35714)===!1){j=!1;const z=zo(r,R,"vertex"),G=zo(r,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(M,35715)+`

Program Info Log: `+O+`
`+z+`
`+G)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(k===""||B==="")&&(Y=!1);Y&&(this.diagnostics={runnable:j,programLog:O,vertexShader:{log:k,prefix:w},fragmentShader:{log:B,prefix:E}})}r.deleteShader(R),r.deleteShader(I);let q;this.getUniforms=function(){return q===void 0&&(q=new J4(r,M)),q};let D;return this.getAttributes=function(){return D===void 0&&(D=ay(r,M)),D},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(M),this.program=void 0},this.name=t.shaderName,this.id=ey++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=R,this.fragmentShader=I,this}let vy=0;class xy{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),o=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return s.has(r)===!1&&(s.add(r),r.usedTimes++),s.has(o)===!1&&(s.add(o),o.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new _y(e);t.set(e,n)}return t.get(e)}}class _y{constructor(e){this.id=vy++,this.code=e,this.usedTimes=0}}function by(i,e,t,n,r,o,s){const a=new si,h=new xy,f=[],d=r.isWebGL2,m=r.logarithmicDepthBuffer,y=r.vertexTextures;let v=r.precision;const b={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(D,O,k,B,j){const Y=B.fog,z=j.geometry,G=D.isMeshStandardMaterial?B.environment:null,X=(D.isMeshStandardMaterial?t:e).get(D.envMap||G),o0=!!X&&X.mapping===ce?X.image.height:null,a0=b[D.type];D.precision!==null&&(v=r.getMaxPrecision(D.precision),v!==D.precision&&console.warn("THREE.WebGLProgram.getParameters:",D.precision,"not supported, using",v,"instead."));const u0=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,l0=u0!==void 0?u0.length:0;let b0=0;z.morphAttributes.position!==void 0&&(b0=1),z.morphAttributes.normal!==void 0&&(b0=2),z.morphAttributes.color!==void 0&&(b0=3);let i0,g0,P0,T0;if(a0){const _0=z2[a0];i0=_0.vertexShader,g0=_0.fragmentShader}else i0=D.vertexShader,g0=D.fragmentShader,h.update(D),P0=h.getVertexShaderID(D),T0=h.getFragmentShaderID(D);const d0=i.getRenderTarget(),p0=D.alphaTest>0,E0=D.clearcoat>0;return{isWebGL2:d,shaderID:a0,shaderName:D.type,vertexShader:i0,fragmentShader:g0,defines:D.defines,customVertexShaderID:P0,customFragmentShaderID:T0,isRawShaderMaterial:D.isRawShaderMaterial===!0,glslVersion:D.glslVersion,precision:v,instancing:j.isInstancedMesh===!0,instancingColor:j.isInstancedMesh===!0&&j.instanceColor!==null,supportsVertexTextures:y,outputEncoding:d0===null?i.outputEncoding:d0.isXRRenderTarget===!0?d0.texture.encoding:e5,map:!!D.map,matcap:!!D.matcap,envMap:!!X,envMapMode:X&&X.mapping,envMapCubeUVHeight:o0,lightMap:!!D.lightMap,aoMap:!!D.aoMap,emissiveMap:!!D.emissiveMap,bumpMap:!!D.bumpMap,normalMap:!!D.normalMap,objectSpaceNormalMap:D.normalMapType===Fh,tangentSpaceNormalMap:D.normalMapType===H6,decodeVideoTexture:!!D.map&&D.map.isVideoTexture===!0&&D.map.encoding===a9,clearcoat:E0,clearcoatMap:E0&&!!D.clearcoatMap,clearcoatRoughnessMap:E0&&!!D.clearcoatRoughnessMap,clearcoatNormalMap:E0&&!!D.clearcoatNormalMap,displacementMap:!!D.displacementMap,roughnessMap:!!D.roughnessMap,metalnessMap:!!D.metalnessMap,specularMap:!!D.specularMap,specularIntensityMap:!!D.specularIntensityMap,specularColorMap:!!D.specularColorMap,opaque:D.transparent===!1&&D.blending===Z4,alphaMap:!!D.alphaMap,alphaTest:p0,gradientMap:!!D.gradientMap,sheen:D.sheen>0,sheenColorMap:!!D.sheenColorMap,sheenRoughnessMap:!!D.sheenRoughnessMap,transmission:D.transmission>0,transmissionMap:!!D.transmissionMap,thicknessMap:!!D.thicknessMap,combine:D.combine,vertexTangents:!!D.normalMap&&!!z.attributes.tangent,vertexColors:D.vertexColors,vertexAlphas:D.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUvs:!!D.map||!!D.bumpMap||!!D.normalMap||!!D.specularMap||!!D.alphaMap||!!D.emissiveMap||!!D.roughnessMap||!!D.metalnessMap||!!D.clearcoatMap||!!D.clearcoatRoughnessMap||!!D.clearcoatNormalMap||!!D.displacementMap||!!D.transmissionMap||!!D.thicknessMap||!!D.specularIntensityMap||!!D.specularColorMap||!!D.sheenColorMap||!!D.sheenRoughnessMap,uvsVertexOnly:!(!!D.map||!!D.bumpMap||!!D.normalMap||!!D.specularMap||!!D.alphaMap||!!D.emissiveMap||!!D.roughnessMap||!!D.metalnessMap||!!D.clearcoatNormalMap||D.transmission>0||!!D.transmissionMap||!!D.thicknessMap||!!D.specularIntensityMap||!!D.specularColorMap||D.sheen>0||!!D.sheenColorMap||!!D.sheenRoughnessMap)&&!!D.displacementMap,fog:!!Y,useFog:D.fog===!0,fogExp2:Y&&Y.isFogExp2,flatShading:!!D.flatShading,sizeAttenuation:D.sizeAttenuation,logarithmicDepthBuffer:m,skinning:j.isSkinnedMesh===!0,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:l0,morphTextureStride:b0,numDirLights:O.directional.length,numPointLights:O.point.length,numSpotLights:O.spot.length,numRectAreaLights:O.rectArea.length,numHemiLights:O.hemi.length,numDirLightShadows:O.directionalShadowMap.length,numPointLightShadows:O.pointShadowMap.length,numSpotLightShadows:O.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:D.dithering,shadowMapEnabled:i.shadowMap.enabled&&k.length>0,shadowMapType:i.shadowMap.type,toneMapping:D.toneMapped?i.toneMapping:b4,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:D.premultipliedAlpha,doubleSided:D.side===E4,flipSided:D.side===y2,useDepthPacking:!!D.depthPacking,depthPacking:D.depthPacking||0,index0AttributeName:D.index0AttributeName,extensionDerivatives:D.extensions&&D.extensions.derivatives,extensionFragDepth:D.extensions&&D.extensions.fragDepth,extensionDrawBuffers:D.extensions&&D.extensions.drawBuffers,extensionShaderTextureLOD:D.extensions&&D.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:D.customProgramCacheKey()}}function w(D){const O=[];if(D.shaderID?O.push(D.shaderID):(O.push(D.customVertexShaderID),O.push(D.customFragmentShaderID)),D.defines!==void 0)for(const k in D.defines)O.push(k),O.push(D.defines[k]);return D.isRawShaderMaterial===!1&&(E(O,D),T(O,D),O.push(i.outputEncoding)),O.push(D.customProgramCacheKey),O.join()}function E(D,O){D.push(O.precision),D.push(O.outputEncoding),D.push(O.envMapMode),D.push(O.envMapCubeUVHeight),D.push(O.combine),D.push(O.vertexUvs),D.push(O.fogExp2),D.push(O.sizeAttenuation),D.push(O.morphTargetsCount),D.push(O.morphAttributeCount),D.push(O.numDirLights),D.push(O.numPointLights),D.push(O.numSpotLights),D.push(O.numHemiLights),D.push(O.numRectAreaLights),D.push(O.numDirLightShadows),D.push(O.numPointLightShadows),D.push(O.numSpotLightShadows),D.push(O.shadowMapType),D.push(O.toneMapping),D.push(O.numClippingPlanes),D.push(O.numClipIntersection),D.push(O.depthPacking)}function T(D,O){a.disableAll(),O.isWebGL2&&a.enable(0),O.supportsVertexTextures&&a.enable(1),O.instancing&&a.enable(2),O.instancingColor&&a.enable(3),O.map&&a.enable(4),O.matcap&&a.enable(5),O.envMap&&a.enable(6),O.lightMap&&a.enable(7),O.aoMap&&a.enable(8),O.emissiveMap&&a.enable(9),O.bumpMap&&a.enable(10),O.normalMap&&a.enable(11),O.objectSpaceNormalMap&&a.enable(12),O.tangentSpaceNormalMap&&a.enable(13),O.clearcoat&&a.enable(14),O.clearcoatMap&&a.enable(15),O.clearcoatRoughnessMap&&a.enable(16),O.clearcoatNormalMap&&a.enable(17),O.displacementMap&&a.enable(18),O.specularMap&&a.enable(19),O.roughnessMap&&a.enable(20),O.metalnessMap&&a.enable(21),O.gradientMap&&a.enable(22),O.alphaMap&&a.enable(23),O.alphaTest&&a.enable(24),O.vertexColors&&a.enable(25),O.vertexAlphas&&a.enable(26),O.vertexUvs&&a.enable(27),O.vertexTangents&&a.enable(28),O.uvsVertexOnly&&a.enable(29),O.fog&&a.enable(30),D.push(a.mask),a.disableAll(),O.useFog&&a.enable(0),O.flatShading&&a.enable(1),O.logarithmicDepthBuffer&&a.enable(2),O.skinning&&a.enable(3),O.morphTargets&&a.enable(4),O.morphNormals&&a.enable(5),O.morphColors&&a.enable(6),O.premultipliedAlpha&&a.enable(7),O.shadowMapEnabled&&a.enable(8),O.physicallyCorrectLights&&a.enable(9),O.doubleSided&&a.enable(10),O.flipSided&&a.enable(11),O.useDepthPacking&&a.enable(12),O.dithering&&a.enable(13),O.specularIntensityMap&&a.enable(14),O.specularColorMap&&a.enable(15),O.transmission&&a.enable(16),O.transmissionMap&&a.enable(17),O.thicknessMap&&a.enable(18),O.sheen&&a.enable(19),O.sheenColorMap&&a.enable(20),O.sheenRoughnessMap&&a.enable(21),O.decodeVideoTexture&&a.enable(22),O.opaque&&a.enable(23),D.push(a.mask)}function C(D){const O=b[D.type];let k;if(O){const B=z2[O];k=ai.clone(B.uniforms)}else k=D.uniforms;return k}function P(D,O){let k;for(let B=0,j=f.length;B<j;B++){const Y=f[B];if(Y.cacheKey===O){k=Y,++k.usedTimes;break}}return k===void 0&&(k=new yy(i,O,D,o),f.push(k)),k}function R(D){if(--D.usedTimes===0){const O=f.indexOf(D);f[O]=f[f.length-1],f.pop(),D.destroy()}}function I(D){h.remove(D)}function q(){h.dispose()}return{getParameters:M,getProgramCacheKey:w,getUniforms:C,acquireProgram:P,releaseProgram:R,releaseShaderCache:I,programs:f,dispose:q}}function wy(){let i=new WeakMap;function e(o){let s=i.get(o);return s===void 0&&(s={},i.set(o,s)),s}function t(o){i.delete(o)}function n(o,s,a){i.get(o)[s]=a}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function My(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function jo(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Qo(){const i=[];let e=0;const t=[],n=[],r=[];function o(){e=0,t.length=0,n.length=0,r.length=0}function s(m,y,v,b,M,w){let E=i[e];return E===void 0?(E={id:m.id,object:m,geometry:y,material:v,groupOrder:b,renderOrder:m.renderOrder,z:M,group:w},i[e]=E):(E.id=m.id,E.object=m,E.geometry=y,E.material=v,E.groupOrder=b,E.renderOrder=m.renderOrder,E.z=M,E.group=w),e++,E}function a(m,y,v,b,M,w){const E=s(m,y,v,b,M,w);v.transmission>0?n.push(E):v.transparent===!0?r.push(E):t.push(E)}function h(m,y,v,b,M,w){const E=s(m,y,v,b,M,w);v.transmission>0?n.unshift(E):v.transparent===!0?r.unshift(E):t.unshift(E)}function f(m,y){t.length>1&&t.sort(m||My),n.length>1&&n.sort(y||jo),r.length>1&&r.sort(y||jo)}function d(){for(let m=e,y=i.length;m<y;m++){const v=i[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:r,init:o,push:a,unshift:h,finish:d,sort:f}}function Sy(){let i=new WeakMap;function e(n,r){let o;return i.has(n)===!1?(o=new Qo,i.set(n,[o])):r>=i.get(n).length?(o=new Qo,i.get(n).push(o)):o=i.get(n)[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function Ey(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new $,color:new l1};break;case"SpotLight":t={position:new $,direction:new $,color:new l1,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new $,color:new l1,distance:0,decay:0};break;case"HemisphereLight":t={direction:new $,skyColor:new l1,groundColor:new l1};break;case"RectAreaLight":t={color:new l1,position:new $,halfWidth:new $,halfHeight:new $};break}return i[e.id]=t,t}}}function Ty(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D0};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D0};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new D0,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let Cy=0;function Py(i,e){return(e.castShadow?1:0)-(i.castShadow?1:0)}function Ry(i,e){const t=new Ey,n=Ty(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)r.probe.push(new $);const o=new $,s=new m1,a=new m1;function h(d,m){let y=0,v=0,b=0;for(let O=0;O<9;O++)r.probe[O].set(0,0,0);let M=0,w=0,E=0,T=0,C=0,P=0,R=0,I=0;d.sort(Py);const q=m!==!0?Math.PI:1;for(let O=0,k=d.length;O<k;O++){const B=d[O],j=B.color,Y=B.intensity,z=B.distance,G=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)y+=j.r*Y*q,v+=j.g*Y*q,b+=j.b*Y*q;else if(B.isLightProbe)for(let X=0;X<9;X++)r.probe[X].addScaledVector(B.sh.coefficients[X],Y);else if(B.isDirectionalLight){const X=t.get(B);if(X.color.copy(B.color).multiplyScalar(B.intensity*q),B.castShadow){const o0=B.shadow,a0=n.get(B);a0.shadowBias=o0.bias,a0.shadowNormalBias=o0.normalBias,a0.shadowRadius=o0.radius,a0.shadowMapSize=o0.mapSize,r.directionalShadow[M]=a0,r.directionalShadowMap[M]=G,r.directionalShadowMatrix[M]=B.shadow.matrix,P++}r.directional[M]=X,M++}else if(B.isSpotLight){const X=t.get(B);if(X.position.setFromMatrixPosition(B.matrixWorld),X.color.copy(j).multiplyScalar(Y*q),X.distance=z,X.coneCos=Math.cos(B.angle),X.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),X.decay=B.decay,B.castShadow){const o0=B.shadow,a0=n.get(B);a0.shadowBias=o0.bias,a0.shadowNormalBias=o0.normalBias,a0.shadowRadius=o0.radius,a0.shadowMapSize=o0.mapSize,r.spotShadow[E]=a0,r.spotShadowMap[E]=G,r.spotShadowMatrix[E]=B.shadow.matrix,I++}r.spot[E]=X,E++}else if(B.isRectAreaLight){const X=t.get(B);X.color.copy(j).multiplyScalar(Y),X.halfWidth.set(B.width*.5,0,0),X.halfHeight.set(0,B.height*.5,0),r.rectArea[T]=X,T++}else if(B.isPointLight){const X=t.get(B);if(X.color.copy(B.color).multiplyScalar(B.intensity*q),X.distance=B.distance,X.decay=B.decay,B.castShadow){const o0=B.shadow,a0=n.get(B);a0.shadowBias=o0.bias,a0.shadowNormalBias=o0.normalBias,a0.shadowRadius=o0.radius,a0.shadowMapSize=o0.mapSize,a0.shadowCameraNear=o0.camera.near,a0.shadowCameraFar=o0.camera.far,r.pointShadow[w]=a0,r.pointShadowMap[w]=G,r.pointShadowMatrix[w]=B.shadow.matrix,R++}r.point[w]=X,w++}else if(B.isHemisphereLight){const X=t.get(B);X.skyColor.copy(B.color).multiplyScalar(Y*q),X.groundColor.copy(B.groundColor).multiplyScalar(Y*q),r.hemi[C]=X,C++}}T>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=X0.LTC_FLOAT_1,r.rectAreaLTC2=X0.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=X0.LTC_HALF_1,r.rectAreaLTC2=X0.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=y,r.ambient[1]=v,r.ambient[2]=b;const D=r.hash;(D.directionalLength!==M||D.pointLength!==w||D.spotLength!==E||D.rectAreaLength!==T||D.hemiLength!==C||D.numDirectionalShadows!==P||D.numPointShadows!==R||D.numSpotShadows!==I)&&(r.directional.length=M,r.spot.length=E,r.rectArea.length=T,r.point.length=w,r.hemi.length=C,r.directionalShadow.length=P,r.directionalShadowMap.length=P,r.pointShadow.length=R,r.pointShadowMap.length=R,r.spotShadow.length=I,r.spotShadowMap.length=I,r.directionalShadowMatrix.length=P,r.pointShadowMatrix.length=R,r.spotShadowMatrix.length=I,D.directionalLength=M,D.pointLength=w,D.spotLength=E,D.rectAreaLength=T,D.hemiLength=C,D.numDirectionalShadows=P,D.numPointShadows=R,D.numSpotShadows=I,r.version=Cy++)}function f(d,m){let y=0,v=0,b=0,M=0,w=0;const E=m.matrixWorldInverse;for(let T=0,C=d.length;T<C;T++){const P=d[T];if(P.isDirectionalLight){const R=r.directional[y];R.direction.setFromMatrixPosition(P.matrixWorld),o.setFromMatrixPosition(P.target.matrixWorld),R.direction.sub(o),R.direction.transformDirection(E),y++}else if(P.isSpotLight){const R=r.spot[b];R.position.setFromMatrixPosition(P.matrixWorld),R.position.applyMatrix4(E),R.direction.setFromMatrixPosition(P.matrixWorld),o.setFromMatrixPosition(P.target.matrixWorld),R.direction.sub(o),R.direction.transformDirection(E),b++}else if(P.isRectAreaLight){const R=r.rectArea[M];R.position.setFromMatrixPosition(P.matrixWorld),R.position.applyMatrix4(E),a.identity(),s.copy(P.matrixWorld),s.premultiply(E),a.extractRotation(s),R.halfWidth.set(P.width*.5,0,0),R.halfHeight.set(0,P.height*.5,0),R.halfWidth.applyMatrix4(a),R.halfHeight.applyMatrix4(a),M++}else if(P.isPointLight){const R=r.point[v];R.position.setFromMatrixPosition(P.matrixWorld),R.position.applyMatrix4(E),v++}else if(P.isHemisphereLight){const R=r.hemi[w];R.direction.setFromMatrixPosition(P.matrixWorld),R.direction.transformDirection(E),w++}}}return{setup:h,setupView:f,state:r}}function $o(i,e){const t=new Ry(i,e),n=[],r=[];function o(){n.length=0,r.length=0}function s(m){n.push(m)}function a(m){r.push(m)}function h(m){t.setup(n,m)}function f(m){t.setupView(n,m)}return{init:o,state:{lightsArray:n,shadowsArray:r,lights:t},setupLights:h,setupLightsView:f,pushLight:s,pushShadow:a}}function Ly(i,e){let t=new WeakMap;function n(o,s=0){let a;return t.has(o)===!1?(a=new $o(i,e),t.set(o,[a])):s>=t.get(o).length?(a=new $o(i,e),t.get(o).push(a)):a=t.get(o)[s],a}function r(){t=new WeakMap}return{get:n,dispose:r}}class fi extends T9{constructor(e){super();this.type="MeshDepthMaterial",this.depthPacking=Oh,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}fi.prototype.isMeshDepthMaterial=!0;class hi extends T9{constructor(e){super();this.type="MeshDistanceMaterial",this.referencePosition=new $,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}hi.prototype.isMeshDistanceMaterial=!0;const Dy=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Iy=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Bl(i,e,t){let n=new pe;const r=new D0,o=new D0,s=new Y1,a=new fi({depthPacking:qh}),h=new hi,f={},d=t.maxTextureSize,m={0:y2,1:C7,2:E4},y=new F9({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new D0},radius:{value:4}},vertexShader:Dy,fragmentShader:Iy}),v=y.clone();v.defines.HORIZONTAL_PASS=1;const b=new C1;b.setAttribute("position",new t9(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new K1(b,y),w=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=pl,this.render=function(P,R,I){if(w.enabled===!1||w.autoUpdate===!1&&w.needsUpdate===!1||P.length===0)return;const q=i.getRenderTarget(),D=i.getActiveCubeFace(),O=i.getActiveMipmapLevel(),k=i.state;k.setBlending(X4),k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);for(let B=0,j=P.length;B<j;B++){const Y=P[B],z=Y.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;r.copy(z.mapSize);const G=z.getFrameExtents();if(r.multiply(G),o.copy(z.mapSize),(r.x>d||r.y>d)&&(r.x>d&&(o.x=Math.floor(d/G.x),r.x=o.x*G.x,z.mapSize.x=o.x),r.y>d&&(o.y=Math.floor(d/G.y),r.y=o.y*G.y,z.mapSize.y=o.y)),z.map===null&&!z.isPointLightShadow&&this.type===m7&&(z.map=new u2(r.x,r.y),z.map.texture.name=Y.name+".shadowMap",z.mapPass=new u2(r.x,r.y),z.camera.updateProjectionMatrix()),z.map===null){const o0={minFilter:R9,magFilter:R9,format:V2};z.map=new u2(r.x,r.y,o0),z.map.texture.name=Y.name+".shadowMap",z.camera.updateProjectionMatrix()}i.setRenderTarget(z.map),i.clear();const X=z.getViewportCount();for(let o0=0;o0<X;o0++){const a0=z.getViewport(o0);s.set(o.x*a0.x,o.y*a0.y,o.x*a0.z,o.y*a0.w),k.viewport(s),z.updateMatrices(Y,o0),n=z.getFrustum(),C(R,I,z.camera,Y,this.type)}!z.isPointLightShadow&&this.type===m7&&E(z,I),z.needsUpdate=!1}w.needsUpdate=!1,i.setRenderTarget(q,D,O)};function E(P,R){const I=e.update(M);y.defines.VSM_SAMPLES!==P.blurSamples&&(y.defines.VSM_SAMPLES=P.blurSamples,v.defines.VSM_SAMPLES=P.blurSamples,y.needsUpdate=!0,v.needsUpdate=!0),y.uniforms.shadow_pass.value=P.map.texture,y.uniforms.resolution.value=P.mapSize,y.uniforms.radius.value=P.radius,i.setRenderTarget(P.mapPass),i.clear(),i.renderBufferDirect(R,null,I,y,M,null),v.uniforms.shadow_pass.value=P.mapPass.texture,v.uniforms.resolution.value=P.mapSize,v.uniforms.radius.value=P.radius,i.setRenderTarget(P.map),i.clear(),i.renderBufferDirect(R,null,I,v,M,null)}function T(P,R,I,q,D,O){let k=null;const B=I.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(B!==void 0?k=B:k=I.isPointLight===!0?h:a,i.localClippingEnabled&&R.clipShadows===!0&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0){const j=k.uuid,Y=R.uuid;let z=f[j];z===void 0&&(z={},f[j]=z);let G=z[Y];G===void 0&&(G=k.clone(),z[Y]=G),k=G}return k.visible=R.visible,k.wireframe=R.wireframe,O===m7?k.side=R.shadowSide!==null?R.shadowSide:R.side:k.side=R.shadowSide!==null?R.shadowSide:m[R.side],k.alphaMap=R.alphaMap,k.alphaTest=R.alphaTest,k.clipShadows=R.clipShadows,k.clippingPlanes=R.clippingPlanes,k.clipIntersection=R.clipIntersection,k.displacementMap=R.displacementMap,k.displacementScale=R.displacementScale,k.displacementBias=R.displacementBias,k.wireframeLinewidth=R.wireframeLinewidth,k.linewidth=R.linewidth,I.isPointLight===!0&&k.isMeshDistanceMaterial===!0&&(k.referencePosition.setFromMatrixPosition(I.matrixWorld),k.nearDistance=q,k.farDistance=D),k}function C(P,R,I,q,D){if(P.visible===!1)return;if(P.layers.test(R.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&D===m7)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,P.matrixWorld);const B=e.update(P),j=P.material;if(Array.isArray(j)){const Y=B.groups;for(let z=0,G=Y.length;z<G;z++){const X=Y[z],o0=j[X.materialIndex];if(o0&&o0.visible){const a0=T(P,o0,q,I.near,I.far,D);i.renderBufferDirect(I,null,B,a0,P,X)}}}else if(j.visible){const Y=T(P,j,q,I.near,I.far,D);i.renderBufferDirect(I,null,B,Y,P,null)}}const k=P.children;for(let B=0,j=k.length;B<j;B++)C(k[B],R,I,q,D)}}function By(i,e,t){const n=t.isWebGL2;function r(){let A0=!1;const W0=new Y1;let V0=null;const g1=new Y1(0,0,0,0);return{setMask:function(J0){V0!==J0&&!A0&&(i.colorMask(J0,J0,J0,J0),V0=J0)},setLocked:function(J0){A0=J0},setClear:function(J0,h1,j0,y1,V1){V1===!0&&(J0*=y1,h1*=y1,j0*=y1),W0.set(J0,h1,j0,y1),g1.equals(W0)===!1&&(i.clearColor(J0,h1,j0,y1),g1.copy(W0))},reset:function(){A0=!1,V0=null,g1.set(-1,0,0,0)}}}function o(){let A0=!1,W0=null,V0=null,g1=null;return{setTest:function(J0){J0?T0(2929):d0(2929)},setMask:function(J0){W0!==J0&&!A0&&(i.depthMask(J0),W0=J0)},setFunc:function(J0){if(V0!==J0){if(J0)switch(J0){case th:i.depthFunc(512);break;case nh:i.depthFunc(519);break;case ih:i.depthFunc(513);break;case Xt:i.depthFunc(515);break;case rh:i.depthFunc(514);break;case oh:i.depthFunc(518);break;case sh:i.depthFunc(516);break;case ah:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);V0=J0}},setLocked:function(J0){A0=J0},setClear:function(J0){g1!==J0&&(i.clearDepth(J0),g1=J0)},reset:function(){A0=!1,W0=null,V0=null,g1=null}}}function s(){let A0=!1,W0=null,V0=null,g1=null,J0=null,h1=null,j0=null,y1=null,V1=null;return{setTest:function(B1){A0||(B1?T0(2960):d0(2960))},setMask:function(B1){W0!==B1&&!A0&&(i.stencilMask(B1),W0=B1)},setFunc:function(B1,F0,w2){(V0!==B1||g1!==F0||J0!==w2)&&(i.stencilFunc(B1,F0,w2),V0=B1,g1=F0,J0=w2)},setOp:function(B1,F0,w2){(h1!==B1||j0!==F0||y1!==w2)&&(i.stencilOp(B1,F0,w2),h1=B1,j0=F0,y1=w2)},setLocked:function(B1){A0=B1},setClear:function(B1){V1!==B1&&(i.clearStencil(B1),V1=B1)},reset:function(){A0=!1,W0=null,V0=null,g1=null,J0=null,h1=null,j0=null,y1=null,V1=null}}}const a=new r,h=new o,f=new s;let d={},m={},y=new WeakMap,v=[],b=null,M=!1,w=null,E=null,T=null,C=null,P=null,R=null,I=null,q=!1,D=null,O=null,k=null,B=null,j=null;const Y=i.getParameter(35661);let z=!1,G=0;const X=i.getParameter(7938);X.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(X)[1]),z=G>=1):X.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),z=G>=2);let o0=null,a0={};const u0=i.getParameter(3088),l0=i.getParameter(2978),b0=new Y1().fromArray(u0),i0=new Y1().fromArray(l0);function g0(A0,W0,V0){const g1=new Uint8Array(4),J0=i.createTexture();i.bindTexture(A0,J0),i.texParameteri(A0,10241,9728),i.texParameteri(A0,10240,9728);for(let h1=0;h1<V0;h1++)i.texImage2D(W0+h1,0,6408,1,1,0,6408,5121,g1);return J0}const P0={};P0[3553]=g0(3553,3553,1),P0[34067]=g0(34067,34069,6),a.setClear(0,0,0,1),h.setClear(1),f.setClear(0),T0(2929),h.setFunc(Xt),Z(!1),H(Fr),T0(2884),w0(X4);function T0(A0){d[A0]!==!0&&(i.enable(A0),d[A0]=!0)}function d0(A0){d[A0]!==!1&&(i.disable(A0),d[A0]=!1)}function p0(A0,W0){return m[A0]!==W0?(i.bindFramebuffer(A0,W0),m[A0]=W0,n&&(A0===36009&&(m[36160]=W0),A0===36160&&(m[36009]=W0)),!0):!1}function E0(A0,W0){let V0=v,g1=!1;if(A0)if(V0=y.get(W0),V0===void 0&&(V0=[],y.set(W0,V0)),A0.isWebGLMultipleRenderTargets){const J0=A0.texture;if(V0.length!==J0.length||V0[0]!==36064){for(let h1=0,j0=J0.length;h1<j0;h1++)V0[h1]=36064+h1;V0.length=J0.length,g1=!0}}else V0[0]!==36064&&(V0[0]=36064,g1=!0);else V0[0]!==1029&&(V0[0]=1029,g1=!0);g1&&(t.isWebGL2?i.drawBuffers(V0):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(V0))}function I0(A0){return b!==A0?(i.useProgram(A0),b=A0,!0):!1}const _0={[p6]:32774,[Vf]:32778,[Wf]:32779};if(n)_0[zr]=32775,_0[Gr]=32776;else{const A0=e.get("EXT_blend_minmax");A0!==null&&(_0[zr]=A0.MIN_EXT,_0[Gr]=A0.MAX_EXT)}const H0={[jf]:0,[Qf]:1,[$f]:768,[gl]:770,[eh]:776,[Jf]:774,[Xf]:772,[Yf]:769,[yl]:771,[Kf]:775,[Zf]:773};function w0(A0,W0,V0,g1,J0,h1,j0,y1){if(A0===X4){M===!0&&(d0(3042),M=!1);return}if(M===!1&&(T0(3042),M=!0),A0!==Hf){if(A0!==w||y1!==q){if((E!==p6||P!==p6)&&(i.blendEquation(32774),E=p6,P=p6),y1)switch(A0){case Z4:i.blendFuncSeparate(1,771,1,771);break;case kr:i.blendFunc(1,1);break;case Nr:i.blendFuncSeparate(0,769,0,1);break;case Ur:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",A0);break}else switch(A0){case Z4:i.blendFuncSeparate(770,771,1,771);break;case kr:i.blendFunc(770,1);break;case Nr:i.blendFuncSeparate(0,769,0,1);break;case Ur:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",A0);break}T=null,C=null,R=null,I=null,w=A0,q=y1}return}J0=J0||W0,h1=h1||V0,j0=j0||g1,(W0!==E||J0!==P)&&(i.blendEquationSeparate(_0[W0],_0[J0]),E=W0,P=J0),(V0!==T||g1!==C||h1!==R||j0!==I)&&(i.blendFuncSeparate(H0[V0],H0[g1],H0[h1],H0[j0]),T=V0,C=g1,R=h1,I=j0),w=A0,q=null}function N(A0,W0){A0.side===E4?d0(2884):T0(2884);let V0=A0.side===y2;W0&&(V0=!V0),Z(V0),A0.blending===Z4&&A0.transparent===!1?w0(X4):w0(A0.blending,A0.blendEquation,A0.blendSrc,A0.blendDst,A0.blendEquationAlpha,A0.blendSrcAlpha,A0.blendDstAlpha,A0.premultipliedAlpha),h.setFunc(A0.depthFunc),h.setTest(A0.depthTest),h.setMask(A0.depthWrite),a.setMask(A0.colorWrite);const g1=A0.stencilWrite;f.setTest(g1),g1&&(f.setMask(A0.stencilWriteMask),f.setFunc(A0.stencilFunc,A0.stencilRef,A0.stencilFuncMask),f.setOp(A0.stencilFail,A0.stencilZFail,A0.stencilZPass)),L0(A0.polygonOffset,A0.polygonOffsetFactor,A0.polygonOffsetUnits),A0.alphaToCoverage===!0?T0(32926):d0(32926)}function Z(A0){D!==A0&&(A0?i.frontFace(2304):i.frontFace(2305),D=A0)}function H(A0){A0!==Uf?(T0(2884),A0!==O&&(A0===Fr?i.cullFace(1029):A0===zf?i.cullFace(1028):i.cullFace(1032))):d0(2884),O=A0}function v0(A0){A0!==k&&(z&&i.lineWidth(A0),k=A0)}function L0(A0,W0,V0){A0?(T0(32823),(B!==W0||j!==V0)&&(i.polygonOffset(W0,V0),B=W0,j=V0)):d0(32823)}function m0(A0){A0?T0(3089):d0(3089)}function U0(A0){A0===void 0&&(A0=33984+Y-1),o0!==A0&&(i.activeTexture(A0),o0=A0)}function c1(A0,W0){o0===null&&U0();let V0=a0[o0];V0===void 0&&(V0={type:void 0,texture:void 0},a0[o0]=V0),(V0.type!==A0||V0.texture!==W0)&&(i.bindTexture(A0,W0||P0[A0]),V0.type=A0,V0.texture=W0)}function s1(){const A0=a0[o0];A0!==void 0&&A0.type!==void 0&&(i.bindTexture(A0.type,null),A0.type=void 0,A0.texture=void 0)}function e0(){try{i.compressedTexImage2D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function V(){try{i.texSubImage2D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function M0(){try{i.texSubImage3D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function B0(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function Y0(){try{i.texStorage2D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function r1(){try{i.texStorage3D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function d1(){try{i.texImage2D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function J(){try{i.texImage3D.apply(i,arguments)}catch(A0){console.error("THREE.WebGLState:",A0)}}function k0(A0){b0.equals(A0)===!1&&(i.scissor(A0.x,A0.y,A0.z,A0.w),b0.copy(A0))}function f1(A0){i0.equals(A0)===!1&&(i.viewport(A0.x,A0.y,A0.z,A0.w),i0.copy(A0))}function $0(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},o0=null,a0={},m={},y=new WeakMap,v=[],b=null,M=!1,w=null,E=null,T=null,C=null,P=null,R=null,I=null,q=!1,D=null,O=null,k=null,B=null,j=null,b0.set(0,0,i.canvas.width,i.canvas.height),i0.set(0,0,i.canvas.width,i.canvas.height),a.reset(),h.reset(),f.reset()}return{buffers:{color:a,depth:h,stencil:f},enable:T0,disable:d0,bindFramebuffer:p0,drawBuffers:E0,useProgram:I0,setBlending:w0,setMaterial:N,setFlipSided:Z,setCullFace:H,setLineWidth:v0,setPolygonOffset:L0,setScissorTest:m0,activeTexture:U0,bindTexture:c1,unbindTexture:s1,compressedTexImage2D:e0,texImage2D:d1,texImage3D:J,texStorage2D:Y0,texStorage3D:r1,texSubImage2D:V,texSubImage3D:M0,compressedTexSubImage2D:B0,scissor:k0,viewport:f1,reset:$0}}function Oy(i,e,t,n,r,o,s){const a=r.isWebGL2,h=r.maxTextures,f=r.maxCubemapSize,d=r.maxTextureSize,m=r.maxSamples,y=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,v=/OculusBrowser/g.test(navigator.userAgent),b=new WeakMap;let M;const w=new WeakMap;let E=!1;try{E=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function T(e0,V){return E?new OffscreenCanvas(e0,V):I7("canvas")}function C(e0,V,M0,B0){let Y0=1;if((e0.width>B0||e0.height>B0)&&(Y0=B0/Math.max(e0.width,e0.height)),Y0<1||V===!0)if(typeof HTMLImageElement!="undefined"&&e0 instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e0 instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e0 instanceof ImageBitmap){const r1=V?P3:Math.floor,d1=r1(Y0*e0.width),J=r1(Y0*e0.height);M===void 0&&(M=T(d1,J));const k0=M0?T(d1,J):M;return k0.width=d1,k0.height=J,k0.getContext("2d").drawImage(e0,0,0,d1,J),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e0.width+"x"+e0.height+") to ("+d1+"x"+J+")."),k0}else return"data"in e0&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e0.width+"x"+e0.height+")."),e0;return e0}function P(e0){return nn(e0.width)&&nn(e0.height)}function R(e0){return a?!1:e0.wrapS!==G2||e0.wrapT!==G2||e0.minFilter!==R9&&e0.minFilter!==s2}function I(e0,V){return e0.generateMipmaps&&V&&e0.minFilter!==R9&&e0.minFilter!==s2}function q(e0){i.generateMipmap(e0)}function D(e0,V,M0,B0,Y0=!1){if(a===!1)return V;if(e0!==null){if(i[e0]!==void 0)return i[e0];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e0+"'")}let r1=V;return V===6403&&(M0===5126&&(r1=33326),M0===5131&&(r1=33325),M0===5121&&(r1=33321)),V===33319&&(M0===5126&&(r1=33328),M0===5131&&(r1=33327),M0===5121&&(r1=33323)),V===6408&&(M0===5126&&(r1=34836),M0===5131&&(r1=34842),M0===5121&&(r1=B0===a9&&Y0===!1?35907:32856),M0===32819&&(r1=32854),M0===32820&&(r1=32855)),(r1===33325||r1===33326||r1===33327||r1===33328||r1===34842||r1===34836)&&e.get("EXT_color_buffer_float"),r1}function O(e0,V,M0){return I(e0,M0)===!0||e0.isFramebufferTexture&&e0.minFilter!==R9&&e0.minFilter!==s2?Math.log2(Math.max(V.width,V.height))+1:e0.mipmaps!==void 0&&e0.mipmaps.length>0?e0.mipmaps.length:e0.isCompressedTexture&&Array.isArray(e0.image)?V.mipmaps.length:1}function k(e0){return e0===R9||e0===Hr||e0===Vr?9728:9729}function B(e0){const V=e0.target;V.removeEventListener("dispose",B),Y(V),V.isVideoTexture&&b.delete(V)}function j(e0){const V=e0.target;V.removeEventListener("dispose",j),G(V)}function Y(e0){const V=n.get(e0);if(V.__webglInit===void 0)return;const M0=e0.source,B0=w.get(M0);if(B0){const Y0=B0[V.__cacheKey];Y0.usedTimes--,Y0.usedTimes===0&&z(e0),Object.keys(B0).length===0&&w.delete(M0)}n.remove(e0)}function z(e0){const V=n.get(e0);i.deleteTexture(V.__webglTexture);const M0=e0.source,B0=w.get(M0);delete B0[V.__cacheKey],s.memory.textures--}function G(e0){const V=e0.texture,M0=n.get(e0),B0=n.get(V);if(B0.__webglTexture!==void 0&&(i.deleteTexture(B0.__webglTexture),s.memory.textures--),e0.depthTexture&&e0.depthTexture.dispose(),e0.isWebGLCubeRenderTarget)for(let Y0=0;Y0<6;Y0++)i.deleteFramebuffer(M0.__webglFramebuffer[Y0]),M0.__webglDepthbuffer&&i.deleteRenderbuffer(M0.__webglDepthbuffer[Y0]);else i.deleteFramebuffer(M0.__webglFramebuffer),M0.__webglDepthbuffer&&i.deleteRenderbuffer(M0.__webglDepthbuffer),M0.__webglMultisampledFramebuffer&&i.deleteFramebuffer(M0.__webglMultisampledFramebuffer),M0.__webglColorRenderbuffer&&i.deleteRenderbuffer(M0.__webglColorRenderbuffer),M0.__webglDepthRenderbuffer&&i.deleteRenderbuffer(M0.__webglDepthRenderbuffer);if(e0.isWebGLMultipleRenderTargets)for(let Y0=0,r1=V.length;Y0<r1;Y0++){const d1=n.get(V[Y0]);d1.__webglTexture&&(i.deleteTexture(d1.__webglTexture),s.memory.textures--),n.remove(V[Y0])}n.remove(V),n.remove(e0)}let X=0;function o0(){X=0}function a0(){const e0=X;return e0>=h&&console.warn("THREE.WebGLTextures: Trying to use "+e0+" texture units while this GPU supports only "+h),X+=1,e0}function u0(e0){const V=[];return V.push(e0.wrapS),V.push(e0.wrapT),V.push(e0.magFilter),V.push(e0.minFilter),V.push(e0.anisotropy),V.push(e0.internalFormat),V.push(e0.format),V.push(e0.type),V.push(e0.generateMipmaps),V.push(e0.premultiplyAlpha),V.push(e0.flipY),V.push(e0.unpackAlignment),V.push(e0.encoding),V.join()}function l0(e0,V){const M0=n.get(e0);if(e0.isVideoTexture&&c1(e0),e0.isRenderTargetTexture===!1&&e0.version>0&&M0.__version!==e0.version){const B0=e0.image;if(B0===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(B0.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{E0(M0,e0,V);return}}t.activeTexture(33984+V),t.bindTexture(3553,M0.__webglTexture)}function b0(e0,V){const M0=n.get(e0);if(e0.version>0&&M0.__version!==e0.version){E0(M0,e0,V);return}t.activeTexture(33984+V),t.bindTexture(35866,M0.__webglTexture)}function i0(e0,V){const M0=n.get(e0);if(e0.version>0&&M0.__version!==e0.version){E0(M0,e0,V);return}t.activeTexture(33984+V),t.bindTexture(32879,M0.__webglTexture)}function g0(e0,V){const M0=n.get(e0);if(e0.version>0&&M0.__version!==e0.version){I0(M0,e0,V);return}t.activeTexture(33984+V),t.bindTexture(34067,M0.__webglTexture)}const P0={[Kt]:10497,[G2]:33071,[en]:33648},T0={[R9]:9728,[Hr]:9984,[Vr]:9986,[s2]:9729,[ph]:9985,[fe]:9987};function d0(e0,V,M0){if(M0?(i.texParameteri(e0,10242,P0[V.wrapS]),i.texParameteri(e0,10243,P0[V.wrapT]),(e0===32879||e0===35866)&&i.texParameteri(e0,32882,P0[V.wrapR]),i.texParameteri(e0,10240,T0[V.magFilter]),i.texParameteri(e0,10241,T0[V.minFilter])):(i.texParameteri(e0,10242,33071),i.texParameteri(e0,10243,33071),(e0===32879||e0===35866)&&i.texParameteri(e0,32882,33071),(V.wrapS!==G2||V.wrapT!==G2)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(e0,10240,k(V.magFilter)),i.texParameteri(e0,10241,k(V.minFilter)),V.minFilter!==R9&&V.minFilter!==s2&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const B0=e.get("EXT_texture_filter_anisotropic");if(V.type===T5&&e.has("OES_texture_float_linear")===!1||a===!1&&V.type===R7&&e.has("OES_texture_half_float_linear")===!1)return;(V.anisotropy>1||n.get(V).__currentAnisotropy)&&(i.texParameterf(e0,B0.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(V.anisotropy,r.getMaxAnisotropy())),n.get(V).__currentAnisotropy=V.anisotropy)}}function p0(e0,V){let M0=!1;e0.__webglInit===void 0&&(e0.__webglInit=!0,V.addEventListener("dispose",B));const B0=V.source;let Y0=w.get(B0);Y0===void 0&&(Y0={},w.set(B0,Y0));const r1=u0(V);if(r1!==e0.__cacheKey){Y0[r1]===void 0&&(Y0[r1]={texture:i.createTexture(),usedTimes:0},s.memory.textures++,M0=!0),Y0[r1].usedTimes++;const d1=Y0[e0.__cacheKey];d1!==void 0&&(Y0[e0.__cacheKey].usedTimes--,d1.usedTimes===0&&z(V)),e0.__cacheKey=r1,e0.__webglTexture=Y0[r1].texture}return M0}function E0(e0,V,M0){let B0=3553;V.isDataArrayTexture&&(B0=35866),V.isData3DTexture&&(B0=32879);const Y0=p0(e0,V),r1=V.source;if(t.activeTexture(33984+M0),t.bindTexture(B0,e0.__webglTexture),r1.version!==r1.__currentVersion||Y0===!0){i.pixelStorei(37440,V.flipY),i.pixelStorei(37441,V.premultiplyAlpha),i.pixelStorei(3317,V.unpackAlignment),i.pixelStorei(37443,0);const d1=R(V)&&P(V.image)===!1;let J=C(V.image,d1,!1,d);J=s1(V,J);const k0=P(J)||a,f1=o.convert(V.format,V.encoding);let $0=o.convert(V.type),A0=D(V.internalFormat,f1,$0,V.encoding,V.isVideoTexture);d0(B0,V,k0);let W0;const V0=V.mipmaps,g1=a&&V.isVideoTexture!==!0,J0=e0.__version===void 0||Y0===!0,h1=O(V,J,k0);if(V.isDepthTexture)A0=6402,a?V.type===T5?A0=36012:V.type===p3?A0=33190:V.type===C6?A0=35056:A0=33189:V.type===T5&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),V.format===L5&&A0===6402&&V.type!==P7&&V.type!==p3&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),V.type=P7,$0=o.convert(V.type)),V.format===I6&&A0===6402&&(A0=34041,V.type!==C6&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),V.type=C6,$0=o.convert(V.type))),J0&&(g1?t.texStorage2D(3553,1,A0,J.width,J.height):t.texImage2D(3553,0,A0,J.width,J.height,0,f1,$0,null));else if(V.isDataTexture)if(V0.length>0&&k0){g1&&J0&&t.texStorage2D(3553,h1,A0,V0[0].width,V0[0].height);for(let j0=0,y1=V0.length;j0<y1;j0++)W0=V0[j0],g1?t.texSubImage2D(3553,j0,0,0,W0.width,W0.height,f1,$0,W0.data):t.texImage2D(3553,j0,A0,W0.width,W0.height,0,f1,$0,W0.data);V.generateMipmaps=!1}else g1?(J0&&t.texStorage2D(3553,h1,A0,J.width,J.height),t.texSubImage2D(3553,0,0,0,J.width,J.height,f1,$0,J.data)):t.texImage2D(3553,0,A0,J.width,J.height,0,f1,$0,J.data);else if(V.isCompressedTexture){g1&&J0&&t.texStorage2D(3553,h1,A0,V0[0].width,V0[0].height);for(let j0=0,y1=V0.length;j0<y1;j0++)W0=V0[j0],V.format!==V2?f1!==null?g1?t.compressedTexSubImage2D(3553,j0,0,0,W0.width,W0.height,f1,W0.data):t.compressedTexImage2D(3553,j0,A0,W0.width,W0.height,0,W0.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):g1?t.texSubImage2D(3553,j0,0,0,W0.width,W0.height,f1,$0,W0.data):t.texImage2D(3553,j0,A0,W0.width,W0.height,0,f1,$0,W0.data)}else if(V.isDataArrayTexture)g1?(J0&&t.texStorage3D(35866,h1,A0,J.width,J.height,J.depth),t.texSubImage3D(35866,0,0,0,0,J.width,J.height,J.depth,f1,$0,J.data)):t.texImage3D(35866,0,A0,J.width,J.height,J.depth,0,f1,$0,J.data);else if(V.isData3DTexture)g1?(J0&&t.texStorage3D(32879,h1,A0,J.width,J.height,J.depth),t.texSubImage3D(32879,0,0,0,0,J.width,J.height,J.depth,f1,$0,J.data)):t.texImage3D(32879,0,A0,J.width,J.height,J.depth,0,f1,$0,J.data);else if(V.isFramebufferTexture){if(J0)if(g1)t.texStorage2D(3553,h1,A0,J.width,J.height);else{let j0=J.width,y1=J.height;for(let V1=0;V1<h1;V1++)t.texImage2D(3553,V1,A0,j0,y1,0,f1,$0,null),j0>>=1,y1>>=1}}else if(V0.length>0&&k0){g1&&J0&&t.texStorage2D(3553,h1,A0,V0[0].width,V0[0].height);for(let j0=0,y1=V0.length;j0<y1;j0++)W0=V0[j0],g1?t.texSubImage2D(3553,j0,0,0,f1,$0,W0):t.texImage2D(3553,j0,A0,f1,$0,W0);V.generateMipmaps=!1}else g1?(J0&&t.texStorage2D(3553,h1,A0,J.width,J.height),t.texSubImage2D(3553,0,0,0,f1,$0,J)):t.texImage2D(3553,0,A0,f1,$0,J);I(V,k0)&&q(B0),r1.__currentVersion=r1.version,V.onUpdate&&V.onUpdate(V)}e0.__version=V.version}function I0(e0,V,M0){if(V.image.length!==6)return;const B0=p0(e0,V),Y0=V.source;if(t.activeTexture(33984+M0),t.bindTexture(34067,e0.__webglTexture),Y0.version!==Y0.__currentVersion||B0===!0){i.pixelStorei(37440,V.flipY),i.pixelStorei(37441,V.premultiplyAlpha),i.pixelStorei(3317,V.unpackAlignment),i.pixelStorei(37443,0);const r1=V.isCompressedTexture||V.image[0].isCompressedTexture,d1=V.image[0]&&V.image[0].isDataTexture,J=[];for(let j0=0;j0<6;j0++)!r1&&!d1?J[j0]=C(V.image[j0],!1,!0,f):J[j0]=d1?V.image[j0].image:V.image[j0],J[j0]=s1(V,J[j0]);const k0=J[0],f1=P(k0)||a,$0=o.convert(V.format,V.encoding),A0=o.convert(V.type),W0=D(V.internalFormat,$0,A0,V.encoding),V0=a&&V.isVideoTexture!==!0,g1=e0.__version===void 0;let J0=O(V,k0,f1);d0(34067,V,f1);let h1;if(r1){V0&&g1&&t.texStorage2D(34067,J0,W0,k0.width,k0.height);for(let j0=0;j0<6;j0++){h1=J[j0].mipmaps;for(let y1=0;y1<h1.length;y1++){const V1=h1[y1];V.format!==V2?$0!==null?V0?t.compressedTexSubImage2D(34069+j0,y1,0,0,V1.width,V1.height,$0,V1.data):t.compressedTexImage2D(34069+j0,y1,W0,V1.width,V1.height,0,V1.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V0?t.texSubImage2D(34069+j0,y1,0,0,V1.width,V1.height,$0,A0,V1.data):t.texImage2D(34069+j0,y1,W0,V1.width,V1.height,0,$0,A0,V1.data)}}}else{h1=V.mipmaps,V0&&g1&&(h1.length>0&&J0++,t.texStorage2D(34067,J0,W0,J[0].width,J[0].height));for(let j0=0;j0<6;j0++)if(d1){V0?t.texSubImage2D(34069+j0,0,0,0,J[j0].width,J[j0].height,$0,A0,J[j0].data):t.texImage2D(34069+j0,0,W0,J[j0].width,J[j0].height,0,$0,A0,J[j0].data);for(let y1=0;y1<h1.length;y1++){const B1=h1[y1].image[j0].image;V0?t.texSubImage2D(34069+j0,y1+1,0,0,B1.width,B1.height,$0,A0,B1.data):t.texImage2D(34069+j0,y1+1,W0,B1.width,B1.height,0,$0,A0,B1.data)}}else{V0?t.texSubImage2D(34069+j0,0,0,0,$0,A0,J[j0]):t.texImage2D(34069+j0,0,W0,$0,A0,J[j0]);for(let y1=0;y1<h1.length;y1++){const V1=h1[y1];V0?t.texSubImage2D(34069+j0,y1+1,0,0,$0,A0,V1.image[j0]):t.texImage2D(34069+j0,y1+1,W0,$0,A0,V1.image[j0])}}}I(V,f1)&&q(34067),Y0.__currentVersion=Y0.version,V.onUpdate&&V.onUpdate(V)}e0.__version=V.version}function _0(e0,V,M0,B0,Y0){const r1=o.convert(M0.format,M0.encoding),d1=o.convert(M0.type),J=D(M0.internalFormat,r1,d1,M0.encoding);n.get(V).__hasExternalTextures||(Y0===32879||Y0===35866?t.texImage3D(Y0,0,J,V.width,V.height,V.depth,0,r1,d1,null):t.texImage2D(Y0,0,J,V.width,V.height,0,r1,d1,null)),t.bindFramebuffer(36160,e0),U0(V)?y.framebufferTexture2DMultisampleEXT(36160,B0,Y0,n.get(M0).__webglTexture,0,m0(V)):i.framebufferTexture2D(36160,B0,Y0,n.get(M0).__webglTexture,0),t.bindFramebuffer(36160,null)}function H0(e0,V,M0){if(i.bindRenderbuffer(36161,e0),V.depthBuffer&&!V.stencilBuffer){let B0=33189;if(M0||U0(V)){const Y0=V.depthTexture;Y0&&Y0.isDepthTexture&&(Y0.type===T5?B0=36012:Y0.type===p3&&(B0=33190));const r1=m0(V);U0(V)?y.renderbufferStorageMultisampleEXT(36161,r1,B0,V.width,V.height):i.renderbufferStorageMultisample(36161,r1,B0,V.width,V.height)}else i.renderbufferStorage(36161,B0,V.width,V.height);i.framebufferRenderbuffer(36160,36096,36161,e0)}else if(V.depthBuffer&&V.stencilBuffer){const B0=m0(V);M0&&U0(V)===!1?i.renderbufferStorageMultisample(36161,B0,35056,V.width,V.height):U0(V)?y.renderbufferStorageMultisampleEXT(36161,B0,35056,V.width,V.height):i.renderbufferStorage(36161,34041,V.width,V.height),i.framebufferRenderbuffer(36160,33306,36161,e0)}else{const B0=V.isWebGLMultipleRenderTargets===!0?V.texture[0]:V.texture,Y0=o.convert(B0.format,B0.encoding),r1=o.convert(B0.type),d1=D(B0.internalFormat,Y0,r1,B0.encoding),J=m0(V);M0&&U0(V)===!1?i.renderbufferStorageMultisample(36161,J,d1,V.width,V.height):U0(V)?y.renderbufferStorageMultisampleEXT(36161,J,d1,V.width,V.height):i.renderbufferStorage(36161,d1,V.width,V.height)}i.bindRenderbuffer(36161,null)}function w0(e0,V){if(V&&V.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e0),!(V.depthTexture&&V.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(V.depthTexture).__webglTexture||V.depthTexture.image.width!==V.width||V.depthTexture.image.height!==V.height)&&(V.depthTexture.image.width=V.width,V.depthTexture.image.height=V.height,V.depthTexture.needsUpdate=!0),l0(V.depthTexture,0);const B0=n.get(V.depthTexture).__webglTexture,Y0=m0(V);if(V.depthTexture.format===L5)U0(V)?y.framebufferTexture2DMultisampleEXT(36160,36096,3553,B0,0,Y0):i.framebufferTexture2D(36160,36096,3553,B0,0);else if(V.depthTexture.format===I6)U0(V)?y.framebufferTexture2DMultisampleEXT(36160,33306,3553,B0,0,Y0):i.framebufferTexture2D(36160,33306,3553,B0,0);else throw new Error("Unknown depthTexture format")}function N(e0){const V=n.get(e0),M0=e0.isWebGLCubeRenderTarget===!0;if(e0.depthTexture&&!V.__autoAllocateDepthBuffer){if(M0)throw new Error("target.depthTexture not supported in Cube render targets");w0(V.__webglFramebuffer,e0)}else if(M0){V.__webglDepthbuffer=[];for(let B0=0;B0<6;B0++)t.bindFramebuffer(36160,V.__webglFramebuffer[B0]),V.__webglDepthbuffer[B0]=i.createRenderbuffer(),H0(V.__webglDepthbuffer[B0],e0,!1)}else t.bindFramebuffer(36160,V.__webglFramebuffer),V.__webglDepthbuffer=i.createRenderbuffer(),H0(V.__webglDepthbuffer,e0,!1);t.bindFramebuffer(36160,null)}function Z(e0,V,M0){const B0=n.get(e0);V!==void 0&&_0(B0.__webglFramebuffer,e0,e0.texture,36064,3553),M0!==void 0&&N(e0)}function H(e0){const V=e0.texture,M0=n.get(e0),B0=n.get(V);e0.addEventListener("dispose",j),e0.isWebGLMultipleRenderTargets!==!0&&(B0.__webglTexture===void 0&&(B0.__webglTexture=i.createTexture()),B0.__version=V.version,s.memory.textures++);const Y0=e0.isWebGLCubeRenderTarget===!0,r1=e0.isWebGLMultipleRenderTargets===!0,d1=P(e0)||a;if(Y0){M0.__webglFramebuffer=[];for(let J=0;J<6;J++)M0.__webglFramebuffer[J]=i.createFramebuffer()}else if(M0.__webglFramebuffer=i.createFramebuffer(),r1)if(r.drawBuffers){const J=e0.texture;for(let k0=0,f1=J.length;k0<f1;k0++){const $0=n.get(J[k0]);$0.__webglTexture===void 0&&($0.__webglTexture=i.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&e0.samples>0&&U0(e0)===!1){M0.__webglMultisampledFramebuffer=i.createFramebuffer(),M0.__webglColorRenderbuffer=i.createRenderbuffer(),i.bindRenderbuffer(36161,M0.__webglColorRenderbuffer);const J=o.convert(V.format,V.encoding),k0=o.convert(V.type),f1=D(V.internalFormat,J,k0,V.encoding),$0=m0(e0);i.renderbufferStorageMultisample(36161,$0,f1,e0.width,e0.height),t.bindFramebuffer(36160,M0.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064,36161,M0.__webglColorRenderbuffer),i.bindRenderbuffer(36161,null),e0.depthBuffer&&(M0.__webglDepthRenderbuffer=i.createRenderbuffer(),H0(M0.__webglDepthRenderbuffer,e0,!0)),t.bindFramebuffer(36160,null)}if(Y0){t.bindTexture(34067,B0.__webglTexture),d0(34067,V,d1);for(let J=0;J<6;J++)_0(M0.__webglFramebuffer[J],e0,V,36064,34069+J);I(V,d1)&&q(34067),t.unbindTexture()}else if(r1){const J=e0.texture;for(let k0=0,f1=J.length;k0<f1;k0++){const $0=J[k0],A0=n.get($0);t.bindTexture(3553,A0.__webglTexture),d0(3553,$0,d1),_0(M0.__webglFramebuffer,e0,$0,36064+k0,3553),I($0,d1)&&q(3553)}t.unbindTexture()}else{let J=3553;(e0.isWebGL3DRenderTarget||e0.isWebGLArrayRenderTarget)&&(a?J=e0.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(J,B0.__webglTexture),d0(J,V,d1),_0(M0.__webglFramebuffer,e0,V,36064,J),I(V,d1)&&q(J),t.unbindTexture()}e0.depthBuffer&&N(e0)}function v0(e0){const V=P(e0)||a,M0=e0.isWebGLMultipleRenderTargets===!0?e0.texture:[e0.texture];for(let B0=0,Y0=M0.length;B0<Y0;B0++){const r1=M0[B0];if(I(r1,V)){const d1=e0.isWebGLCubeRenderTarget?34067:3553,J=n.get(r1).__webglTexture;t.bindTexture(d1,J),q(d1),t.unbindTexture()}}}function L0(e0){if(a&&e0.samples>0&&U0(e0)===!1){const V=e0.width,M0=e0.height;let B0=16384;const Y0=[36064],r1=e0.stencilBuffer?33306:36096;e0.depthBuffer&&Y0.push(r1);const d1=n.get(e0),J=d1.__ignoreDepthValues!==void 0?d1.__ignoreDepthValues:!1;J===!1&&(e0.depthBuffer&&(B0|=256),e0.stencilBuffer&&(B0|=1024)),t.bindFramebuffer(36008,d1.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,d1.__webglFramebuffer),J===!0&&(i.invalidateFramebuffer(36008,[r1]),i.invalidateFramebuffer(36009,[r1])),i.blitFramebuffer(0,0,V,M0,0,0,V,M0,B0,9728),v&&i.invalidateFramebuffer(36008,Y0),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,d1.__webglMultisampledFramebuffer)}}function m0(e0){return Math.min(m,e0.samples)}function U0(e0){const V=n.get(e0);return a&&e0.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&V.__useRenderToTexture!==!1}function c1(e0){const V=s.render.frame;b.get(e0)!==V&&(b.set(e0,V),e0.update())}function s1(e0,V){const M0=e0.encoding,B0=e0.format,Y0=e0.type;return e0.isCompressedTexture===!0||e0.isVideoTexture===!0||e0.format===tn||M0!==e5&&(M0===a9?a===!1?e.has("EXT_sRGB")===!0&&B0===V2?(e0.format=tn,e0.minFilter=s2,e0.generateMipmaps=!1):V=q5.sRGBToLinear(V):(B0!==V2||Y0!==B5)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",M0)),V}this.allocateTextureUnit=a0,this.resetTextureUnits=o0,this.setTexture2D=l0,this.setTexture2DArray=b0,this.setTexture3D=i0,this.setTextureCube=g0,this.rebindTextures=Z,this.setupRenderTarget=H,this.updateRenderTargetMipmap=v0,this.updateMultisampleRenderTarget=L0,this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=_0,this.useMultisampledRTT=U0}function qy(i,e,t){const n=t.isWebGL2;function r(o,s=null){let a;if(o===B5)return 5121;if(o===vh)return 32819;if(o===xh)return 32820;if(o===mh)return 5120;if(o===gh)return 5122;if(o===P7)return 5123;if(o===yh)return 5124;if(o===p3)return 5125;if(o===T5)return 5126;if(o===R7)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(o===_h)return 6406;if(o===V2)return 6408;if(o===wh)return 6409;if(o===Mh)return 6410;if(o===L5)return 6402;if(o===I6)return 34041;if(o===Sh)return 6403;if(o===bh)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(o===tn)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(o===Eh)return 36244;if(o===Th)return 33319;if(o===Ch)return 33320;if(o===Ph)return 36249;if(o===je||o===Qe||o===$e||o===Ye)if(s===a9)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(o===je)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(o===Qe)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(o===$e)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(o===Ye)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(o===je)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(o===Qe)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(o===$e)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(o===Ye)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(o===Wr||o===jr||o===Qr||o===$r)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(o===Wr)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(o===jr)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(o===Qr)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(o===$r)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(o===Rh)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(o===Yr||o===Xr)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(o===Yr)return s===a9?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(o===Xr)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(o===Zr||o===Jr||o===Kr||o===eo||o===to||o===no||o===io||o===ro||o===oo||o===so||o===ao||o===lo||o===Ao||o===uo)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(o===Zr)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(o===Jr)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(o===Kr)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(o===eo)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(o===to)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(o===no)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(o===io)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(o===ro)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(o===oo)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(o===so)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(o===ao)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(o===lo)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(o===Ao)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(o===uo)return s===a9?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(o===co)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(o===co)return s===a9?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return o===C6?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[o]!==void 0?i[o]:null}return{convert:r}}class Ol extends $9{constructor(e=[]){super();this.cameras=e}}Ol.prototype.isArrayCamera=!0;class R2 extends H1{constructor(){super();this.type="Group"}}R2.prototype.isGroup=!0;const Fy={type:"move"};class wt{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new R2,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new R2,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new $,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new $),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new R2,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new $,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new $),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,o=null,s=null;const a=this._targetRay,h=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(r=t.getPose(e.targetRaySpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Fy))),f&&e.hand){s=!0;for(const M of e.hand.values()){const w=t.getJointPose(M,n);if(f.joints[M.jointName]===void 0){const T=new R2;T.matrixAutoUpdate=!1,T.visible=!1,f.joints[M.jointName]=T,f.add(T)}const E=f.joints[M.jointName];w!==null&&(E.matrix.fromArray(w.transform.matrix),E.matrix.decompose(E.position,E.rotation,E.scale),E.jointRadius=w.radius),E.visible=w!==null}const d=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],y=d.position.distanceTo(m.position),v=.02,b=.005;f.inputState.pinching&&y>v+b?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&y<=v-b&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else h!==null&&e.gripSpace&&(o=t.getPose(e.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));return a!==null&&(a.visible=r!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=s!==null),this}}class ql extends D9{constructor(e,t,n,r,o,s,a,h,f,d){if(d=d!==void 0?d:L5,d!==L5&&d!==I6)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===L5&&(n=P7),n===void 0&&d===I6&&(n=C6);super(null,r,o,s,a,h,d,n,f);this.image={width:e,height:t},this.magFilter=a!==void 0?a:R9,this.minFilter=h!==void 0?h:R9,this.flipY=!1,this.generateMipmaps=!1}}ql.prototype.isDepthTexture=!0;class ky extends Q2{constructor(e,t){super();const n=this;let r=null,o=1,s=null,a="local-floor",h=null,f=null,d=null,m=null,y=null,v=null;const b=t.getContextAttributes();let M=null,w=null;const E=[],T=new Map,C=new $9;C.layers.enable(1),C.viewport=new Y1;const P=new $9;P.layers.enable(2),P.viewport=new Y1;const R=[C,P],I=new Ol;I.layers.enable(1),I.layers.enable(2);let q=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(u0){let l0=E[u0];return l0===void 0&&(l0=new wt,E[u0]=l0),l0.getTargetRaySpace()},this.getControllerGrip=function(u0){let l0=E[u0];return l0===void 0&&(l0=new wt,E[u0]=l0),l0.getGripSpace()},this.getHand=function(u0){let l0=E[u0];return l0===void 0&&(l0=new wt,E[u0]=l0),l0.getHandSpace()};function O(u0){const l0=T.get(u0.inputSource);l0&&l0.dispatchEvent({type:u0.type,data:u0.inputSource})}function k(){T.forEach(function(u0,l0){u0.disconnect(l0)}),T.clear(),q=null,D=null,e.setRenderTarget(M),y=null,m=null,d=null,r=null,w=null,a0.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(u0){o=u0,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(u0){a=u0,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||s},this.setReferenceSpace=function(u0){h=u0},this.getBaseLayer=function(){return m!==null?m:y},this.getBinding=function(){return d},this.getFrame=function(){return v},this.getSession=function(){return r},this.setSession=async function(u0){if(r=u0,r!==null){if(M=e.getRenderTarget(),r.addEventListener("select",O),r.addEventListener("selectstart",O),r.addEventListener("selectend",O),r.addEventListener("squeeze",O),r.addEventListener("squeezestart",O),r.addEventListener("squeezeend",O),r.addEventListener("end",k),r.addEventListener("inputsourceschange",B),b.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const l0={antialias:r.renderState.layers===void 0?b.antialias:!0,alpha:b.alpha,depth:b.depth,stencil:b.stencil,framebufferScaleFactor:o};y=new XRWebGLLayer(r,t,l0),r.updateRenderState({baseLayer:y}),w=new u2(y.framebufferWidth,y.framebufferHeight,{format:V2,type:B5,encoding:e.outputEncoding})}else{let l0=null,b0=null,i0=null;b.depth&&(i0=b.stencil?35056:33190,l0=b.stencil?I6:L5,b0=b.stencil?C6:P7);const g0={colorFormat:e.outputEncoding===a9?35907:32856,depthFormat:i0,scaleFactor:o};d=new XRWebGLBinding(r,t),m=d.createProjectionLayer(g0),r.updateRenderState({layers:[m]}),w=new u2(m.textureWidth,m.textureHeight,{format:V2,type:B5,depthTexture:new ql(m.textureWidth,m.textureHeight,b0,void 0,void 0,void 0,void 0,void 0,void 0,l0),stencilBuffer:b.stencil,encoding:e.outputEncoding,samples:b.antialias?4:0});const P0=e.properties.get(w);P0.__ignoreDepthValues=m.ignoreDepthValues}w.isXRRenderTarget=!0,this.setFoveation(1),s=await r.requestReferenceSpace(a),a0.setContext(r),a0.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function B(u0){const l0=r.inputSources;for(let b0=0;b0<l0.length;b0++){const i0=l0[b0].handedness==="right"?1:0;T.set(l0[b0],E[i0])}for(let b0=0;b0<u0.removed.length;b0++){const i0=u0.removed[b0],g0=T.get(i0);g0&&(g0.dispatchEvent({type:"disconnected",data:i0}),T.delete(i0))}for(let b0=0;b0<u0.added.length;b0++){const i0=u0.added[b0],g0=T.get(i0);g0&&g0.dispatchEvent({type:"connected",data:i0})}}const j=new $,Y=new $;function z(u0,l0,b0){j.setFromMatrixPosition(l0.matrixWorld),Y.setFromMatrixPosition(b0.matrixWorld);const i0=j.distanceTo(Y),g0=l0.projectionMatrix.elements,P0=b0.projectionMatrix.elements,T0=g0[14]/(g0[10]-1),d0=g0[14]/(g0[10]+1),p0=(g0[9]+1)/g0[5],E0=(g0[9]-1)/g0[5],I0=(g0[8]-1)/g0[0],_0=(P0[8]+1)/P0[0],H0=T0*I0,w0=T0*_0,N=i0/(-I0+_0),Z=N*-I0;l0.matrixWorld.decompose(u0.position,u0.quaternion,u0.scale),u0.translateX(Z),u0.translateZ(N),u0.matrixWorld.compose(u0.position,u0.quaternion,u0.scale),u0.matrixWorldInverse.copy(u0.matrixWorld).invert();const H=T0+N,v0=d0+N,L0=H0-Z,m0=w0+(i0-Z),U0=p0*d0/v0*H,c1=E0*d0/v0*H;u0.projectionMatrix.makePerspective(L0,m0,U0,c1,H,v0)}function G(u0,l0){l0===null?u0.matrixWorld.copy(u0.matrix):u0.matrixWorld.multiplyMatrices(l0.matrixWorld,u0.matrix),u0.matrixWorldInverse.copy(u0.matrixWorld).invert()}this.updateCamera=function(u0){if(r===null)return;I.near=P.near=C.near=u0.near,I.far=P.far=C.far=u0.far,(q!==I.near||D!==I.far)&&(r.updateRenderState({depthNear:I.near,depthFar:I.far}),q=I.near,D=I.far);const l0=u0.parent,b0=I.cameras;G(I,l0);for(let g0=0;g0<b0.length;g0++)G(b0[g0],l0);I.matrixWorld.decompose(I.position,I.quaternion,I.scale),u0.position.copy(I.position),u0.quaternion.copy(I.quaternion),u0.scale.copy(I.scale),u0.matrix.copy(I.matrix),u0.matrixWorld.copy(I.matrixWorld);const i0=u0.children;for(let g0=0,P0=i0.length;g0<P0;g0++)i0[g0].updateMatrixWorld(!0);b0.length===2?z(I,C,P):I.projectionMatrix.copy(C.projectionMatrix)},this.getCamera=function(){return I},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(y!==null)return y.fixedFoveation},this.setFoveation=function(u0){m!==null&&(m.fixedFoveation=u0),y!==null&&y.fixedFoveation!==void 0&&(y.fixedFoveation=u0)};let X=null;function o0(u0,l0){if(f=l0.getViewerPose(h||s),v=l0,f!==null){const i0=f.views;y!==null&&(e.setRenderTargetFramebuffer(w,y.framebuffer),e.setRenderTarget(w));let g0=!1;i0.length!==I.cameras.length&&(I.cameras.length=0,g0=!0);for(let P0=0;P0<i0.length;P0++){const T0=i0[P0];let d0=null;if(y!==null)d0=y.getViewport(T0);else{const E0=d.getViewSubImage(m,T0);d0=E0.viewport,P0===0&&(e.setRenderTargetTextures(w,E0.colorTexture,m.ignoreDepthValues?void 0:E0.depthStencilTexture),e.setRenderTarget(w))}const p0=R[P0];p0.matrix.fromArray(T0.transform.matrix),p0.projectionMatrix.fromArray(T0.projectionMatrix),p0.viewport.set(d0.x,d0.y,d0.width,d0.height),P0===0&&I.matrix.copy(p0.matrix),g0===!0&&I.cameras.push(p0)}}const b0=r.inputSources;for(let i0=0;i0<E.length;i0++){const g0=b0[i0],P0=T.get(g0);P0!==void 0&&P0.update(g0,l0,h||s)}X&&X(u0,l0),v=null}const a0=new Tl;a0.setAnimationLoop(o0),this.setAnimationLoop=function(u0){X=u0},this.dispose=function(){}}}function Ny(i,e){function t(M,w){M.fogColor.value.copy(w.color),w.isFog?(M.fogNear.value=w.near,M.fogFar.value=w.far):w.isFogExp2&&(M.fogDensity.value=w.density)}function n(M,w,E,T,C){w.isMeshBasicMaterial||w.isMeshLambertMaterial?r(M,w):w.isMeshToonMaterial?(r(M,w),d(M,w)):w.isMeshPhongMaterial?(r(M,w),f(M,w)):w.isMeshStandardMaterial?(r(M,w),m(M,w),w.isMeshPhysicalMaterial&&y(M,w,C)):w.isMeshMatcapMaterial?(r(M,w),v(M,w)):w.isMeshDepthMaterial?r(M,w):w.isMeshDistanceMaterial?(r(M,w),b(M,w)):w.isMeshNormalMaterial?r(M,w):w.isLineBasicMaterial?(o(M,w),w.isLineDashedMaterial&&s(M,w)):w.isPointsMaterial?a(M,w,E,T):w.isSpriteMaterial?h(M,w):w.isShadowMaterial?(M.color.value.copy(w.color),M.opacity.value=w.opacity):w.isShaderMaterial&&(w.uniformsNeedUpdate=!1)}function r(M,w){M.opacity.value=w.opacity,w.color&&M.diffuse.value.copy(w.color),w.emissive&&M.emissive.value.copy(w.emissive).multiplyScalar(w.emissiveIntensity),w.map&&(M.map.value=w.map),w.alphaMap&&(M.alphaMap.value=w.alphaMap),w.bumpMap&&(M.bumpMap.value=w.bumpMap,M.bumpScale.value=w.bumpScale,w.side===y2&&(M.bumpScale.value*=-1)),w.displacementMap&&(M.displacementMap.value=w.displacementMap,M.displacementScale.value=w.displacementScale,M.displacementBias.value=w.displacementBias),w.emissiveMap&&(M.emissiveMap.value=w.emissiveMap),w.normalMap&&(M.normalMap.value=w.normalMap,M.normalScale.value.copy(w.normalScale),w.side===y2&&M.normalScale.value.negate()),w.specularMap&&(M.specularMap.value=w.specularMap),w.alphaTest>0&&(M.alphaTest.value=w.alphaTest);const E=e.get(w).envMap;if(E&&(M.envMap.value=E,M.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,M.reflectivity.value=w.reflectivity,M.ior.value=w.ior,M.refractionRatio.value=w.refractionRatio),w.lightMap){M.lightMap.value=w.lightMap;const P=i.physicallyCorrectLights!==!0?Math.PI:1;M.lightMapIntensity.value=w.lightMapIntensity*P}w.aoMap&&(M.aoMap.value=w.aoMap,M.aoMapIntensity.value=w.aoMapIntensity);let T;w.map?T=w.map:w.specularMap?T=w.specularMap:w.displacementMap?T=w.displacementMap:w.normalMap?T=w.normalMap:w.bumpMap?T=w.bumpMap:w.roughnessMap?T=w.roughnessMap:w.metalnessMap?T=w.metalnessMap:w.alphaMap?T=w.alphaMap:w.emissiveMap?T=w.emissiveMap:w.clearcoatMap?T=w.clearcoatMap:w.clearcoatNormalMap?T=w.clearcoatNormalMap:w.clearcoatRoughnessMap?T=w.clearcoatRoughnessMap:w.specularIntensityMap?T=w.specularIntensityMap:w.specularColorMap?T=w.specularColorMap:w.transmissionMap?T=w.transmissionMap:w.thicknessMap?T=w.thicknessMap:w.sheenColorMap?T=w.sheenColorMap:w.sheenRoughnessMap&&(T=w.sheenRoughnessMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),M.uvTransform.value.copy(T.matrix));let C;w.aoMap?C=w.aoMap:w.lightMap&&(C=w.lightMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),M.uv2Transform.value.copy(C.matrix))}function o(M,w){M.diffuse.value.copy(w.color),M.opacity.value=w.opacity}function s(M,w){M.dashSize.value=w.dashSize,M.totalSize.value=w.dashSize+w.gapSize,M.scale.value=w.scale}function a(M,w,E,T){M.diffuse.value.copy(w.color),M.opacity.value=w.opacity,M.size.value=w.size*E,M.scale.value=T*.5,w.map&&(M.map.value=w.map),w.alphaMap&&(M.alphaMap.value=w.alphaMap),w.alphaTest>0&&(M.alphaTest.value=w.alphaTest);let C;w.map?C=w.map:w.alphaMap&&(C=w.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),M.uvTransform.value.copy(C.matrix))}function h(M,w){M.diffuse.value.copy(w.color),M.opacity.value=w.opacity,M.rotation.value=w.rotation,w.map&&(M.map.value=w.map),w.alphaMap&&(M.alphaMap.value=w.alphaMap),w.alphaTest>0&&(M.alphaTest.value=w.alphaTest);let E;w.map?E=w.map:w.alphaMap&&(E=w.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),M.uvTransform.value.copy(E.matrix))}function f(M,w){M.specular.value.copy(w.specular),M.shininess.value=Math.max(w.shininess,1e-4)}function d(M,w){w.gradientMap&&(M.gradientMap.value=w.gradientMap)}function m(M,w){M.roughness.value=w.roughness,M.metalness.value=w.metalness,w.roughnessMap&&(M.roughnessMap.value=w.roughnessMap),w.metalnessMap&&(M.metalnessMap.value=w.metalnessMap),e.get(w).envMap&&(M.envMapIntensity.value=w.envMapIntensity)}function y(M,w,E){M.ior.value=w.ior,w.sheen>0&&(M.sheenColor.value.copy(w.sheenColor).multiplyScalar(w.sheen),M.sheenRoughness.value=w.sheenRoughness,w.sheenColorMap&&(M.sheenColorMap.value=w.sheenColorMap),w.sheenRoughnessMap&&(M.sheenRoughnessMap.value=w.sheenRoughnessMap)),w.clearcoat>0&&(M.clearcoat.value=w.clearcoat,M.clearcoatRoughness.value=w.clearcoatRoughness,w.clearcoatMap&&(M.clearcoatMap.value=w.clearcoatMap),w.clearcoatRoughnessMap&&(M.clearcoatRoughnessMap.value=w.clearcoatRoughnessMap),w.clearcoatNormalMap&&(M.clearcoatNormalScale.value.copy(w.clearcoatNormalScale),M.clearcoatNormalMap.value=w.clearcoatNormalMap,w.side===y2&&M.clearcoatNormalScale.value.negate())),w.transmission>0&&(M.transmission.value=w.transmission,M.transmissionSamplerMap.value=E.texture,M.transmissionSamplerSize.value.set(E.width,E.height),w.transmissionMap&&(M.transmissionMap.value=w.transmissionMap),M.thickness.value=w.thickness,w.thicknessMap&&(M.thicknessMap.value=w.thicknessMap),M.attenuationDistance.value=w.attenuationDistance,M.attenuationColor.value.copy(w.attenuationColor)),M.specularIntensity.value=w.specularIntensity,M.specularColor.value.copy(w.specularColor),w.specularIntensityMap&&(M.specularIntensityMap.value=w.specularIntensityMap),w.specularColorMap&&(M.specularColorMap.value=w.specularColorMap)}function v(M,w){w.matcap&&(M.matcap.value=w.matcap)}function b(M,w){M.referencePosition.value.copy(w.referencePosition),M.nearDistance.value=w.nearDistance,M.farDistance.value=w.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Uy(){const i=I7("canvas");return i.style.display="block",i}function X1(i={}){const e=i.canvas!==void 0?i.canvas:Uy(),t=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,r=i.stencil!==void 0?i.stencil:!0,o=i.antialias!==void 0?i.antialias:!1,s=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,h=i.powerPreference!==void 0?i.powerPreference:"default",f=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=i.alpha!==void 0?i.alpha:!1;let m=null,y=null;const v=[],b=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=e5,this.physicallyCorrectLights=!1,this.toneMapping=b4,this.toneMappingExposure=1;const M=this;let w=!1,E=0,T=0,C=null,P=-1,R=null;const I=new Y1,q=new Y1;let D=null,O=e.width,k=e.height,B=1,j=null,Y=null;const z=new Y1(0,0,O,k),G=new Y1(0,0,O,k);let X=!1;const o0=new pe;let a0=!1,u0=!1,l0=null;const b0=new m1,i0=new D0,g0=new $,P0={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function T0(){return C===null?B:1}let d0=t;function p0(K,x0){for(let Q=0;Q<K.length;Q++){const n0=K[Q],h0=e.getContext(n0,x0);if(h0!==null)return h0}return null}try{const K={alpha:!0,depth:n,stencil:r,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:a,powerPreference:h,failIfMajorPerformanceCaveat:f};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ti}`),e.addEventListener("webglcontextlost",A0,!1),e.addEventListener("webglcontextrestored",W0,!1),d0===null){const x0=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&x0.shift(),d0=p0(x0,K),d0===null)throw p0(x0)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}d0.getShaderPrecisionFormat===void 0&&(d0.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(K){throw console.error("THREE.WebGLRenderer: "+K.message),K}let E0,I0,_0,H0,w0,N,Z,H,v0,L0,m0,U0,c1,s1,e0,V,M0,B0,Y0,r1,d1,J,k0;function f1(){E0=new ig(d0),I0=new Zm(d0,E0,i),E0.init(I0),J=new qy(d0,E0,I0),_0=new By(d0,E0,I0),H0=new sg(d0),w0=new wy,N=new Oy(d0,E0,_0,w0,I0,J,H0),Z=new Km(M),H=new ng(M),v0=new xd(d0,I0),k0=new Ym(d0,E0,v0,I0),L0=new rg(d0,v0,H0,k0),m0=new ug(d0,L0,v0,H0),Y0=new Ag(d0,I0,N),V=new Jm(w0),U0=new by(M,Z,H,E0,I0,k0,V),c1=new Ny(M,w0),s1=new Sy,e0=new Ly(E0,I0),B0=new $m(M,Z,_0,m0,d,s),M0=new Bl(M,m0,I0),r1=new Xm(d0,E0,H0,I0),d1=new og(d0,E0,H0,I0),H0.programs=U0.programs,M.capabilities=I0,M.extensions=E0,M.properties=w0,M.renderLists=s1,M.shadowMap=M0,M.state=_0,M.info=H0}f1();const $0=new ky(M,d0);this.xr=$0,this.getContext=function(){return d0},this.getContextAttributes=function(){return d0.getContextAttributes()},this.forceContextLoss=function(){const K=E0.get("WEBGL_lose_context");K&&K.loseContext()},this.forceContextRestore=function(){const K=E0.get("WEBGL_lose_context");K&&K.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(K){K!==void 0&&(B=K,this.setSize(O,k,!1))},this.getSize=function(K){return K.set(O,k)},this.setSize=function(K,x0,Q){if($0.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=K,k=x0,e.width=Math.floor(K*B),e.height=Math.floor(x0*B),Q!==!1&&(e.style.width=K+"px",e.style.height=x0+"px"),this.setViewport(0,0,K,x0)},this.getDrawingBufferSize=function(K){return K.set(O*B,k*B).floor()},this.setDrawingBufferSize=function(K,x0,Q){O=K,k=x0,B=Q,e.width=Math.floor(K*Q),e.height=Math.floor(x0*Q),this.setViewport(0,0,K,x0)},this.getCurrentViewport=function(K){return K.copy(I)},this.getViewport=function(K){return K.copy(z)},this.setViewport=function(K,x0,Q,n0){K.isVector4?z.set(K.x,K.y,K.z,K.w):z.set(K,x0,Q,n0),_0.viewport(I.copy(z).multiplyScalar(B).floor())},this.getScissor=function(K){return K.copy(G)},this.setScissor=function(K,x0,Q,n0){K.isVector4?G.set(K.x,K.y,K.z,K.w):G.set(K,x0,Q,n0),_0.scissor(q.copy(G).multiplyScalar(B).floor())},this.getScissorTest=function(){return X},this.setScissorTest=function(K){_0.setScissorTest(X=K)},this.setOpaqueSort=function(K){j=K},this.setTransparentSort=function(K){Y=K},this.getClearColor=function(K){return K.copy(B0.getClearColor())},this.setClearColor=function(){B0.setClearColor.apply(B0,arguments)},this.getClearAlpha=function(){return B0.getClearAlpha()},this.setClearAlpha=function(){B0.setClearAlpha.apply(B0,arguments)},this.clear=function(K=!0,x0=!0,Q=!0){let n0=0;K&&(n0|=16384),x0&&(n0|=256),Q&&(n0|=1024),d0.clear(n0)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",A0,!1),e.removeEventListener("webglcontextrestored",W0,!1),s1.dispose(),e0.dispose(),w0.dispose(),Z.dispose(),H.dispose(),m0.dispose(),k0.dispose(),U0.dispose(),$0.dispose(),$0.removeEventListener("sessionstart",y1),$0.removeEventListener("sessionend",V1),l0&&(l0.dispose(),l0=null),B1.stop()};function A0(K){K.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function W0(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const K=H0.autoReset,x0=M0.enabled,Q=M0.autoUpdate,n0=M0.needsUpdate,h0=M0.type;f1(),H0.autoReset=K,M0.enabled=x0,M0.autoUpdate=Q,M0.needsUpdate=n0,M0.type=h0}function V0(K){const x0=K.target;x0.removeEventListener("dispose",V0),g1(x0)}function g1(K){J0(K),w0.remove(K)}function J0(K){const x0=w0.get(K).programs;x0!==void 0&&(x0.forEach(function(Q){U0.releaseProgram(Q)}),K.isShaderMaterial&&U0.releaseShaderCache(K))}this.renderBufferDirect=function(K,x0,Q,n0,h0,q0){x0===null&&(x0=P0);const A=h0.isMesh&&h0.matrixWorld.determinant()<0,W=o8(K,x0,Q,n0,h0);_0.setMaterial(n0,A);let t1=Q.index;const u1=Q.attributes.position;if(t1===null){if(u1===void 0||u1.count===0)return}else if(t1.count===0)return;let i1=1;n0.wireframe===!0&&(t1=L0.getWireframeAttribute(Q),i1=2),k0.setup(h0,n0,W,Q,t1);let a1,S1=r1;t1!==null&&(a1=v0.get(t1),S1=d1,S1.setIndex(a1));const D1=t1!==null?t1.count:u1.count,R1=Q.drawRange.start*i1,r9=Q.drawRange.count*i1,w9=q0!==null?q0.start*i1:0,O1=q0!==null?q0.count*i1:1/0,$2=Math.max(R1,w9),N1=Math.min(D1,R1+r9,w9+O1)-1,H9=Math.max(0,N1-$2+1);if(H9!==0){if(h0.isMesh)n0.wireframe===!0?(_0.setLineWidth(n0.wireframeLinewidth*T0()),S1.setMode(1)):S1.setMode(4);else if(h0.isLine){let C9=n0.linewidth;C9===void 0&&(C9=1),_0.setLineWidth(C9*T0()),h0.isLineSegments?S1.setMode(1):h0.isLineLoop?S1.setMode(2):S1.setMode(3)}else h0.isPoints?S1.setMode(0):h0.isSprite&&S1.setMode(4);if(h0.isInstancedMesh)S1.renderInstances($2,H9,h0.count);else if(Q.isInstancedBufferGeometry){const C9=Math.min(Q.instanceCount,Q._maxInstanceCount);S1.renderInstances($2,H9,C9)}else S1.render($2,H9)}},this.compile=function(K,x0){y=e0.get(K),y.init(),b.push(y),K.traverseVisible(function(Q){Q.isLight&&Q.layers.test(x0.layers)&&(y.pushLight(Q),Q.castShadow&&y.pushShadow(Q))}),y.setupLights(M.physicallyCorrectLights),K.traverse(function(Q){const n0=Q.material;if(n0)if(Array.isArray(n0))for(let h0=0;h0<n0.length;h0++){const q0=n0[h0];f5(q0,K,Q)}else f5(n0,K,Q)}),b.pop(),y=null};let h1=null;function j0(K){h1&&h1(K)}function y1(){B1.stop()}function V1(){B1.start()}const B1=new Tl;B1.setAnimationLoop(j0),typeof self!="undefined"&&B1.setContext(self),this.setAnimationLoop=function(K){h1=K,$0.setAnimationLoop(K),K===null?B1.stop():B1.start()},$0.addEventListener("sessionstart",y1),$0.addEventListener("sessionend",V1),this.render=function(K,x0){if(x0!==void 0&&x0.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;K.autoUpdate===!0&&K.updateMatrixWorld(),x0.parent===null&&x0.updateMatrixWorld(),$0.enabled===!0&&$0.isPresenting===!0&&($0.cameraAutoUpdate===!0&&$0.updateCamera(x0),x0=$0.getCamera()),K.isScene===!0&&K.onBeforeRender(M,K,x0,C),y=e0.get(K,b.length),y.init(),b.push(y),b0.multiplyMatrices(x0.projectionMatrix,x0.matrixWorldInverse),o0.setFromProjectionMatrix(b0),u0=this.localClippingEnabled,a0=V.init(this.clippingPlanes,u0,x0),m=s1.get(K,v.length),m.init(),v.push(m),F0(K,x0,0,M.sortObjects),m.finish(),M.sortObjects===!0&&m.sort(j,Y),a0===!0&&V.beginShadows();const Q=y.state.shadowsArray;if(M0.render(Q,K,x0),a0===!0&&V.endShadows(),this.info.autoReset===!0&&this.info.reset(),B0.render(m,K),y.setupLights(M.physicallyCorrectLights),x0.isArrayCamera){const n0=x0.cameras;for(let h0=0,q0=n0.length;h0<q0;h0++){const A=n0[h0];w2(m,K,A,A.viewport)}}else w2(m,K,x0);C!==null&&(N.updateMultisampleRenderTarget(C),N.updateRenderTargetMipmap(C)),K.isScene===!0&&K.onAfterRender(M,K,x0),k0.resetDefaultState(),P=-1,R=null,b.pop(),b.length>0?y=b[b.length-1]:y=null,v.pop(),v.length>0?m=v[v.length-1]:m=null};function F0(K,x0,Q,n0){if(K.visible===!1)return;if(K.layers.test(x0.layers)){if(K.isGroup)Q=K.renderOrder;else if(K.isLOD)K.autoUpdate===!0&&K.update(x0);else if(K.isLight)y.pushLight(K),K.castShadow&&y.pushShadow(K);else if(K.isSprite){if(!K.frustumCulled||o0.intersectsSprite(K)){n0&&g0.setFromMatrixPosition(K.matrixWorld).applyMatrix4(b0);const A=m0.update(K),W=K.material;W.visible&&m.push(K,A,W,Q,g0.z,null)}}else if((K.isMesh||K.isLine||K.isPoints)&&(K.isSkinnedMesh&&K.skeleton.frame!==H0.render.frame&&(K.skeleton.update(),K.skeleton.frame=H0.render.frame),!K.frustumCulled||o0.intersectsObject(K))){n0&&g0.setFromMatrixPosition(K.matrixWorld).applyMatrix4(b0);const A=m0.update(K),W=K.material;if(Array.isArray(W)){const t1=A.groups;for(let u1=0,i1=t1.length;u1<i1;u1++){const a1=t1[u1],S1=W[a1.materialIndex];S1&&S1.visible&&m.push(K,A,S1,Q,g0.z,a1)}}else W.visible&&m.push(K,A,W,Q,g0.z,null)}}const q0=K.children;for(let A=0,W=q0.length;A<W;A++)F0(q0[A],x0,Q,n0)}function w2(K,x0,Q,n0){const h0=K.opaque,q0=K.transmissive,A=K.transparent;y.setupLightsView(Q),q0.length>0&&r8(h0,x0,Q),n0&&_0.viewport(I.copy(n0)),h0.length>0&&N5(h0,x0,Q),q0.length>0&&N5(q0,x0,Q),A.length>0&&N5(A,x0,Q),_0.buffers.depth.setTest(!0),_0.buffers.depth.setMask(!0),_0.buffers.color.setMask(!0),_0.setPolygonOffset(!1)}function r8(K,x0,Q){const n0=I0.isWebGL2;l0===null&&(l0=new u2(1,1,{generateMipmaps:!0,type:E0.has("EXT_color_buffer_half_float")?R7:B5,minFilter:fe,samples:n0&&o===!0?4:0})),M.getDrawingBufferSize(i0),n0?l0.setSize(i0.x,i0.y):l0.setSize(P3(i0.x),P3(i0.y));const h0=M.getRenderTarget();M.setRenderTarget(l0),M.clear();const q0=M.toneMapping;M.toneMapping=b4,N5(K,x0,Q),M.toneMapping=q0,N.updateMultisampleRenderTarget(l0),N.updateRenderTargetMipmap(l0),M.setRenderTarget(h0)}function N5(K,x0,Q){const n0=x0.isScene===!0?x0.overrideMaterial:null;for(let h0=0,q0=K.length;h0<q0;h0++){const A=K[h0],W=A.object,t1=A.geometry,u1=n0===null?A.material:n0,i1=A.group;W.layers.test(Q.layers)&&Pe(W,x0,Q,t1,u1,i1)}}function Pe(K,x0,Q,n0,h0,q0){K.onBeforeRender(M,x0,Q,n0,h0,q0),K.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,K.matrixWorld),K.normalMatrix.getNormalMatrix(K.modelViewMatrix),h0.onBeforeRender(M,x0,Q,n0,K,q0),h0.transparent===!0&&h0.side===E4?(h0.side=y2,h0.needsUpdate=!0,M.renderBufferDirect(Q,x0,n0,h0,K,q0),h0.side=C7,h0.needsUpdate=!0,M.renderBufferDirect(Q,x0,n0,h0,K,q0),h0.side=E4):M.renderBufferDirect(Q,x0,n0,h0,K,q0),K.onAfterRender(M,x0,Q,n0,h0,q0)}function f5(K,x0,Q){x0.isScene!==!0&&(x0=P0);const n0=w0.get(K),h0=y.state.lights,q0=y.state.shadowsArray,A=h0.state.version,W=U0.getParameters(K,h0.state,q0,x0,Q),t1=U0.getProgramCacheKey(W);let u1=n0.programs;n0.environment=K.isMeshStandardMaterial?x0.environment:null,n0.fog=x0.fog,n0.envMap=(K.isMeshStandardMaterial?H:Z).get(K.envMap||n0.environment),u1===void 0&&(K.addEventListener("dispose",V0),u1=new Map,n0.programs=u1);let i1=u1.get(t1);if(i1!==void 0){if(n0.currentProgram===i1&&n0.lightsStateVersion===A)return X6(K,W),i1}else W.uniforms=U0.getUniforms(K),K.onBuild(Q,W,M),K.onBeforeCompile(W,M),i1=U0.acquireProgram(W,t1),u1.set(t1,i1),n0.uniforms=W.uniforms;const a1=n0.uniforms;(!K.isShaderMaterial&&!K.isRawShaderMaterial||K.clipping===!0)&&(a1.clippingPlanes=V.uniform),X6(K,W),n0.needsLights=U5(K),n0.lightsStateVersion=A,n0.needsLights&&(a1.ambientLightColor.value=h0.state.ambient,a1.lightProbe.value=h0.state.probe,a1.directionalLights.value=h0.state.directional,a1.directionalLightShadows.value=h0.state.directionalShadow,a1.spotLights.value=h0.state.spot,a1.spotLightShadows.value=h0.state.spotShadow,a1.rectAreaLights.value=h0.state.rectArea,a1.ltc_1.value=h0.state.rectAreaLTC1,a1.ltc_2.value=h0.state.rectAreaLTC2,a1.pointLights.value=h0.state.point,a1.pointLightShadows.value=h0.state.pointShadow,a1.hemisphereLights.value=h0.state.hemi,a1.directionalShadowMap.value=h0.state.directionalShadowMap,a1.directionalShadowMatrix.value=h0.state.directionalShadowMatrix,a1.spotShadowMap.value=h0.state.spotShadowMap,a1.spotShadowMatrix.value=h0.state.spotShadowMatrix,a1.pointShadowMap.value=h0.state.pointShadowMap,a1.pointShadowMatrix.value=h0.state.pointShadowMatrix);const S1=i1.getUniforms(),D1=J4.seqWithValue(S1.seq,a1);return n0.currentProgram=i1,n0.uniformsList=D1,i1}function X6(K,x0){const Q=w0.get(K);Q.outputEncoding=x0.outputEncoding,Q.instancing=x0.instancing,Q.skinning=x0.skinning,Q.morphTargets=x0.morphTargets,Q.morphNormals=x0.morphNormals,Q.morphColors=x0.morphColors,Q.morphTargetsCount=x0.morphTargetsCount,Q.numClippingPlanes=x0.numClippingPlanes,Q.numIntersection=x0.numClipIntersection,Q.vertexAlphas=x0.vertexAlphas,Q.vertexTangents=x0.vertexTangents,Q.toneMapping=x0.toneMapping}function o8(K,x0,Q,n0,h0){x0.isScene!==!0&&(x0=P0),N.resetTextureUnits();const q0=x0.fog,A=n0.isMeshStandardMaterial?x0.environment:null,W=C===null?M.outputEncoding:C.isXRRenderTarget===!0?C.texture.encoding:e5,t1=(n0.isMeshStandardMaterial?H:Z).get(n0.envMap||A),u1=n0.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,i1=!!n0.normalMap&&!!Q.attributes.tangent,a1=!!Q.morphAttributes.position,S1=!!Q.morphAttributes.normal,D1=!!Q.morphAttributes.color,R1=n0.toneMapped?M.toneMapping:b4,r9=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,w9=r9!==void 0?r9.length:0,O1=w0.get(n0),$2=y.state.lights;if(a0===!0&&(u0===!0||K!==R)){const f2=K===R&&n0.id===P;V.setState(n0,K,f2)}let N1=!1;n0.version===O1.__version?(O1.needsLights&&O1.lightsStateVersion!==$2.state.version||O1.outputEncoding!==W||h0.isInstancedMesh&&O1.instancing===!1||!h0.isInstancedMesh&&O1.instancing===!0||h0.isSkinnedMesh&&O1.skinning===!1||!h0.isSkinnedMesh&&O1.skinning===!0||O1.envMap!==t1||n0.fog===!0&&O1.fog!==q0||O1.numClippingPlanes!==void 0&&(O1.numClippingPlanes!==V.numPlanes||O1.numIntersection!==V.numIntersection)||O1.vertexAlphas!==u1||O1.vertexTangents!==i1||O1.morphTargets!==a1||O1.morphNormals!==S1||O1.morphColors!==D1||O1.toneMapping!==R1||I0.isWebGL2===!0&&O1.morphTargetsCount!==w9)&&(N1=!0):(N1=!0,O1.__version=n0.version);let H9=O1.currentProgram;N1===!0&&(H9=f5(n0,x0,h0));let C9=!1,h5=!1,B2=!1;const A1=H9.getUniforms(),s0=O1.uniforms;if(_0.useProgram(H9.program)&&(C9=!0,h5=!0,B2=!0),n0.id!==P&&(P=n0.id,h5=!0),C9||R!==K){if(A1.setValue(d0,"projectionMatrix",K.projectionMatrix),I0.logarithmicDepthBuffer&&A1.setValue(d0,"logDepthBufFC",2/(Math.log(K.far+1)/Math.LN2)),R!==K&&(R=K,h5=!0,B2=!0),n0.isShaderMaterial||n0.isMeshPhongMaterial||n0.isMeshToonMaterial||n0.isMeshStandardMaterial||n0.envMap){const f2=A1.map.cameraPosition;f2!==void 0&&f2.setValue(d0,g0.setFromMatrixPosition(K.matrixWorld))}(n0.isMeshPhongMaterial||n0.isMeshToonMaterial||n0.isMeshLambertMaterial||n0.isMeshBasicMaterial||n0.isMeshStandardMaterial||n0.isShaderMaterial)&&A1.setValue(d0,"isOrthographic",K.isOrthographicCamera===!0),(n0.isMeshPhongMaterial||n0.isMeshToonMaterial||n0.isMeshLambertMaterial||n0.isMeshBasicMaterial||n0.isMeshStandardMaterial||n0.isShaderMaterial||n0.isShadowMaterial||h0.isSkinnedMesh)&&A1.setValue(d0,"viewMatrix",K.matrixWorldInverse)}if(h0.isSkinnedMesh){A1.setOptional(d0,h0,"bindMatrix"),A1.setOptional(d0,h0,"bindMatrixInverse");const f2=h0.skeleton;f2&&(I0.floatVertexTextures?(f2.boneTexture===null&&f2.computeBoneTexture(),A1.setValue(d0,"boneTexture",f2.boneTexture,N),A1.setValue(d0,"boneTextureSize",f2.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const q1=Q.morphAttributes;return(q1.position!==void 0||q1.normal!==void 0||q1.color!==void 0&&I0.isWebGL2===!0)&&Y0.update(h0,Q,n0,H9),(h5||O1.receiveShadow!==h0.receiveShadow)&&(O1.receiveShadow=h0.receiveShadow,A1.setValue(d0,"receiveShadow",h0.receiveShadow)),h5&&(A1.setValue(d0,"toneMappingExposure",M.toneMappingExposure),O1.needsLights&&s8(s0,B2),q0&&n0.fog===!0&&c1.refreshFogUniforms(s0,q0),c1.refreshMaterialUniforms(s0,n0,B,k,l0),J4.upload(d0,O1.uniformsList,s0,N)),n0.isShaderMaterial&&n0.uniformsNeedUpdate===!0&&(J4.upload(d0,O1.uniformsList,s0,N),n0.uniformsNeedUpdate=!1),n0.isSpriteMaterial&&A1.setValue(d0,"center",h0.center),A1.setValue(d0,"modelViewMatrix",h0.modelViewMatrix),A1.setValue(d0,"normalMatrix",h0.normalMatrix),A1.setValue(d0,"modelMatrix",h0.matrixWorld),H9}function s8(K,x0){K.ambientLightColor.needsUpdate=x0,K.lightProbe.needsUpdate=x0,K.directionalLights.needsUpdate=x0,K.directionalLightShadows.needsUpdate=x0,K.pointLights.needsUpdate=x0,K.pointLightShadows.needsUpdate=x0,K.spotLights.needsUpdate=x0,K.spotLightShadows.needsUpdate=x0,K.rectAreaLights.needsUpdate=x0,K.hemisphereLights.needsUpdate=x0}function U5(K){return K.isMeshLambertMaterial||K.isMeshToonMaterial||K.isMeshPhongMaterial||K.isMeshStandardMaterial||K.isShadowMaterial||K.isShaderMaterial&&K.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(K,x0,Q){w0.get(K.texture).__webglTexture=x0,w0.get(K.depthTexture).__webglTexture=Q;const n0=w0.get(K);n0.__hasExternalTextures=!0,n0.__hasExternalTextures&&(n0.__autoAllocateDepthBuffer=Q===void 0,n0.__autoAllocateDepthBuffer||E0.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n0.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(K,x0){const Q=w0.get(K);Q.__webglFramebuffer=x0,Q.__useDefaultFramebuffer=x0===void 0},this.setRenderTarget=function(K,x0=0,Q=0){C=K,E=x0,T=Q;let n0=!0;if(K){const t1=w0.get(K);t1.__useDefaultFramebuffer!==void 0?(_0.bindFramebuffer(36160,null),n0=!1):t1.__webglFramebuffer===void 0?N.setupRenderTarget(K):t1.__hasExternalTextures&&N.rebindTextures(K,w0.get(K.texture).__webglTexture,w0.get(K.depthTexture).__webglTexture)}let h0=null,q0=!1,A=!1;if(K){const t1=K.texture;(t1.isData3DTexture||t1.isDataArrayTexture)&&(A=!0);const u1=w0.get(K).__webglFramebuffer;K.isWebGLCubeRenderTarget?(h0=u1[x0],q0=!0):I0.isWebGL2&&K.samples>0&&N.useMultisampledRTT(K)===!1?h0=w0.get(K).__webglMultisampledFramebuffer:h0=u1,I.copy(K.viewport),q.copy(K.scissor),D=K.scissorTest}else I.copy(z).multiplyScalar(B).floor(),q.copy(G).multiplyScalar(B).floor(),D=X;if(_0.bindFramebuffer(36160,h0)&&I0.drawBuffers&&n0&&_0.drawBuffers(K,h0),_0.viewport(I),_0.scissor(q),_0.setScissorTest(D),q0){const t1=w0.get(K.texture);d0.framebufferTexture2D(36160,36064,34069+x0,t1.__webglTexture,Q)}else if(A){const t1=w0.get(K.texture),u1=x0||0;d0.framebufferTextureLayer(36160,36064,t1.__webglTexture,Q||0,u1)}P=-1},this.readRenderTargetPixels=function(K,x0,Q,n0,h0,q0,A){if(!(K&&K.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let W=w0.get(K).__webglFramebuffer;if(K.isWebGLCubeRenderTarget&&A!==void 0&&(W=W[A]),W){_0.bindFramebuffer(36160,W);try{const t1=K.texture,u1=t1.format,i1=t1.type;if(u1!==V2&&J.convert(u1)!==d0.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const a1=i1===R7&&(E0.has("EXT_color_buffer_half_float")||I0.isWebGL2&&E0.has("EXT_color_buffer_float"));if(i1!==B5&&J.convert(i1)!==d0.getParameter(35738)&&!(i1===T5&&(I0.isWebGL2||E0.has("OES_texture_float")||E0.has("WEBGL_color_buffer_float")))&&!a1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}x0>=0&&x0<=K.width-n0&&Q>=0&&Q<=K.height-h0&&d0.readPixels(x0,Q,n0,h0,J.convert(u1),J.convert(i1),q0)}finally{const t1=C!==null?w0.get(C).__webglFramebuffer:null;_0.bindFramebuffer(36160,t1)}}},this.copyFramebufferToTexture=function(K,x0,Q=0){if(x0.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const n0=Math.pow(2,-Q),h0=Math.floor(x0.image.width*n0),q0=Math.floor(x0.image.height*n0);N.setTexture2D(x0,0),d0.copyTexSubImage2D(3553,Q,0,0,K.x,K.y,h0,q0),_0.unbindTexture()},this.copyTextureToTexture=function(K,x0,Q,n0=0){const h0=x0.image.width,q0=x0.image.height,A=J.convert(Q.format),W=J.convert(Q.type);N.setTexture2D(Q,0),d0.pixelStorei(37440,Q.flipY),d0.pixelStorei(37441,Q.premultiplyAlpha),d0.pixelStorei(3317,Q.unpackAlignment),x0.isDataTexture?d0.texSubImage2D(3553,n0,K.x,K.y,h0,q0,A,W,x0.image.data):x0.isCompressedTexture?d0.compressedTexSubImage2D(3553,n0,K.x,K.y,x0.mipmaps[0].width,x0.mipmaps[0].height,A,x0.mipmaps[0].data):d0.texSubImage2D(3553,n0,K.x,K.y,A,W,x0.image),n0===0&&Q.generateMipmaps&&d0.generateMipmap(3553),_0.unbindTexture()},this.copyTextureToTexture3D=function(K,x0,Q,n0,h0=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const q0=K.max.x-K.min.x+1,A=K.max.y-K.min.y+1,W=K.max.z-K.min.z+1,t1=J.convert(n0.format),u1=J.convert(n0.type);let i1;if(n0.isData3DTexture)N.setTexture3D(n0,0),i1=32879;else if(n0.isDataArrayTexture)N.setTexture2DArray(n0,0),i1=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}d0.pixelStorei(37440,n0.flipY),d0.pixelStorei(37441,n0.premultiplyAlpha),d0.pixelStorei(3317,n0.unpackAlignment);const a1=d0.getParameter(3314),S1=d0.getParameter(32878),D1=d0.getParameter(3316),R1=d0.getParameter(3315),r9=d0.getParameter(32877),w9=Q.isCompressedTexture?Q.mipmaps[0]:Q.image;d0.pixelStorei(3314,w9.width),d0.pixelStorei(32878,w9.height),d0.pixelStorei(3316,K.min.x),d0.pixelStorei(3315,K.min.y),d0.pixelStorei(32877,K.min.z),Q.isDataTexture||Q.isData3DTexture?d0.texSubImage3D(i1,h0,x0.x,x0.y,x0.z,q0,A,W,t1,u1,w9.data):Q.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),d0.compressedTexSubImage3D(i1,h0,x0.x,x0.y,x0.z,q0,A,W,t1,w9.data)):d0.texSubImage3D(i1,h0,x0.x,x0.y,x0.z,q0,A,W,t1,u1,w9),d0.pixelStorei(3314,a1),d0.pixelStorei(32878,S1),d0.pixelStorei(3316,D1),d0.pixelStorei(3315,R1),d0.pixelStorei(32877,r9),h0===0&&n0.generateMipmaps&&d0.generateMipmap(i1),_0.unbindTexture()},this.initTexture=function(K){N.setTexture2D(K,0),_0.unbindTexture()},this.resetState=function(){E=0,T=0,C=null,_0.reset(),k0.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}X1.prototype.isWebGLRenderer=!0;class zy extends X1{}zy.prototype.isWebGL1Renderer=!0;class di extends H1{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}di.prototype.isScene=!0;class W6{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=L7,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=j2()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,o=this.stride;r<o;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=j2()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=j2()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}W6.prototype.isInterleavedBuffer=!0;const W9=new $;class t5{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)W9.fromBufferAttribute(this,t),W9.applyMatrix4(e),this.setXYZ(t,W9.x,W9.y,W9.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)W9.fromBufferAttribute(this,t),W9.applyNormalMatrix(e),this.setXYZ(t,W9.x,W9.y,W9.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)W9.fromBufferAttribute(this,t),W9.transformDirection(e),this.setXYZ(t,W9.x,W9.y,W9.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,o){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=o,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)t.push(this.data.array[r+o])}return new t9(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new t5(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)t.push(this.data.array[r+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}t5.prototype.isInterleavedBufferAttribute=!0;class pi extends T9{constructor(e){super();this.type="SpriteMaterial",this.color=new l1(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}pi.prototype.isSpriteMaterial=!0;let o6;const o7=new $,s6=new $,a6=new $,l6=new D0,s7=new D0,Fl=new m1,O8=new $,a7=new $,q8=new $,Yo=new D0,Mt=new D0,Xo=new D0;class Gy extends H1{constructor(e){super();if(this.type="Sprite",o6===void 0){o6=new C1;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new W6(t,5);o6.setIndex([0,1,2,0,2,3]),o6.setAttribute("position",new t5(n,3,0,!1)),o6.setAttribute("uv",new t5(n,2,3,!1))}this.geometry=o6,this.material=e!==void 0?e:new pi,this.center=new D0(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),s6.setFromMatrixScale(this.matrixWorld),Fl.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),a6.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&s6.multiplyScalar(-a6.z);const n=this.material.rotation;let r,o;n!==0&&(o=Math.cos(n),r=Math.sin(n));const s=this.center;F8(O8.set(-.5,-.5,0),a6,s,s6,r,o),F8(a7.set(.5,-.5,0),a6,s,s6,r,o),F8(q8.set(.5,.5,0),a6,s,s6,r,o),Yo.set(0,0),Mt.set(1,0),Xo.set(1,1);let a=e.ray.intersectTriangle(O8,a7,q8,!1,o7);if(a===null&&(F8(a7.set(-.5,.5,0),a6,s,s6,r,o),Mt.set(0,1),a=e.ray.intersectTriangle(O8,q8,a7,!1,o7),a===null))return;const h=e.ray.origin.distanceTo(o7);h<e.near||h>e.far||t.push({distance:h,point:o7.clone(),uv:_9.getUV(o7,O8,a7,q8,Yo,Mt,Xo,new D0),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}Gy.prototype.isSprite=!0;function F8(i,e,t,n,r,o){l6.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(s7.x=o*l6.x-r*l6.y,s7.y=r*l6.x+o*l6.y):s7.copy(l6),i.copy(e),i.x+=s7.x,i.y+=s7.y,i.applyMatrix4(Fl)}const Zo=new $,Jo=new Y1,Ko=new Y1,Hy=new $,es=new m1;class kl extends K1{constructor(e,t){super(e,t);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new m1,this.bindMatrixInverse=new m1}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Y1,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);const o=1/e.manhattanLength();o!==1/0?e.multiplyScalar(o):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,r=this.geometry;Jo.fromBufferAttribute(r.attributes.skinIndex,e),Ko.fromBufferAttribute(r.attributes.skinWeight,e),Zo.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let o=0;o<4;o++){const s=Ko.getComponent(o);if(s!==0){const a=Jo.getComponent(o);es.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Hy.copy(Zo).applyMatrix4(es),s)}}return t.applyMatrix4(this.bindMatrixInverse)}}kl.prototype.isSkinnedMesh=!0;class Vy extends H1{constructor(){super();this.type="Bone"}}Vy.prototype.isBone=!0;class Wy extends D9{constructor(e=null,t=1,n=1,r,o,s,a,h,f=R9,d=R9,m,y){super(null,s,a,h,f,d,r,o,m,y);this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Wy.prototype.isDataTexture=!0;class on extends t9{constructor(e,t,n,r=1){typeof n=="number"&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(e,t,n);this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}on.prototype.isInstancedBufferAttribute=!0;const ts=new m1,ns=new m1,k8=[],l7=new K1;class jy extends K1{constructor(e,t,n){super(e,t);this.instanceMatrix=new on(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(l7.geometry=this.geometry,l7.material=this.material,l7.material!==void 0)for(let o=0;o<r;o++){this.getMatrixAt(o,ts),ns.multiplyMatrices(n,ts),l7.matrixWorld=ns,l7.raycast(e,k8);for(let s=0,a=k8.length;s<a;s++){const h=k8[s];h.instanceId=o,h.object=this,t.push(h)}k8.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new on(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}jy.prototype.isInstancedMesh=!0;class D4 extends T9{constructor(e){super();this.type="LineBasicMaterial",this.color=new l1(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}D4.prototype.isLineBasicMaterial=!0;const is=new $,rs=new $,os=new m1,St=new F5,N8=new s5;class j6 extends H1{constructor(e=new C1,t=new D4){super();this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,o=t.count;r<o;r++)is.fromBufferAttribute(t,r-1),rs.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=is.distanceTo(rs);e.setAttribute("lineDistance",new T1(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,o=e.params.Line.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),N8.copy(n.boundingSphere),N8.applyMatrix4(r),N8.radius+=o,e.ray.intersectsSphere(N8)===!1)return;os.copy(r).invert(),St.copy(e.ray).applyMatrix4(os);const a=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a,f=new $,d=new $,m=new $,y=new $,v=this.isLineSegments?2:1;if(n.isBufferGeometry){const b=n.index,w=n.attributes.position;if(b!==null){const E=Math.max(0,s.start),T=Math.min(b.count,s.start+s.count);for(let C=E,P=T-1;C<P;C+=v){const R=b.getX(C),I=b.getX(C+1);if(f.fromBufferAttribute(w,R),d.fromBufferAttribute(w,I),St.distanceSqToSegment(f,d,y,m)>h)continue;y.applyMatrix4(this.matrixWorld);const D=e.ray.origin.distanceTo(y);D<e.near||D>e.far||t.push({distance:D,point:m.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}else{const E=Math.max(0,s.start),T=Math.min(w.count,s.start+s.count);for(let C=E,P=T-1;C<P;C+=v){if(f.fromBufferAttribute(w,C),d.fromBufferAttribute(w,C+1),St.distanceSqToSegment(f,d,y,m)>h)continue;y.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(y);I<e.near||I>e.far||t.push({distance:I,point:m.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,s=r.length;o<s;o++){const a=r[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=o}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}j6.prototype.isLine=!0;const ss=new $,as=new $;class Z7 extends j6{constructor(e,t){super(e,t);this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,o=t.count;r<o;r+=2)ss.fromBufferAttribute(t,r),as.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+ss.distanceTo(as);e.setAttribute("lineDistance",new T1(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Z7.prototype.isLineSegments=!0;class Qy extends j6{constructor(e,t){super(e,t);this.type="LineLoop"}}Qy.prototype.isLineLoop=!0;class mi extends T9{constructor(e){super();this.type="PointsMaterial",this.color=new l1(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}mi.prototype.isPointsMaterial=!0;const ls=new m1,sn=new F5,U8=new s5,z8=new $;class $y extends H1{constructor(e=new C1,t=new mi){super();this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,o=e.params.Points.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),U8.copy(n.boundingSphere),U8.applyMatrix4(r),U8.radius+=o,e.ray.intersectsSphere(U8)===!1)return;ls.copy(r).invert(),sn.copy(e.ray).applyMatrix4(ls);const a=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a;if(n.isBufferGeometry){const f=n.index,m=n.attributes.position;if(f!==null){const y=Math.max(0,s.start),v=Math.min(f.count,s.start+s.count);for(let b=y,M=v;b<M;b++){const w=f.getX(b);z8.fromBufferAttribute(m,w),As(z8,w,h,r,e,t,this)}}else{const y=Math.max(0,s.start),v=Math.min(m.count,s.start+s.count);for(let b=y,M=v;b<M;b++)z8.fromBufferAttribute(m,b),As(z8,b,h,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,s=r.length;o<s;o++){const a=r[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=o}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}$y.prototype.isPoints=!0;function As(i,e,t,n,r,o,s){const a=sn.distanceSqToPoint(i);if(a<t){const h=new $;sn.closestPointToPoint(i,h),h.applyMatrix4(n);const f=r.ray.origin.distanceTo(h);if(f<r.near||f>r.far)return;o.push({distance:f,distanceToRay:Math.sqrt(a),point:h,index:e,face:null,object:s})}}class Yy extends D9{constructor(e,t,n,r,o,s,a,h,f){super(e,t,n,r,o,s,a,h,f);this.minFilter=s!==void 0?s:s2,this.magFilter=o!==void 0?o:s2,this.generateMipmaps=!1;const d=this;function m(){d.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Yy.prototype.isVideoTexture=!0;class Xy extends D9{constructor(e,t,n){super({width:e,height:t});this.format=n,this.magFilter=R9,this.minFilter=R9,this.generateMipmaps=!1,this.needsUpdate=!0}}Xy.prototype.isFramebufferTexture=!0;class Zy extends D9{constructor(e,t,n,r,o,s,a,h,f,d,m,y){super(null,s,a,h,f,d,r,o,m,y);this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}Zy.prototype.isCompressedTexture=!0;class Jy extends D9{constructor(e,t,n,r,o,s,a,h,f){super(e,t,n,r,o,s,a,h,f);this.needsUpdate=!0}}Jy.prototype.isCanvasTexture=!0;class v2{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),o=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),o+=n.distanceTo(r),t.push(o),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let r=0;const o=n.length;let s;t?s=t:s=e*n[o-1];let a=0,h=o-1,f;for(;a<=h;)if(r=Math.floor(a+(h-a)/2),f=n[r]-s,f<0)a=r+1;else if(f>0)h=r-1;else{h=r;break}if(r=h,n[r]===s)return r/(o-1);const d=n[r],y=n[r+1]-d,v=(s-d)/y;return(r+v)/(o-1)}getTangent(e,t){let r=e-1e-4,o=e+1e-4;r<0&&(r=0),o>1&&(o=1);const s=this.getPoint(r),a=this.getPoint(o),h=t||(s.isVector2?new D0:new $);return h.copy(a).sub(s).normalize(),h}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new $,r=[],o=[],s=[],a=new $,h=new m1;for(let v=0;v<=e;v++){const b=v/e;r[v]=this.getTangentAt(b,new $)}o[0]=new $,s[0]=new $;let f=Number.MAX_VALUE;const d=Math.abs(r[0].x),m=Math.abs(r[0].y),y=Math.abs(r[0].z);d<=f&&(f=d,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),y<=f&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),o[0].crossVectors(r[0],a),s[0].crossVectors(r[0],o[0]);for(let v=1;v<=e;v++){if(o[v]=o[v-1].clone(),s[v]=s[v-1].clone(),a.crossVectors(r[v-1],r[v]),a.length()>Number.EPSILON){a.normalize();const b=Math.acos(E9(r[v-1].dot(r[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(a,b))}s[v].crossVectors(r[v],o[v])}if(t===!0){let v=Math.acos(E9(o[0].dot(o[e]),-1,1));v/=e,r[0].dot(a.crossVectors(o[0],o[e]))>0&&(v=-v);for(let b=1;b<=e;b++)o[b].applyMatrix4(h.makeRotationAxis(r[b],v*b)),s[b].crossVectors(r[b],o[b])}return{tangents:r,normals:o,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ge extends v2{constructor(e=0,t=0,n=1,r=1,o=0,s=Math.PI*2,a=!1,h=0){super();this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=o,this.aEndAngle=s,this.aClockwise=a,this.aRotation=h}getPoint(e,t){const n=t||new D0,r=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const s=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=r;for(;o>r;)o-=r;o<Number.EPSILON&&(s?o=0:o=r),this.aClockwise===!0&&!s&&(o===r?o=-r:o=o-r);const a=this.aStartAngle+e*o;let h=this.aX+this.xRadius*Math.cos(a),f=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const d=Math.cos(this.aRotation),m=Math.sin(this.aRotation),y=h-this.aX,v=f-this.aY;h=y*d-v*m+this.aX,f=y*m+v*d+this.aY}return n.set(h,f)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}ge.prototype.isEllipseCurve=!0;class Nl extends ge{constructor(e,t,n,r,o,s){super(e,t,n,n,r,o,s);this.type="ArcCurve"}}Nl.prototype.isArcCurve=!0;function gi(){let i=0,e=0,t=0,n=0;function r(o,s,a,h){i=o,e=a,t=-3*o+3*s-2*a-h,n=2*o-2*s+a+h}return{initCatmullRom:function(o,s,a,h,f){r(s,a,f*(a-o),f*(h-s))},initNonuniformCatmullRom:function(o,s,a,h,f,d,m){let y=(s-o)/f-(a-o)/(f+d)+(a-s)/d,v=(a-s)/d-(h-s)/(d+m)+(h-a)/m;y*=d,v*=d,r(s,a,y,v)},calc:function(o){const s=o*o,a=s*o;return i+e*o+t*s+n*a}}}const G8=new $,Et=new gi,Tt=new gi,Ct=new gi;class Ul extends v2{constructor(e=[],t=!1,n="centripetal",r=.5){super();this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new $){const n=t,r=this.points,o=r.length,s=(o-(this.closed?0:1))*e;let a=Math.floor(s),h=s-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/o)+1)*o:h===0&&a===o-1&&(a=o-2,h=1);let f,d;this.closed||a>0?f=r[(a-1)%o]:(G8.subVectors(r[0],r[1]).add(r[0]),f=G8);const m=r[a%o],y=r[(a+1)%o];if(this.closed||a+2<o?d=r[(a+2)%o]:(G8.subVectors(r[o-1],r[o-2]).add(r[o-1]),d=G8),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let b=Math.pow(f.distanceToSquared(m),v),M=Math.pow(m.distanceToSquared(y),v),w=Math.pow(y.distanceToSquared(d),v);M<1e-4&&(M=1),b<1e-4&&(b=M),w<1e-4&&(w=M),Et.initNonuniformCatmullRom(f.x,m.x,y.x,d.x,b,M,w),Tt.initNonuniformCatmullRom(f.y,m.y,y.y,d.y,b,M,w),Ct.initNonuniformCatmullRom(f.z,m.z,y.z,d.z,b,M,w)}else this.curveType==="catmullrom"&&(Et.initCatmullRom(f.x,m.x,y.x,d.x,this.tension),Tt.initCatmullRom(f.y,m.y,y.y,d.y,this.tension),Ct.initCatmullRom(f.z,m.z,y.z,d.z,this.tension));return n.set(Et.calc(h),Tt.calc(h),Ct.calc(h)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new $().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Ul.prototype.isCatmullRomCurve3=!0;function us(i,e,t,n,r){const o=(n-e)*.5,s=(r-t)*.5,a=i*i,h=i*a;return(2*t-2*n+o+s)*h+(-3*t+3*n-2*o-s)*a+o*i+t}function Ky(i,e){const t=1-i;return t*t*e}function ev(i,e){return 2*(1-i)*i*e}function tv(i,e){return i*i*e}function w7(i,e,t,n){return Ky(i,e)+ev(i,t)+tv(i,n)}function nv(i,e){const t=1-i;return t*t*t*e}function iv(i,e){const t=1-i;return 3*t*t*i*e}function rv(i,e){return 3*(1-i)*i*i*e}function ov(i,e){return i*i*i*e}function M7(i,e,t,n,r){return nv(i,e)+iv(i,t)+rv(i,n)+ov(i,r)}class yi extends v2{constructor(e=new D0,t=new D0,n=new D0,r=new D0){super();this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new D0){const n=t,r=this.v0,o=this.v1,s=this.v2,a=this.v3;return n.set(M7(e,r.x,o.x,s.x,a.x),M7(e,r.y,o.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}yi.prototype.isCubicBezierCurve=!0;class vi extends v2{constructor(e=new $,t=new $,n=new $,r=new $){super();this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new $){const n=t,r=this.v0,o=this.v1,s=this.v2,a=this.v3;return n.set(M7(e,r.x,o.x,s.x,a.x),M7(e,r.y,o.y,s.y,a.y),M7(e,r.z,o.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}vi.prototype.isCubicBezierCurve3=!0;class ye extends v2{constructor(e=new D0,t=new D0){super();this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new D0){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new D0;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ye.prototype.isLineCurve=!0;class sv extends v2{constructor(e=new $,t=new $){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new $){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class xi extends v2{constructor(e=new D0,t=new D0,n=new D0){super();this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D0){const n=t,r=this.v0,o=this.v1,s=this.v2;return n.set(w7(e,r.x,o.x,s.x),w7(e,r.y,o.y,s.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}xi.prototype.isQuadraticBezierCurve=!0;class ve extends v2{constructor(e=new $,t=new $,n=new $){super();this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new $){const n=t,r=this.v0,o=this.v1,s=this.v2;return n.set(w7(e,r.x,o.x,s.x),w7(e,r.y,o.y,s.y),w7(e,r.z,o.z,s.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ve.prototype.isQuadraticBezierCurve3=!0;class _i extends v2{constructor(e=[]){super();this.type="SplineCurve",this.points=e}getPoint(e,t=new D0){const n=t,r=this.points,o=(r.length-1)*e,s=Math.floor(o),a=o-s,h=r[s===0?s:s-1],f=r[s],d=r[s>r.length-2?r.length-1:s+1],m=r[s>r.length-3?r.length-1:s+2];return n.set(us(a,h.x,f.x,d.x,m.x),us(a,h.y,f.y,d.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new D0().fromArray(r))}return this}}_i.prototype.isSplineCurve=!0;var bi=Object.freeze({__proto__:null,ArcCurve:Nl,CatmullRomCurve3:Ul,CubicBezierCurve:yi,CubicBezierCurve3:vi,EllipseCurve:ge,LineCurve:ye,LineCurve3:sv,QuadraticBezierCurve:xi,QuadraticBezierCurve3:ve,SplineCurve:_i});class av extends v2{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ye(t,e))}getPoint(e,t){const n=e*this.getLength(),r=this.getCurveLengths();let o=0;for(;o<r.length;){if(r[o]>=n){const s=r[o]-n,a=this.curves[o],h=a.getLength(),f=h===0?0:1-s/h;return a.getPointAt(f,t)}o++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,o=this.curves;r<o.length;r++){const s=o[r],a=s.isEllipseCurve?e*2:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,h=s.getPoints(a);for(let f=0;f<h.length;f++){const d=h[f];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(new bi[r.type]().fromJSON(r))}return this}}class R3 extends av{constructor(e){super();this.type="Path",this.currentPoint=new D0,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ye(this.currentPoint.clone(),new D0(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const o=new xi(this.currentPoint.clone(),new D0(e,t),new D0(n,r));return this.curves.push(o),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,o,s){const a=new yi(this.currentPoint.clone(),new D0(e,t),new D0(n,r),new D0(o,s));return this.curves.push(a),this.currentPoint.set(o,s),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new _i(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,o,s){const a=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(e+a,t+h,n,r,o,s),this}absarc(e,t,n,r,o,s){return this.absellipse(e,t,n,n,r,o,s),this}ellipse(e,t,n,r,o,s,a,h){const f=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+f,t+d,n,r,o,s,a,h),this}absellipse(e,t,n,r,o,s,a,h){const f=new ge(e,t,n,r,o,s,a,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const d=f.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class wi extends C1{constructor(e=1,t=8,n=0,r=Math.PI*2){super();this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const o=[],s=[],a=[],h=[],f=new $,d=new D0;s.push(0,0,0),a.push(0,0,1),h.push(.5,.5);for(let m=0,y=3;m<=t;m++,y+=3){const v=n+m/t*r;f.x=e*Math.cos(v),f.y=e*Math.sin(v),s.push(f.x,f.y,f.z),a.push(0,0,1),d.x=(s[y]/e+1)/2,d.y=(s[y+1]/e+1)/2,h.push(d.x,d.y)}for(let m=1;m<=t;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new T1(s,3)),this.setAttribute("normal",new T1(a,3)),this.setAttribute("uv",new T1(h,2))}static fromJSON(e){return new wi(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Mi extends C1{constructor(e=1,t=1,n=1,r=8,o=1,s=!1,a=0,h=Math.PI*2){super();this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:o,openEnded:s,thetaStart:a,thetaLength:h};const f=this;r=Math.floor(r),o=Math.floor(o);const d=[],m=[],y=[],v=[];let b=0;const M=[],w=n/2;let E=0;T(),s===!1&&(e>0&&C(!0),t>0&&C(!1)),this.setIndex(d),this.setAttribute("position",new T1(m,3)),this.setAttribute("normal",new T1(y,3)),this.setAttribute("uv",new T1(v,2));function T(){const P=new $,R=new $;let I=0;const q=(t-e)/n;for(let D=0;D<=o;D++){const O=[],k=D/o,B=k*(t-e)+e;for(let j=0;j<=r;j++){const Y=j/r,z=Y*h+a,G=Math.sin(z),X=Math.cos(z);R.x=B*G,R.y=-k*n+w,R.z=B*X,m.push(R.x,R.y,R.z),P.set(G,q,X).normalize(),y.push(P.x,P.y,P.z),v.push(Y,1-k),O.push(b++)}M.push(O)}for(let D=0;D<r;D++)for(let O=0;O<o;O++){const k=M[O][D],B=M[O+1][D],j=M[O+1][D+1],Y=M[O][D+1];d.push(k,B,Y),d.push(B,j,Y),I+=6}f.addGroup(E,I,0),E+=I}function C(P){const R=b,I=new D0,q=new $;let D=0;const O=P===!0?e:t,k=P===!0?1:-1;for(let j=1;j<=r;j++)m.push(0,w*k,0),y.push(0,k,0),v.push(.5,.5),b++;const B=b;for(let j=0;j<=r;j++){const z=j/r*h+a,G=Math.cos(z),X=Math.sin(z);q.x=O*X,q.y=w*k,q.z=O*G,m.push(q.x,q.y,q.z),y.push(0,k,0),I.x=G*.5+.5,I.y=X*.5*k+.5,v.push(I.x,I.y),b++}for(let j=0;j<r;j++){const Y=R+j,z=B+j;P===!0?d.push(z,z+1,Y):d.push(z+1,z,Y),D+=3}f.addGroup(E,D,P===!0?1:2),E+=D}}static fromJSON(e){return new Mi(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}new $;new $;new $;new _9;class K4 extends R3{constructor(e){super(e);this.uuid=j2(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(new R3().fromJSON(r))}return this}}const lv={triangulate:function(i,e,t=2){const n=e&&e.length,r=n?e[0]*t:i.length;let o=zl(i,0,r,t,!0);const s=[];if(!o||o.next===o.prev)return s;let a,h,f,d,m,y,v;if(n&&(o=hv(i,e,o,t)),i.length>80*t){a=f=i[0],h=d=i[1];for(let b=t;b<r;b+=t)m=i[b],y=i[b+1],m<a&&(a=m),y<h&&(h=y),m>f&&(f=m),y>d&&(d=y);v=Math.max(f-a,d-h),v=v!==0?1/v:0}return B7(o,s,t,a,h,v),s}};function zl(i,e,t,n,r){let o,s;if(r===Mv(i,e,t,n)>0)for(o=e;o<t;o+=n)s=cs(o,i[o],i[o+1],s);else for(o=t-n;o>=e;o-=n)s=cs(o,i[o],i[o+1],s);return s&&xe(s,s.next)&&(q7(s),s=s.next),s}function n5(i,e){if(!i)return i;e||(e=i);let t=i,n;do if(n=!1,!t.steiner&&(xe(t,t.next)||c9(t.prev,t,t.next)===0)){if(q7(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function B7(i,e,t,n,r,o,s){if(!i)return;!s&&o&&yv(i,n,r,o);let a=i,h,f;for(;i.prev!==i.next;){if(h=i.prev,f=i.next,o?uv(i,n,r,o):Av(i)){e.push(h.i/t),e.push(i.i/t),e.push(f.i/t),q7(i),i=f.next,a=f.next;continue}if(i=f,i===a){s?s===1?(i=cv(n5(i),e,t),B7(i,e,t,n,r,o,2)):s===2&&fv(i,e,t,n,r,o):B7(n5(i),e,t,n,r,o,1);break}}}function Av(i){const e=i.prev,t=i,n=i.next;if(c9(e,t,n)>=0)return!1;let r=i.next.next;for(;r!==i.prev;){if(x6(e.x,e.y,t.x,t.y,n.x,n.y,r.x,r.y)&&c9(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function uv(i,e,t,n){const r=i.prev,o=i,s=i.next;if(c9(r,o,s)>=0)return!1;const a=r.x<o.x?r.x<s.x?r.x:s.x:o.x<s.x?o.x:s.x,h=r.y<o.y?r.y<s.y?r.y:s.y:o.y<s.y?o.y:s.y,f=r.x>o.x?r.x>s.x?r.x:s.x:o.x>s.x?o.x:s.x,d=r.y>o.y?r.y>s.y?r.y:s.y:o.y>s.y?o.y:s.y,m=an(a,h,e,t,n),y=an(f,d,e,t,n);let v=i.prevZ,b=i.nextZ;for(;v&&v.z>=m&&b&&b.z<=y;){if(v!==i.prev&&v!==i.next&&x6(r.x,r.y,o.x,o.y,s.x,s.y,v.x,v.y)&&c9(v.prev,v,v.next)>=0||(v=v.prevZ,b!==i.prev&&b!==i.next&&x6(r.x,r.y,o.x,o.y,s.x,s.y,b.x,b.y)&&c9(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;v&&v.z>=m;){if(v!==i.prev&&v!==i.next&&x6(r.x,r.y,o.x,o.y,s.x,s.y,v.x,v.y)&&c9(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;b&&b.z<=y;){if(b!==i.prev&&b!==i.next&&x6(r.x,r.y,o.x,o.y,s.x,s.y,b.x,b.y)&&c9(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function cv(i,e,t){let n=i;do{const r=n.prev,o=n.next.next;!xe(r,o)&&Gl(r,n,n.next,o)&&O7(r,o)&&O7(o,r)&&(e.push(r.i/t),e.push(n.i/t),e.push(o.i/t),q7(n),q7(n.next),n=i=o),n=n.next}while(n!==i);return n5(n)}function fv(i,e,t,n,r,o){let s=i;do{let a=s.next.next;for(;a!==s.prev;){if(s.i!==a.i&&_v(s,a)){let h=Hl(s,a);s=n5(s,s.next),h=n5(h,h.next),B7(s,e,t,n,r,o),B7(h,e,t,n,r,o);return}a=a.next}s=s.next}while(s!==i)}function hv(i,e,t,n){const r=[];let o,s,a,h,f;for(o=0,s=e.length;o<s;o++)a=e[o]*n,h=o<s-1?e[o+1]*n:i.length,f=zl(i,a,h,n,!1),f===f.next&&(f.steiner=!0),r.push(xv(f));for(r.sort(dv),o=0;o<r.length;o++)pv(r[o],t),t=n5(t,t.next);return t}function dv(i,e){return i.x-e.x}function pv(i,e){if(e=mv(i,e),e){const t=Hl(e,i);n5(e,e.next),n5(t,t.next)}}function mv(i,e){let t=e;const n=i.x,r=i.y;let o=-1/0,s;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const y=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(y<=n&&y>o){if(o=y,y===n){if(r===t.y)return t;if(r===t.next.y)return t.next}s=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!s)return null;if(n===o)return s;const a=s,h=s.x,f=s.y;let d=1/0,m;t=s;do n>=t.x&&t.x>=h&&n!==t.x&&x6(r<f?n:o,r,h,f,r<f?o:n,r,t.x,t.y)&&(m=Math.abs(r-t.y)/(n-t.x),O7(t,i)&&(m<d||m===d&&(t.x>s.x||t.x===s.x&&gv(s,t)))&&(s=t,d=m)),t=t.next;while(t!==a);return s}function gv(i,e){return c9(i.prev,i,e.prev)<0&&c9(e.next,i,i.next)<0}function yv(i,e,t,n){let r=i;do r.z===null&&(r.z=an(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,vv(r)}function vv(i){let e,t,n,r,o,s,a,h,f=1;do{for(t=i,i=null,o=null,s=0;t;){for(s++,n=t,a=0,e=0;e<f&&(a++,n=n.nextZ,!!n);e++);for(h=f;a>0||h>0&&n;)a!==0&&(h===0||!n||t.z<=n.z)?(r=t,t=t.nextZ,a--):(r=n,n=n.nextZ,h--),o?o.nextZ=r:i=r,r.prevZ=o,o=r;t=n}o.nextZ=null,f*=2}while(s>1);return i}function an(i,e,t,n,r){return i=32767*(i-t)*r,e=32767*(e-n)*r,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function xv(i){let e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function x6(i,e,t,n,r,o,s,a){return(r-s)*(e-a)-(i-s)*(o-a)>=0&&(i-s)*(n-a)-(t-s)*(e-a)>=0&&(t-s)*(o-a)-(r-s)*(n-a)>=0}function _v(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!bv(i,e)&&(O7(i,e)&&O7(e,i)&&wv(i,e)&&(c9(i.prev,i,e.prev)||c9(i,e.prev,e))||xe(i,e)&&c9(i.prev,i,i.next)>0&&c9(e.prev,e,e.next)>0)}function c9(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function xe(i,e){return i.x===e.x&&i.y===e.y}function Gl(i,e,t,n){const r=V8(c9(i,e,t)),o=V8(c9(i,e,n)),s=V8(c9(t,n,i)),a=V8(c9(t,n,e));return!!(r!==o&&s!==a||r===0&&H8(i,t,e)||o===0&&H8(i,n,e)||s===0&&H8(t,i,n)||a===0&&H8(t,e,n))}function H8(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function V8(i){return i>0?1:i<0?-1:0}function bv(i,e){let t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&Gl(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function O7(i,e){return c9(i.prev,i,i.next)<0?c9(i,e,i.next)>=0&&c9(i,i.prev,e)>=0:c9(i,e,i.prev)<0||c9(i,i.next,e)<0}function wv(i,e){let t=i,n=!1;const r=(i.x+e.x)/2,o=(i.y+e.y)/2;do t.y>o!=t.next.y>o&&t.next.y!==t.y&&r<(t.next.x-t.x)*(o-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function Hl(i,e){const t=new ln(i.i,i.x,i.y),n=new ln(e.i,e.x,e.y),r=i.next,o=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,o.next=n,n.prev=o,n}function cs(i,e,t,n){const r=new ln(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function q7(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function ln(i,e,t){this.i=i,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Mv(i,e,t,n){let r=0;for(let o=e,s=t-n;o<t;o+=n)r+=(i[s]-i[o])*(i[o+1]+i[s+1]),s=o;return r}class w4{static area(e){const t=e.length;let n=0;for(let r=t-1,o=0;o<t;r=o++)n+=e[r].x*e[o].y-e[o].x*e[r].y;return n*.5}static isClockWise(e){return w4.area(e)<0}static triangulateShape(e,t){const n=[],r=[],o=[];fs(e),hs(n,e);let s=e.length;t.forEach(fs);for(let h=0;h<t.length;h++)r.push(s),s+=t[h].length,hs(n,t[h]);const a=lv.triangulate(n,r);for(let h=0;h<a.length;h+=3)o.push(a.slice(h,h+3));return o}}function fs(i){const e=i.length;e>2&&i[e-1].equals(i[0])&&i.pop()}function hs(i,e){for(let t=0;t<e.length;t++)i.push(e[t].x),i.push(e[t].y)}class k5 extends C1{constructor(e=new K4([new D0(.5,.5),new D0(-.5,.5),new D0(-.5,-.5),new D0(.5,-.5)]),t={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],o=[];for(let a=0,h=e.length;a<h;a++){const f=e[a];s(f)}this.setAttribute("position",new T1(r,3)),this.setAttribute("uv",new T1(o,2)),this.computeVertexNormals();function s(a){const h=[],f=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1;let m=t.depth!==void 0?t.depth:1,y=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,b=t.bevelSize!==void 0?t.bevelSize:v-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,w=t.bevelSegments!==void 0?t.bevelSegments:3;const E=t.extrudePath,T=t.UVGenerator!==void 0?t.UVGenerator:Sv;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),m=t.amount);let C,P=!1,R,I,q,D;E&&(C=E.getSpacedPoints(d),P=!0,y=!1,R=E.computeFrenetFrames(d,!1),I=new $,q=new $,D=new $),y||(w=0,v=0,b=0,M=0);const O=a.extractPoints(f);let k=O.shape;const B=O.holes;if(!w4.isClockWise(k)){k=k.reverse();for(let w0=0,N=B.length;w0<N;w0++){const Z=B[w0];w4.isClockWise(Z)&&(B[w0]=Z.reverse())}}const Y=w4.triangulateShape(k,B),z=k;for(let w0=0,N=B.length;w0<N;w0++){const Z=B[w0];k=k.concat(Z)}function G(w0,N,Z){return N||console.error("THREE.ExtrudeGeometry: vec does not exist"),N.clone().multiplyScalar(Z).add(w0)}const X=k.length,o0=Y.length;function a0(w0,N,Z){let H,v0,L0;const m0=w0.x-N.x,U0=w0.y-N.y,c1=Z.x-w0.x,s1=Z.y-w0.y,e0=m0*m0+U0*U0,V=m0*s1-U0*c1;if(Math.abs(V)>Number.EPSILON){const M0=Math.sqrt(e0),B0=Math.sqrt(c1*c1+s1*s1),Y0=N.x-U0/M0,r1=N.y+m0/M0,d1=Z.x-s1/B0,J=Z.y+c1/B0,k0=((d1-Y0)*s1-(J-r1)*c1)/(m0*s1-U0*c1);H=Y0+m0*k0-w0.x,v0=r1+U0*k0-w0.y;const f1=H*H+v0*v0;if(f1<=2)return new D0(H,v0);L0=Math.sqrt(f1/2)}else{let M0=!1;m0>Number.EPSILON?c1>Number.EPSILON&&(M0=!0):m0<-Number.EPSILON?c1<-Number.EPSILON&&(M0=!0):Math.sign(U0)===Math.sign(s1)&&(M0=!0),M0?(H=-U0,v0=m0,L0=Math.sqrt(e0)):(H=m0,v0=U0,L0=Math.sqrt(e0/2))}return new D0(H/L0,v0/L0)}const u0=[];for(let w0=0,N=z.length,Z=N-1,H=w0+1;w0<N;w0++,Z++,H++)Z===N&&(Z=0),H===N&&(H=0),u0[w0]=a0(z[w0],z[Z],z[H]);const l0=[];let b0,i0=u0.concat();for(let w0=0,N=B.length;w0<N;w0++){const Z=B[w0];b0=[];for(let H=0,v0=Z.length,L0=v0-1,m0=H+1;H<v0;H++,L0++,m0++)L0===v0&&(L0=0),m0===v0&&(m0=0),b0[H]=a0(Z[H],Z[L0],Z[m0]);l0.push(b0),i0=i0.concat(b0)}for(let w0=0;w0<w;w0++){const N=w0/w,Z=v*Math.cos(N*Math.PI/2),H=b*Math.sin(N*Math.PI/2)+M;for(let v0=0,L0=z.length;v0<L0;v0++){const m0=G(z[v0],u0[v0],H);p0(m0.x,m0.y,-Z)}for(let v0=0,L0=B.length;v0<L0;v0++){const m0=B[v0];b0=l0[v0];for(let U0=0,c1=m0.length;U0<c1;U0++){const s1=G(m0[U0],b0[U0],H);p0(s1.x,s1.y,-Z)}}}const g0=b+M;for(let w0=0;w0<X;w0++){const N=y?G(k[w0],i0[w0],g0):k[w0];P?(q.copy(R.normals[0]).multiplyScalar(N.x),I.copy(R.binormals[0]).multiplyScalar(N.y),D.copy(C[0]).add(q).add(I),p0(D.x,D.y,D.z)):p0(N.x,N.y,0)}for(let w0=1;w0<=d;w0++)for(let N=0;N<X;N++){const Z=y?G(k[N],i0[N],g0):k[N];P?(q.copy(R.normals[w0]).multiplyScalar(Z.x),I.copy(R.binormals[w0]).multiplyScalar(Z.y),D.copy(C[w0]).add(q).add(I),p0(D.x,D.y,D.z)):p0(Z.x,Z.y,m/d*w0)}for(let w0=w-1;w0>=0;w0--){const N=w0/w,Z=v*Math.cos(N*Math.PI/2),H=b*Math.sin(N*Math.PI/2)+M;for(let v0=0,L0=z.length;v0<L0;v0++){const m0=G(z[v0],u0[v0],H);p0(m0.x,m0.y,m+Z)}for(let v0=0,L0=B.length;v0<L0;v0++){const m0=B[v0];b0=l0[v0];for(let U0=0,c1=m0.length;U0<c1;U0++){const s1=G(m0[U0],b0[U0],H);P?p0(s1.x,s1.y+C[d-1].y,C[d-1].x+Z):p0(s1.x,s1.y,m+Z)}}}P0(),T0();function P0(){const w0=r.length/3;if(y){let N=0,Z=X*N;for(let H=0;H<o0;H++){const v0=Y[H];E0(v0[2]+Z,v0[1]+Z,v0[0]+Z)}N=d+w*2,Z=X*N;for(let H=0;H<o0;H++){const v0=Y[H];E0(v0[0]+Z,v0[1]+Z,v0[2]+Z)}}else{for(let N=0;N<o0;N++){const Z=Y[N];E0(Z[2],Z[1],Z[0])}for(let N=0;N<o0;N++){const Z=Y[N];E0(Z[0]+X*d,Z[1]+X*d,Z[2]+X*d)}}n.addGroup(w0,r.length/3-w0,0)}function T0(){const w0=r.length/3;let N=0;d0(z,N),N+=z.length;for(let Z=0,H=B.length;Z<H;Z++){const v0=B[Z];d0(v0,N),N+=v0.length}n.addGroup(w0,r.length/3-w0,1)}function d0(w0,N){let Z=w0.length;for(;--Z>=0;){const H=Z;let v0=Z-1;v0<0&&(v0=w0.length-1);for(let L0=0,m0=d+w*2;L0<m0;L0++){const U0=X*L0,c1=X*(L0+1),s1=N+H+U0,e0=N+v0+U0,V=N+v0+c1,M0=N+H+c1;I0(s1,e0,V,M0)}}}function p0(w0,N,Z){h.push(w0),h.push(N),h.push(Z)}function E0(w0,N,Z){_0(w0),_0(N),_0(Z);const H=r.length/3,v0=T.generateTopUV(n,r,H-3,H-2,H-1);H0(v0[0]),H0(v0[1]),H0(v0[2])}function I0(w0,N,Z,H){_0(w0),_0(N),_0(H),_0(N),_0(Z),_0(H);const v0=r.length/3,L0=T.generateSideWallUV(n,r,v0-6,v0-3,v0-2,v0-1);H0(L0[0]),H0(L0[1]),H0(L0[3]),H0(L0[1]),H0(L0[2]),H0(L0[3])}function _0(w0){r.push(h[w0*3+0]),r.push(h[w0*3+1]),r.push(h[w0*3+2])}function H0(w0){o.push(w0.x),o.push(w0.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Ev(t,n,e)}static fromJSON(e,t){const n=[];for(let o=0,s=e.shapes.length;o<s;o++){const a=t[e.shapes[o]];n.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new bi[r.type]().fromJSON(r)),new k5(n,e.options)}}const Sv={generateTopUV:function(i,e,t,n,r){const o=e[t*3],s=e[t*3+1],a=e[n*3],h=e[n*3+1],f=e[r*3],d=e[r*3+1];return[new D0(o,s),new D0(a,h),new D0(f,d)]},generateSideWallUV:function(i,e,t,n,r,o){const s=e[t*3],a=e[t*3+1],h=e[t*3+2],f=e[n*3],d=e[n*3+1],m=e[n*3+2],y=e[r*3],v=e[r*3+1],b=e[r*3+2],M=e[o*3],w=e[o*3+1],E=e[o*3+2];return Math.abs(a-d)<Math.abs(s-f)?[new D0(s,1-h),new D0(f,1-m),new D0(y,1-b),new D0(M,1-E)]:[new D0(a,1-h),new D0(d,1-m),new D0(v,1-b),new D0(w,1-E)]}};function Ev(i,e,t){if(t.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const o=i[n];t.shapes.push(o.uuid)}else t.shapes.push(i.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Si extends C1{constructor(e=new K4([new D0(0,.5),new D0(-.5,-.5),new D0(.5,-.5)]),t=12){super();this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],o=[],s=[];let a=0,h=0;if(Array.isArray(e)===!1)f(e);else for(let d=0;d<e.length;d++)f(e[d]),this.addGroup(a,h,d),a+=h,h=0;this.setIndex(n),this.setAttribute("position",new T1(r,3)),this.setAttribute("normal",new T1(o,3)),this.setAttribute("uv",new T1(s,2));function f(d){const m=r.length/3,y=d.extractPoints(t);let v=y.shape;const b=y.holes;w4.isClockWise(v)===!1&&(v=v.reverse());for(let w=0,E=b.length;w<E;w++){const T=b[w];w4.isClockWise(T)===!0&&(b[w]=T.reverse())}const M=w4.triangulateShape(v,b);for(let w=0,E=b.length;w<E;w++){const T=b[w];v=v.concat(T)}for(let w=0,E=v.length;w<E;w++){const T=v[w];r.push(T.x,T.y,0),o.push(0,0,1),s.push(T.x,T.y)}for(let w=0,E=M.length;w<E;w++){const T=M[w],C=T[0]+m,P=T[1]+m,R=T[2]+m;n.push(C,P,R),h+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Tv(t,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const s=t[e.shapes[r]];n.push(s)}return new Si(n,e.curveSegments)}}function Tv(i,e){if(e.shapes=[],Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const r=i[t];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e}class Q6 extends C1{constructor(e=1,t=32,n=16,r=0,o=Math.PI*2,s=0,a=Math.PI){super();this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:o,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const h=Math.min(s+a,Math.PI);let f=0;const d=[],m=new $,y=new $,v=[],b=[],M=[],w=[];for(let E=0;E<=n;E++){const T=[],C=E/n;let P=0;E==0&&s==0?P=.5/t:E==n&&h==Math.PI&&(P=-.5/t);for(let R=0;R<=t;R++){const I=R/t;m.x=-e*Math.cos(r+I*o)*Math.sin(s+C*a),m.y=e*Math.cos(s+C*a),m.z=e*Math.sin(r+I*o)*Math.sin(s+C*a),b.push(m.x,m.y,m.z),y.copy(m).normalize(),M.push(y.x,y.y,y.z),w.push(I+P,1-C),T.push(f++)}d.push(T)}for(let E=0;E<n;E++)for(let T=0;T<t;T++){const C=d[E][T+1],P=d[E][T],R=d[E+1][T],I=d[E+1][T+1];(E!==0||s>0)&&v.push(C,P,I),(E!==n-1||h<Math.PI)&&v.push(P,R,I)}this.setIndex(v),this.setAttribute("position",new T1(b,3)),this.setAttribute("normal",new T1(M,3)),this.setAttribute("uv",new T1(w,2))}static fromJSON(e){return new Q6(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ei extends C1{constructor(e=new ve(new $(-1,-1,0),new $(-1,1,0),new $(1,1,0)),t=64,n=1,r=8,o=!1){super();this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:o};const s=e.computeFrenetFrames(t,o);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new $,h=new $,f=new D0;let d=new $;const m=[],y=[],v=[],b=[];M(),this.setIndex(b),this.setAttribute("position",new T1(m,3)),this.setAttribute("normal",new T1(y,3)),this.setAttribute("uv",new T1(v,2));function M(){for(let C=0;C<t;C++)w(C);w(o===!1?t:0),T(),E()}function w(C){d=e.getPointAt(C/t,d);const P=s.normals[C],R=s.binormals[C];for(let I=0;I<=r;I++){const q=I/r*Math.PI*2,D=Math.sin(q),O=-Math.cos(q);h.x=O*P.x+D*R.x,h.y=O*P.y+D*R.y,h.z=O*P.z+D*R.z,h.normalize(),y.push(h.x,h.y,h.z),a.x=d.x+n*h.x,a.y=d.y+n*h.y,a.z=d.z+n*h.z,m.push(a.x,a.y,a.z)}}function E(){for(let C=1;C<=t;C++)for(let P=1;P<=r;P++){const R=(r+1)*(C-1)+(P-1),I=(r+1)*C+(P-1),q=(r+1)*C+P,D=(r+1)*(C-1)+P;b.push(R,I,D),b.push(I,q,D)}}function T(){for(let C=0;C<=t;C++)for(let P=0;P<=r;P++)f.x=C/t,f.y=P/r,v.push(f.x,f.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Ei(new bi[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Cv extends C1{constructor(e=null){super();if(this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,r=new $,o=new $;if(e.index!==null){const s=e.attributes.position,a=e.index;let h=e.groups;h.length===0&&(h=[{start:0,count:a.count,materialIndex:0}]);for(let f=0,d=h.length;f<d;++f){const m=h[f],y=m.start,v=m.count;for(let b=y,M=y+v;b<M;b+=3)for(let w=0;w<3;w++){const E=a.getX(b+w),T=a.getX(b+(w+1)%3);r.fromBufferAttribute(s,E),o.fromBufferAttribute(s,T),ds(r,o,n)===!0&&(t.push(r.x,r.y,r.z),t.push(o.x,o.y,o.z))}}}else{const s=e.attributes.position;for(let a=0,h=s.count/3;a<h;a++)for(let f=0;f<3;f++){const d=3*a+f,m=3*a+(f+1)%3;r.fromBufferAttribute(s,d),o.fromBufferAttribute(s,m),ds(r,o,n)===!0&&(t.push(r.x,r.y,r.z),t.push(o.x,o.y,o.z))}}this.setAttribute("position",new T1(t,3))}}}function ds(i,e,t){const n=`${i.x},${i.y},${i.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${i.x},${i.y},${i.z}`;return t.has(n)===!0||t.has(r)===!0?!1:(t.add(n),t.add(r),!0)}class Vl extends T9{constructor(e){super();this.type="ShadowMaterial",this.color=new l1(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}Vl.prototype.isShadowMaterial=!0;class Wl extends F9{constructor(e){super(e);this.type="RawShaderMaterial"}}Wl.prototype.isRawShaderMaterial=!0;class Ti extends T9{constructor(e){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new l1(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new l1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=H6,this.normalScale=new D0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Ti.prototype.isMeshStandardMaterial=!0;class jl extends Ti{constructor(e){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new D0(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return E9(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new l1(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new l1(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new l1(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}jl.prototype.isMeshPhysicalMaterial=!0;class _e extends T9{constructor(e){super();this.type="MeshPhongMaterial",this.color=new l1(16777215),this.specular=new l1(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new l1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=H6,this.normalScale=new D0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ue,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}_e.prototype.isMeshPhongMaterial=!0;class Ql extends T9{constructor(e){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new l1(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new l1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=H6,this.normalScale=new D0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Ql.prototype.isMeshToonMaterial=!0;class $l extends T9{constructor(e){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=H6,this.normalScale=new D0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}$l.prototype.isMeshNormalMaterial=!0;class A5 extends T9{constructor(e){super();this.type="MeshLambertMaterial",this.color=new l1(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new l1(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ue,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}A5.prototype.isMeshLambertMaterial=!0;class Yl extends T9{constructor(e){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new l1(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=H6,this.normalScale=new D0(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Yl.prototype.isMeshMatcapMaterial=!0;class Xl extends D4{constructor(e){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Xl.prototype.isLineDashedMaterial=!0;const Pv={ShadowMaterial:Vl,SpriteMaterial:pi,RawShaderMaterial:Wl,ShaderMaterial:F9,PointsMaterial:mi,MeshPhysicalMaterial:jl,MeshStandardMaterial:Ti,MeshPhongMaterial:_e,MeshToonMaterial:Ql,MeshNormalMaterial:$l,MeshLambertMaterial:A5,MeshDepthMaterial:fi,MeshDistanceMaterial:hi,MeshBasicMaterial:l5,MeshMatcapMaterial:Yl,LineDashedMaterial:Xl,LineBasicMaterial:D4,Material:T9};T9.fromType=function(i){return new Pv[i]};const l9={arraySlice:function(i,e,t){return l9.isTypedArray(i)?new i.constructor(i.subarray(e,t!==void 0?t:i.length)):i.slice(e,t)},convertArray:function(i,e,t){return!i||!t&&i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)},isTypedArray:function(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)},getKeyframeOrder:function(i){function e(r,o){return i[r]-i[o]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n},sortedArray:function(i,e,t){const n=i.length,r=new i.constructor(n);for(let o=0,s=0;s!==n;++o){const a=t[o]*e;for(let h=0;h!==e;++h)r[s++]=i[a+h]}return r},flattenJSON:function(i,e,t,n){let r=1,o=i[0];for(;o!==void 0&&o[n]===void 0;)o=i[r++];if(o===void 0)return;let s=o[n];if(s!==void 0)if(Array.isArray(s))do s=o[n],s!==void 0&&(e.push(o.time),t.push.apply(t,s)),o=i[r++];while(o!==void 0);else if(s.toArray!==void 0)do s=o[n],s!==void 0&&(e.push(o.time),s.toArray(t,t.length)),o=i[r++];while(o!==void 0);else do s=o[n],s!==void 0&&(e.push(o.time),t.push(s)),o=i[r++];while(o!==void 0)},subclip:function(i,e,t,n,r=30){const o=i.clone();o.name=e;const s=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],d=f.getValueSize(),m=[],y=[];for(let v=0;v<f.times.length;++v){const b=f.times[v]*r;if(!(b<t||b>=n)){m.push(f.times[v]);for(let M=0;M<d;++M)y.push(f.values[v*d+M])}}m.length!==0&&(f.times=l9.convertArray(m,f.times.constructor),f.values=l9.convertArray(y,f.values.constructor),s.push(f))}o.tracks=s;let a=1/0;for(let h=0;h<o.tracks.length;++h)a>o.tracks[h].times[0]&&(a=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(i,e=0,t=i,n=30){n<=0&&(n=30);const r=t.tracks.length,o=e/n;for(let s=0;s<r;++s){const a=t.tracks[s],h=a.ValueTypeName;if(h==="bool"||h==="string")continue;const f=i.tracks.find(function(E){return E.name===a.name&&E.ValueTypeName===h});if(f===void 0)continue;let d=0;const m=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);let y=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(y=v/3);const b=a.times.length-1;let M;if(o<=a.times[0]){const E=d,T=m-d;M=l9.arraySlice(a.values,E,T)}else if(o>=a.times[b]){const E=b*m+d,T=E+m-d;M=l9.arraySlice(a.values,E,T)}else{const E=a.createInterpolant(),T=d,C=m-d;E.evaluate(o),M=l9.arraySlice(E.resultBuffer,T,C)}h==="quaternion"&&new b9().fromArray(M).normalize().conjugate().toArray(M);const w=f.times.length;for(let E=0;E<w;++E){const T=E*v+y;if(h==="quaternion")b9.multiplyQuaternionsFlat(f.values,T,M,0,f.values,T);else{const C=v-y*2;for(let P=0;P<C;++P)f.values[T+P]-=M[P]}}}return i.blendMode=xl,i}};class i5{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],o=t[n-1];e:{t:{let s;n:{i:if(!(e<r)){for(let a=n+2;;){if(r===void 0){if(e<o)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,o)}if(n===a)break;if(o=r,r=t[++n],e<r)break t}s=t.length;break n}if(!(e>=o)){const a=t[1];e<a&&(n=2,o=a);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===h)break;if(r=o,o=t[--n-1],e>=o)break t}s=n,n=0;break n}break e}for(;n<s;){const a=n+s>>>1;e<t[a]?s=a:n=a+1}if(r=t[n],o=t[n-1],o===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,o,e)}this._cachedIndex=n,this.intervalChanged_(n,o,r)}return this.interpolate_(n,o,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,o=e*r;for(let s=0;s!==r;++s)t[s]=n[o+s];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}i5.prototype.beforeStart_=i5.prototype.copySampleValue_;i5.prototype.afterEnd_=i5.prototype.copySampleValue_;class Rv extends i5{constructor(e,t,n,r){super(e,t,n,r);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:g6,endingEnd:g6}}intervalChanged_(e,t,n){const r=this.parameterPositions;let o=e-2,s=e+1,a=r[o],h=r[s];if(a===void 0)switch(this.getSettings_().endingStart){case y6:o=e,a=2*t-n;break;case T3:o=r.length-2,a=t+r[o]-r[o+1];break;default:o=e,a=n}if(h===void 0)switch(this.getSettings_().endingEnd){case y6:s=e,h=2*n-t;break;case T3:s=1,h=n+r[1]-r[0];break;default:s=e-1,h=t}const f=(n-t)*.5,d=this.valueSize;this._weightPrev=f/(t-a),this._weightNext=f/(h-n),this._offsetPrev=o*d,this._offsetNext=s*d}interpolate_(e,t,n,r){const o=this.resultBuffer,s=this.sampleValues,a=this.valueSize,h=e*a,f=h-a,d=this._offsetPrev,m=this._offsetNext,y=this._weightPrev,v=this._weightNext,b=(n-t)/(r-t),M=b*b,w=M*b,E=-y*w+2*y*M-y*b,T=(1+y)*w+(-1.5-2*y)*M+(-.5+y)*b+1,C=(-1-v)*w+(1.5+v)*M+.5*b,P=v*w-v*M;for(let R=0;R!==a;++R)o[R]=E*s[d+R]+T*s[f+R]+C*s[h+R]+P*s[m+R];return o}}class Zl extends i5{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const o=this.resultBuffer,s=this.sampleValues,a=this.valueSize,h=e*a,f=h-a,d=(n-t)/(r-t),m=1-d;for(let y=0;y!==a;++y)o[y]=s[f+y]*m+s[h+y]*d;return o}}class Lv extends i5{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class l4{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=l9.convertArray(t,this.TimeBufferType),this.values=l9.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:l9.convertArray(e.times,Array),values:l9.convertArray(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Lv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Zl(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Rv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case S3:t=this.InterpolantFactoryMethodDiscrete;break;case E3:t=this.InterpolantFactoryMethodLinear;break;case Xe:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return S3;case this.InterpolantFactoryMethodLinear:return E3;case this.InterpolantFactoryMethodSmooth:return Xe}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let o=0,s=r-1;for(;o!==r&&n[o]<e;)++o;for(;s!==-1&&n[s]>t;)--s;if(++s,o!==0||s!==r){o>=s&&(s=Math.max(s,1),o=s-1);const a=this.getValueSize();this.times=l9.arraySlice(n,o,s),this.values=l9.arraySlice(this.values,o*a,s*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let a=0;a!==o;a++){const h=n[a];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,h),e=!1;break}if(s!==null&&s>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,h,s),e=!1;break}s=h}if(r!==void 0&&l9.isTypedArray(r))for(let a=0,h=r.length;a!==h;++a){const f=r[a];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,f),e=!1;break}}return e}optimize(){const e=l9.arraySlice(this.times),t=l9.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Xe,o=e.length-1;let s=1;for(let a=1;a<o;++a){let h=!1;const f=e[a],d=e[a+1];if(f!==d&&(a!==1||f!==e[0]))if(r)h=!0;else{const m=a*n,y=m-n,v=m+n;for(let b=0;b!==n;++b){const M=t[m+b];if(M!==t[y+b]||M!==t[v+b]){h=!0;break}}}if(h){if(a!==s){e[s]=e[a];const m=a*n,y=s*n;for(let v=0;v!==n;++v)t[y+v]=t[m+v]}++s}}if(o>0){e[s]=e[o];for(let a=o*n,h=s*n,f=0;f!==n;++f)t[h+f]=t[a+f];++s}return s!==e.length?(this.times=l9.arraySlice(e,0,s),this.values=l9.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this}clone(){const e=l9.arraySlice(this.times,0),t=l9.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}l4.prototype.TimeBufferType=Float32Array;l4.prototype.ValueBufferType=Float32Array;l4.prototype.DefaultInterpolation=E3;class $6 extends l4{}$6.prototype.ValueTypeName="bool";$6.prototype.ValueBufferType=Array;$6.prototype.DefaultInterpolation=S3;$6.prototype.InterpolantFactoryMethodLinear=void 0;$6.prototype.InterpolantFactoryMethodSmooth=void 0;class Jl extends l4{}Jl.prototype.ValueTypeName="color";class L3 extends l4{}L3.prototype.ValueTypeName="number";class Dv extends i5{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const o=this.resultBuffer,s=this.sampleValues,a=this.valueSize,h=(n-t)/(r-t);let f=e*a;for(let d=f+a;f!==d;f+=4)b9.slerpFlat(o,0,s,f-a,s,f,h);return o}}class J7 extends l4{InterpolantFactoryMethodLinear(e){return new Dv(this.times,this.values,this.getValueSize(),e)}}J7.prototype.ValueTypeName="quaternion";J7.prototype.DefaultInterpolation=E3;J7.prototype.InterpolantFactoryMethodSmooth=void 0;class Y6 extends l4{}Y6.prototype.ValueTypeName="string";Y6.prototype.ValueBufferType=Array;Y6.prototype.DefaultInterpolation=S3;Y6.prototype.InterpolantFactoryMethodLinear=void 0;Y6.prototype.InterpolantFactoryMethodSmooth=void 0;class D3 extends l4{}D3.prototype.ValueTypeName="vector";class ps{constructor(e,t=-1,n,r=ni){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=j2(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let s=0,a=n.length;s!==a;++s)t.push(Bv(n[s]).scale(r));const o=new this(e.name,e.duration,t,e.blendMode);return o.uuid=e.uuid,o}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let o=0,s=n.length;o!==s;++o)t.push(l4.toJSON(n[o]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const o=t.length,s=[];for(let a=0;a<o;a++){let h=[],f=[];h.push((a+o-1)%o,a,(a+1)%o),f.push(0,1,0);const d=l9.getKeyframeOrder(h);h=l9.sortedArray(h,1,d),f=l9.sortedArray(f,1,d),!r&&h[0]===0&&(h.push(o),f.push(f[0])),s.push(new L3(".morphTargetInfluences["+t[a].name+"]",h,f).scale(1/n))}return new this(e,-1,s)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},o=/^([\w-]*?)([\d]+)$/;for(let a=0,h=e.length;a<h;a++){const f=e[a],d=f.name.match(o);if(d&&d.length>1){const m=d[1];let y=r[m];y||(r[m]=y=[]),y.push(f)}}const s=[];for(const a in r)s.push(this.CreateFromMorphTargetSequence(a,r[a],t,n));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,y,v,b,M){if(v.length!==0){const w=[],E=[];l9.flattenJSON(v,w,E,b),w.length!==0&&M.push(new m(y,w,E))}},r=[],o=e.name||"default",s=e.fps||30,a=e.blendMode;let h=e.length||-1;const f=e.hierarchy||[];for(let m=0;m<f.length;m++){const y=f[m].keys;if(!(!y||y.length===0))if(y[0].morphTargets){const v={};let b;for(b=0;b<y.length;b++)if(y[b].morphTargets)for(let M=0;M<y[b].morphTargets.length;M++)v[y[b].morphTargets[M]]=-1;for(const M in v){const w=[],E=[];for(let T=0;T!==y[b].morphTargets.length;++T){const C=y[b];w.push(C.time),E.push(C.morphTarget===M?1:0)}r.push(new L3(".morphTargetInfluence["+M+"]",w,E))}h=v.length*s}else{const v=".bones["+t[m].name+"]";n(D3,v+".position",y,"pos",r),n(J7,v+".quaternion",y,"rot",r),n(D3,v+".scale",y,"scl",r)}}return r.length===0?null:new this(o,h,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const o=this.tracks[n];t=Math.max(t,o.times[o.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Iv(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return L3;case"vector":case"vector2":case"vector3":case"vector4":return D3;case"color":return Jl;case"quaternion":return J7;case"bool":case"boolean":return $6;case"string":return Y6}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function Bv(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Iv(i.type);if(i.times===void 0){const t=[],n=[];l9.flattenJSON(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const O6={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Ov{constructor(e,t,n){const r=this;let o=!1,s=0,a=0,h;const f=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){a++,o===!1&&r.onStart!==void 0&&r.onStart(d,s,a),o=!0},this.itemEnd=function(d){s++,r.onProgress!==void 0&&r.onProgress(d,s,a),s===a&&(o=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(d){r.onError!==void 0&&r.onError(d)},this.resolveURL=function(d){return h?h(d):d},this.setURLModifier=function(d){return h=d,this},this.addHandler=function(d,m){return f.push(d,m),this},this.removeHandler=function(d){const m=f.indexOf(d);return m!==-1&&f.splice(m,2),this},this.getHandler=function(d){for(let m=0,y=f.length;m<y;m+=2){const v=f[m],b=f[m+1];if(v.global&&(v.lastIndex=0),v.test(d))return b}return null}}}const qv=new Ov;class u5{constructor(e){this.manager=e!==void 0?e:qv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,o){n.load(e,r,t,o)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const p4={};class Fv extends u5{constructor(e){super(e)}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const o=O6.get(e);if(o!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(o),this.manager.itemEnd(e)},0),o;if(p4[e]!==void 0){p4[e].push({onLoad:t,onProgress:n,onError:r});return}p4[e]=[],p4[e].push({onLoad:t,onProgress:n,onError:r});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,h=this.responseType;fetch(s).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||f.body===void 0||f.body.getReader===void 0)return f;const d=p4[e],m=f.body.getReader(),y=f.headers.get("Content-Length"),v=y?parseInt(y):0,b=v!==0;let M=0;const w=new ReadableStream({start(E){T();function T(){m.read().then(({done:C,value:P})=>{if(C)E.close();else{M+=P.byteLength;const R=new ProgressEvent("progress",{lengthComputable:b,loaded:M,total:v});for(let I=0,q=d.length;I<q;I++){const D=d[I];D.onProgress&&D.onProgress(R)}E.enqueue(P),T()}})}}});return new Response(w)}else throw Error(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(d=>new DOMParser().parseFromString(d,a));case"json":return f.json();default:if(a===void 0)return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(a),y=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(y);return f.arrayBuffer().then(b=>v.decode(b))}}}).then(f=>{O6.add(e,f);const d=p4[e];delete p4[e];for(let m=0,y=d.length;m<y;m++){const v=d[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const d=p4[e];if(d===void 0)throw this.manager.itemError(e),f;delete p4[e];for(let m=0,y=d.length;m<y;m++){const v=d[m];v.onError&&v.onError(f)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Kl extends u5{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,s=O6.get(e);if(s!==void 0)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;const a=I7("img");function h(){d(),O6.add(e,this),t&&t(this),o.manager.itemEnd(e)}function f(m){d(),r&&r(m),o.manager.itemError(e),o.manager.itemEnd(e)}function d(){a.removeEventListener("load",h,!1),a.removeEventListener("error",f,!1)}return a.addEventListener("load",h,!1),a.addEventListener("error",f,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),o.manager.itemStart(e),a.src=e,a}}class kv extends u5{constructor(e){super(e)}load(e,t,n,r){const o=new de,s=new Kl(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function h(f){s.load(e[f],function(d){o.images[f]=d,a++,a===6&&(o.needsUpdate=!0,t&&t(o))},void 0,r)}for(let f=0;f<e.length;++f)h(f);return o}}class be extends u5{constructor(e){super(e)}load(e,t,n,r){const o=new D9,s=new Kl(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(a){o.image=a,o.needsUpdate=!0,t!==void 0&&t(o)},n,r),o}}class s4 extends H1{constructor(e,t=1){super();this.type="Light",this.color=new l1(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}s4.prototype.isLight=!0;class Nv extends s4{constructor(e,t,n){super(e,n);this.type="HemisphereLight",this.position.copy(H1.DefaultUp),this.updateMatrix(),this.groundColor=new l1(t)}copy(e){return s4.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Nv.prototype.isHemisphereLight=!0;const ms=new m1,gs=new $,ys=new $;class Ci{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new D0(512,512),this.map=null,this.mapPass=null,this.matrix=new m1,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new pe,this._frameExtents=new D0(1,1),this._viewportCount=1,this._viewports=[new Y1(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;gs.setFromMatrixPosition(e.matrixWorld),t.position.copy(gs),ys.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ys),t.updateMatrixWorld(),ms.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ms),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class eA extends Ci{constructor(){super(new $9(50,1,.5,500));this.focus=1}updateMatrices(e){const t=this.camera,n=D7*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,o=e.distance||t.far;(n!==t.fov||r!==t.aspect||o!==t.far)&&(t.fov=n,t.aspect=r,t.far=o,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}eA.prototype.isSpotLightShadow=!0;class Uv extends s4{constructor(e,t,n=0,r=Math.PI/3,o=0,s=1){super(e,t);this.type="SpotLight",this.position.copy(H1.DefaultUp),this.updateMatrix(),this.target=new H1,this.distance=n,this.angle=r,this.penumbra=o,this.decay=s,this.shadow=new eA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Uv.prototype.isSpotLight=!0;const vs=new m1,A7=new $,Pt=new $;class tA extends Ci{constructor(){super(new $9(90,1,.5,500));this._frameExtents=new D0(4,2),this._viewportCount=6,this._viewports=[new Y1(2,1,1,1),new Y1(0,1,1,1),new Y1(3,1,1,1),new Y1(1,1,1,1),new Y1(3,0,1,1),new Y1(1,0,1,1)],this._cubeDirections=[new $(1,0,0),new $(-1,0,0),new $(0,0,1),new $(0,0,-1),new $(0,1,0),new $(0,-1,0)],this._cubeUps=[new $(0,1,0),new $(0,1,0),new $(0,1,0),new $(0,1,0),new $(0,0,1),new $(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,o=e.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),A7.setFromMatrixPosition(e.matrixWorld),n.position.copy(A7),Pt.copy(n.position),Pt.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Pt),n.updateMatrixWorld(),r.makeTranslation(-A7.x,-A7.y,-A7.z),vs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(vs)}}tA.prototype.isPointLightShadow=!0;class zv extends s4{constructor(e,t,n=0,r=1){super(e,t);this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new tA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}zv.prototype.isPointLight=!0;class nA extends Ci{constructor(){super(new X7(-5,5,5,-5,.5,500))}}nA.prototype.isDirectionalLightShadow=!0;class iA extends s4{constructor(e,t){super(e,t);this.type="DirectionalLight",this.position.copy(H1.DefaultUp),this.updateMatrix(),this.target=new H1,this.shadow=new nA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}iA.prototype.isDirectionalLight=!0;class rA extends s4{constructor(e,t){super(e,t);this.type="AmbientLight"}}rA.prototype.isAmbientLight=!0;class Gv extends s4{constructor(e,t,n=10,r=10){super(e,t);this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Gv.prototype.isRectAreaLight=!0;class oA{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new $)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,o=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*r),t.addScaledVector(s[2],.488603*o),t.addScaledVector(s[3],.488603*n),t.addScaledVector(s[4],1.092548*(n*r)),t.addScaledVector(s[5],1.092548*(r*o)),t.addScaledVector(s[6],.315392*(3*o*o-1)),t.addScaledVector(s[7],1.092548*(n*o)),t.addScaledVector(s[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,o=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],2*.511664*r),t.addScaledVector(s[2],2*.511664*o),t.addScaledVector(s[3],2*.511664*n),t.addScaledVector(s[4],2*.429043*n*r),t.addScaledVector(s[5],2*.429043*r*o),t.addScaledVector(s[6],.743125*o*o-.247708),t.addScaledVector(s[7],2*.429043*n*o),t.addScaledVector(s[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,o=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*o,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*o,t[6]=.315392*(3*o*o-1),t[7]=1.092548*n*o,t[8]=.546274*(n*n-r*r)}}oA.prototype.isSphericalHarmonics3=!0;class Pi extends s4{constructor(e=new oA,t=1){super(void 0,t);this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Pi.prototype.isLightProbe=!0;class Hv{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class sA extends C1{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}sA.prototype.isInstancedBufferGeometry=!0;class Vv extends u5{constructor(e){super(e);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const o=this,s=O6.get(e);if(s!==void 0)return o.manager.itemStart(e),setTimeout(function(){t&&t(s),o.manager.itemEnd(e)},0),s;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(h){O6.add(e,h),t&&t(h),o.manager.itemEnd(e)}).catch(function(h){r&&r(h),o.manager.itemError(e),o.manager.itemEnd(e)}),o.manager.itemStart(e)}}Vv.prototype.isImageBitmapLoader=!0;let W8;const Wv={getContext:function(){return W8===void 0&&(W8=new(window.AudioContext||window.webkitAudioContext)),W8},setContext:function(i){W8=i}};class jv extends u5{constructor(e){super(e)}load(e,t,n,r){const o=this,s=new Fv(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(a){try{const h=a.slice(0);Wv.getContext().decodeAudioData(h,function(d){t(d)})}catch(h){r?r(h):console.error(h),o.manager.itemError(e)}},n,r)}}class Qv extends Pi{constructor(e,t,n=1){super(void 0,n);const r=new l1().set(e),o=new l1().set(t),s=new $(r.r,r.g,r.b),a=new $(o.r,o.g,o.b),h=Math.sqrt(Math.PI),f=h*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(h),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(f)}}Qv.prototype.isHemisphereLightProbe=!0;class $v extends Pi{constructor(e,t=1){super(void 0,t);const n=new l1().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}$v.prototype.isAmbientLightProbe=!0;class aA{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=xs(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=xs();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function xs(){return(typeof performance=="undefined"?Date:performance).now()}class Yv extends H1{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class Xv{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,o,s;switch(t){case"quaternion":r=this._slerp,o=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,o=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,o=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=o,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,o=e*r+r;let s=this.cumulativeWeight;if(s===0){for(let a=0;a!==r;++a)n[o+a]=n[a];s=t}else{s+=t;const a=t/s;this._mixBufferRegion(n,o,0,a,r)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,o=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=t*this._origIndex;this._mixBufferRegion(n,r,h,1-o,t)}s>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let h=t,f=t+t;h!==f;++h)if(n[h]!==n[h+t]){a.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let o=n,s=r;o!==s;++o)t[o]=t[r+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,o){if(r>=.5)for(let s=0;s!==o;++s)e[t+s]=e[n+s]}_slerp(e,t,n,r){b9.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,o){const s=this._workIndex*o;b9.multiplyQuaternionsFlat(e,s,e,t,e,n),b9.slerpFlat(e,t,e,t,e,s,r)}_lerp(e,t,n,r,o){const s=1-r;for(let a=0;a!==o;++a){const h=t+a;e[h]=e[h]*s+e[n+a]*r}}_lerpAdditive(e,t,n,r,o){for(let s=0;s!==o;++s){const a=t+s;e[a]=e[a]+e[n+s]*r}}}const Ri="\\[\\]\\.:\\/",Zv=new RegExp("["+Ri+"]","g"),Li="[^"+Ri+"]",Jv="[^"+Ri.replace("\\.","")+"]",Kv=/((?:WC+[\/:])*)/.source.replace("WC",Li),ex=/(WCOD+)?/.source.replace("WCOD",Jv),tx=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Li),nx=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Li),ix=new RegExp("^"+Kv+ex+tx+nx+"$"),rx=["material","materials","bones"];class ox{constructor(e,t,n){const r=n||$1.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,o=n.length;r!==o;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class $1{constructor(e,t,n){this.path=t,this.parsedPath=n||$1.parseTrackName(t),this.node=$1.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new $1.Composite(e,t,n):new $1(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Zv,"")}static parseTrackName(e){const t=ix.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const o=n.nodeName.substring(r+1);rx.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(o){for(let s=0;s<o.length;s++){const a=o[s];if(a.name===t||a.uuid===t)return a;const h=n(a.children);if(h)return h}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,o=n.length;r!==o;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,o=n.length;r!==o;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,o=n.length;r!==o;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,o=n.length;r!==o;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let o=t.propertyIndex;if(e||(e=$1.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let f=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===f){f=d;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(f!==void 0){if(e[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[f]}}const s=e[r];if(s===void 0){const f=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[o]!==void 0&&(o=e.morphTargetDictionary[o])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=o}else s.fromArray!==void 0&&s.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}$1.Composite=ox;$1.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};$1.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};$1.prototype.GetterByBindingType=[$1.prototype._getValue_direct,$1.prototype._getValue_array,$1.prototype._getValue_arrayElement,$1.prototype._getValue_toArray];$1.prototype.SetterByBindingTypeAndVersioning=[[$1.prototype._setValue_direct,$1.prototype._setValue_direct_setNeedsUpdate,$1.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[$1.prototype._setValue_array,$1.prototype._setValue_array_setNeedsUpdate,$1.prototype._setValue_array_setMatrixWorldNeedsUpdate],[$1.prototype._setValue_arrayElement,$1.prototype._setValue_arrayElement_setNeedsUpdate,$1.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[$1.prototype._setValue_fromArray,$1.prototype._setValue_fromArray_setNeedsUpdate,$1.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class sx{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const o=t.tracks,s=o.length,a=new Array(s),h={endingStart:g6,endingEnd:g6};for(let f=0;f!==s;++f){const d=o[f].createInterpolant(null);a[f]=d,d.settings=h}this._interpolantSettings=h,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Dh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const r=this._clip.duration,o=e._clip.duration,s=o/r,a=r/o;e.warp(1,s,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,o=r.time,s=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const h=a.parameterPositions,f=a.sampleValues;return h[0]=o,h[1]=o+n,f[0]=e/s,f[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}const o=this._startTime;if(o!==null){const h=(e-o)*n;if(h<0||n===0)return;this._startTime=null,t=n*h}t*=this._updateTimeScale(e);const s=this._updateTime(t),a=this._updateWeight(e);if(a>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case xl:for(let d=0,m=h.length;d!==m;++d)h[d].evaluate(s),f[d].accumulateAdditive(a);break;case ni:default:for(let d=0,m=h.length;d!==m;++d)h[d].evaluate(s),f[d].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,o=this._loopCount;const s=n===Ih;if(e===0)return o===-1?r:s&&(o&1)===1?t-r:r;if(n===Lh){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(o===-1&&(e>=0?(o=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,o+=Math.abs(a);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(h===1){const f=e<0;this._setEndings(f,!f,s)}else this._setEndings(!1,!1,s);this._loopCount=o,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(s&&(o&1)===1)return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=y6,r.endingEnd=y6):(e?r.endingStart=this.zeroSlopeAtStart?y6:g6:r.endingStart=T3,t?r.endingEnd=this.zeroSlopeAtEnd?y6:g6:r.endingEnd=T3)}_scheduleFading(e,t,n){const r=this._mixer,o=r.time;let s=this._weightInterpolant;s===null&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,h=s.sampleValues;return a[0]=o,h[0]=t,a[1]=o+e,h[1]=n,this}}class ax extends Q2{constructor(e){super();this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,o=r.length,s=e._propertyBindings,a=e._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let d=f[h];d===void 0&&(d={},f[h]=d);for(let m=0;m!==o;++m){const y=r[m],v=y.name;let b=d[v];if(b!==void 0)++b.referenceCount,s[m]=b;else{if(b=s[m],b!==void 0){b._cacheIndex===null&&(++b.referenceCount,this._addInactiveBinding(b,h,v));continue}const M=t&&t._propertyBindings[m].binding.parsedPath;b=new Xv($1.create(n,v,M),y.ValueTypeName,y.getValueSize()),++b.referenceCount,this._addInactiveBinding(b,h,v),s[m]=b}a[m].resultBuffer=b.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,r=e._clip.uuid,o=this._actionsByClip[r];this._bindAction(e,o&&o.knownActions[0]),this._addInactiveAction(e,r,n)}const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const o=t[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const o=t[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,o=this._actionsByClip;let s=o[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,o[t]=s;else{const a=s.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),s.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const o=e._clip.uuid,s=this._actionsByClip,a=s[o],h=a.knownActions,f=h[h.length-1],d=e._byClipCacheIndex;f._byClipCacheIndex=d,h[d]=f,h.pop(),e._byClipCacheIndex=null;const m=a.actionByRoot,y=(e._localRoot||this._root).uuid;delete m[y],h.length===0&&delete s[o],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const o=t[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,o=t[r];e._cacheIndex=r,t[r]=e,o._cacheIndex=n,t[n]=o}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,o=t[r];e._cacheIndex=r,t[r]=e,o._cacheIndex=n,t[n]=o}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,o=this._bindings;let s=r[t];s===void 0&&(s={},r[t]=s),s[n]=e,e._cacheIndex=o.length,o.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,o=n.path,s=this._bindingsByRootAndName,a=s[r],h=t[t.length-1],f=e._cacheIndex;h._cacheIndex=f,t[f]=h,t.pop(),delete a[o],Object.keys(a).length===0&&delete s[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,o=t[r];e._cacheIndex=r,t[r]=e,o._cacheIndex=n,t[n]=o}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,o=t[r];e._cacheIndex=r,t[r]=e,o._cacheIndex=n,t[n]=o}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Zl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,o=t[r];e.__cacheIndex=r,t[r]=e,o.__cacheIndex=n,t[n]=o}clipAction(e,t,n){const r=t||this._root,o=r.uuid;let s=typeof e=="string"?ps.findByName(r,e):e;const a=s!==null?s.uuid:e,h=this._actionsByClip[a];let f=null;if(n===void 0&&(s!==null?n=s.blendMode:n=ni),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],s===null&&(s=f._clip)}if(s===null)return null;const d=new sx(this,s,t,n);return this._bindAction(d,f),this._addInactiveAction(d,a,o),d}existingAction(e,t){const n=t||this._root,r=n.uuid,o=typeof e=="string"?ps.findByName(n,e):e,s=o?o.uuid:e,a=this._actionsByClip[s];return a!==void 0&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,o=Math.sign(e),s=this._accuIndex^=1;for(let f=0;f!==n;++f)t[f]._update(r,e,o,s);const a=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)a[f].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,o=r[n];if(o!==void 0){const s=o.knownActions;for(let a=0,h=s.length;a!==h;++a){const f=s[a];this._deactivateAction(f);const d=f._cacheIndex,m=t[t.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=d,t[d]=m,t.pop(),this._removeInactiveBindingsForAction(f)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const a=n[s].actionByRoot,h=a[t];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const r=this._bindingsByRootAndName,o=r[t];if(o!==void 0)for(const s in o){const a=o[s];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}ax.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Di extends W6{constructor(e,t,n=1){super(e,t);this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}Di.prototype.isInstancedInterleavedBuffer=!0;class lx{constructor(e,t,n=0,r=1/0){this.ray=new F5(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new si,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return An(e,this,n,t),n.sort(_s),n}intersectObjects(e,t=!0,n=[]){for(let r=0,o=e.length;r<o;r++)An(e[r],this,n,t);return n.sort(_s),n}}function _s(i,e){return i.distance-e.distance}function An(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let o=0,s=r.length;o<s;o++)An(r[o],e,t,!0)}}class un{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(E9(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const bs=new $,j8=new $;class lA{constructor(e=new $,t=new $){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){bs.subVectors(e,this.start),j8.subVectors(this.end,this.start);const n=j8.dot(j8);let o=j8.dot(bs)/n;return t&&(o=E9(o,0,1)),o}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const V4=new $,Q8=new m1,Rt=new m1;class Ax extends Z7{constructor(e){const t=AA(e),n=new C1,r=[],o=[],s=new l1(0,0,1),a=new l1(0,1,0);for(let f=0;f<t.length;f++){const d=t[f];d.parent&&d.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),o.push(s.r,s.g,s.b),o.push(a.r,a.g,a.b))}n.setAttribute("position",new T1(r,3)),n.setAttribute("color",new T1(o,3));const h=new D4({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");Rt.copy(this.root.matrixWorld).invert();for(let o=0,s=0;o<t.length;o++){const a=t[o];a.parent&&a.parent.isBone&&(Q8.multiplyMatrices(Rt,a.matrixWorld),V4.setFromMatrixPosition(Q8),r.setXYZ(s,V4.x,V4.y,V4.z),Q8.multiplyMatrices(Rt,a.parent.matrixWorld),V4.setFromMatrixPosition(Q8),r.setXYZ(s+1,V4.x,V4.y,V4.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function AA(i){const e=[];i.isBone===!0&&e.push(i);for(let t=0;t<i.children.length;t++)e.push.apply(e,AA(i.children[t]));return e}class ux extends Z7{constructor(e=10,t=10,n=4473924,r=8947848){n=new l1(n),r=new l1(r);const o=t/2,s=e/t,a=e/2,h=[],f=[];for(let y=0,v=0,b=-a;y<=t;y++,b+=s){h.push(-a,0,b,a,0,b),h.push(b,0,-a,b,0,a);const M=y===o?n:r;M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3}const d=new C1;d.setAttribute("position",new T1(h,3)),d.setAttribute("color",new T1(f,3));const m=new D4({vertexColors:!0,toneMapped:!1});super(d,m);this.type="GridHelper"}}class cx{constructor(){this.type="ShapePath",this.color=new l1,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new R3,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,o,s){return this.currentPath.bezierCurveTo(e,t,n,r,o,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(T){const C=[];for(let P=0,R=T.length;P<R;P++){const I=T[P],q=new K4;q.curves=I.curves,C.push(q)}return C}function r(T,C){const P=C.length;let R=!1;for(let I=P-1,q=0;q<P;I=q++){let D=C[I],O=C[q],k=O.x-D.x,B=O.y-D.y;if(Math.abs(B)>Number.EPSILON){if(B<0&&(D=C[q],k=-k,O=C[I],B=-B),T.y<D.y||T.y>O.y)continue;if(T.y===D.y){if(T.x===D.x)return!0}else{const j=B*(T.x-D.x)-k*(T.y-D.y);if(j===0)return!0;if(j<0)continue;R=!R}}else{if(T.y!==D.y)continue;if(O.x<=T.x&&T.x<=D.x||D.x<=T.x&&T.x<=O.x)return!0}}return R}const o=w4.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);let a,h,f;const d=[];if(s.length===1)return h=s[0],f=new K4,f.curves=h.curves,d.push(f),d;let m=!o(s[0].getPoints());m=e?!m:m;const y=[],v=[];let b=[],M=0,w;v[M]=void 0,b[M]=[];for(let T=0,C=s.length;T<C;T++)h=s[T],w=h.getPoints(),a=o(w),a=e?!a:a,a?(!m&&v[M]&&M++,v[M]={s:new K4,p:w},v[M].s.curves=h.curves,m&&M++,b[M]=[]):b[M].push({h,p:w[0]});if(!v[0])return n(s);if(v.length>1){let T=!1,C=0;for(let P=0,R=v.length;P<R;P++)y[P]=[];for(let P=0,R=v.length;P<R;P++){const I=b[P];for(let q=0;q<I.length;q++){const D=I[q];let O=!0;for(let k=0;k<v.length;k++)r(D.p,v[k].p)&&(P!==k&&C++,O?(O=!1,y[k].push(D)):T=!0);O&&y[P].push(D)}}C>0&&T===!1&&(b=y)}let E;for(let T=0,C=v.length;T<C;T++){f=v[T].s,d.push(f),E=b[T];for(let P=0,R=E.length;P<R;P++)f.holes.push(E[P].h)}return d}}const Z2=new Uint32Array(512),J2=new Uint32Array(512);for(let i=0;i<256;++i){const e=i-127;e<-27?(Z2[i]=0,Z2[i|256]=32768,J2[i]=24,J2[i|256]=24):e<-14?(Z2[i]=1024>>-e-14,Z2[i|256]=1024>>-e-14|32768,J2[i]=-e-1,J2[i|256]=-e-1):e<=15?(Z2[i]=e+15<<10,Z2[i|256]=e+15<<10|32768,J2[i]=13,J2[i|256]=13):e<128?(Z2[i]=31744,Z2[i|256]=64512,J2[i]=24,J2[i|256]=24):(Z2[i]=31744,Z2[i|256]=64512,J2[i]=13,J2[i|256]=13)}const uA=new Uint32Array(2048),K7=new Uint32Array(64),fx=new Uint32Array(64);for(let i=1;i<1024;++i){let e=i<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,uA[i]=e|t}for(let i=1024;i<2048;++i)uA[i]=939524096+(i-1024<<13);for(let i=1;i<31;++i)K7[i]=i<<23;K7[31]=1199570944;K7[32]=2147483648;for(let i=33;i<63;++i)K7[i]=2147483648+(i-32<<23);K7[63]=3347054592;for(let i=1;i<64;++i)i!==32&&(fx[i]=1024);const hx=0,dx=2;v2.create=function(i,e){return console.log("THREE.Curve.create() has been deprecated"),i.prototype=Object.create(v2.prototype),i.prototype.constructor=i,i.prototype.getPoint=e,i};R3.prototype.fromPoints=function(i){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(i)};ux.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Ax.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};u5.prototype.extractUrlBase=function(i){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Hv.extractUrlBase(i)};u5.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};c2.prototype.center=function(i){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(i)};c2.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};c2.prototype.isIntersectionBox=function(i){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};c2.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};c2.prototype.size=function(i){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(i)};a5.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};s5.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};pe.prototype.setFromMatrix=function(i){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(i)};lA.prototype.center=function(i){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(i)};q9.prototype.flattenToArrayOffset=function(i,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,e)};q9.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};q9.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};q9.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};q9.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};q9.prototype.getInverse=function(i){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};m1.prototype.extractPosition=function(i){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(i)};m1.prototype.flattenToArrayOffset=function(i,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,e)};m1.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new $().setFromMatrixColumn(this,3)};m1.prototype.setRotationFromQuaternion=function(i){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(i)};m1.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};m1.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};m1.prototype.multiplyVector4=function(i){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};m1.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};m1.prototype.rotateAxis=function(i){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),i.transformDirection(this)};m1.prototype.crossVector=function(i){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};m1.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};m1.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};m1.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};m1.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};m1.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};m1.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};m1.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};m1.prototype.makeFrustum=function(i,e,t,n,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(i,e,n,t,r,o)};m1.prototype.getInverse=function(i){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};y4.prototype.isIntersectionLine=function(i){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(i)};b9.prototype.multiplyVector3=function(i){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),i.applyQuaternion(this)};b9.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};F5.prototype.isIntersectionBox=function(i){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};F5.prototype.isIntersectionPlane=function(i){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(i)};F5.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};_9.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};_9.prototype.barycoordFromPoint=function(i,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(i,e)};_9.prototype.midpoint=function(i){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(i)};_9.prototypenormal=function(i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(i)};_9.prototype.plane=function(i){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(i)};_9.barycoordFromPoint=function(i,e,t,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),_9.getBarycoord(i,e,t,n,r)};_9.normal=function(i,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),_9.getNormal(i,e,t,n)};K4.prototype.extractAllPoints=function(i){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(i)};K4.prototype.extrude=function(i){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new k5(this,i)};K4.prototype.makeGeometry=function(i){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Si(this,i)};D0.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};D0.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};D0.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};$.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};$.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};$.prototype.getPositionFromMatrix=function(i){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(i)};$.prototype.getScaleFromMatrix=function(i){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(i)};$.prototype.getColumnFromMatrix=function(i,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,i)};$.prototype.applyProjection=function(i){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(i)};$.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};$.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};$.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Y1.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};Y1.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};H1.prototype.getChildByName=function(i){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(i)};H1.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};H1.prototype.translate=function(i,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,i)};H1.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};H1.prototype.applyMatrix=function(i){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(H1.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(i){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=i}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});K1.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(K1.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),_l},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});kl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};$9.prototype.setLens=function(i,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(i)};Object.defineProperties(s4.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(i){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=i}},shadowCameraLeft:{set:function(i){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=i}},shadowCameraRight:{set:function(i){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=i}},shadowCameraTop:{set:function(i){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=i}},shadowCameraBottom:{set:function(i){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=i}},shadowCameraNear:{set:function(i){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=i}},shadowCameraFar:{set:function(i){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=i}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(i){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=i}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(i){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=i}},shadowMapHeight:{set:function(i){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=i}}});Object.defineProperties(t9.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===C3},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(C3)}}});t9.prototype.setDynamic=function(i){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?C3:L7),this};t9.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},t9.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};C1.prototype.addIndex=function(i){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(i)};C1.prototype.addAttribute=function(i,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(i,new t9(arguments[1],arguments[2]))):i==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(i,e)};C1.prototype.addDrawCall=function(i,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(i,e)};C1.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};C1.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};C1.prototype.removeAttribute=function(i){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(i)};C1.prototype.applyMatrix=function(i){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(C1.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});W6.prototype.setDynamic=function(i){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?C3:L7),this};W6.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};k5.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};k5.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};k5.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};di.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(T9.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new l1}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===ml}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(i){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=i}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(F9.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(i){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=i}}});X1.prototype.clearTarget=function(i,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(i),this.clear(e,t,n)};X1.prototype.animate=function(i){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(i)};X1.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};X1.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};X1.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};X1.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};X1.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};X1.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};X1.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};X1.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};X1.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};X1.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};X1.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};X1.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};X1.prototype.enableScissorTest=function(i){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(i)};X1.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};X1.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};X1.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};X1.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};X1.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};X1.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};X1.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};X1.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};X1.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};X1.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(X1.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=i}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=i}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(i){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=i===!0?a9:e5}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Bl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(u2.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=i}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=i}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=i}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=i}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(i){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=i}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(i){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=i}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(i){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=i}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(i){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=i}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(i){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=i}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(i){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=i}}});Yv.prototype.load=function(i){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new jv().load(i,function(n){e.setBuffer(n)}),this};Ai.prototype.updateCubeMap=function(i,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(i,e)};Ai.prototype.clear=function(i,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(i,e,t,n)};q5.crossOrigin=void 0;q5.loadTexture=function(i,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new be;r.setCrossOrigin(this.crossOrigin);const o=r.load(i,t,void 0,n);return e&&(o.mapping=e),o};q5.loadTextureCube=function(i,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new kv;r.setCrossOrigin(this.crossOrigin);const o=r.load(i,t,void 0,n);return e&&(o.mapping=e),o};q5.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};q5.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ti}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ti);var px="/assets/ocean10kM.371d45de.jpg",$8={type:"FeatureCollection",features:[{type:"Feature",id:"AFG",properties:{name:"Afghanistan"},geometry:{type:"Polygon",coordinates:[[[61.210817,35.650072],[62.230651,35.270664],[62.984662,35.404041],[63.193538,35.857166],[63.982896,36.007957],[64.546479,36.312073],[64.746105,37.111818],[65.588948,37.305217],[65.745631,37.661164],[66.217385,37.39379],[66.518607,37.362784],[67.075782,37.356144],[67.83,37.144994],[68.135562,37.023115],[68.859446,37.344336],[69.196273,37.151144],[69.518785,37.608997],[70.116578,37.588223],[70.270574,37.735165],[70.376304,38.138396],[70.806821,38.486282],[71.348131,38.258905],[71.239404,37.953265],[71.541918,37.905774],[71.448693,37.065645],[71.844638,36.738171],[72.193041,36.948288],[72.63689,37.047558],[73.260056,37.495257],[73.948696,37.421566],[74.980002,37.41999],[75.158028,37.133031],[74.575893,37.020841],[74.067552,36.836176],[72.920025,36.720007],[71.846292,36.509942],[71.262348,36.074388],[71.498768,35.650563],[71.613076,35.153203],[71.115019,34.733126],[71.156773,34.348911],[70.881803,33.988856],[69.930543,34.02012],[70.323594,33.358533],[69.687147,33.105499],[69.262522,32.501944],[69.317764,31.901412],[68.926677,31.620189],[68.556932,31.71331],[67.792689,31.58293],[67.683394,31.303154],[66.938891,31.304911],[66.381458,30.738899],[66.346473,29.887943],[65.046862,29.472181],[64.350419,29.560031],[64.148002,29.340819],[63.550261,29.468331],[62.549857,29.318572],[60.874248,29.829239],[61.781222,30.73585],[61.699314,31.379506],[60.941945,31.548075],[60.863655,32.18292],[60.536078,32.981269],[60.9637,33.528832],[60.52843,33.676446],[60.803193,34.404102],[61.210817,35.650072]]]}},{type:"Feature",id:"AND",properties:{name:"Andorra"},geometry:{type:"MultiPolygon",coordinates:[[[[1.707006470000067,42.5027814740001],[1.697498006000075,42.49446156900012],[1.68633589600006,42.49061167500008],[1.674243611000065,42.49050832100005],[1.656983683000078,42.49763966900008],[1.653986450000048,42.4965286260001],[1.650369100000063,42.49340220200014],[1.639517049000119,42.46642710400002],[1.607477661000104,42.456427714000085],[1.544432414000085,42.45035573400014],[1.538851359000063,42.44565317800007],[1.534510539000081,42.439917094000094],[1.528206014000091,42.43423268600006],[1.516630493000122,42.42950429300009],[1.508465617000127,42.42867747000005],[1.447900838000066,42.43464609800009],[1.436428670000055,42.44095062300008],[1.436428670000055,42.4534821580001],[1.407593221000099,42.48676178000005],[1.424543090000014,42.49247202600009],[1.43022749800005,42.493557231000096],[1.449967895000043,42.50407338400004],[1.446557251000087,42.51988637400004],[1.428987264000114,42.531461894000074],[1.406456339000101,42.529239808000085],[1.409763631000089,42.540608622000065],[1.426300090000098,42.56179596000004],[1.426403442000122,42.56564585400008],[1.418031860000042,42.56983164500011],[1.419272095000082,42.579262594000085],[1.424853150000104,42.5893653360001],[1.42929732200011,42.595385641000064],[1.451414836000112,42.60205190100007],[1.466814412000105,42.641455180000065],[1.498440389000081,42.64024078400004],[1.527792602000062,42.6485348520001],[1.543088827000133,42.64936167400003],[1.597349081000061,42.62192148900007],[1.608304484000144,42.61812327100003],[1.721992635000049,42.60985504200008],[1.713310995000086,42.58954620400007],[1.729434041000047,42.58200144500012],[1.752688435000067,42.576678772000065],[1.761107147000132,42.567646197000016],[1.765090780000151,42.56337209100005],[1.739976033000119,42.561640930000095],[1.721682577000138,42.54851511600003],[1.710623820000137,42.527741191000075],[1.707006470000067,42.5027814740001]]]]}},{type:"Feature",id:"AGO",properties:{name:"Angola"},geometry:{type:"MultiPolygon",coordinates:[[[[16.326528,-5.87747],[16.860191,-7.222298],[17.089996,-7.545689],[17.47297,-8.068551],[18.464176,-7.847014],[19.016752,-7.988246],[19.166613,-7.738184],[19.417502,-7.155429],[20.037723,-7.116361],[20.091622,-6.94309],[20.601823,-6.939318],[20.514748,-7.299606],[21.728111,-7.290872],[21.746456,-7.920085],[21.949131,-8.305901],[21.801801,-8.908707],[21.875182,-9.523708],[22.208753,-9.894796],[22.155268,-11.084801],[22.402798,-10.993075],[22.837345,-11.017622],[23.456791,-10.867863],[23.912215,-10.926826],[24.017894,-11.237298],[23.904154,-11.722282],[24.079905,-12.191297],[23.930922,-12.565848],[24.016137,-12.911046],[21.933886,-12.898437],[21.887843,-16.08031],[22.562478,-16.898451],[23.215048,-17.523116],[21.377176,-17.930636],[18.956187,-17.789095],[18.263309,-17.309951],[14.209707,-17.353101],[14.058501,-17.423381],[13.462362,-16.971212],[12.814081,-16.941343],[12.215461,-17.111668],[11.734199,-17.301889],[11.640096,-16.673142],[11.778537,-15.793816],[12.123581,-14.878316],[12.175619,-14.449144],[12.500095,-13.5477],[12.738479,-13.137906],[13.312914,-12.48363],[13.633721,-12.038645],[13.738728,-11.297863],[13.686379,-10.731076],[13.387328,-10.373578],[13.120988,-9.766897],[12.87537,-9.166934],[12.929061,-8.959091],[13.236433,-8.562629],[12.93304,-7.596539],[12.728298,-6.927122],[12.227347,-6.294448],[12.322432,-6.100092],[12.735171,-5.965682],[13.024869,-5.984389],[13.375597,-5.864241],[16.326528,-5.87747]]],[[[12.436688,-5.684304],[12.182337,-5.789931],[11.914963,-5.037987],[12.318608,-4.60623],[12.62076,-4.438023],[12.995517,-4.781103],[12.631612,-4.991271],[12.468004,-5.248362],[12.436688,-5.684304]]]]}},{type:"Feature",id:"ALA",properties:{name:"Aland"},geometry:{type:"MultiPolygon",coordinates:[[[[20.920176629000082,59.90924713700012],[20.912364129000082,59.90448639500012],[20.88770592500009,59.90912506700015],[20.875254754000082,59.91412995000009],[20.867930535000085,59.91791413000011],[20.86207116000014,59.928168036000145],[20.87086022200009,59.93675364800005],[20.88453209700012,59.93976471600014],[20.897471550000148,59.940130927000084],[20.906586134000122,59.93353913],[20.912852410000085,59.920721747000144],[20.920176629000082,59.90924713700012]]],[[[20.99659264400009,59.945013739000146],[20.983571811000104,59.94277578300016],[20.9694116550001,59.94383372600011],[20.969248894000117,59.94208405200011],[20.98414147200009,59.936265367000075],[20.991221550000148,59.92674388200008],[20.982758009000094,59.92153554900007],[20.932139519000117,59.93585846600014],[20.91846764400009,59.943060614],[20.913259311000076,59.94843170800014],[20.915212436000047,59.94936758000013],[20.919932488000143,59.95331452000012],[20.934743686000104,59.95799388200014],[20.978688998000052,59.95205312700001],[20.989756707000083,59.95189036700005],[20.99586022200006,59.94989655200011],[20.99659264400009,59.945013739000146]]],[[[20.44705937100011,59.99518055800014],[20.398575509000096,59.98134905100012],[20.36713479500014,59.981993852000116],[20.339324880000078,59.98020791300003],[20.324819234000046,59.977195317000096],[20.322365859000115,59.962685524],[20.306648030000076,59.95362434600018],[20.283707094000135,59.9584754560001],[20.281315311000128,59.97661612300014],[20.301908032000114,59.998975214000055],[20.339446925000118,60.02010972400008],[20.362417727000036,60.01767049000016],[20.3984574750001,60.009128720000106],[20.436746037000148,60.004989416000015],[20.44705937100011,59.99518055800014]]],[[[20.582855665000068,60.059149481000034],[20.587087436000076,60.05589427299999],[20.587901238000086,60.051947333],[20.591075066000144,60.050848700000145],[20.59864342500009,60.05267975500011],[20.60499108200011,60.05206940300015],[20.608653191000087,60.047593492000104],[20.61011803500014,60.04498932500009],[20.612559441000087,60.04344310100005],[20.61793053500014,60.04222239800005],[20.615244988000143,60.04108307500012],[20.6033634770001,60.039780992000104],[20.60092207100007,60.03921133000013],[20.608246290000068,60.03595612200009],[20.60987389400009,60.02985260600009],[20.606293165000125,60.022650458000086],[20.596446160000113,60.016058661],[20.587168816000144,60.00812409100003],[20.5774845710001,60.00665924700017],[20.55046634200005,60.01886627800015],[20.546153191000144,60.0165062520001],[20.539886915000096,60.00950755400011],[20.527028842000078,60.00507233300014],[20.51189212300008,60.00633372600005],[20.500824415000125,60.01268138200008],[20.50554446700005,60.024237372000115],[20.530935092000078,60.048407294000114],[20.544932488000114,60.05609772300012],[20.55836022200012,60.057603257],[20.56820722700013,60.05695221600003],[20.576182488000086,60.059149481000034],[20.582855665000068,60.059149481000034]]],[[[20.432139519000117,60.025091864],[20.402354363000114,60.02130768400018],[20.39014733200014,60.02822500200007],[20.403493686000076,60.040513414000046],[20.424082879000082,60.055243231000034],[20.44890384200005,60.06513092700014],[20.462575717000078,60.06679922100015],[20.451019727000073,60.04010651200004],[20.432139519000117,60.025091864]]],[[[20.51937910200013,60.04295482000008],[20.500336134000065,60.03636302300002],[20.471364780000044,60.04132721600014],[20.46973717500012,60.05735911700005],[20.48804772200009,60.062404690000065],[20.522227410000085,60.06476471600003],[20.525401238000143,60.06549713700015],[20.516449415000125,60.06696198100012],[20.518402540000068,60.07037995000003],[20.53337649800011,60.07363515800007],[20.541840040000125,60.070990302],[20.535817905000044,60.06415436400006],[20.526215040000068,60.05683014500006],[20.52116946700002,60.048041083],[20.51937910200013,60.04295482000008]]],[[[20.101269174000038,60.0949746350001],[20.1300416790001,60.086928048000104],[20.163259320000066,60.08784534100006],[20.193190627000092,60.06556971100012],[20.21265842200006,60.035918234000164],[20.222526497000047,60.01487984699999],[20.225218278000085,60.005477722000094],[20.211791270000077,59.99115005600008],[20.18764083600007,59.97636703000005],[20.17512091800006,59.97143592200014],[20.184036574000118,59.99293783500012],[20.171495088000086,59.99875382600011],[20.151812520000107,59.99292279400011],[20.12317881100006,59.988872416],[20.10525492100004,59.99646916900009],[20.116869430000094,60.00543387000012],[20.121317588000068,60.01662719500014],[20.104257697000037,60.02824800500012],[20.07825715800007,60.02822362100015],[20.058456981000063,60.03939637900008],[20.02525632700005,60.04248523600005],[20.033649523000065,60.06362600400014],[20.068193261000147,60.07265423500009],[20.101269174000038,60.0949746350001]]],[[[20.244639519000117,60.11969635600012],[20.25806725400011,60.107977606000034],[20.26392662900014,60.11823151200015],[20.253265821000127,60.13857656500015],[20.255707227000073,60.145412502000156],[20.277598504000082,60.142157294000114],[20.29761803500014,60.121527411],[20.285166863000143,60.10358307500006],[20.2688908210001,60.08600495000012],[20.277598504000082,60.06647370000003],[20.2662866550001,60.06049225500011],[20.259043816000087,60.06256745000003],[20.252289259000065,60.06834544500002],[20.242849155000044,60.073919989],[20.208994988000086,60.08331940300003],[20.201914910000113,60.087551174000154],[20.198252800000148,60.104071356000034],[20.2049259770001,60.12034739800008],[20.21534264400009,60.13568756700003],[20.222422722000147,60.149603583],[20.244639519000117,60.11969635600012]]],[[[20.681976759000122,60.110174872000115],[20.671560092000107,60.109198309000035],[20.655772332000083,60.115912177],[20.638682488000114,60.13133372600011],[20.635508660000056,60.1439476580001],[20.644053582000083,60.14935944200015],[20.653575066000087,60.151353257],[20.65992272200012,60.14972565300015],[20.6686304050001,60.14500560100005],[20.67945397200009,60.13629791900017],[20.68336022200009,60.13051992400001],[20.686534050000148,60.12653229400003],[20.68824303500014,60.117010809000035],[20.681976759000122,60.110174872000115]]],[[[20.707692905000073,60.19965241100003],[20.686778191000087,60.19456614799999],[20.670664910000113,60.199204820000105],[20.664073113000143,60.20502350500006],[20.6634220710001,60.21637604400006],[20.668467644000145,60.22671133000013],[20.68376712300011,60.22939687700013],[20.705902540000068,60.2182477890001],[20.716319207000055,60.20929596600017],[20.707692905000073,60.19965241100003]]],[[[19.667491082000083,60.19676341399999],[19.67090905000009,60.190578518],[19.673106316000087,60.184230861000074],[19.674327019000117,60.16632721600003],[19.671071811000076,60.15810781500012],[19.663340691000144,60.15668366100006],[19.654307488000143,60.15753815300015],[19.646983269000117,60.15582916900014],[19.632497592000078,60.16543203300013],[19.60954837300011,60.18748607000013],[19.59164472700013,60.19676341399999],[19.59945722700013,60.17987702000009],[19.603282097000147,60.16400788000006],[19.599619988000086,60.14911530200003],[19.584808790000125,60.13532135600009],[19.56519616000014,60.12995026200004],[19.54460696700002,60.13475169500013],[19.527028842000107,60.14862702000012],[19.51661217500009,60.17011139500015],[19.51392662900011,60.17910390800016],[19.513194207000083,60.18378327000009],[19.517588738000086,60.1876488300001],[19.530284050000148,60.193670966000084],[19.53728274800011,60.201117255000085],[19.5369572270001,60.21112702000015],[19.535166863000114,60.222072658000016],[19.537119988000143,60.232163804],[19.542246941000087,60.236965236000074],[19.560394727000073,60.248968817],[19.56788170700014,60.25511302300008],[19.578868035000085,60.26048411700013],[19.593760613000143,60.26048411700013],[19.608409050000148,60.25690338700015],[19.628103061000104,60.246649481000034],[19.63445071700005,60.24013906500012],[19.63835696700005,60.23163483300003],[19.639496290000068,60.220933335],[19.643077019000145,60.21344635600012],[19.660492384000094,60.20282623900009],[19.667491082000083,60.19676341399999]]],[[[20.379649285000085,60.269680080000015],[20.410980665000125,60.25950755400005],[20.42790774800011,60.26569245000003],[20.434825066000116,60.262396552],[20.43897545700014,60.25820547100015],[20.440765821000127,60.252630927000055],[20.441416863000086,60.24518463700015],[20.392914259000094,60.19676341399999],[20.380869988000086,60.1988792990001],[20.380869988000086,60.204046942],[20.385508660000113,60.210760809000035],[20.38624108200014,60.217230536000145],[20.38770592500012,60.22186920800006],[20.387543165000068,60.23297760600009],[20.382660352000073,60.24070872600011],[20.35303795700014,60.22882721600014],[20.345388217000107,60.237697658000016],[20.347015821000127,60.252875067],[20.358897332000083,60.26569245000003],[20.379649285000085,60.269680080000015]]],[[[20.83887780000009,60.24681224200002],[20.823985222000147,60.24445221600014],[20.811371290000068,60.24518463700015],[20.818858269000117,60.232163804],[20.790537957000083,60.23871491100006],[20.781097852000073,60.26365794500002],[20.787282748000052,60.28632233300006],[20.80518639400009,60.28620026200018],[20.815277540000068,60.280991929],[20.845957879000053,60.270331122000144],[20.85303795700011,60.26569245000003],[20.85059655000009,60.25360748900012],[20.83887780000009,60.24681224200002]]],[[[20.777354363000143,60.32648346600014],[20.74000084700009,60.31240469000004],[20.732676629000082,60.314357815000065],[20.731455925000148,60.32099030200011],[20.7317814460001,60.32440827000012],[20.732676629000082,60.332749742000104],[20.735362175000148,60.33779531500012],[20.74350019600007,60.34845612200017],[20.746918165000096,60.351874091000084],[20.7506616550001,60.35488515800007],[20.75489342500012,60.36074453300013],[20.7571720710001,60.3661156270001],[20.764333530000044,60.367865302000084],[20.776133660000113,60.366400458000115],[20.78736412900011,60.36196523600013],[20.792002800000148,60.35276927300008],[20.789398634000065,60.342718817],[20.78532962300008,60.33356354400003],[20.777354363000143,60.32648346600014]]],[[[19.918467644000117,60.37018463700004],[19.92750084700012,60.35643138200011],[19.969981316000087,60.361395575000174],[19.99561608200014,60.35643138200011],[20.01970462300008,60.346258856000176],[20.036794467000107,60.33392975500014],[20.028493686000047,60.354071356000176],[20.02369225400014,60.36127350500003],[20.038422071000127,60.35956452],[20.072032097000147,60.34992096600003],[20.08220462300011,60.35130442900011],[20.093028191000116,60.355129299000126],[20.104665561000104,60.34992096600003],[20.126149936000047,60.33392975500014],[20.178070509000122,60.322984117000075],[20.1920679050001,60.312323309000035],[20.181407097000147,60.28620026200018],[20.19629967500012,60.290269273000135],[20.201914910000113,60.292954820000105],[20.217621290000068,60.286281643000066],[20.238047722000147,60.28156159100014],[20.277598504000082,60.278713283000016],[20.242849155000044,60.24518463700015],[20.236013217000107,60.232163804],[20.20875084700012,60.22467682500012],[20.22201582100007,60.20990631700012],[20.22974694100006,60.20425039300015],[20.21892337300008,60.20132070500004],[20.209646030000016,60.20087311400012],[20.20093834700012,60.19940827000006],[20.191661004000082,60.193670966000084],[20.186371290000096,60.18732330900015],[20.17798912900014,60.17352936400006],[20.17457116000014,60.17011139500015],[20.161957227000073,60.16714101800012],[20.154633009000065,60.169745184000035],[20.147797071000127,60.17401764500015],[20.13697350400014,60.17633698100009],[20.095469597000147,60.17633698100009],[20.087087436000076,60.18219635600015],[20.088877800000148,60.195868231000176],[20.09555097700013,60.21088288000011],[20.10230553500014,60.220933335],[20.1228947270001,60.23078034100011],[20.172373894000145,60.232814846000124],[20.188243035000085,60.24518463700015],[20.147715691000144,60.24477773600016],[20.11101321700005,60.239447333],[20.0818791020001,60.223374742000104],[20.064707879000053,60.190619208],[20.057871941000144,60.190619208],[20.060883009000065,60.21474844000004],[20.0481876960001,60.22650788],[20.031911655000044,60.23639557500012],[20.02369225400014,60.25511302300008],[20.036387566000116,60.271877346000096],[20.057139519000117,60.29315827000006],[20.06128991000014,60.310044664000074],[20.02369225400014,60.31346263200008],[20.02369225400014,60.30662669500005],[20.0338647800001,60.293890692],[20.024912957000083,60.27643463700004],[20.00326582100007,60.267035223000036],[19.9759220710001,60.278713283000016],[19.979746941000116,60.26105377800009],[19.99398847700013,60.241441148000135],[20.012950066000144,60.22516510600009],[20.030528191000087,60.217230536000145],[20.020762566000116,60.21035390800013],[20.014903191000087,60.202337958],[20.013194207000083,60.193426825000145],[20.016286655000073,60.1837425800001],[19.964121941000144,60.19481028900013],[19.948008660000085,60.20425039300015],[19.953868035000113,60.209418036000145],[19.955739780000073,60.21283600500006],[19.95484459700009,60.22467682500012],[19.927744988000143,60.22280508000016],[19.914561394000117,60.218207098000036],[19.917246941000087,60.20766836100016],[19.929698113000114,60.19635651200015],[19.943614129000082,60.18622467700011],[19.958832227000073,60.17910390800016],[19.987315300000063,60.17304108300006],[19.996592644000117,60.16600169500002],[20.003916863000114,60.15892161700013],[20.01002037900011,60.15582916900014],[20.019867384000122,60.15810781500012],[20.02751712300008,60.163316148000106],[20.034922722000147,60.169989325000174],[20.044200066000116,60.17633698100009],[20.03296959700012,60.14435455900009],[20.030121290000068,60.128973700000145],[20.030528191000087,60.11481354400014],[20.03419030000012,60.11139557500003],[20.040863477000073,60.10911692900005],[20.047536655000044,60.10541413000011],[20.05046634200005,60.09780508000007],[20.044769727000073,60.08746979400017],[20.031586134000122,60.08738841399999],[20.006358269000145,60.094387111000074],[19.965993686000104,60.09113190300003],[19.948985222000147,60.083889065],[19.951426629000082,60.07013580900018],[19.958181186000104,60.05377838700015],[19.948496941000144,60.04767487200017],[19.93775475400014,60.05036041900014],[19.941172722000147,60.06024811400006],[19.92400149800011,60.09153880400014],[19.91032962300008,60.10106028900013],[19.8865666020001,60.1012230490001],[19.87330162900014,60.096421617000104],[19.870290561000047,60.09100983300006],[19.868337436000104,60.08551666900003],[19.858653191000144,60.08075592700011],[19.8450626960001,60.07868073100009],[19.831716342000078,60.079494533000016],[19.823252800000148,60.08429596600011],[19.82447350400014,60.094387111000074],[19.806976759000094,60.09983958500011],[19.7889103520001,60.096258856000034],[19.773448113000057,60.08649323100009],[19.76303144600007,60.073919989],[19.74756920700014,60.10138580900015],[19.71029707100007,60.14520905200011],[19.6946720710001,60.17011139500015],[19.687998894000145,60.19928620000009],[19.68238366000014,60.21198151200015],[19.67090905000009,60.217230536000145],[19.668793165000096,60.22467682500012],[19.646983269000117,60.26569245000003],[19.666677280000073,60.266058661000145],[19.682871941000116,60.26434967700014],[19.691416863000143,60.25653717700014],[19.68848717500012,60.238348700000145],[19.69629967500012,60.24876536700005],[19.7024845710001,60.26007721600003],[19.709320509000094,60.26886627800009],[19.71892337300008,60.27252838700004],[19.73210696700005,60.27391185100011],[19.770518425000148,60.28620026200018],[19.762868686000104,60.29051341399999],[19.757823113000086,60.295477606000034],[19.749359571000127,60.30662669500005],[19.770030144000145,60.303290106000034],[19.777354363000143,60.29979075700014],[19.78345787900014,60.303045966000084],[19.786306186000104,60.30353424700017],[19.796560092000107,60.29979075700014],[19.780772332000083,60.270941473],[19.765147332000083,60.248968817],[19.768077019000117,60.24042389500006],[19.77637780000009,60.23334381700003],[19.78419030000009,60.22467682500012],[19.792002800000063,60.200140692],[19.798594597000147,60.19306061400012],[19.81421959700012,60.190619208],[19.821787957000083,60.195990302000055],[19.823496941000087,60.208482164000074],[19.82129967500009,60.222479559000035],[19.817637566000144,60.232163804],[19.83545983200011,60.22638580900012],[19.85181725400014,60.217230536000145],[19.858653191000144,60.24518463700015],[19.879730665000068,60.258856512000094],[19.88461347700013,60.27252838700004],[19.88640384200002,60.293646552000055],[19.89283287900014,60.30662669500005],[19.898122592000107,60.29197825700014],[19.899587436000076,60.28461334800015],[19.900157097000147,60.27558014500012],[19.905528191000087,60.27179596600011],[19.917246941000087,60.272935289000046],[19.92904707100007,60.27716705900015],[19.93433678500014,60.28241608300006],[19.9314884770001,60.29975006700015],[19.92400149800011,60.31427643400018],[19.912933790000096,60.32575104400003],[19.900157097000147,60.33392975500014],[19.893321160000113,60.33958567900011],[19.889496290000096,60.34467194200015],[19.885101759000122,60.34520091400013],[19.87598717500012,60.33763255400008],[19.865082227000073,60.31964752800003],[19.857676629000082,60.31321849200013],[19.848399285000113,60.317206122000115],[19.8333439460001,60.33405182500012],[19.819183790000096,60.34682851800015],[19.802012566000144,60.35419342700014],[19.777354363000143,60.35504791900014],[19.792979363000143,60.360541083000086],[19.80176842500012,60.36884186400006],[19.80836022200009,60.37856679900001],[19.817637566000144,60.38857656500009],[19.838145379000082,60.40045807500003],[19.85962975400011,60.40558502800015],[19.882334832000083,60.40558502800015],[19.90642337300008,60.402167059000035],[19.91358483200014,60.38886139500012],[19.918467644000117,60.37018463700004]]],[[[21.088226759000094,60.45221588700015],[21.078379754000082,60.44896067900011],[21.06495201900009,60.45477936400006],[21.0592554050001,60.466742255],[21.06430097700013,60.47435130400014],[21.07642662900011,60.48041413000014],[21.084646030000044,60.48078034100014],[21.088633660000113,60.48012929900001],[21.09473717500009,60.47557200700005],[21.09669030000012,60.46344635600015],[21.088226759000094,60.45221588700015]]]]}},{type:"Feature",id:"AIA",properties:{name:"Anguilla"},geometry:{type:"MultiPolygon",coordinates:[[[[-63.037668423999946,18.21295807500003],[-63.09951738199996,18.176174221000124],[-63.102365688999896,18.18040599200016],[-63.10912024599992,18.185044664000188],[-63.113840298999946,18.189846096000068],[-63.13683020699992,18.173407294000086],[-63.150502081999946,18.169094143000095],[-63.16783606699994,18.169338283000044],[-63.14207923099991,18.198146877000156],[-63.134348110999895,18.204087632],[-63.12279212099986,18.20807526200015],[-63.09723873599998,18.212469794000143],[-63.0858455069999,18.21771881700012],[-63.0677791009999,18.2364769550001],[-63.05508378799993,18.25433991100006],[-63.03819739499994,18.267726955000157],[-63.00739498599995,18.27301666900003],[-62.983998175999886,18.276434637000037],[-62.972645636999914,18.27586497600008],[-62.97288977799985,18.269273179],[-62.99290930899991,18.23688385600009],[-63.000559048999946,18.227362372000087],[-63.01154537699992,18.220445054],[-63.037668423999946,18.21295807500003]]],[[[-63.42357337099986,18.60004303600006],[-63.42796790299994,18.592840887000122],[-63.42882239499994,18.60126373900006],[-63.42357337099986,18.60004303600006]]]]}},{type:"Feature",id:"ALB",properties:{name:"Albania"},geometry:{type:"Polygon",coordinates:[[[20.590247,41.855404],[20.463175,41.515089],[20.605182,41.086226],[21.02004,40.842727],[20.99999,40.580004],[20.674997,40.435],[20.615,40.110007],[20.150016,39.624998],[19.98,39.694993],[19.960002,39.915006],[19.406082,40.250773],[19.319059,40.72723],[19.40355,41.409566],[19.540027,41.719986],[19.371769,41.877548],[19.304486,42.195745],[19.738051,42.688247],[19.801613,42.500093],[20.0707,42.58863],[20.283755,42.32026],[20.52295,42.21787],[20.590247,41.855404]]]}},{type:"Feature",id:"ATG",properties:{name:"Antigua and Barbuda"},geometry:{type:"MultiPolygon",coordinates:[[[[-61.77301998599992,17.126532294000143],[-61.756418423999975,17.114162502000013],[-61.755441860999895,17.123032945000162],[-61.752756313999924,17.128892320000105],[-61.743316209999904,17.1415062520001],[-61.73761959499993,17.13296133000007],[-61.72984778599994,17.127997137000122],[-61.72008216099988,17.1263695330001],[-61.70860755099994,17.127834377000156],[-61.71349036399991,17.12254466400016],[-61.716297980999855,17.118801174000126],[-61.720529751999976,17.11611562700007],[-61.729644334999875,17.114162502000013],[-61.72508704299992,17.09983958500014],[-61.714833136999914,17.09308502800009],[-61.70164954299986,17.093451239000032],[-61.68809973899988,17.100531317000062],[-61.68065344999991,17.100531317000062],[-61.67552649599989,17.095607815],[-61.67210852799988,17.090643622000144],[-61.66759192599994,17.079413153000147],[-61.674387173999946,17.079901434000064],[-61.68814042899987,17.078924872000172],[-61.694935675999915,17.079413153000147],[-61.685658331999946,17.068264065000122],[-61.67707271999984,17.062933661000088],[-61.67218990799995,17.05756256700012],[-61.67442786399994,17.04588450700011],[-61.68569902299993,17.028550523000135],[-61.69701087099992,17.027818101000022],[-61.70995032499994,17.03416575700014],[-61.72622636599996,17.03847890800013],[-61.73399817599997,17.03485748900006],[-61.734364386999886,17.025783596000068],[-61.729644334999875,17.001166083000058],[-61.737131313999924,16.98924388200011],[-61.75352942599994,16.99681224200016],[-61.76976477799988,17.01097239800019],[-61.776844855999855,17.018540757000054],[-61.78359941299988,17.016913153000033],[-61.80406653599994,17.007310289000046],[-61.817860480999855,17.004950262000094],[-61.838693813999924,17.00482819200012],[-61.85171464799993,17.00763580900015],[-61.883656378999916,17.026271877000156],[-61.89037024599989,17.035386460000055],[-61.883615688999924,17.049017645],[-61.87922115799995,17.06045156500015],[-61.882801886999914,17.070217190000093],[-61.882435675999915,17.078802802],[-61.86620032499988,17.08685944200012],[-61.87336178299992,17.089544989000117],[-61.894154425999915,17.100531317000062],[-61.88312740799995,17.110500393000066],[-61.865386522999955,17.117824611000074],[-61.84235592399989,17.12441640800013],[-61.850453253999916,17.13764069200009],[-61.848784959999904,17.149481512000037],[-61.83967037699992,17.159857489000146],[-61.82526607999995,17.168768622000172],[-61.79336503799993,17.16494375200007],[-61.78066972599987,17.147162177000084],[-61.77301998599992,17.126532294000143]]],[[[-61.8314509759999,17.69635651200018],[-61.81822669199997,17.691839911000116],[-61.79727128799993,17.69879791900003],[-61.78429114499991,17.69635651200018],[-61.76817786399994,17.684637762000094],[-61.75426184799997,17.668768622000172],[-61.74327551999991,17.651353257],[-61.73591061099992,17.634914455000015],[-61.72874915299988,17.60496653900013],[-61.727772589999915,17.588446356000148],[-61.729644334999875,17.572821356000176],[-61.7363988919999,17.554022528000033],[-61.74327551999991,17.55060455900012],[-61.753570115999935,17.551499742000104],[-61.770659959999875,17.545558986000074],[-61.776966925999915,17.563421942000147],[-61.79474850199992,17.576117255000113],[-61.83893795499998,17.59332916900003],[-61.85179602799991,17.586574611000103],[-61.85728919199994,17.600978908000158],[-61.85936438699986,17.641791083000115],[-61.8639216789999,17.660142320000162],[-61.86974036399994,17.675482489000117],[-61.873850063999896,17.691148179],[-61.873036261999886,17.71063873900009],[-61.86937415299994,17.70734284100014],[-61.8678279289999,17.704087632],[-61.86620032499988,17.69635651200018],[-61.860096808999884,17.684230861000103],[-61.84422766799986,17.665961005000113],[-61.83893795499998,17.65542226800015],[-61.83922278599991,17.641424872000087],[-61.8431697259999,17.62958405200014],[-61.8431697259999,17.620184637000122],[-61.8314509759999,17.613836981000176],[-61.82648678299995,17.63247304900007],[-61.825021938999896,17.65794505400008],[-61.831206834999875,17.680487372000144],[-61.849191860999895,17.690130927000112],[-61.85643469999994,17.701076565000093],[-61.85167395699992,17.720282294000143],[-61.83779863199993,17.727687893000123],[-61.817860480999855,17.70319245000009],[-61.82457434799991,17.6993675800001],[-61.8314509759999,17.69635651200018]]]]}},{type:"Feature",id:"ARE",properties:{name:"United Arab Emirates"},geometry:{type:"Polygon",coordinates:[[[51.579519,24.245497],[51.757441,24.294073],[51.794389,24.019826],[52.577081,24.177439],[53.404007,24.151317],[54.008001,24.121758],[54.693024,24.797892],[55.439025,25.439145],[56.070821,26.055464],[56.261042,25.714606],[56.396847,24.924732],[55.886233,24.920831],[55.804119,24.269604],[55.981214,24.130543],[55.528632,23.933604],[55.525841,23.524869],[55.234489,23.110993],[55.208341,22.70833],[55.006803,22.496948],[52.000733,23.001154],[51.617708,24.014219],[51.579519,24.245497]]]}},{type:"Feature",id:"ARG",properties:{name:"Argentina"},geometry:{type:"MultiPolygon",coordinates:[[[[-65.5,-55.2],[-66.45,-55.25],[-66.95992,-54.89681],[-67.56244,-54.87001],[-68.63335,-54.8695],[-68.63401,-52.63637],[-68.25,-53.1],[-67.75,-53.85],[-66.45,-54.45],[-65.05,-54.7],[-65.5,-55.2]]],[[[-64.964892,-22.075862],[-64.377021,-22.798091],[-63.986838,-21.993644],[-62.846468,-22.034985],[-62.685057,-22.249029],[-60.846565,-23.880713],[-60.028966,-24.032796],[-58.807128,-24.771459],[-57.777217,-25.16234],[-57.63366,-25.603657],[-58.618174,-27.123719],[-57.60976,-27.395899],[-56.486702,-27.548499],[-55.695846,-27.387837],[-54.788795,-26.621786],[-54.625291,-25.739255],[-54.13005,-25.547639],[-53.628349,-26.124865],[-53.648735,-26.923473],[-54.490725,-27.474757],[-55.162286,-27.881915],[-56.2909,-28.852761],[-57.625133,-30.216295],[-57.874937,-31.016556],[-58.14244,-32.044504],[-58.132648,-33.040567],[-58.349611,-33.263189],[-58.427074,-33.909454],[-58.495442,-34.43149],[-57.22583,-35.288027],[-57.362359,-35.97739],[-56.737487,-36.413126],[-56.788285,-36.901572],[-57.749157,-38.183871],[-59.231857,-38.72022],[-61.237445,-38.928425],[-62.335957,-38.827707],[-62.125763,-39.424105],[-62.330531,-40.172586],[-62.145994,-40.676897],[-62.745803,-41.028761],[-63.770495,-41.166789],[-64.73209,-40.802677],[-65.118035,-41.064315],[-64.978561,-42.058001],[-64.303408,-42.359016],[-63.755948,-42.043687],[-63.458059,-42.563138],[-64.378804,-42.873558],[-65.181804,-43.495381],[-65.328823,-44.501366],[-65.565269,-45.036786],[-66.509966,-45.039628],[-67.293794,-45.551896],[-67.580546,-46.301773],[-66.597066,-47.033925],[-65.641027,-47.236135],[-65.985088,-48.133289],[-67.166179,-48.697337],[-67.816088,-49.869669],[-68.728745,-50.264218],[-69.138539,-50.73251],[-68.815561,-51.771104],[-68.149995,-52.349983],[-68.571545,-52.299444],[-69.498362,-52.142761],[-71.914804,-52.009022],[-72.329404,-51.425956],[-72.309974,-50.67701],[-72.975747,-50.74145],[-73.328051,-50.378785],[-73.415436,-49.318436],[-72.648247,-48.878618],[-72.331161,-48.244238],[-72.447355,-47.738533],[-71.917258,-46.884838],[-71.552009,-45.560733],[-71.659316,-44.973689],[-71.222779,-44.784243],[-71.329801,-44.407522],[-71.793623,-44.207172],[-71.464056,-43.787611],[-71.915424,-43.408565],[-72.148898,-42.254888],[-71.746804,-42.051386],[-71.915734,-40.832339],[-71.680761,-39.808164],[-71.413517,-38.916022],[-70.814664,-38.552995],[-71.118625,-37.576827],[-71.121881,-36.658124],[-70.364769,-36.005089],[-70.388049,-35.169688],[-69.817309,-34.193571],[-69.814777,-33.273886],[-70.074399,-33.09121],[-70.535069,-31.36501],[-69.919008,-30.336339],[-70.01355,-29.367923],[-69.65613,-28.459141],[-69.001235,-27.521214],[-68.295542,-26.89934],[-68.5948,-26.506909],[-68.386001,-26.185016],[-68.417653,-24.518555],[-67.328443,-24.025303],[-66.985234,-22.986349],[-67.106674,-22.735925],[-66.273339,-21.83231],[-64.964892,-22.075862]]]]}},{type:"Feature",id:"ARM",properties:{name:"Armenia"},geometry:{type:"Polygon",coordinates:[[[43.582746,41.092143],[44.97248,41.248129],[45.179496,40.985354],[45.560351,40.81229],[45.359175,40.561504],[45.891907,40.218476],[45.610012,39.899994],[46.034534,39.628021],[46.483499,39.464155],[46.50572,38.770605],[46.143623,38.741201],[45.735379,39.319719],[45.739978,39.473999],[45.298145,39.471751],[45.001987,39.740004],[44.79399,39.713003],[44.400009,40.005],[43.656436,40.253564],[43.752658,40.740201],[43.582746,41.092143]]]}},{type:"Feature",id:"ATA",properties:{name:"Antarctica"},geometry:{type:"MultiPolygon",coordinates:[[[[-59.572095,-80.040179],[-59.865849,-80.549657],[-60.159656,-81.000327],[-62.255393,-80.863178],[-64.488125,-80.921934],[-65.741666,-80.588827],[-65.741666,-80.549657],[-66.290031,-80.255773],[-64.037688,-80.294944],[-61.883246,-80.39287],[-61.138976,-79.981371],[-60.610119,-79.628679],[-59.572095,-80.040179]]],[[[-159.208184,-79.497059],[-161.127601,-79.634209],[-162.439847,-79.281465],[-163.027408,-78.928774],[-163.066604,-78.869966],[-163.712896,-78.595667],[-163.105801,-78.223338],[-161.245113,-78.380176],[-160.246208,-78.693645],[-159.482405,-79.046338],[-159.208184,-79.497059]]],[[[-45.154758,-78.04707],[-43.920828,-78.478103],[-43.48995,-79.08556],[-43.372438,-79.516645],[-43.333267,-80.026123],[-44.880537,-80.339644],[-46.506174,-80.594357],[-48.386421,-80.829485],[-50.482107,-81.025442],[-52.851988,-80.966685],[-54.164259,-80.633528],[-53.987991,-80.222028],[-51.853134,-79.94773],[-50.991326,-79.614623],[-50.364595,-79.183487],[-49.914131,-78.811209],[-49.306959,-78.458569],[-48.660616,-78.047018],[-48.660616,-78.047019],[-48.151396,-78.04707],[-46.662857,-77.831476],[-45.154758,-78.04707]]],[[[-121.211511,-73.50099],[-119.918851,-73.657725],[-118.724143,-73.481353],[-119.292119,-73.834097],[-120.232217,-74.08881],[-121.62283,-74.010468],[-122.621735,-73.657778],[-122.621735,-73.657777],[-122.406245,-73.324619],[-121.211511,-73.50099]]],[[[-125.559566,-73.481353],[-124.031882,-73.873268],[-124.619469,-73.834097],[-125.912181,-73.736118],[-127.28313,-73.461769],[-127.28313,-73.461768],[-126.558472,-73.246226],[-125.559566,-73.481353]]],[[[-98.98155,-71.933334],[-97.884743,-72.070535],[-96.787937,-71.952971],[-96.20035,-72.521205],[-96.983765,-72.442864],[-98.198083,-72.482035],[-99.432013,-72.442864],[-100.783455,-72.50162],[-101.801868,-72.305663],[-102.330725,-71.894164],[-101.703967,-71.717792],[-100.430919,-71.854993],[-98.98155,-71.933334]]],[[[-68.451346,-70.955823],[-68.333834,-71.406493],[-68.510128,-71.798407],[-68.784297,-72.170736],[-69.959471,-72.307885],[-71.075889,-72.503842],[-72.388134,-72.484257],[-71.8985,-72.092343],[-73.073622,-72.229492],[-74.19004,-72.366693],[-74.953895,-72.072757],[-75.012625,-71.661258],[-73.915819,-71.269345],[-73.915819,-71.269344],[-73.230331,-71.15178],[-72.074717,-71.190951],[-71.780962,-70.681473],[-71.72218,-70.309196],[-71.741791,-69.505782],[-71.173815,-69.035475],[-70.253252,-68.87874],[-69.724447,-69.251017],[-69.489422,-69.623346],[-69.058518,-70.074016],[-68.725541,-70.505153],[-68.451346,-70.955823]]],[[[-58.614143,-64.152467],[-59.045073,-64.36801],[-59.789342,-64.211223],[-60.611928,-64.309202],[-61.297416,-64.54433],[-62.0221,-64.799094],[-62.51176,-65.09303],[-62.648858,-65.484942],[-62.590128,-65.857219],[-62.120079,-66.190326],[-62.805567,-66.425505],[-63.74569,-66.503847],[-64.294106,-66.837004],[-64.881693,-67.150474],[-65.508425,-67.58161],[-65.665082,-67.953887],[-65.312545,-68.365335],[-64.783715,-68.678908],[-63.961103,-68.913984],[-63.1973,-69.227556],[-62.785955,-69.619419],[-62.570516,-69.991747],[-62.276736,-70.383661],[-61.806661,-70.716768],[-61.512906,-71.089045],[-61.375809,-72.010074],[-61.081977,-72.382351],[-61.003661,-72.774265],[-60.690269,-73.166179],[-60.827367,-73.695242],[-61.375809,-74.106742],[-61.96337,-74.439848],[-63.295201,-74.576997],[-63.74569,-74.92974],[-64.352836,-75.262847],[-65.860987,-75.635124],[-67.192818,-75.79191],[-68.446282,-76.007452],[-69.797724,-76.222995],[-70.600724,-76.634494],[-72.206776,-76.673665],[-73.969536,-76.634494],[-75.555977,-76.712887],[-77.24037,-76.712887],[-76.926979,-77.104802],[-75.399294,-77.28107],[-74.282876,-77.55542],[-73.656119,-77.908112],[-74.772536,-78.221633],[-76.4961,-78.123654],[-77.925858,-78.378419],[-77.984666,-78.789918],[-78.023785,-79.181833],[-76.848637,-79.514939],[-76.633224,-79.887216],[-75.360097,-80.259545],[-73.244852,-80.416331],[-71.442946,-80.69063],[-70.013163,-81.004151],[-68.191646,-81.317672],[-65.704279,-81.474458],[-63.25603,-81.748757],[-61.552026,-82.042692],[-59.691416,-82.37585],[-58.712121,-82.846106],[-58.222487,-83.218434],[-57.008117,-82.865691],[-55.362894,-82.571755],[-53.619771,-82.258235],[-51.543644,-82.003521],[-49.76135,-81.729171],[-47.273931,-81.709586],[-44.825708,-81.846735],[-42.808363,-82.081915],[-42.16202,-81.65083],[-40.771433,-81.356894],[-38.244818,-81.337309],[-36.26667,-81.121715],[-34.386397,-80.906172],[-32.310296,-80.769023],[-30.097098,-80.592651],[-28.549802,-80.337938],[-29.254901,-79.985195],[-29.685805,-79.632503],[-29.685805,-79.260226],[-31.624808,-79.299397],[-33.681324,-79.456132],[-35.639912,-79.456132],[-35.914107,-79.083855],[-35.77701,-78.339248],[-35.326546,-78.123654],[-33.896763,-77.888526],[-32.212369,-77.65345],[-30.998051,-77.359515],[-29.783732,-77.065579],[-28.882779,-76.673665],[-27.511752,-76.497345],[-26.160336,-76.360144],[-25.474822,-76.281803],[-23.927552,-76.24258],[-22.458598,-76.105431],[-21.224694,-75.909474],[-20.010375,-75.674346],[-18.913543,-75.439218],[-17.522982,-75.125698],[-16.641589,-74.79254],[-15.701491,-74.498604],[-15.40771,-74.106742],[-16.46532,-73.871614],[-16.112784,-73.460114],[-15.446855,-73.146542],[-14.408805,-72.950585],[-13.311973,-72.715457],[-12.293508,-72.401936],[-11.510067,-72.010074],[-11.020433,-71.539767],[-10.295774,-71.265416],[-9.101015,-71.324224],[-8.611381,-71.65733],[-7.416622,-71.696501],[-7.377451,-71.324224],[-6.868232,-70.93231],[-5.790985,-71.030289],[-5.536375,-71.402617],[-4.341667,-71.461373],[-3.048981,-71.285053],[-1.795492,-71.167438],[-.659489,-71.226246],[-.228637,-71.637745],[.868195,-71.304639],[1.886686,-71.128267],[3.022638,-70.991118],[4.139055,-70.853917],[5.157546,-70.618789],[6.273912,-70.462055],[7.13572,-70.246512],[7.742866,-69.893769],[8.48711,-70.148534],[9.525135,-70.011333],[10.249845,-70.48164],[10.817821,-70.834332],[11.953824,-70.638375],[12.404287,-70.246512],[13.422778,-69.972162],[14.734998,-70.030918],[15.126757,-70.403247],[15.949342,-70.030918],[17.026589,-69.913354],[18.201711,-69.874183],[19.259373,-69.893769],[20.375739,-70.011333],[21.452985,-70.07014],[21.923034,-70.403247],[22.569403,-70.697182],[23.666184,-70.520811],[24.841357,-70.48164],[25.977309,-70.48164],[27.093726,-70.462055],[28.09258,-70.324854],[29.150242,-70.20729],[30.031583,-69.93294],[30.971733,-69.75662],[31.990172,-69.658641],[32.754053,-69.384291],[33.302443,-68.835642],[33.870419,-68.502588],[34.908495,-68.659271],[35.300202,-69.012014],[36.16201,-69.247142],[37.200035,-69.168748],[37.905108,-69.52144],[38.649404,-69.776205],[39.667894,-69.541077],[40.020431,-69.109941],[40.921358,-68.933621],[41.959434,-68.600514],[42.938702,-68.463313],[44.113876,-68.267408],[44.897291,-68.051866],[45.719928,-67.816738],[46.503343,-67.601196],[47.44344,-67.718759],[48.344419,-67.366068],[48.990736,-67.091718],[49.930885,-67.111303],[50.753471,-66.876175],[50.949325,-66.523484],[51.791547,-66.249133],[52.614133,-66.053176],[53.613038,-65.89639],[54.53355,-65.818049],[55.414943,-65.876805],[56.355041,-65.974783],[57.158093,-66.249133],[57.255968,-66.680218],[58.137361,-67.013324],[58.744508,-67.287675],[59.939318,-67.405239],[60.605221,-67.679589],[61.427806,-67.953887],[62.387489,-68.012695],[63.19049,-67.816738],[64.052349,-67.405239],[64.992447,-67.620729],[65.971715,-67.738345],[66.911864,-67.855909],[67.891133,-67.934302],[68.890038,-67.934302],[69.712624,-68.972791],[69.673453,-69.227556],[69.555941,-69.678226],[68.596258,-69.93294],[67.81274,-70.305268],[67.949889,-70.697182],[69.066307,-70.677545],[68.929157,-71.069459],[68.419989,-71.441788],[67.949889,-71.853287],[68.71377,-72.166808],[69.869307,-72.264787],[71.024895,-72.088415],[71.573285,-71.696501],[71.906288,-71.324224],[72.454627,-71.010703],[73.08141,-70.716768],[73.33602,-70.364024],[73.864877,-69.874183],[74.491557,-69.776205],[75.62756,-69.737034],[76.626465,-69.619419],[77.644904,-69.462684],[78.134539,-69.07077],[78.428371,-68.698441],[79.113859,-68.326216],[80.093127,-68.071503],[80.93535,-67.875546],[81.483792,-67.542388],[82.051767,-67.366068],[82.776426,-67.209282],[83.775331,-67.30726],[84.676206,-67.209282],[85.655527,-67.091718],[86.752359,-67.150474],[87.477017,-66.876175],[87.986289,-66.209911],[88.358411,-66.484261],[88.828408,-66.954568],[89.67063,-67.150474],[90.630365,-67.228867],[91.5901,-67.111303],[92.608539,-67.189696],[93.548637,-67.209282],[94.17542,-67.111303],[95.017591,-67.170111],[95.781472,-67.385653],[96.682399,-67.248504],[97.759646,-67.248504],[98.68021,-67.111303],[99.718182,-67.248504],[100.384188,-66.915346],[100.893356,-66.58224],[101.578896,-66.30789],[102.832411,-65.563284],[103.478676,-65.700485],[104.242557,-65.974783],[104.90846,-66.327527],[106.181561,-66.934931],[107.160881,-66.954568],[108.081393,-66.954568],[109.15864,-66.837004],[110.235835,-66.699804],[111.058472,-66.425505],[111.74396,-66.13157],[112.860378,-66.092347],[113.604673,-65.876805],[114.388088,-66.072762],[114.897308,-66.386283],[115.602381,-66.699804],[116.699161,-66.660633],[117.384701,-66.915346],[118.57946,-67.170111],[119.832924,-67.268089],[120.871,-67.189696],[121.654415,-66.876175],[122.320369,-66.562654],[123.221296,-66.484261],[124.122274,-66.621462],[125.160247,-66.719389],[126.100396,-66.562654],[127.001427,-66.562654],[127.882768,-66.660633],[128.80328,-66.758611],[129.704259,-66.58224],[130.781454,-66.425505],[131.799945,-66.386283],[132.935896,-66.386283],[133.85646,-66.288304],[134.757387,-66.209963],[135.031582,-65.72007],[135.070753,-65.308571],[135.697485,-65.582869],[135.873805,-66.033591],[136.206705,-66.44509],[136.618049,-66.778197],[137.460271,-66.954568],[138.596223,-66.895761],[139.908442,-66.876175],[140.809421,-66.817367],[142.121692,-66.817367],[143.061842,-66.797782],[144.374061,-66.837004],[145.490427,-66.915346],[146.195552,-67.228867],[145.999699,-67.601196],[146.646067,-67.895131],[147.723263,-68.130259],[148.839629,-68.385024],[150.132314,-68.561292],[151.483705,-68.71813],[152.502247,-68.874813],[153.638199,-68.894502],[154.284567,-68.561292],[155.165857,-68.835642],[155.92979,-69.149215],[156.811132,-69.384291],[158.025528,-69.482269],[159.181013,-69.599833],[159.670699,-69.991747],[160.80665,-70.226875],[161.570479,-70.579618],[162.686897,-70.736353],[163.842434,-70.716768],[164.919681,-70.775524],[166.11444,-70.755938],[167.309095,-70.834332],[168.425616,-70.971481],[169.463589,-71.20666],[170.501665,-71.402617],[171.20679,-71.696501],[171.089227,-72.088415],[170.560422,-72.441159],[170.109958,-72.891829],[169.75737,-73.24452],[169.287321,-73.65602],[167.975101,-73.812806],[167.387489,-74.165498],[166.094803,-74.38104],[165.644391,-74.772954],[164.958851,-75.145283],[164.234193,-75.458804],[163.822797,-75.870303],[163.568239,-76.24258],[163.47026,-76.693302],[163.489897,-77.065579],[164.057873,-77.457442],[164.273363,-77.82977],[164.743464,-78.182514],[166.604126,-78.319611],[166.995781,-78.750748],[165.193876,-78.907483],[163.666217,-79.123025],[161.766385,-79.162248],[160.924162,-79.730482],[160.747894,-80.200737],[160.316964,-80.573066],[159.788211,-80.945395],[161.120016,-81.278501],[161.629287,-81.690001],[162.490992,-82.062278],[163.705336,-82.395435],[165.095949,-82.708956],[166.604126,-83.022477],[168.895665,-83.335998],[169.404782,-83.825891],[172.283934,-84.041433],[172.477049,-84.117914],[173.224083,-84.41371],[175.985672,-84.158997],[178.277212,-84.472518],[180,-84.71338],[-179.942499,-84.721443],[-179.058677,-84.139412],[-177.256772,-84.452933],[-177.140807,-84.417941],[-176.084673,-84.099259],[-175.947235,-84.110449],[-175.829882,-84.117914],[-174.382503,-84.534323],[-173.116559,-84.117914],[-172.889106,-84.061019],[-169.951223,-83.884647],[-168.999989,-84.117914],[-168.530199,-84.23739],[-167.022099,-84.570497],[-164.182144,-84.82521],[-161.929775,-85.138731],[-158.07138,-85.37391],[-155.192253,-85.09956],[-150.942099,-85.295517],[-148.533073,-85.609038],[-145.888918,-85.315102],[-143.107718,-85.040752],[-142.892279,-84.570497],[-146.829068,-84.531274],[-150.060732,-84.296146],[-150.902928,-83.904232],[-153.586201,-83.68869],[-153.409907,-83.23802],[-153.037759,-82.82652],[-152.665637,-82.454192],[-152.861517,-82.042692],[-154.526299,-81.768394],[-155.29018,-81.41565],[-156.83745,-81.102129],[-154.408787,-81.160937],[-152.097662,-81.004151],[-150.648293,-81.337309],[-148.865998,-81.043373],[-147.22075,-80.671045],[-146.417749,-80.337938],[-146.770286,-79.926439],[-148.062947,-79.652089],[-149.531901,-79.358205],[-151.588416,-79.299397],[-153.390322,-79.162248],[-155.329376,-79.064269],[-155.975668,-78.69194],[-157.268302,-78.378419],[-158.051768,-78.025676],[-158.365134,-76.889207],[-157.875474,-76.987238],[-156.974573,-77.300759],[-155.329376,-77.202728],[-153.742832,-77.065579],[-152.920247,-77.496664],[-151.33378,-77.398737],[-150.00195,-77.183143],[-148.748486,-76.908845],[-147.612483,-76.575738],[-146.104409,-76.47776],[-146.143528,-76.105431],[-146.496091,-75.733154],[-146.20231,-75.380411],[-144.909624,-75.204039],[-144.322037,-75.537197],[-142.794353,-75.34124],[-141.638764,-75.086475],[-140.209007,-75.06689],[-138.85759,-74.968911],[-137.5062,-74.733783],[-136.428901,-74.518241],[-135.214583,-74.302699],[-134.431194,-74.361455],[-133.745654,-74.439848],[-132.257168,-74.302699],[-130.925311,-74.479019],[-129.554284,-74.459433],[-128.242038,-74.322284],[-126.890622,-74.420263],[-125.402082,-74.518241],[-124.011496,-74.479019],[-122.562152,-74.498604],[-121.073613,-74.518241],[-119.70256,-74.479019],[-118.684145,-74.185083],[-117.469801,-74.028348],[-116.216312,-74.243891],[-115.021552,-74.067519],[-113.944331,-73.714828],[-113.297988,-74.028348],[-112.945452,-74.38104],[-112.299083,-74.714198],[-111.261059,-74.420263],[-110.066325,-74.79254],[-108.714909,-74.910103],[-107.559346,-75.184454],[-106.149148,-75.125698],[-104.876074,-74.949326],[-103.367949,-74.988497],[-102.016507,-75.125698],[-100.645531,-75.302018],[-100.1167,-74.870933],[-100.763043,-74.537826],[-101.252703,-74.185083],[-102.545337,-74.106742],[-103.113313,-73.734413],[-103.328752,-73.362084],[-103.681289,-72.61753],[-102.917485,-72.754679],[-101.60524,-72.813436],[-100.312528,-72.754679],[-99.13738,-72.911414],[-98.118889,-73.20535],[-97.688037,-73.558041],[-96.336595,-73.616849],[-95.043961,-73.4797],[-93.672907,-73.283743],[-92.439003,-73.166179],[-91.420564,-73.401307],[-90.088733,-73.322914],[-89.226951,-72.558722],[-88.423951,-73.009393],[-87.268337,-73.185764],[-86.014822,-73.087786],[-85.192236,-73.4797],[-83.879991,-73.518871],[-82.665646,-73.636434],[-81.470913,-73.851977],[-80.687447,-73.4797],[-80.295791,-73.126956],[-79.296886,-73.518871],[-77.925858,-73.420892],[-76.907367,-73.636434],[-76.221879,-73.969541],[-74.890049,-73.871614],[-73.852024,-73.65602],[-72.833533,-73.401307],[-71.619215,-73.264157],[-70.209042,-73.146542],[-68.935916,-73.009393],[-67.956622,-72.79385],[-67.369061,-72.480329],[-67.134036,-72.049244],[-67.251548,-71.637745],[-67.56494,-71.245831],[-67.917477,-70.853917],[-68.230843,-70.462055],[-68.485452,-70.109311],[-68.544209,-69.717397],[-68.446282,-69.325535],[-67.976233,-68.953206],[-67.5845,-68.541707],[-67.427843,-68.149844],[-67.62367,-67.718759],[-67.741183,-67.326845],[-67.251548,-66.876175],[-66.703184,-66.58224],[-66.056815,-66.209963],[-65.371327,-65.89639],[-64.568276,-65.602506],[-64.176542,-65.171423],[-63.628152,-64.897073],[-63.001394,-64.642308],[-62.041686,-64.583552],[-61.414928,-64.270031],[-60.709855,-64.074074],[-59.887269,-63.95651],[-59.162585,-63.701745],[-58.594557,-63.388224],[-57.811143,-63.27066],[-57.223582,-63.525425],[-57.59573,-63.858532],[-58.614143,-64.152467]]]]}},{type:"Feature",id:"ABW",properties:{name:"Aruba"},geometry:{type:"MultiPolygon",coordinates:[[[[-69.99693762899992,12.577582098000036],[-69.93639075399994,12.53172435100005],[-69.92467200399994,12.519232489000046],[-69.91576087099992,12.497015692000076],[-69.88019771999984,12.453558661000045],[-69.87682044199994,12.427394924000097],[-69.88809160099993,12.417669989000046],[-69.90880286399994,12.417792059000107],[-69.93053137899989,12.425970770000035],[-69.94513912699992,12.44037506700009],[-69.92467200399994,12.44037506700009],[-69.92467200399994,12.447211005000014],[-69.95856686099992,12.463202216000099],[-70.02765865799992,12.522935289000088],[-70.04808508999989,12.53115469000008],[-70.05809485599988,12.537176825000088],[-70.06240800699987,12.546820380000057],[-70.06037350199995,12.556952216000113],[-70.0510961579999,12.574042059000064],[-70.04873613199993,12.583726304000024],[-70.05264238199993,12.600002346000053],[-70.05964107999992,12.614243882000054],[-70.06110592399997,12.625392971000068],[-70.04873613199993,12.632147528000104],[-70.00715084499987,12.5855166690001],[-69.99693762899992,12.577582098000036]]]]}},{type:"Feature",id:"ATF",properties:{name:"French Southern and Antarctic Lands"},geometry:{type:"Polygon",coordinates:[[[68.935,-48.625],[69.58,-48.94],[70.525,-49.065],[70.56,-49.255],[70.28,-49.71],[68.745,-49.775],[68.72,-49.2425],[68.8675,-48.83],[68.935,-48.625]]]}},{type:"Feature",id:"AUS",properties:{name:"Australia"},geometry:{type:"MultiPolygon",coordinates:[[[[145.397978,-40.792549],[146.364121,-41.137695],[146.908584,-41.000546],[147.689259,-40.808258],[148.289068,-40.875438],[148.359865,-42.062445],[148.017301,-42.407024],[147.914052,-43.211522],[147.564564,-42.937689],[146.870343,-43.634597],[146.663327,-43.580854],[146.048378,-43.549745],[145.43193,-42.693776],[145.29509,-42.03361],[144.718071,-41.162552],[144.743755,-40.703975],[145.397978,-40.792549]]],[[[143.561811,-13.763656],[143.922099,-14.548311],[144.563714,-14.171176],[144.894908,-14.594458],[145.374724,-14.984976],[145.271991,-15.428205],[145.48526,-16.285672],[145.637033,-16.784918],[145.888904,-16.906926],[146.160309,-17.761655],[146.063674,-18.280073],[146.387478,-18.958274],[147.471082,-19.480723],[148.177602,-19.955939],[148.848414,-20.39121],[148.717465,-20.633469],[149.28942,-21.260511],[149.678337,-22.342512],[150.077382,-22.122784],[150.482939,-22.556142],[150.727265,-22.402405],[150.899554,-23.462237],[151.609175,-24.076256],[152.07354,-24.457887],[152.855197,-25.267501],[153.136162,-26.071173],[153.161949,-26.641319],[153.092909,-27.2603],[153.569469,-28.110067],[153.512108,-28.995077],[153.339095,-29.458202],[153.069241,-30.35024],[153.089602,-30.923642],[152.891578,-31.640446],[152.450002,-32.550003],[151.709117,-33.041342],[151.343972,-33.816023],[151.010555,-34.31036],[150.714139,-35.17346],[150.32822,-35.671879],[150.075212,-36.420206],[149.946124,-37.109052],[149.997284,-37.425261],[149.423882,-37.772681],[148.304622,-37.809061],[147.381733,-38.219217],[146.922123,-38.606532],[146.317922,-39.035757],[145.489652,-38.593768],[144.876976,-38.417448],[145.032212,-37.896188],[144.485682,-38.085324],[143.609974,-38.809465],[142.745427,-38.538268],[142.17833,-38.380034],[141.606582,-38.308514],[140.638579,-38.019333],[139.992158,-37.402936],[139.806588,-36.643603],[139.574148,-36.138362],[139.082808,-35.732754],[138.120748,-35.612296],[138.449462,-35.127261],[138.207564,-34.384723],[137.71917,-35.076825],[136.829406,-35.260535],[137.352371,-34.707339],[137.503886,-34.130268],[137.890116,-33.640479],[137.810328,-32.900007],[136.996837,-33.752771],[136.372069,-34.094766],[135.989043,-34.890118],[135.208213,-34.47867],[135.239218,-33.947953],[134.613417,-33.222778],[134.085904,-32.848072],[134.273903,-32.617234],[132.990777,-32.011224],[132.288081,-31.982647],[131.326331,-31.495803],[129.535794,-31.590423],[128.240938,-31.948489],[127.102867,-32.282267],[126.148714,-32.215966],[125.088623,-32.728751],[124.221648,-32.959487],[124.028947,-33.483847],[123.659667,-33.890179],[122.811036,-33.914467],[122.183064,-34.003402],[121.299191,-33.821036],[120.580268,-33.930177],[119.893695,-33.976065],[119.298899,-34.509366],[119.007341,-34.464149],[118.505718,-34.746819],[118.024972,-35.064733],[117.295507,-35.025459],[116.625109,-35.025097],[115.564347,-34.386428],[115.026809,-34.196517],[115.048616,-33.623425],[115.545123,-33.487258],[115.714674,-33.259572],[115.679379,-32.900369],[115.801645,-32.205062],[115.689611,-31.612437],[115.160909,-30.601594],[114.997043,-30.030725],[115.040038,-29.461095],[114.641974,-28.810231],[114.616498,-28.516399],[114.173579,-28.118077],[114.048884,-27.334765],[113.477498,-26.543134],[113.338953,-26.116545],[113.778358,-26.549025],[113.440962,-25.621278],[113.936901,-25.911235],[114.232852,-26.298446],[114.216161,-25.786281],[113.721255,-24.998939],[113.625344,-24.683971],[113.393523,-24.384764],[113.502044,-23.80635],[113.706993,-23.560215],[113.843418,-23.059987],[113.736552,-22.475475],[114.149756,-21.755881],[114.225307,-22.517488],[114.647762,-21.82952],[115.460167,-21.495173],[115.947373,-21.068688],[116.711615,-20.701682],[117.166316,-20.623599],[117.441545,-20.746899],[118.229559,-20.374208],[118.836085,-20.263311],[118.987807,-20.044203],[119.252494,-19.952942],[119.805225,-19.976506],[120.85622,-19.683708],[121.399856,-19.239756],[121.655138,-18.705318],[122.241665,-18.197649],[122.286624,-17.798603],[122.312772,-17.254967],[123.012574,-16.4052],[123.433789,-17.268558],[123.859345,-17.069035],[123.503242,-16.596506],[123.817073,-16.111316],[124.258287,-16.327944],[124.379726,-15.56706],[124.926153,-15.0751],[125.167275,-14.680396],[125.670087,-14.51007],[125.685796,-14.230656],[126.125149,-14.347341],[126.142823,-14.095987],[126.582589,-13.952791],[127.065867,-13.817968],[127.804633,-14.276906],[128.35969,-14.86917],[128.985543,-14.875991],[129.621473,-14.969784],[129.4096,-14.42067],[129.888641,-13.618703],[130.339466,-13.357376],[130.183506,-13.10752],[130.617795,-12.536392],[131.223495,-12.183649],[131.735091,-12.302453],[132.575298,-12.114041],[132.557212,-11.603012],[131.824698,-11.273782],[132.357224,-11.128519],[133.019561,-11.376411],[133.550846,-11.786515],[134.393068,-12.042365],[134.678632,-11.941183],[135.298491,-12.248606],[135.882693,-11.962267],[136.258381,-12.049342],[136.492475,-11.857209],[136.95162,-12.351959],[136.685125,-12.887223],[136.305407,-13.29123],[135.961758,-13.324509],[136.077617,-13.724278],[135.783836,-14.223989],[135.428664,-14.715432],[135.500184,-14.997741],[136.295175,-15.550265],[137.06536,-15.870762],[137.580471,-16.215082],[138.303217,-16.807604],[138.585164,-16.806622],[139.108543,-17.062679],[139.260575,-17.371601],[140.215245,-17.710805],[140.875463,-17.369069],[141.07111,-16.832047],[141.274095,-16.38887],[141.398222,-15.840532],[141.702183,-15.044921],[141.56338,-14.561333],[141.63552,-14.270395],[141.519869,-13.698078],[141.65092,-12.944688],[141.842691,-12.741548],[141.68699,-12.407614],[141.928629,-11.877466],[142.118488,-11.328042],[142.143706,-11.042737],[142.51526,-10.668186],[142.79731,-11.157355],[142.866763,-11.784707],[143.115947,-11.90563],[143.158632,-12.325656],[143.522124,-12.834358],[143.597158,-13.400422],[143.561811,-13.763656]]]]}},{type:"Feature",id:"AUT",properties:{name:"Austria"},geometry:{type:"Polygon",coordinates:[[[16.979667,48.123497],[16.903754,47.714866],[16.340584,47.712902],[16.534268,47.496171],[16.202298,46.852386],[16.011664,46.683611],[15.137092,46.658703],[14.632472,46.431817],[13.806475,46.509306],[12.376485,46.767559],[12.153088,47.115393],[11.164828,46.941579],[11.048556,46.751359],[10.442701,46.893546],[9.932448,46.920728],[9.47997,47.10281],[9.632932,47.347601],[9.594226,47.525058],[9.896068,47.580197],[10.402084,47.302488],[10.544504,47.566399],[11.426414,47.523766],[12.141357,47.703083],[12.62076,47.672388],[12.932627,47.467646],[13.025851,47.637584],[12.884103,48.289146],[13.243357,48.416115],[13.595946,48.877172],[14.338898,48.555305],[14.901447,48.964402],[15.253416,49.039074],[16.029647,48.733899],[16.499283,48.785808],[16.960288,48.596982],[16.879983,48.470013],[16.979667,48.123497]]]}},{type:"Feature",id:"AZE",properties:{name:"Azerbaijan"},geometry:{type:"MultiPolygon",coordinates:[[[[45.001987,39.740004],[45.298145,39.471751],[45.739978,39.473999],[45.735379,39.319719],[46.143623,38.741201],[45.457722,38.874139],[44.952688,39.335765],[44.79399,39.713003],[45.001987,39.740004]]],[[[47.373315,41.219732],[47.815666,41.151416],[47.987283,41.405819],[48.584353,41.80887],[49.110264,41.282287],[49.618915,40.572924],[50.08483,40.526157],[50.392821,40.256561],[49.569202,40.176101],[49.395259,39.399482],[49.223228,39.049219],[48.856532,38.815486],[48.883249,38.320245],[48.634375,38.270378],[48.010744,38.794015],[48.355529,39.288765],[48.060095,39.582235],[47.685079,39.508364],[46.50572,38.770605],[46.483499,39.464155],[46.034534,39.628021],[45.610012,39.899994],[45.891907,40.218476],[45.359175,40.561504],[45.560351,40.81229],[45.179496,40.985354],[44.97248,41.248129],[45.217426,41.411452],[45.962601,41.123873],[46.501637,41.064445],[46.637908,41.181673],[46.145432,41.722802],[46.404951,41.860675],[46.686071,41.827137],[47.373315,41.219732]]]]}},{type:"Feature",id:"BRB",properties:{name:"Barbados"},geometry:{type:"MultiPolygon",coordinates:[[[[-59.426909959999875,13.160386460000069],[-59.43004309799994,13.125921942000048],[-59.45571855399993,13.10004303600003],[-59.47577877499987,13.086493231000063],[-59.48753821499986,13.078558661000102],[-59.50885982999992,13.057318427000027],[-59.51671301999991,13.056382554000038],[-59.523101365999935,13.056463934000107],[-59.529286261999886,13.055405992000061],[-59.53612219999991,13.05117422100004],[-59.54596920499992,13.067694403000104],[-59.56444251199986,13.078029690000022],[-59.58690344999985,13.08319733300003],[-59.60024980399987,13.0841332050001],[-59.60814368399994,13.084662177000084],[-59.621571417999945,13.09398021000004],[-59.63312740799995,13.115912177000055],[-59.64606686099995,13.160386460000069],[-59.654204881999874,13.295111395000077],[-59.65221106699994,13.310614325000088],[-59.64513098899988,13.32371653900006],[-59.630930141999954,13.337958075000074],[-59.61286373599995,13.344549872000044],[-59.59447180899991,13.334784247000101],[-59.5807185539999,13.314520575000088],[-59.57591712099989,13.304388739000046],[-59.56895911399991,13.289658921000054],[-59.54979407499985,13.249172268000024],[-59.53661048099991,13.231390692000033],[-59.51805579299989,13.217515367000132],[-59.49181067599997,13.19794342700007],[-59.476673956999974,13.189398505000057],[-59.4571020169999,13.183172919000086],[-59.438628709999875,13.174872137000108],[-59.426909959999875,13.160386460000069]]]]}},{type:"Feature",id:"BDI",properties:{name:"Burundi"},geometry:{type:"Polygon",coordinates:[[[29.339998,-4.499983],[29.276384,-3.293907],[29.024926,-2.839258],[29.632176,-2.917858],[29.938359,-2.348487],[30.469696,-2.413858],[30.527677,-2.807632],[30.743013,-3.034285],[30.752263,-3.35933],[30.50556,-3.568567],[30.116333,-4.090138],[29.753512,-4.452389],[29.339998,-4.499983]]]}},{type:"Feature",id:"BEL",properties:{name:"Belgium"},geometry:{type:"Polygon",coordinates:[[[3.314971,51.345781],[4.047071,51.267259],[4.973991,51.475024],[5.606976,51.037298],[6.156658,50.803721],[6.043073,50.128052],[5.782417,50.090328],[5.674052,49.529484],[4.799222,49.985373],[4.286023,49.907497],[3.588184,50.378992],[3.123252,50.780363],[2.658422,50.796848],[2.513573,51.148506],[3.314971,51.345781]]]}},{type:"Feature",id:"BEN",properties:{name:"Benin"},geometry:{type:"Polygon",coordinates:[[[2.691702,6.258817],[1.865241,6.142158],[1.618951,6.832038],[1.664478,9.12859],[1.463043,9.334624],[1.425061,9.825395],[1.077795,10.175607],[.772336,10.470808],[.899563,10.997339],[1.24347,11.110511],[1.447178,11.547719],[1.935986,11.64115],[2.154474,11.94015],[2.490164,12.233052],[2.848643,12.235636],[3.61118,11.660167],[3.572216,11.327939],[3.797112,10.734746],[3.60007,10.332186],[3.705438,10.06321],[3.220352,9.444153],[2.912308,9.137608],[2.723793,8.506845],[2.749063,7.870734],[2.691702,6.258817]]]}},{type:"Feature",id:"BFA",properties:{name:"Burkina Faso"},geometry:{type:"Polygon",coordinates:[[[-2.827496,9.642461],[-3.511899,9.900326],[-3.980449,9.862344],[-4.330247,9.610835],[-4.779884,9.821985],[-4.954653,10.152714],[-5.404342,10.370737],[-5.470565,10.95127],[-5.197843,11.375146],[-5.220942,11.713859],[-4.427166,12.542646],[-4.280405,13.228444],[-4.006391,13.472485],[-3.522803,13.337662],[-3.103707,13.541267],[-2.967694,13.79815],[-2.191825,14.246418],[-2.001035,14.559008],[-1.066363,14.973815],[-.515854,15.116158],[-.266257,14.924309],[.374892,14.928908],[.295646,14.444235],[.429928,13.988733],[.993046,13.33575],[1.024103,12.851826],[2.177108,12.625018],[2.154474,11.94015],[1.935986,11.64115],[1.447178,11.547719],[1.24347,11.110511],[.899563,10.997339],[.023803,11.018682],[-.438702,11.098341],[-.761576,10.93693],[-1.203358,11.009819],[-2.940409,10.96269],[-2.963896,10.395335],[-2.827496,9.642461]]]}},{type:"Feature",id:"BGD",properties:{name:"Bangladesh"},geometry:{type:"Polygon",coordinates:[[[92.672721,22.041239],[92.652257,21.324048],[92.303234,21.475485],[92.368554,20.670883],[92.082886,21.192195],[92.025215,21.70157],[91.834891,22.182936],[91.417087,22.765019],[90.496006,22.805017],[90.586957,22.392794],[90.272971,21.836368],[89.847467,22.039146],[89.70205,21.857116],[89.418863,21.966179],[89.031961,22.055708],[88.876312,22.879146],[88.52977,23.631142],[88.69994,24.233715],[88.084422,24.501657],[88.306373,24.866079],[88.931554,25.238692],[88.209789,25.768066],[88.563049,26.446526],[89.355094,26.014407],[89.832481,25.965082],[89.920693,25.26975],[90.872211,25.132601],[91.799596,25.147432],[92.376202,24.976693],[91.915093,24.130414],[91.46773,24.072639],[91.158963,23.503527],[91.706475,22.985264],[91.869928,23.624346],[92.146035,23.627499],[92.672721,22.041239]]]}},{type:"Feature",id:"BLM",properties:{name:"Saint Barthelemy"},geometry:{type:"MultiPolygon",coordinates:[[[[-62.83885657499988,17.88198476800008],[-62.85094153599988,17.890448309000107],[-62.861317511999886,17.905422268000052],[-62.8673396479999,17.920396226000094],[-62.866118943999965,17.92914459800005],[-62.857411261999886,17.925034898000092],[-62.7916560539999,17.915472723000022],[-62.79893958199992,17.904486395000077],[-62.81012936099992,17.892279364000075],[-62.82384192599994,17.883246161000073],[-62.83885657499988,17.88198476800008]]]]}},{type:"Feature",id:"BGR",properties:{name:"Bulgaria"},geometry:{type:"Polygon",coordinates:[[[22.65715,44.234923],[22.944832,43.823785],[23.332302,43.897011],[24.100679,43.741051],[25.569272,43.688445],[26.065159,43.943494],[27.2424,44.175986],[27.970107,43.812468],[28.558081,43.707462],[28.039095,43.293172],[27.673898,42.577892],[27.99672,42.007359],[27.135739,42.141485],[26.117042,41.826905],[26.106138,41.328899],[25.197201,41.234486],[24.492645,41.583896],[23.692074,41.309081],[22.952377,41.337994],[22.881374,41.999297],[22.380526,42.32026],[22.545012,42.461362],[22.436595,42.580321],[22.604801,42.898519],[22.986019,43.211161],[22.500157,43.642814],[22.410446,44.008063],[22.65715,44.234923]]]}},{type:"Feature",id:"BHS",properties:{name:"The Bahamas"},geometry:{type:"MultiPolygon",coordinates:[[[[-73.03392986299986,21.15673149000004],[-73.09759423299997,21.08140004700006],[-73.12982146599995,20.993662571000144],[-73.15119381399995,20.98212311400009],[-73.22556430799992,20.952463097000035],[-73.26891028599991,20.958726304],[-73.28160559799997,20.95506419500005],[-73.2910863919999,20.950588283000073],[-73.3104548819999,20.93764883000007],[-73.31729081899991,20.93764883000007],[-73.31729081899991,20.945054429000052],[-73.31065833199995,20.95050690300009],[-73.32543493799992,20.96133777000007],[-73.34692155599993,20.96382728000019],[-73.39895748199987,20.93576135500014],[-73.43342037699995,20.93764883000007],[-73.49261425099988,20.924457277000087],[-73.5368105879999,20.94123591400013],[-73.60081946499992,20.946519273000106],[-73.61522376199989,20.944566148000078],[-73.63142089299996,20.936681229000115],[-73.63561799699994,20.929263247],[-73.64144993399992,20.920330965000076],[-73.64511012499992,20.91239890900006],[-73.6516121299999,20.913781123000106],[-73.66335589399992,20.921082134000144],[-73.67614103599996,20.935162282000036],[-73.67897042099995,20.94599493600016],[-73.68143384299992,20.963241811000145],[-73.6822611829999,20.985784991000017],[-73.69995646899994,21.014327847000075],[-73.70320851199989,21.01976572200006],[-73.6999099219999,21.026871362000023],[-73.67009365599989,21.029793419000114],[-73.65333525799994,21.03988604000004],[-73.64707081799986,21.061555161000157],[-73.6451734829999,21.080532573000042],[-73.65693080199989,21.093983190000174],[-73.66786106699993,21.10499832400002],[-73.66783314099993,21.115223100000108],[-73.63344490599991,21.09970197600002],[-73.61308669699989,21.10689677800015],[-73.59586063499995,21.11264424700009],[-73.5840970649999,21.12134069800011],[-73.55288739499989,21.130204283000026],[-73.54579357499992,21.149742968000012],[-73.52369848299992,21.16827138300006],[-73.51460433599993,21.186866653000052],[-73.49262555699994,21.182085917000094],[-73.47276770699995,21.192694403000147],[-73.44359290299988,21.192938544000086],[-73.43333899599986,21.193264065000037],[-73.42320716099991,21.19790273600013],[-73.41291256399998,21.205145575000145],[-73.39818274599989,21.22483958500011],[-73.38988196499992,21.233303127000156],[-73.38621985599988,21.22898997600005],[-73.37979081899994,21.208197333000058],[-73.36388098899994,21.190252997000115],[-73.34383419599993,21.165413185000105],[-73.3179435019999,21.154067681000086],[-73.25515239699988,21.13506013199999],[-73.23308077699994,21.147964784000138],[-73.21102369099995,21.158073590000143],[-73.16096119599987,21.169862973000036],[-73.13773470399994,21.197670598000016],[-73.11738404399992,21.236701323000105],[-73.06818600199995,21.309881903000033],[-73.05304928299995,21.329291083000143],[-73.03376217399992,21.340399481000148],[-73.01219641799992,21.332017320000105],[-73.00462805899988,21.314439195000162],[-73.00572669199991,21.291449286],[-73.02554277299993,21.18455638200014],[-73.03392986299986,21.15673149000004]]],[[[-73.04372498199984,21.426066860000034],[-73.05304575199995,21.42490354000013],[-73.05494807399995,21.4354399920001],[-73.05217432399988,21.447796365000087],[-73.05930925099992,21.46704144400009],[-73.0724308179999,21.486336651],[-73.07623436799992,21.506795732000015],[-73.06618412899988,21.514148289000147],[-73.04281768099992,21.52140082600009],[-73.02403723899988,21.53217194200009],[-73.00656224199986,21.55208494400013],[-72.9915258449999,21.56199778900016],[-72.98216712099989,21.55654531500015],[-72.97002673799992,21.54188556700008],[-72.95945733199989,21.533127982000153],[-72.93957155199988,21.523055712000044],[-72.91974850199992,21.514797268],[-72.91043831699992,21.504850291000153],[-72.91464979799994,21.485062200000144],[-72.93342899699985,21.473451972000092],[-72.9707663909999,21.469428091000125],[-72.98822983799997,21.454092202000183],[-72.99957214499997,21.451707711000054],[-73.03366326799991,21.435888338000055],[-73.04372498199984,21.426066860000034]]],[[[-75.7220759759999,22.20258209800012],[-75.7181697259999,22.195786851000108],[-75.71471106699991,22.18292877800009],[-75.72191321499992,22.17536041900003],[-75.73436438699986,22.175034898000106],[-75.74266516799992,22.183254299000012],[-75.74852454299989,22.196682033000016],[-75.74974524599989,22.204535223000093],[-75.74502519399988,22.205755927],[-75.73912512899994,22.20392487200003],[-75.73302161399997,22.19977448100009],[-75.73399817599994,22.205959377000156],[-75.73949133999986,22.22284577000015],[-75.7362361319999,22.224798895],[-75.73143469999994,22.21820709800012],[-75.7220759759999,22.20258209800012]]],[[[-75.74596106699997,22.236029364],[-75.7496638659999,22.23484935100008],[-75.75340735599994,22.23737213700018],[-75.7518611319999,22.263251044000086],[-75.74754798099991,22.26146067900011],[-75.74486243399991,22.24469635600009],[-75.74596106699997,22.236029364]]],[[[-75.80264238199993,22.353176174000097],[-75.80549068899998,22.347601630000085],[-75.81314042899993,22.356268622000172],[-75.82017981699988,22.37132396],[-75.8236384759999,22.385728257000054],[-75.81956946499992,22.388413804000137],[-75.8136287099999,22.377875067000062],[-75.81167558499996,22.371568101000136],[-75.80785071499994,22.365668036],[-75.80264238199993,22.353176174000097]]],[[[-73.10606848899991,22.43349844],[-73.09080969999994,22.431586005000142],[-73.09089107999992,22.433661200000145],[-73.08511308499993,22.438177802000112],[-73.07705644399991,22.44285716400013],[-73.0702205069999,22.445257880000085],[-73.06314042899993,22.4447289080001],[-73.04824785099987,22.440130927000055],[-73.03990637899992,22.43903229400003],[-73.01520748599992,22.430487372000087],[-72.96373450399994,22.397650458],[-72.93993079299995,22.396877346000068],[-72.94481360599991,22.40249258000007],[-72.95360266799989,22.41860586100013],[-72.92027747299989,22.402899481000176],[-72.90363521999984,22.39907461100016],[-72.89281165299985,22.40428294500005],[-72.8771052729999,22.39301178600006],[-72.86168372299994,22.3868675800001],[-72.84373938699991,22.38434479400017],[-72.8204646479999,22.383775132000025],[-72.81379146999984,22.38100820500013],[-72.80597896999984,22.374253648000106],[-72.79283606699988,22.35960521],[-72.78331458199989,22.35321686400009],[-72.76366126199994,22.35321686400009],[-72.75499426999994,22.34967682500009],[-72.7461645169999,22.33128489800005],[-72.75088456899991,22.311224677],[-72.7638240229999,22.294867255000085],[-72.7794490229999,22.288234768],[-72.79723059799997,22.293646552000055],[-72.84373938699991,22.336004950000145],[-72.86400305899991,22.349920966000056],[-72.87999426999991,22.35822174700003],[-72.89757239499994,22.36225006700009],[-72.92292232999998,22.36334870000003],[-72.93419348899988,22.362127997000115],[-72.94912675699993,22.357001044000086],[-72.95702063699989,22.35590241100006],[-72.96882076699987,22.358099677000055],[-72.97533118399986,22.362982489000117],[-72.98045813699989,22.367865302],[-72.98835201699984,22.370184637000065],[-73.00991777299996,22.365952867000132],[-73.04954993399988,22.346625067],[-73.07371985599988,22.342230536000116],[-73.08429928299992,22.344387111000017],[-73.0909724599999,22.34906647300012],[-73.09593665299985,22.353705145000063],[-73.10130774599989,22.35590241100006],[-73.13914954299995,22.36334870000003],[-73.15640214799996,22.367661851000136],[-73.16600501199991,22.374212958000115],[-73.16372636599996,22.383693752000042],[-73.14537512899992,22.396877346000068],[-73.15111243399988,22.403957424000126],[-73.15151933499988,22.408596096000068],[-73.14537512899992,22.41860586100013],[-73.1406957669999,22.43154531500015],[-73.14244544199988,22.44228750200007],[-73.14224199099993,22.451361395000063],[-73.13170325399997,22.459540106000148],[-73.11457271999984,22.438544012000037],[-73.10606848899991,22.43349844]]],[[[-73.60761801299992,22.577255263000026],[-73.6254980039999,22.57425790200007],[-73.61817706699989,22.60124962500005],[-73.60598340899986,22.609493955000076],[-73.59379446199998,22.601993096000015],[-73.60761801299992,22.577255263000026]]],[[[-73.46873625299989,22.587662293],[-73.4752329449999,22.586170179000092],[-73.51743936699992,22.59820201800015],[-73.53611469799998,22.603462445],[-73.55641857299992,22.606473875000134],[-73.55885331399995,22.611722827],[-73.54098037499995,22.613960339000144],[-73.52392126799987,22.616196299000066],[-73.5011859949999,22.610929788000036],[-73.4784619939999,22.601163606000128],[-73.46873625299989,22.587662293]]],[[[-74.35472571499992,22.563299872000144],[-74.3855688139999,22.541449286000116],[-74.37669837099995,22.584377346000068],[-74.34764563699989,22.61294179900007],[-74.31200110599991,22.638332424000097],[-74.28376217399995,22.671820380000142],[-74.28892981699994,22.643744208000143],[-74.31753495999993,22.602484442],[-74.35472571499992,22.563299872000144]]],[[[-73.84487870999993,22.720200914000046],[-73.86847896999987,22.68146393400012],[-73.87970943899995,22.671820380000142],[-73.88019771999984,22.68187083500011],[-73.88369706899994,22.689846096000068],[-73.89024817599991,22.69546133000007],[-73.89952551999997,22.69847239799999],[-73.89606686099998,22.684881903000033],[-73.88780676999988,22.671820380000142],[-73.87694251199991,22.665472723],[-73.86538652299987,22.671820380000142],[-73.85863196499994,22.65717194200012],[-73.84947669199994,22.582464911000116],[-73.84398352799994,22.56712474200016],[-73.83120683499988,22.541449286000116],[-73.84837805899991,22.537583726000108],[-73.85558020699995,22.520656643000123],[-73.85912024599992,22.498724677],[-73.86538652299987,22.48004791900003],[-73.87515214799993,22.468491929],[-73.88955644399988,22.455023505000113],[-73.90477454299986,22.443752346000124],[-73.91690019399994,22.43903229400003],[-73.9283748039999,22.430121161000088],[-73.9615779289999,22.370184637000065],[-74.01378333199992,22.330064195000134],[-74.0230199859999,22.32575104400003],[-74.03359941299993,22.325018622000087],[-74.09439042899987,22.30190664300015],[-74.11937415299991,22.296861070000105],[-74.13467363199996,22.283880927000112],[-74.15965735599988,22.246649481000034],[-74.16771399599992,22.23843008000013],[-74.19416256399998,22.21686432500003],[-74.20425370999996,22.212469794000143],[-74.22691809799991,22.209214585],[-74.24474036399988,22.200384833000143],[-74.27696692599991,22.17153554900004],[-74.27822831899994,22.180568752000127],[-74.27696692599991,22.21588776200015],[-74.27245032499988,22.225734768000066],[-74.26195227799991,22.22850169500005],[-74.22252356699991,22.22553131700012],[-74.21410071499989,22.229193427000084],[-74.18390865799995,22.254095770000035],[-74.18309485599985,22.260484117000047],[-74.19371497299989,22.26776764500015],[-74.19371497299989,22.273911851000136],[-74.17414303299992,22.285549221000124],[-74.16706295499995,22.288234768],[-74.17292232999989,22.28986237200003],[-74.17747962099995,22.291693427000112],[-74.18049068899995,22.295314846000068],[-74.18130449099996,22.30190664300015],[-74.16120357999992,22.30923086100016],[-74.13182532499991,22.325913804],[-74.10871334499987,22.329169012000037],[-74.10334225199992,22.332424221000096],[-74.09239661399994,22.34650299700003],[-74.07917232999989,22.355169989000117],[-74.08023027299996,22.36774323100012],[-74.08405514199987,22.381537177000112],[-74.08385169199991,22.390611070000105],[-74.06541907499988,22.397528387000122],[-74.03807532499991,22.400213934000092],[-74.01333574099993,22.405829169000086],[-74.00255286399994,22.421698309000035],[-73.99840247299989,22.445868231000034],[-73.98692786399994,22.45750560100005],[-73.96934973899991,22.462225653000147],[-73.9473363919999,22.46576569200012],[-73.90770423099988,22.479437567000062],[-73.88019771999984,22.50291575700014],[-73.87083899599992,22.53530508000013],[-73.88589433499993,22.575588283000016],[-73.91344153599994,22.594468492000047],[-73.9845271479999,22.595607815000093],[-74.01622473899997,22.610337632000082],[-74.03123938699989,22.623683986000074],[-74.02953040299988,22.627427476000108],[-74.01744544199988,22.64549388200014],[-74.01085364499991,22.651271877000013],[-74.0035701159999,22.655096747000115],[-73.99571692599991,22.657538153000147],[-74.00210527299993,22.66404857000005],[-74.01622473899997,22.684881903000033],[-73.98314368399991,22.67597077000009],[-73.97524980399996,22.671820380000142],[-73.97191321499992,22.682928778000175],[-73.96450761599993,22.69147370000009],[-73.95555579299992,22.69537995000009],[-73.9473363919999,22.692287502000013],[-73.94127356699991,22.696478583000143],[-73.93854732999995,22.697902736000017],[-73.93431555899991,22.69847239799999],[-73.93431555899991,22.705959377000127],[-73.94249426999994,22.70807526200015],[-73.94587154899995,22.710191148000078],[-73.94855709499993,22.713771877000127],[-73.9547419909999,22.720200914000046],[-73.90314693899992,22.719671942000062],[-73.87848873599995,22.723334052000112],[-73.85171464799993,22.733303127000013],[-73.85065670499998,22.729437567],[-73.85020911399988,22.726223049000154],[-73.8487849599999,22.72313060100008],[-73.84487870999993,22.720200914000046]]],[[[-74.19371497299989,22.761175848000065],[-74.19017493399991,22.76023997599999],[-74.17796790299994,22.76170482000005],[-74.17389889199987,22.761175848000065],[-74.17178300699987,22.758246161000145],[-74.16706295499995,22.746893622000172],[-74.14753170499998,22.74066803600003],[-74.11164303299998,22.738348700000145],[-74.09068762899994,22.733303127000013],[-74.09813391799992,22.746893622000172],[-74.07591712099986,22.741888739000117],[-74.01622473899997,22.720200914000046],[-74.09068762899994,22.657538153000147],[-74.09410559799994,22.66567617400007],[-74.09459387899992,22.667873440000065],[-74.10496985599994,22.671820380000142],[-74.10407467399995,22.68829987200003],[-74.12242591099988,22.685207424000126],[-74.14842688699989,22.677801825000145],[-74.22227942599989,22.695624091000028],[-74.2325740229999,22.70351797100001],[-74.24893144399991,22.720200914000046],[-74.25446529899992,22.708482164000074],[-74.26642818899995,22.698553778000147],[-74.27830969999991,22.693182684000092],[-74.28376217399995,22.69537995000009],[-74.2779841789999,22.717027085],[-74.27814693899995,22.72842031500015],[-74.28685462099995,22.733303127000013],[-74.35195878799988,22.822658596000124],[-74.34821529899995,22.825873114],[-74.34658769399991,22.829169012000037],[-74.3458552729999,22.832586981000034],[-74.34455318899998,22.836249091000084],[-74.33356686099992,22.836859442000147],[-74.31688391799989,22.842230536],[-74.31041419199988,22.8431664080001],[-74.29845130099994,22.839992580000043],[-74.27009029899992,22.822658596000124],[-74.26008053299992,22.82021719],[-74.23835201699987,22.818426825000117],[-74.22850501199994,22.815822658000016],[-74.20055091099991,22.79466380400011],[-74.19749915299991,22.786118882],[-74.19635982999998,22.768500067000062],[-74.19371497299989,22.761175848000065]]],[[[-73.81696529899997,23.10382721600017],[-73.74185136599996,23.096991278000147],[-73.68569902299996,23.10248444200009],[-73.66616777299987,23.096991278000147],[-73.66616777299987,23.08954498900006],[-73.75523841099997,23.072984117000104],[-73.79735266799992,23.07379791900003],[-73.81696529899997,23.10382721600017]]],[[[-75.53978430899988,23.427679755000113],[-75.52383378799988,23.40485260600009],[-75.55980383999994,23.41559479400003],[-75.60187740799992,23.423407294000114],[-75.63731848899991,23.435492255000113],[-75.65355383999986,23.45945872600008],[-75.61998450399992,23.457098700000117],[-75.57697506399995,23.44586823100012],[-75.53978430899988,23.427679755000113]]],[[[-79.51402747299994,23.495672919000086],[-79.51756751199991,23.494045315000065],[-79.53661048099991,23.506496486000074],[-79.5384008449999,23.510239976000108],[-79.51402747299994,23.495672919000086]]],[[[-79.55288652299996,23.533758856000148],[-79.55455481699997,23.533148505000113],[-79.59434973899994,23.574652411],[-79.58869381399995,23.57135651200015],[-79.56334387899992,23.546698309000178],[-79.55288652299996,23.533758856000148]]],[[[-75.97704016799989,23.677435614000117],[-75.96825110599991,23.664943752000013],[-75.9571833979999,23.654852606000063],[-75.9449763659999,23.648830471000124],[-75.92931067599994,23.645819403000033],[-75.90807044199994,23.645005601000108],[-75.91144771999987,23.640773830000015],[-75.91323808499996,23.637518622000144],[-75.91588294199994,23.634670315000037],[-75.92174231699988,23.631415106000148],[-75.85631262899992,23.567287502000013],[-75.80894934799989,23.541978257000082],[-75.79820716099988,23.538641669000057],[-75.7825414699999,23.507554429000137],[-75.7449438139999,23.482733466000084],[-75.66104081899991,23.452622789000046],[-75.6753637359999,23.438544012000094],[-75.69823157499991,23.44428131700009],[-75.74299068899995,23.46694570500013],[-75.7937719389999,23.470526434000092],[-75.81273352799991,23.479559637000122],[-75.80443274599992,23.500433661000088],[-75.82298743399994,23.512396552000112],[-75.84190833199995,23.528509833],[-75.85924231699994,23.537543036],[-75.87336178299998,23.528387762000122],[-75.90807044199994,23.562404690000122],[-75.9454646479999,23.588039455000015],[-75.98770097599993,23.60081614800005],[-76.03718014199987,23.59662506700012],[-76.03718014199987,23.603461005000142],[-76.00767981699991,23.611761786000116],[-76.00304114499997,23.613999742000104],[-76.00495357999992,23.622951565000122],[-76.01158606699988,23.632025458000115],[-76.01056881399992,23.637600002000127],[-76.02114824099988,23.64411041900003],[-76.02944902299996,23.655666408000158],[-76.03148352799988,23.668524481000176],[-76.02354895699992,23.679185289000102],[-76.01121985599988,23.676947333000115],[-76.00259355399987,23.68016185099999],[-75.99608313699989,23.684556382000082],[-75.98997962099989,23.685980536000145],[-75.98224850199998,23.682684637000094],[-75.97704016799989,23.677435614000117]]],[[[-75.31159420499989,23.67234935099999],[-75.25291907499988,23.58295319200009],[-75.23932857999992,23.575100002000013],[-75.22130286399988,23.556057033000016],[-75.20457923099985,23.53335195500007],[-75.1948949859999,23.514105536000116],[-75.18272864499991,23.446437893000066],[-75.17072506399998,23.4291039080001],[-75.15322831899994,23.411200262000037],[-75.09406490799992,23.30532461100013],[-75.09557044199988,23.29498932500003],[-75.08771725199989,23.28579336100016],[-75.0851130849999,23.264064846000096],[-75.08503170499992,23.219875393],[-75.07689368399991,23.17169830900015],[-75.05996660099993,23.141669012000094],[-75.03160559799989,23.12335846600014],[-74.94635982999992,23.093736070000105],[-74.90965735599991,23.067328192000033],[-74.84483801999991,23.000148830000157],[-74.84911048099991,22.995021877000127],[-74.85460364499994,22.985256252000013],[-74.85912024599989,22.98029205900015],[-74.84703528599991,22.970119533000016],[-74.83844967399989,22.94440338700015],[-74.83340410099996,22.914129950000145],[-74.83202063699989,22.874945380000142],[-74.83397376199991,22.864325262000094],[-74.83995520699995,22.85993073100012],[-74.85228430899988,22.86359284100014],[-74.85806230399993,22.87055084800015],[-74.86534583199995,22.904527085],[-74.8690486319999,22.902167059000035],[-74.8789770169999,22.897772528000147],[-74.88548743399991,22.923814195000134],[-74.91405188699989,22.97085195500013],[-74.92442786399988,23.011704820000162],[-74.9339086579999,23.02570221600014],[-74.96764075399989,23.063869533000016],[-74.97801673099988,23.072943427000112],[-74.99054928299998,23.078558661000116],[-75.10488847599993,23.099554755000057],[-75.12975012899997,23.113999742000104],[-75.14256751199991,23.123683986000074],[-75.21397864499988,23.165472723],[-75.22964433499996,23.17145416900003],[-75.22671464799993,23.181219794000143],[-75.22203528599991,23.190090236000017],[-75.21580969999985,23.19822825700011],[-75.20791581899988,23.206244208000058],[-75.20173092399992,23.206244208000058],[-75.19172115799992,23.19179922100001],[-75.16356360599985,23.179022528000147],[-75.15330969999991,23.165228583000058],[-75.17906653599997,23.168605861000074],[-75.18740800699993,23.17145416900003],[-75.18057206899991,23.159857489],[-75.17027747299989,23.149969794000086],[-75.15831458199995,23.144191799000126],[-75.14647376199991,23.14476146],[-75.13426673099991,23.137274481000034],[-75.11522376199994,23.122381903000175],[-75.10610917899993,23.117499091000113],[-75.09483801999994,23.114976304],[-75.07868404899989,23.113674221000096],[-75.06847083199995,23.116644598],[-75.07510331899991,23.127386786000116],[-75.13219153599991,23.18598053600006],[-75.13963782499988,23.20282623900006],[-75.13585364499994,23.229803778000118],[-75.12743079299992,23.249253648000106],[-75.1183162099999,23.265122789000046],[-75.11294511599996,23.28131745000009],[-75.11375891799989,23.305080471000096],[-75.12035071499994,23.331935940000065],[-75.13166256399992,23.35578034100014],[-75.14647376199991,23.370754299000097],[-75.15005449099988,23.366156317000062],[-75.16075598899991,23.35700104400017],[-75.15904700399989,23.38060130400011],[-75.19688880099994,23.410142320000162],[-75.1948949859999,23.43211497599999],[-75.20836341099988,23.43524811400006],[-75.22057044199994,23.439764716000028],[-75.2268774079999,23.44725169500019],[-75.22223873599995,23.45945872600008],[-75.24250240799998,23.474310614000117],[-75.25007076699993,23.490179755000057],[-75.25633704299989,23.53514232000005],[-75.27684485599994,23.58295319200009],[-75.28648841099991,23.587632554000024],[-75.2930395169999,23.585435289000102],[-75.30016028599994,23.580471096000068],[-75.31159420499989,23.576808986000017],[-75.30475826699987,23.624945380000057],[-75.31045488199996,23.639390367000132],[-75.33141028599991,23.623968817],[-75.32201087099989,23.637193101000136],[-75.31786048099994,23.64154694200012],[-75.31159420499989,23.645005601000108],[-75.3241267569999,23.648667710000083],[-75.33234615799998,23.641506252000127],[-75.34032141799995,23.630804755000113],[-75.35260982999989,23.623968817],[-75.35260982999989,23.631415106000148],[-75.34239661399997,23.641424872000144],[-75.33458411399997,23.65314362200006],[-75.33043372299991,23.66766998900009],[-75.33141028599991,23.685980536000145],[-75.3253474599999,23.68451569200009],[-75.32030188699989,23.68162669500005],[-75.3158259759999,23.67747630400011],[-75.31159420499989,23.67234935099999]]],[[[-74.78726152299993,23.68406810099999],[-74.79369055899994,23.67133209800012],[-74.80378170499992,23.664048570000105],[-74.82494055899991,23.664943752000013],[-74.82494055899991,23.65867747600005],[-74.81871497299994,23.651068427000112],[-74.83674068899998,23.650824286000088],[-74.86074785099993,23.657904364000146],[-74.87279212099995,23.67234935099999],[-74.89085852799985,23.664740302000055],[-74.9238988919999,23.664455471000124],[-74.94163977799991,23.65867747600005],[-74.94538326699984,23.681586005000057],[-74.9386287099999,23.69432200700011],[-74.92308508999989,23.701239325000117],[-74.90005449099993,23.706488348],[-74.84972083199997,23.72011953300013],[-74.81236731699991,23.719671942000147],[-74.79963131399995,23.714544989000117],[-74.77721106699994,23.699652411000088],[-74.78726152299993,23.68406810099999]]],[[[-75.11070716099988,23.818670966000028],[-75.11742102799991,23.815130927000055],[-75.12364661399988,23.83100006700009],[-75.11729895699995,23.845445054000137],[-75.10903886599996,23.84690989800002],[-75.10606848899994,23.842352606000148],[-75.10578365799992,23.831447658000073],[-75.11070716099988,23.818670966000028]]],[[[-76.31895911399997,23.980210679000052],[-76.32518469999991,23.974025783000073],[-76.34019934799994,23.98818594],[-76.35863196499989,24.02366771],[-76.37498938699989,24.046576239],[-76.38727779899995,24.076402085],[-76.39761308499996,24.092515367000075],[-76.40147864499997,24.10293203300013],[-76.40147864499997,24.11737702],[-76.37677975199998,24.101385809000092],[-76.31895911399997,23.980210679000052]]],[[[-74.43455969999985,24.04539622600008],[-74.47549394399988,23.980210679000052],[-74.47850501199989,23.991685289000188],[-74.4767146479999,24.001613674000012],[-74.46865800699996,24.021795966000028],[-74.47691809799994,24.009995835000055],[-74.49128170499992,23.969183661],[-74.49229895699989,23.96039459800012],[-74.55809485599988,23.953558661000116],[-74.55809485599988,23.96039459800012],[-74.5410863919999,23.980047919000086],[-74.52965247299994,24.011053778000118],[-74.52546139199993,24.045721747000087],[-74.53014075399994,24.076402085],[-74.52969316299993,24.10040924700003],[-74.51870683499988,24.11493561400006],[-74.5012914699999,24.123846747000115],[-74.48176021999984,24.13104889500015],[-74.4762263659999,24.135199286000088],[-74.47077389199987,24.140692450000117],[-74.46483313699986,24.143947658000158],[-74.4581599599999,24.141302802000084],[-74.44318600199995,24.11668528900016],[-74.44078528599991,24.11424388200014],[-74.43879146999987,24.10382721600014],[-74.42967688699989,24.08978913],[-74.42711341099988,24.083238023000106],[-74.42772376199994,24.074164130000028],[-74.43321692599997,24.05442942900008],[-74.43455969999985,24.04539622600008]]],[[[-77.80239824099996,24.244452216000084],[-77.80842037699995,24.239447333000058],[-77.82599850199989,24.23468659100014],[-77.83421790299988,24.23456452000009],[-77.8385310539999,24.237941799000012],[-77.84357662699992,24.239691473],[-77.85391191299993,24.23468659100014],[-77.86082923099994,24.22524648600013],[-77.87047278599991,24.197902736000074],[-77.88068600199995,24.18626536700016],[-77.89366614499994,24.177639065000065],[-77.94456946499986,24.154242255000085],[-77.9625544909999,24.15216705900015],[-77.96906490799998,24.15957265800013],[-77.9741918609999,24.172837632000082],[-77.97622636599993,24.186835028000033],[-77.97337805899988,24.19619375200007],[-77.96422278599991,24.197170315000122],[-77.95173092399989,24.193996486000074],[-77.94058183499988,24.193589585000083],[-77.93586178299995,24.203070380000085],[-77.92593339799987,24.2064476580001],[-77.87100175699987,24.240912177000112],[-77.86628170499998,24.24274323100009],[-77.85000566299993,24.25145091400016],[-77.83967037699992,24.254584052000055],[-77.79869544199991,24.254584052000055],[-77.80239824099996,24.244452216000084]]],[[[-77.94188391799989,24.24046458500011],[-77.93586178299995,24.227240302],[-77.95026607999992,24.23053620000003],[-77.97557532499988,24.22711823100012],[-77.99046790299994,24.227240302],[-78.00133216099991,24.23143138200011],[-78.01292883999994,24.239650783000016],[-78.0169164699999,24.248439846000068],[-78.00475012899992,24.254584052000055],[-77.97874915299985,24.259222723000093],[-77.95287024599992,24.27045319200009],[-77.93219967399992,24.27570221600017],[-77.92162024599986,24.262030341000028],[-77.93639075399994,24.261542059000035],[-77.94261633999992,24.253119208],[-77.94188391799989,24.24046458500011]]],[[[-76.47166907499991,24.227606512000094],[-76.46300208199992,24.213609117000047],[-76.48180091099988,24.213771877000013],[-76.49315344999985,24.21881745000003],[-76.53526770699989,24.268377997000144],[-76.54458574099993,24.28302643400015],[-76.54491126199989,24.295558986000074],[-76.52953040299994,24.28742096600014],[-76.52041581899994,24.27496979400003],[-76.51341712099986,24.260891018],[-76.50389563699986,24.247748114000117],[-76.49205481699991,24.239203192000033],[-76.48131262899989,24.234320380000142],[-76.47166907499991,24.227606512000094]]],[[[-77.74811764199993,24.131781317000062],[-77.72354081899991,24.11737702],[-77.70767167899987,24.12372467700014],[-77.70225989499994,24.112738348000093],[-77.70482337099995,24.094671942000062],[-77.72126217399992,24.066229559000035],[-77.72459876199986,24.053290106000034],[-77.72984778599994,24.042629299000012],[-77.74404863199996,24.03546784100014],[-77.72545325399994,24.030666408000073],[-77.70958411399994,24.043687242000075],[-77.67853756399992,24.10175202000012],[-77.65770423099994,24.123480536],[-77.64785722599993,24.137884833000058],[-77.64386959499984,24.157538153000118],[-77.6427302729999,24.182806708000058],[-77.63914954299995,24.206488348000093],[-77.62734941299996,24.22109609600001],[-77.60753333199995,24.21824778900016],[-77.5926000639999,24.198228257],[-77.5804744129999,24.17316315300009],[-77.56932532499991,24.15525950700014],[-77.55663001199994,24.141058661000116],[-77.5494685539999,24.12592194200012],[-77.54621334499984,24.108303127000013],[-77.54430091099988,24.07526276200015],[-77.53917395699997,24.05414459800012],[-77.53799394399994,24.04539622600008],[-77.53917395699997,24.033921617000104],[-77.54430091099988,24.01471588700015],[-77.54548092399992,24.00438060100005],[-77.54222571499986,23.99884674700003],[-77.52818762899992,23.979885158000044],[-77.52497311099995,23.970363674000126],[-77.52818762899992,23.958563544000143],[-77.5352270169999,23.950588283000016],[-77.54222571499986,23.94562409100014],[-77.54548092399992,23.942694403000033],[-77.55577551999994,23.938299872000144],[-77.5775447259999,23.93781159100014],[-77.59707597599987,23.930365302],[-77.60069739499994,23.90509674700003],[-77.56574459499993,23.92796458500014],[-77.54503333199992,23.936590887000037],[-77.52497311099995,23.933050848000065],[-77.51650956899991,23.918850002000156],[-77.5226130849999,23.881008205000015],[-77.5174861319999,23.864162502000013],[-77.53457597599993,23.828558661000145],[-77.54792232999995,23.822251695000105],[-77.57274329299992,23.829413153000147],[-77.56944739499997,23.81683991100006],[-77.55134029899995,23.803127346000124],[-77.54548092399992,23.788397528000033],[-77.54694576699987,23.774969794000143],[-77.55260169199997,23.76023997600005],[-77.55980383999989,23.747707424000154],[-77.56590735599988,23.740668036],[-77.5973201159999,23.730617580000015],[-77.62120520699989,23.740057684000035],[-77.64297441299993,23.754868882],[-77.66832434799989,23.76113515800013],[-77.65111243399988,23.741929429],[-77.65143795499989,23.733140367000132],[-77.66087805899991,23.72016022300012],[-77.66832434799989,23.72016022300012],[-77.68492591099994,23.741441148000106],[-77.71458899599989,23.748724677000112],[-77.77818762899994,23.74681224200016],[-77.74404863199996,23.76113515800013],[-77.74909420499989,23.77826569200009],[-77.72769120999993,23.77773672100001],[-77.67516028599991,23.76113515800013],[-77.66905676999991,23.779242255000057],[-77.65892493399986,23.792059637000094],[-77.64500891799989,23.801459052000112],[-77.59129798099991,23.824896552],[-77.57616126199991,23.835842190000065],[-77.57616126199991,23.84711334800015],[-77.59406490799995,23.853461005],[-77.6116430329999,23.844142971000124],[-77.62857011599988,23.83026764500015],[-77.64476477799994,23.823187567],[-77.70311438699994,23.788397528000033],[-77.69920813699994,23.78563060099999],[-77.69627844999991,23.782212632000082],[-77.72020423099988,23.78481679900007],[-77.7442927729999,23.816392320000077],[-77.76455644399991,23.823187567],[-77.69884192599991,23.845119533000016],[-77.66559811099992,23.863470770000063],[-77.66087805899991,23.884670315000065],[-77.6752009759999,23.87051015800013],[-77.69481360599985,23.864691473000093],[-77.74779212099989,23.864162502000013],[-77.76207434799989,23.86155833500011],[-77.77424068899995,23.856756903000033],[-77.78587805899988,23.85370514500012],[-77.79869544199991,23.85667552300005],[-77.80679277299993,23.864691473000093],[-77.81285559799994,23.876654364000117],[-77.82746334499987,23.943915106000148],[-77.82876542899996,23.969183661],[-77.82258053299998,23.980210679000052],[-77.8372289699999,23.984808661],[-77.83775794199997,23.99591705900012],[-77.83348548099985,24.00958893400015],[-77.83348548099985,24.021795966000028],[-77.84483801999994,24.03339264500015],[-77.85863196499994,24.040961005],[-77.86652584499993,24.047552802000055],[-77.86009680899991,24.055975653000118],[-77.86009680899991,24.062730210000055],[-77.87962805899988,24.073960679000052],[-77.94204667899993,24.096869208000058],[-77.93610592399992,24.104478257],[-77.92906653599994,24.111232815000122],[-77.91470292899987,24.102525132000054],[-77.90908769399996,24.105292059000092],[-77.90827389199987,24.112616278000118],[-77.90855872299989,24.11737702],[-77.90794837099992,24.126776434000035],[-77.91079667899987,24.13133372599999],[-77.91100012899992,24.135809637000037],[-77.90233313699991,24.14472077000009],[-77.89216061099998,24.14964427300005],[-77.86510169199994,24.15794505400011],[-77.85391191299993,24.165838934000092],[-77.84992428299995,24.174302476000136],[-77.84341386599996,24.198879299000126],[-77.83967037699992,24.206732489000117],[-77.80540930899986,24.208929755000113],[-77.79246985599985,24.213609117000047],[-77.7823787099999,24.2215843770001],[-77.7788793609999,24.227850653000033],[-77.77672278599991,24.23558177300005],[-77.77074133999989,24.247748114000117],[-77.75572669199994,24.25926341400016],[-77.71442623599992,24.275091864],[-77.70311438699994,24.288723049000154],[-77.67516028599991,24.302964585000055],[-77.66584225199995,24.289496161000088],[-77.65851803299995,24.273504950000174],[-77.65021725199998,24.260158596000068],[-77.63792883999992,24.254584052000055],[-77.63121497299997,24.249090887000037],[-77.64073645699997,24.237290757000054],[-77.7024633449999,24.19025299700006],[-77.7269587879999,24.17780182500003],[-77.7577205069999,24.172593492000132],[-77.7577205069999,24.165838934000092],[-77.73997962099989,24.164496161],[-77.73253333199992,24.15704987200003],[-77.73692786399991,24.148627020000063],[-77.75462805899991,24.14472077000009],[-77.75853430899991,24.1407738300001],[-77.74811764199993,24.131781317000062]]],[[[-77.84862219999985,24.327582098000065],[-77.86729895699995,24.319484768000123],[-77.88369706899994,24.327337958000115],[-77.88361568899995,24.341131903000033],[-77.8692113919999,24.346828518],[-77.8397517569999,24.35008372600005],[-77.83283443899992,24.349554755000085],[-77.83702551999994,24.342189846000068],[-77.84862219999985,24.327582098000065]]],[[[-77.68244381399992,24.352769273000135],[-77.68260657499988,24.343939520000063],[-77.69033769399988,24.338446356000063],[-77.70059160099993,24.341498114000146],[-77.71125240799995,24.34747955900015],[-77.71983801999997,24.350775458],[-77.73753821499986,24.349676825000145],[-77.74803626199994,24.34593333500011],[-77.76768958199989,24.326605536],[-77.78685462099986,24.31460195500007],[-77.79979407499985,24.317287502000127],[-77.80443274599989,24.327215887000037],[-77.79869544199991,24.337103583000058],[-77.7766820949999,24.34715403900013],[-77.75804602799991,24.359361070000105],[-77.73924719999988,24.367132880000028],[-77.71922766799992,24.37173086100013],[-77.70311438699994,24.370591539000102],[-77.69615637899994,24.367092190000037],[-77.68809973899991,24.360785223000065],[-77.68244381399992,24.352769273000135]]],[[[-76.77257239499988,24.51911041900003],[-76.77892005099991,24.51434967700014],[-76.78929602799991,24.51850006700009],[-76.79507402299987,24.53143952000009],[-76.7923884759999,24.549139716000084],[-76.78465735599988,24.552964585],[-76.77749589799993,24.543850002000013],[-76.77432206899988,24.53864166900003],[-76.77306067599997,24.531724351000108],[-76.77257239499988,24.51911041900003]]],[[[-75.31468665299988,24.217352606000148],[-75.30699622299994,24.2025414080001],[-75.2904353509999,24.14472077000009],[-75.33580481699988,24.158514716000084],[-75.35643469999991,24.160142320000105],[-75.37987219999988,24.158392645000035],[-75.42511959499993,24.149969794000143],[-75.44090735599985,24.142035223],[-75.4584041009999,24.127915757000082],[-75.48314368399988,24.12571849200016],[-75.5099177729999,24.142075914000188],[-75.52131100199995,24.16258372600005],[-75.49962317599997,24.172593492000132],[-75.48493404899997,24.176214911],[-75.46361243399991,24.185614325000117],[-75.44391842399995,24.19871653900016],[-75.43390865799998,24.213609117000047],[-75.41466223899994,24.213120835000055],[-75.40575110599991,24.240301825000145],[-75.4100642569999,24.272894598000036],[-75.43073482999992,24.288723049000154],[-75.45995032499985,24.294582424000012],[-75.48058020699997,24.309393622000172],[-75.53400631399992,24.38922760600009],[-75.54190019399988,24.417466539000074],[-75.56110592399995,24.443426825000145],[-75.56550045499992,24.456935940000122],[-75.57152258999994,24.48875560100005],[-75.58849036399991,24.51264069200012],[-75.61436926999991,24.526597398000106],[-75.64736894399988,24.528957424000154],[-75.64346269399988,24.539455471000124],[-75.64264889199987,24.551499742000047],[-75.64415442599991,24.564154364000032],[-75.64736894399988,24.576117255000142],[-75.65274003799993,24.588364976000108],[-75.65782630099994,24.59292226800015],[-75.66470292899987,24.596014716000056],[-75.70885169199994,24.63133372600008],[-75.74107825399989,24.646144924000126],[-75.74982662699998,24.65180084800012],[-75.75658118399991,24.660305080000157],[-75.75755774599989,24.66791413],[-75.75300045499992,24.67601146000011],[-75.73216712099986,24.6986351580001],[-75.72386633999989,24.701849677000055],[-75.70885169199994,24.70018138200014],[-75.70221920499989,24.69574616100006],[-75.6753637359999,24.672308661000088],[-75.64932206899994,24.66307200700011],[-75.63731848899991,24.656968492000132],[-75.62633216099994,24.645005601000022],[-75.61856035099996,24.581244208000058],[-75.61261959499993,24.562445380000028],[-75.6028539699999,24.55190664300015],[-75.58682206899991,24.53851959800015],[-75.57201087099992,24.522691148000106],[-75.5599666009999,24.49144114800005],[-75.53221594999994,24.444891669000114],[-75.47606360599991,24.370591539000102],[-75.45811926999988,24.357326565000065],[-75.41901607999992,24.337836005],[-75.40038001199994,24.323472398000106],[-75.37559973899988,24.27594635600012],[-75.36961829299986,24.268255927],[-75.35850989499994,24.26141998900006],[-75.31468665299988,24.217352606000148]]],[[[-77.3260798819999,25.07933177299999],[-77.30207271999984,25.066107489000146],[-77.2638240229999,25.058091539000102],[-77.27472896999987,25.046087958000086],[-77.37950598899991,25.001532294000086],[-77.40367591099994,25.00214264500015],[-77.43561764199984,25.014878648000106],[-77.44139563699991,25.00653717700014],[-77.45287024599995,24.99461497599999],[-77.46678626199991,24.987005927000055],[-77.47996985599988,24.99135976800015],[-77.49510657499988,24.99933502800009],[-77.51447506399998,25.001166083000086],[-77.53294837099992,25.00071849200016],[-77.54548092399992,25.001898505000028],[-77.56187903599991,25.018866278000175],[-77.55101477799994,25.038031317000147],[-77.52717037699995,25.05438873900006],[-77.50450598899991,25.063299872000087],[-77.48985755099989,25.065619208000058],[-77.45604407499991,25.07697174700003],[-77.44082597599993,25.078517971000068],[-77.39806067599991,25.07697174700003],[-77.35562089799996,25.08405182500009],[-77.33999589799987,25.08380768400015],[-77.3260798819999,25.07933177299999]]],[[[-78.10704505099994,25.16307200700011],[-78.09044348899991,25.159491278000033],[-78.07518469999994,25.165350653000175],[-78.06045488199993,25.176336981000034],[-78.04515540299988,25.18309153900016],[-78.02798417899996,25.17625560100005],[-78.01524817599989,25.16779205900012],[-78.00121008999994,25.160956122000087],[-77.98766028599988,25.15224844],[-77.97687740799998,25.13841380400011],[-77.99176998599992,25.122788804000137],[-77.99429277299996,25.105169989],[-77.98639889199987,25.088771877000013],[-77.96996008999989,25.07697174700003],[-77.98253333199997,25.037502346000068],[-77.98656165299994,25.012884833000058],[-77.98058020699992,25.001898505000028],[-77.96226966099997,24.99933502800009],[-77.94725501199994,24.991156317],[-77.93419348899994,24.976223049000154],[-77.87336178299992,24.838568427000027],[-77.82917232999995,24.77822500200007],[-77.8125707669999,24.76190827000015],[-77.79556230399993,24.75482819200009],[-77.78351803299992,24.748236395],[-77.7464900379999,24.714504299000012],[-77.73721269399994,24.70018138200014],[-77.73615475199989,24.68219635600009],[-77.73778235599991,24.65770091400016],[-77.74181067599997,24.634711005],[-77.74779212099989,24.62107982000005],[-77.75357011599996,24.60203685100005],[-77.74547278599994,24.577582098],[-77.72354081899991,24.535101630000142],[-77.71873938699991,24.499823309000092],[-77.72789466099991,24.47418854400003],[-77.75108801999994,24.45848216400016],[-77.7887263659999,24.45319245000009],[-77.80410722599996,24.448797919000114],[-77.81456458199995,24.43870677300005],[-77.82331295499992,24.427313544000086],[-77.83348548099985,24.419094143000095],[-77.86384029899995,24.41543203300013],[-77.87169348899991,24.406805731000034],[-77.86009680899991,24.3849144550001],[-77.87205969999994,24.37376536700016],[-77.90855872299989,24.350775458],[-77.92662512899992,24.345770575000145],[-77.96141516799986,24.345526434000092],[-77.97337805899988,24.340521552000055],[-78.01276607999998,24.31415436400006],[-78.01781165299991,24.30609772300012],[-78.01577714799987,24.29734935100005],[-78.01244055899986,24.28925202000012],[-78.01170813699991,24.28188711100013],[-78.01781165299991,24.275051174000012],[-78.02745520699997,24.272853908000044],[-78.03697669199997,24.27594635600012],[-78.04552161399988,24.281968492000104],[-78.0519099599999,24.288723049000154],[-78.06330318899998,24.316229559000092],[-78.06969153599991,24.350409247000172],[-78.08014889199987,24.379461981000148],[-78.1034236319999,24.391750393],[-78.13414466099988,24.403957424000097],[-78.14085852799994,24.43349844000015],[-78.1344294909999,24.501613674000097],[-78.15245520699995,24.48875560100005],[-78.16478430899988,24.475409247000144],[-78.18004309799994,24.464911200000174],[-78.20645097599996,24.46063873900006],[-78.22642981699991,24.46548086100013],[-78.35163326699987,24.53046295800003],[-78.41148841099991,24.581040757000025],[-78.43053137899989,24.60179271],[-78.44298255099991,24.624497789000046],[-78.4295955069999,24.627508856000148],[-78.4088435539999,24.63617584800015],[-78.3898005849999,24.646714585000026],[-78.38149980399993,24.655503648000078],[-78.37840735599985,24.669419664000046],[-78.37108313699986,24.66815827000015],[-78.36180579299989,24.66144440300009],[-78.3535863919999,24.659247137000094],[-78.34284420499998,24.66535065300009],[-78.33507239499988,24.672837632000054],[-78.3333227199999,24.682114976000108],[-78.34056555899991,24.69342682500009],[-78.32746334499984,24.710638739000032],[-78.31143144399994,24.710109768000123],[-78.29792232999998,24.696844794000114],[-78.2921443349999,24.67601146000011],[-78.29332434799994,24.658840236000103],[-78.2970271479999,24.64378489799999],[-78.30345618399991,24.630316473],[-78.31261145699997,24.617661851000136],[-78.33014889199993,24.60643138200011],[-78.33311926999994,24.60398997599999],[-78.33112545499989,24.594142971000068],[-78.3263240229999,24.585394598],[-78.3189998039999,24.581732489000146],[-78.29206295499992,24.597357489000117],[-78.27725175699996,24.601263739000117],[-78.26911373599995,24.609198309000092],[-78.27163652299987,24.63133372600008],[-78.25218665299988,24.622788804000052],[-78.2520238919999,24.60480377800009],[-78.2572322259999,24.58380768400015],[-78.25426184799989,24.566148179000052],[-78.23770097599993,24.556870835],[-78.22826087099989,24.569484768000066],[-78.22594153599994,24.59153880400008],[-78.23070227799994,24.610825914000102],[-78.22109941299996,24.606919664000102],[-78.21068274599986,24.601263739000117],[-78.20173092399995,24.598781643],[-78.19652258999994,24.60398997599999],[-78.19713294199991,24.618353583000058],[-78.2044978509999,24.628322658000158],[-78.21458899599986,24.63629791900003],[-78.22325598899997,24.645005601000022],[-78.22451738199987,24.650946356000034],[-78.2222387359999,24.66608307500003],[-78.22325598899997,24.672308661000088],[-78.22935950399994,24.679754950000145],[-78.24498450399992,24.69285716400013],[-78.2511287099999,24.70018138200014],[-78.25511633999989,24.71417877800009],[-78.25788326699984,24.72992584800015],[-78.26402747299991,24.73932526200015],[-78.27847245999988,24.734361070000105],[-78.26789303299992,24.726060289000046],[-78.26414954299989,24.710516669000057],[-78.26480058499993,24.672308661000088],[-78.27424068899995,24.682928778000033],[-78.28062903599988,24.69920482000005],[-78.28844153599988,24.71417877800009],[-78.30235755099994,24.720689195000162],[-78.30406653599997,24.728216864000146],[-78.30113684799994,24.74534739799999],[-78.2921443349999,24.775336005000142],[-78.27684485599985,24.789984442000147],[-78.25495357999992,24.806463934000035],[-78.23961341099988,24.82636139500012],[-78.24372311099992,24.85101959800012],[-78.23424231699991,24.857123114000032],[-78.20811926999997,24.861802476000136],[-78.20274817599991,24.86782461100013],[-78.19969641799992,24.88043854400003],[-78.18602454299989,24.90477122599999],[-78.1829320949999,24.91868724200016],[-78.17393958199997,24.919623114000146],[-78.17747962099986,24.927435614000146],[-78.18553626199989,24.93789297100004],[-78.18968665299994,24.946682033000073],[-78.18761145699992,24.954575914000074],[-78.18224036399994,24.968491929000137],[-78.17454993399994,24.98167552299999],[-78.16551673099991,24.987616278000118],[-78.15770423099994,25.00018952],[-78.15990149599992,25.028306382],[-78.16926021999987,25.073228257],[-78.18004309799994,25.104925848000065],[-78.20091712099992,25.146429755000057],[-78.21434485599991,25.184637762000122],[-78.20274817599991,25.206732489],[-78.18590247299991,25.205877997000087],[-78.1495662099999,25.19953034100017],[-78.1344294909999,25.193670966000028],[-78.12218176999994,25.183172919000143],[-78.11534583199992,25.17202383000013],[-78.10704505099994,25.16307200700011]]],[[[-77.84215247299994,25.4232445330001],[-77.85204016799986,25.412746486000046],[-77.86412512899997,25.407904364000146],[-77.87950598899991,25.407863674000154],[-77.88841712099995,25.408758856000148],[-77.90672766799992,25.40908437700007],[-77.90587317599991,25.41095612200006],[-77.90001380099997,25.415472723],[-77.89240475199992,25.418687242000047],[-77.88630123599992,25.41917552300005],[-77.87482662699989,25.41828034100014],[-77.85912024599992,25.419256903000033],[-77.84727942599997,25.42584870000009],[-77.83958899599995,25.434963283000073],[-77.83682206899988,25.434515692],[-77.84215247299994,25.4232445330001]]],[[[-79.26650956899994,25.53782786700016],[-79.26211503799993,25.528062242000047],[-79.26431230399993,25.52879466400016],[-79.2687068349999,25.538560289000102],[-79.26650956899994,25.53782786700016]]],[[[-79.27940833199995,25.55166250200007],[-79.27989661399994,25.547796942000062],[-79.28892981699994,25.559149481000063],[-79.28844153599994,25.56297435100005],[-79.27940833199995,25.55166250200007]]],[[[-76.70230058499993,25.563950914000046],[-76.68675696499994,25.56207916900017],[-76.67520097599993,25.5567894550001],[-76.68614661399988,25.54132721600017],[-76.69098873599995,25.525946356000034],[-76.6913142569999,25.50885651200018],[-76.68887285099996,25.487860419000143],[-76.6731664699999,25.506659247000087],[-76.66197669199988,25.497259833000058],[-76.65298417899996,25.47797272300012],[-76.64391028599997,25.46735260600009],[-76.62458248599992,25.46246979400003],[-76.49762936099992,25.373480536000116],[-76.46092688699991,25.354559637000094],[-76.41454016799995,25.344468492000132],[-76.36827551999994,25.34271881700012],[-76.3516332669999,25.33860911700016],[-76.33576412699998,25.327093817000147],[-76.28416907499991,25.26190827000012],[-76.22370357999989,25.208075262000094],[-76.16128495999993,25.165716864],[-76.1312556629999,25.147772528000147],[-76.11827551999991,25.13393789300015],[-76.11290442599994,25.114894924000154],[-76.12132727799991,25.030096747000087],[-76.12559973899991,25.014064846000096],[-76.12657630099989,25.005316473000036],[-76.13060462099995,24.994859117000047],[-76.13975989499994,24.988470770000035],[-76.14928137899992,24.98452383000013],[-76.15444902299993,24.981390692000062],[-76.15794837099992,24.962144273000106],[-76.15355383999994,24.94432200700014],[-76.14085852799988,24.91868724200016],[-76.13695227799988,24.902167059000092],[-76.14085852799988,24.85443756700012],[-76.14614824099993,24.83421458500011],[-76.16966712099992,24.799790757],[-76.17495683499988,24.785874742000104],[-76.17747962099989,24.71580638200011],[-76.1739802729999,24.67731354400003],[-76.16128495999993,24.645005601000022],[-76.19448808499996,24.658392645],[-76.21178137899994,24.69025299700003],[-76.22264563699986,24.726955471000124],[-76.23643958199995,24.75482819200009],[-76.25300045499992,24.765773830000157],[-76.29670162699992,24.782049872000087],[-76.31525631399992,24.792669989000117],[-76.33633378799993,24.81492747599999],[-76.33372962099995,24.824164130000142],[-76.31745357999992,24.82526276200018],[-76.21934973899991,24.810044664000102],[-76.21275794199994,24.81273021],[-76.20811926999991,24.819159247000087],[-76.20396887899997,24.826890367000104],[-76.19884192599994,24.833685614000117],[-76.18244381399995,24.848781643000123],[-76.17764238199996,24.857652085],[-76.17495683499988,24.871527411000088],[-76.17577063699989,24.89451732000005],[-76.18394934799991,24.88930898600016],[-76.19542395699995,24.873277085000083],[-76.20596269399991,24.864081122000087],[-76.21202551999991,24.875392971000096],[-76.21092688699986,24.90102773600013],[-76.20225989499997,24.946682033000073],[-76.19660396999987,24.96344635600009],[-76.19383704299992,24.967433986000074],[-76.18797766799989,24.973944403000175],[-76.15925045499992,24.99819570500007],[-76.15444902299993,25.005316473000036],[-76.14671790299991,25.06244538],[-76.14704342399995,25.08380768400015],[-76.16494706899991,25.129828192],[-76.19635982999992,25.15428294500005],[-76.23228919199991,25.17096588700018],[-76.26374264199984,25.193670966000028],[-76.34626217399995,25.303534247000087],[-76.37157141799989,25.32249583500011],[-76.40953528599991,25.33519114799999],[-76.48961341099997,25.351304429000052],[-76.53083248599992,25.370428778000033],[-76.59121660099996,25.422552802000055],[-76.63052324099996,25.43325429900007],[-76.65233313699991,25.435370184000092],[-76.69367428299995,25.444769598000036],[-76.71275794199991,25.446926174000012],[-76.73428300699993,25.441839911],[-76.76939856699991,25.42405833500011],[-76.78449459499993,25.42641836100016],[-76.75951087099992,25.450018622000087],[-76.74551347599993,25.48924388200011],[-76.72984778599997,25.563625393],[-76.73668372299989,25.563625393],[-76.70230058499993,25.563950914000046]]],[[[-79.24608313699986,25.763861395000063],[-79.24323482999992,25.742905992000104],[-79.24592037699989,25.73456452000015],[-79.24803626199991,25.73895905200014],[-79.25462805899988,25.736029364000032],[-79.26695716099991,25.73248932500003],[-79.2687068349999,25.741603908000016],[-79.26170813699994,25.75665924700003],[-79.26553300699996,25.761623440000093],[-79.27904212099992,25.749986070000162],[-79.28624426999994,25.741522528000033],[-79.29157467399992,25.73383209800012],[-79.29385331899991,25.720689195000077],[-79.28331458199995,25.712795315000093],[-79.26813717399995,25.707098700000117],[-79.25804602799988,25.69904205900015],[-79.26183020699992,25.69375234600001],[-79.28917395699997,25.697658596000096],[-79.30064856699991,25.697943427000112],[-79.30426998599998,25.70233795800003],[-79.30125891799989,25.716864325000145],[-79.29381262899992,25.736029364000032],[-79.28034420499992,25.757228908000016],[-79.2610570949999,25.771918036],[-79.25007076699984,25.774725653000147],[-79.24608313699986,25.763861395000063]]],[[[-77.82087154899997,25.716620184000092],[-77.81920325399997,25.70758698100009],[-77.83145097599993,25.708685614000146],[-77.84406490799992,25.72207265800013],[-77.86009680899991,25.748521226000108],[-77.88048255099989,25.768988348000093],[-77.88731848899991,25.78143952],[-77.88068600199995,25.789536851000136],[-77.86803137899997,25.787420966000028],[-77.85826575399992,25.777289130000057],[-77.82087154899997,25.716620184000092]]],[[[-77.54230709499984,26.29897695500013],[-77.57274329299992,26.268703518000123],[-77.56704667899993,26.291001695000162],[-77.57217363199993,26.304877020000063],[-77.57933508999989,26.318019924000126],[-77.57957923099991,26.337591864],[-77.57038326699987,26.332709052000112],[-77.54356848899994,26.312486070000105],[-77.53799394399994,26.306586005000085],[-77.54230709499984,26.29897695500013]]],[[[-77.23761959499987,26.474066473],[-77.23607337099992,26.47036367400007],[-77.23656165299991,26.469387111000103],[-77.23843339799987,26.470160223000036],[-77.24209550699993,26.470607815],[-77.24299068899992,26.46906159100017],[-77.24071204299995,26.467352606000148],[-77.24046790299991,26.466620184000035],[-77.24250240799992,26.46621328300013],[-77.24351966099991,26.454413153000147],[-77.24103756399995,26.44281647300015],[-77.24665279899997,26.438666083],[-77.25055904899995,26.438218492000104],[-77.25454667899993,26.438137111000046],[-77.26329505099991,26.442206122000087],[-77.26744544199994,26.453273830000043],[-77.27232825399992,26.46067942900011],[-77.27822831899996,26.46580638200011],[-77.27668209499993,26.469956773000078],[-77.27236894399991,26.46946849200016],[-77.26756751199991,26.472560940000065],[-77.26183020699995,26.477850653000033],[-77.25377356699991,26.48004791900003],[-77.24425208199992,26.478461005],[-77.23761959499987,26.474066473]]],[[[-77.84707597599993,26.59487539300015],[-77.84715735599991,26.590521552000055],[-77.8518774079999,26.583319403000033],[-77.85558020699995,26.57273997599999],[-77.86192786399988,26.56411367400007],[-77.86839758999989,26.56386953300013],[-77.8705134759999,26.56671784100017],[-77.87287350199995,26.57054271],[-77.88658606699997,26.585598049000012],[-77.89110266799992,26.59406159100014],[-77.89313717399995,26.60260651200015],[-77.88780676999988,26.606594143000123],[-77.8575740229999,26.611761786000145],[-77.85309811099992,26.607001044000143],[-77.86241614499997,26.596625067000147],[-77.86449133999989,26.593654690000122],[-77.8570857409999,26.597845770000063],[-77.85383053299995,26.600775458],[-77.8484594389999,26.60553620000009],[-77.83751380099991,26.61351146000014],[-77.8346248039999,26.610541083000115],[-77.84361731699991,26.600734768],[-77.84707597599993,26.59487539300015]]],[[[-78.52025729599993,26.728995355000038],[-78.43781648399994,26.699821105000026],[-78.41705909299995,26.704749029000098],[-78.37096106699988,26.694525458],[-78.31998377999986,26.686527445000124],[-78.2870819199999,26.68549205900017],[-78.2736151879999,26.703582975000145],[-78.25292968999989,26.71294246300006],[-78.22168484799991,26.700293688000144],[-78.20264129899994,26.6971586800001],[-78.16705098299985,26.710400108000115],[-78.11894820799992,26.70432828700011],[-78.08722896999984,26.713120835],[-78.05540930899991,26.726019598],[-78.03514563699989,26.728583075000117],[-77.97166907499988,26.72955963700018],[-77.95628821499994,26.735419012000037],[-77.94684811099992,26.74656810100005],[-77.94005286399991,26.75946686400006],[-77.93114173099985,26.77049388200011],[-77.91539466099991,26.776434637000037],[-77.91307532499985,26.75787995000003],[-77.91808020699989,26.737494208000058],[-77.92080644399994,26.716945705000015],[-77.90294348899988,26.681586005],[-77.90217037699995,26.662420966000028],[-77.91055253799993,26.64630768400015],[-77.92906653599994,26.63922760600009],[-77.93626868399988,26.641791083],[-77.95319576699987,26.654852606000176],[-77.9625544909999,26.659735419000143],[-77.97541256399992,26.66176992400007],[-78.04076087099989,26.658433335000055],[-78.10033118399991,26.646063544000114],[-78.2377062009999,26.621325470000087],[-78.29338578699986,26.621300259000023],[-78.50340735599991,26.573065497000087],[-78.52147376199994,26.57037995000003],[-78.54015051999991,26.565008856000148],[-78.5704646479999,26.54157135600009],[-78.59007727799988,26.536200262000037],[-78.60761892799991,26.525734450000144],[-78.62896577499993,26.51610211700013],[-78.64644049499992,26.50485342900005],[-78.65577003499993,26.49778847],[-78.67671736599993,26.49613150300003],[-78.68613184999987,26.491910953000158],[-78.72696836599988,26.495445692000047],[-78.76683934699986,26.508104203000173],[-78.79108864499995,26.529699767000167],[-78.83455712699987,26.553651171000027],[-78.93959961399986,26.650787787000112],[-78.98729407499985,26.686224677000112],[-78.99787350199989,26.701320705000015],[-78.98713131399998,26.701483466000084],[-78.97838294199991,26.699408270000063],[-78.97093665299994,26.694891669000114],[-78.96434485599985,26.687689520000063],[-78.83580481699991,26.61456940300009],[-78.8060603509999,26.577826239],[-78.78622245599985,26.581143507000135],[-78.77037512399994,26.583324784000027],[-78.7381550929999,26.570808546000066],[-78.7142887789999,26.570519948000154],[-78.69172287099991,26.57997003900003],[-78.67125234799991,26.59291820100013],[-78.65751282199989,26.59858854900007],[-78.64578727799997,26.605096792000055],[-78.63797875099993,26.60973098600006],[-78.63425147899991,26.61781943000007],[-78.62161113499988,26.62701354400015],[-78.61901136299988,26.639517576000017],[-78.60443465099988,26.650534740000026],[-78.59219252499992,26.673048306000126],[-78.5736332699999,26.684159293],[-78.5759422349999,26.694769508000135],[-78.60000566299988,26.708197333000115],[-78.64159094999985,26.714992580000157],[-78.63467363199993,26.72797272300015],[-78.60741126199986,26.75592682500009],[-78.60155188699991,26.768255927000112],[-78.5938207669999,26.81053294500005],[-78.57477779899992,26.798285223000093],[-78.55719967399997,26.77855052300005],[-78.54426021999987,26.757025458000115],[-78.53917395699995,26.739203192000062],[-78.52025729599993,26.728995355000038]]],[[[-77.77448482999992,26.927232164000046],[-77.68236243399994,26.908433335],[-77.62979081899991,26.904201565000065],[-77.6068416009999,26.920396226000108],[-77.55357825399994,26.898016669000086],[-77.51130123599992,26.869533596000096],[-77.32795162699995,26.709133205000015],[-77.30711829299989,26.69643789300015],[-77.28368079299989,26.68968333500011],[-77.25059973899994,26.687689520000063],[-77.25914466099988,26.67670319200012],[-77.27261308499996,26.673000393000066],[-77.30524654899992,26.67401764500012],[-77.2905981109999,26.646958726000022],[-77.26988684799989,26.625067450000145],[-77.24388587099992,26.610500393000123],[-77.18276933499996,26.600287177],[-77.15526282499991,26.58808014500012],[-77.10724850199992,26.55670807500009],[-77.07054602799991,26.538519598],[-77.05882727799994,26.529364325000117],[-77.04979407499994,26.516343492000132],[-77.04230709499987,26.498032945000162],[-77.0421443349999,26.481838283000016],[-77.05540930899991,26.47479889500015],[-77.05858313699989,26.46784088700015],[-77.05882727799994,26.423244533000073],[-77.05540930899991,26.406927802000055],[-77.04625403599994,26.396307684000092],[-77.03294837099992,26.38987864799999],[-77.01720130099997,26.38597239800002],[-77.03001868399991,26.362738348000065],[-77.03156490799995,26.355292059000092],[-77.02928626199989,26.344427802000112],[-77.02440344999991,26.337591864],[-77.01943925699996,26.332709052000112],[-77.01720130099997,26.327622789000102],[-77.01610266799992,26.319525458000086],[-77.01475989499994,26.315659898000078],[-77.01650956899994,26.311712958],[-77.02472896999993,26.30345286700019],[-77.03270423099988,26.29743073100009],[-77.04100501199986,26.29376862200003],[-77.05882727799994,26.290432033000016],[-77.05675208199992,26.294663804000137],[-77.05199133999992,26.30963776200015],[-77.08446204299992,26.30613841400016],[-77.11530514199987,26.290432033000016],[-77.14264889199984,26.26825592700014],[-77.16494706899988,26.245428778000033],[-77.17438717399989,26.22068919500005],[-77.18321692599994,26.144273179000137],[-77.1817113919999,26.125311591000028],[-77.19220943899995,26.06899648600016],[-77.18716386599993,25.98847077],[-77.1907445949999,25.916327216000084],[-77.22667395699989,25.885077216000028],[-77.25304114499988,25.897609768000038],[-77.27623450399992,25.926011460000055],[-77.29271399599992,25.95726146000011],[-77.29898027299996,25.97793203300013],[-77.31505286399994,25.990952867000104],[-77.38817298099991,26.005438544000143],[-77.40827389199987,26.029730536000145],[-77.39207923099991,26.02985260600012],[-77.37393144399991,26.035467841000028],[-77.35912024599995,26.045884507000025],[-77.34788977799994,26.070624091000084],[-77.33560136599988,26.073675848000065],[-77.32103430899986,26.07518138200011],[-77.30894934799994,26.080633856000148],[-77.27236894399991,26.118312893000123],[-77.24893144399994,26.136053778000033],[-77.22329667899987,26.145819403000175],[-77.22980709499987,26.15399811400009],[-77.23379472599993,26.16225820500007],[-77.23582923099988,26.171698309000092],[-77.23631751199986,26.18366120000003],[-77.24034583199992,26.190578518000038],[-77.24876868399988,26.19651927300005],[-77.25641842399992,26.20392487200003],[-77.25804602799994,26.214748440000122],[-77.25182044199997,26.226019598000036],[-77.24250240799992,26.23452383000013],[-77.23387610599991,26.24404531500015],[-77.2301326159999,26.258734442000147],[-77.23058020699989,26.285101630000142],[-77.23338782499994,26.298000393000066],[-77.25035559799991,26.313055731000176],[-77.21861731699994,26.355292059000092],[-77.21987870999996,26.36493561400006],[-77.22862708199995,26.37693919500019],[-77.2301326159999,26.447455145000063],[-77.21544348899988,26.447699286000116],[-77.20457923099991,26.453314520000035],[-77.19619706899994,26.462876695000105],[-77.18919837099986,26.47479889500015],[-77.18809973899991,26.47980377800009],[-77.18919837099986,26.498968817000147],[-77.18643144399991,26.50592682500003],[-77.18016516799986,26.510077216000084],[-77.1730037099999,26.512844143000123],[-77.16808020699995,26.515773830000157],[-77.15794837099989,26.53143952000012],[-77.15355383999992,26.54946523600016],[-77.16071529899995,26.564195054000052],[-77.19615637899994,26.57265859600001],[-77.21955318899992,26.582424221000124],[-77.3121638659999,26.594671942],[-77.32974199099993,26.604559637000122],[-77.34097245999993,26.621527411],[-77.35301673099985,26.646063544000114],[-77.3484594389999,26.652167059000092],[-77.34732011599988,26.660305080000015],[-77.35008704299992,26.669012762000094],[-77.36143958199992,26.682318427000112],[-77.36656653599991,26.693019924000126],[-77.37010657499991,26.697902736000017],[-77.37535559799989,26.699530341000028],[-77.3800349599999,26.69570547100004],[-77.38491777299987,26.69033437700007],[-77.39085852799991,26.687689520000063],[-77.41124426999988,26.689398505000085],[-77.42699133999994,26.69513580900015],[-77.4339900379999,26.70551178600006],[-77.42813066299988,26.721177476000108],[-77.44469153599994,26.755072333000086],[-77.49022376199991,26.823309637000094],[-77.5174861319999,26.852199611000017],[-77.53441321499989,26.863185940000065],[-77.55622311099992,26.870550848000065],[-77.57848059799997,26.871161200000117],[-77.5969945949999,26.862046617000132],[-77.61432857999998,26.856512762000094],[-77.63805091099988,26.85993073100012],[-77.69684811099998,26.877346096000096],[-77.71495520699989,26.879380601000108],[-77.75462805899991,26.87946198100009],[-77.76642818899998,26.882798570000105],[-77.79466712099995,26.89972565300009],[-77.81236731699994,26.906805731000148],[-77.83067786399991,26.909409898000078],[-77.90977942599991,26.90403880400011],[-77.94147701699987,26.89354075700014],[-77.9625544909999,26.89305247600005],[-77.95962480399987,26.89695872600005],[-77.95665442599994,26.898423570000105],[-77.94945227799991,26.89988841400016],[-77.91344153599997,26.920965887000094],[-77.86815344999994,26.928412177000055],[-77.77448482999992,26.927232164000046]]]]}},{type:"Feature",id:"BHR",properties:{name:"Bahrain"},geometry:{type:"MultiPolygon",coordinates:[[[[50.55160566500007,26.194240627000028],[50.59473717500009,26.160305080000057],[50.60487053991403,26.17473159438859],[50.61989816690732,26.185465613669578],[50.626338578475895,26.170437986676205],[50.63277899004447,26.14682314425815],[50.645659813181624,26.145749742329997],[50.635506518265515,26.134382379256323],[50.63492579390066,26.115694488343337],[50.61475670700014,26.11115143400005],[50.62061608200008,26.052964585000012],[50.61841881600009,25.964748440000022],[50.60352623800014,25.854559637000108],[50.59449303500014,25.83270905200007],[50.56544030000009,25.78969961100003],[50.565277540000125,25.789536851000065],[50.55860436300014,25.81976959800008],[50.547211134000065,25.852932033000087],[50.53142337300005,25.885239976000037],[50.51140384200005,25.913031317000105],[50.46778405000009,25.957586981000077],[50.46045983200008,25.985256252000084],[50.46045983200008,25.985296942000076],[50.47999108200014,26.018866278000104],[50.485443556000064,26.03343333500004],[50.490896030000044,26.048000393000052],[50.490896030000044,26.048041083000044],[50.485199415000125,26.085638739000046],[50.469981316000144,26.1226260440001],[50.45297285200007,26.149562893000052],[50.44890384200005,26.16160716400006],[50.449554884000065,26.17796458500007],[50.46119225400008,26.22524648600003],[50.46851647200009,26.23688385600005],[50.48145592500009,26.242580471000025],[50.48161868600005,26.242539781000033],[50.48259524800005,26.242539781000033],[50.503916863000086,26.24201080900005],[50.51636803500014,26.239691473000107],[50.532399936000104,26.23309967700004],[50.54542076900009,26.227728583000072],[50.54550214900007,26.227769273000064],[50.58668053500014,26.24249909100004],[50.59327233200014,26.23859284100004],[50.59742272200009,26.225531317000076],[50.60474694100009,26.216498114000075],[50.60694420700008,26.212388414000117],[50.60914147200003,26.208319403000047],[50.60914147200003,26.208278713000055],[50.60352623800014,26.197658596000025],[50.59408613400012,26.195298570000062],[50.56560306100005,26.198879299000055],[50.55160566500007,26.194240627000028]]]]}},{type:"Feature",id:"BIH",properties:{name:"Bosnia and Herzegovina"},geometry:{type:"Polygon",coordinates:[[[19.005486,44.860234],[19.36803,44.863],[19.11761,44.42307],[19.59976,44.03847],[19.454,43.5681],[19.21852,43.52384],[19.03165,43.43253],[18.70648,43.20011],[18.56,42.65],[17.674922,43.028563],[17.297373,43.446341],[16.916156,43.667722],[16.456443,44.04124],[16.23966,44.351143],[15.750026,44.818712],[15.959367,45.233777],[16.318157,45.004127],[16.534939,45.211608],[17.002146,45.233777],[17.861783,45.06774],[18.553214,45.08159],[19.005486,44.860234]]]}},{type:"Feature",id:"BLR",properties:{name:"Belarus"},geometry:{type:"Polygon",coordinates:[[[23.484128,53.912498],[24.450684,53.905702],[25.536354,54.282423],[25.768433,54.846963],[26.588279,55.167176],[26.494331,55.615107],[27.10246,55.783314],[28.176709,56.16913],[29.229513,55.918344],[29.371572,55.670091],[29.896294,55.789463],[30.873909,55.550976],[30.971836,55.081548],[30.757534,54.811771],[31.384472,54.157056],[31.791424,53.974639],[31.731273,53.794029],[32.405599,53.618045],[32.693643,53.351421],[32.304519,53.132726],[31.497644,53.167427],[31.305201,53.073996],[31.540018,52.742052],[31.785998,52.101678],[30.927549,52.042353],[30.619454,51.822806],[30.555117,51.319503],[30.157364,51.416138],[29.254938,51.368234],[28.992835,51.602044],[28.617613,51.427714],[28.241615,51.572227],[27.454066,51.592303],[26.337959,51.832289],[25.327788,51.910656],[24.553106,51.888461],[24.005078,51.617444],[23.527071,51.578454],[23.508002,52.023647],[23.199494,52.486977],[23.799199,52.691099],[23.804935,53.089731],[23.527536,53.470122],[23.484128,53.912498]]]}},{type:"Feature",id:"BLZ",properties:{name:"Belize"},geometry:{type:"Polygon",coordinates:[[[-89.14308,17.808319],[-89.150909,17.955468],[-89.029857,18.001511],[-88.848344,17.883198],[-88.490123,18.486831],[-88.300031,18.499982],[-88.296336,18.353273],[-88.106813,18.348674],[-88.123479,18.076675],[-88.285355,17.644143],[-88.197867,17.489475],[-88.302641,17.131694],[-88.239518,17.036066],[-88.355428,16.530774],[-88.551825,16.265467],[-88.732434,16.233635],[-88.930613,15.887273],[-89.229122,15.886938],[-89.150806,17.015577],[-89.14308,17.808319]]]}},{type:"Feature",id:"BMU",properties:{name:"Bermuda"},geometry:{type:"MultiPolygon",coordinates:[[[[-64.81196571723709,32.28993629964394],[-64.80770230891738,32.28644805647336],[-64.79995065742699,32.28334739587707],[-64.80266373544862,32.28102190043002],[-64.81119055208805,32.282184648153546],[-64.82049253387652,32.28102190043002],[-64.82979451566499,32.281797065579056],[-64.83250759368661,32.2872232216224],[-64.82940693309044,32.289161134494876],[-64.82088011645101,32.2872232216224],[-64.81545396040775,32.288773551920414],[-64.81196571723709,32.28993629964394]]],[[[-64.64763070564058,32.368227979697096],[-64.65538235713095,32.35931358048309],[-64.65576993970544,32.35039918126917],[-64.66042093059971,32.353499841865286],[-64.66739741694104,32.358925997908514],[-64.68078075044497,32.36173218074005],[-64.68522621536897,32.3573756676105],[-64.69142753656135,32.36396457137728],[-64.70809358726564,32.351561928992695],[-64.70499292666955,32.34303511235318],[-64.69491577973201,32.339934451757],[-64.67786214645307,32.33450829571383],[-64.69840402290268,32.32636906164889],[-64.71700798647964,32.31551674956232],[-64.74058997299997,32.300441799000154],[-64.75487219999988,32.29311758000013],[-64.76390547799659,32.28257223072812],[-64.78328460672262,32.267456510321736],[-64.80925263921546,32.256216615660676],[-64.83405792398472,32.24807738159582],[-64.84917364439102,32.248464964170395],[-64.86080112162662,32.24885254674486],[-64.87630442460738,32.25776694595886],[-64.88289332837425,32.27171991864155],[-64.88599398897043,32.28257223072812],[-64.8766340454707,32.2789117392533],[-64.87797690356822,32.28607364910637],[-64.8745484041674,32.29568128932401],[-64.87979266777805,32.30543960262487],[-64.87242859886214,32.303114107177734],[-64.86894035569148,32.30892784579545],[-64.86428936479729,32.303114107177734],[-64.858088043605,32.29768795113439],[-64.86700244281892,32.29109904736747],[-64.86980647402979,32.27978479354091],[-64.87204101628768,32.27637090953583],[-64.86700244281892,32.27288266636508],[-64.84878606181653,32.270944753492486],[-64.84878606181653,32.2678440928964],[-64.86313074850327,32.269007567025156],[-64.86428936479729,32.26241793685297],[-64.85770046103045,32.25466628536269],[-64.84684814894385,32.25466628536269],[-64.83289517626119,32.25970485883143],[-64.82901935051595,32.266681345172785],[-64.81971736872748,32.267456510321736],[-64.80305131802308,32.27598332696125],[-64.78091386599993,32.287543036000145],[-64.77902119840289,32.29109904736747],[-64.79452450138365,32.289548717069536],[-64.80537681347022,32.29342454281469],[-64.81396733425686,32.303978423739],[-64.81083399869615,32.30755937866543],[-64.78014075399992,32.303412177000055],[-64.76183020699995,32.310939846000124],[-64.75121008999992,32.313625393],[-64.74026294095088,32.32404356620184],[-64.73599953263107,32.32288081847814],[-64.71855831677775,32.32365598362726],[-64.71390732588344,32.329469722245065],[-64.70538050924401,32.33605862601193],[-64.71313216073449,32.34264752977869],[-64.72463708989113,32.33878621989682],[-64.73289887203498,32.333733130564795],[-64.73473870650784,32.327702250127075],[-64.73948777580182,32.32869455709603],[-64.74165990765951,32.33307298398118],[-64.73638711520564,32.343810277502214],[-64.72202022916721,32.35251162240489],[-64.71313216073449,32.364352153951856],[-64.69725501199991,32.373521226000136],[-64.6760961579999,32.38865794500013],[-64.64763070564058,32.368227979697096]]]]}},{type:"Feature",id:"BOL",properties:{name:"Bolivia"},geometry:{type:"Polygon",coordinates:[[[-62.846468,-22.034985],[-63.986838,-21.993644],[-64.377021,-22.798091],[-64.964892,-22.075862],[-66.273339,-21.83231],[-67.106674,-22.735925],[-67.82818,-22.872919],[-68.219913,-21.494347],[-68.757167,-20.372658],[-68.442225,-19.405068],[-68.966818,-18.981683],[-69.100247,-18.260125],[-69.590424,-17.580012],[-68.959635,-16.500698],[-69.389764,-15.660129],[-69.160347,-15.323974],[-69.339535,-14.953195],[-68.948887,-14.453639],[-68.929224,-13.602684],[-68.88008,-12.899729],[-68.66508,-12.5613],[-69.529678,-10.951734],[-68.786158,-11.03638],[-68.271254,-11.014521],[-68.048192,-10.712059],[-67.173801,-10.306812],[-66.646908,-9.931331],[-65.338435,-9.761988],[-65.444837,-10.511451],[-65.321899,-10.895872],[-65.402281,-11.56627],[-64.316353,-12.461978],[-63.196499,-12.627033],[-62.80306,-13.000653],[-62.127081,-13.198781],[-61.713204,-13.489202],[-61.084121,-13.479384],[-60.503304,-13.775955],[-60.459198,-14.354007],[-60.264326,-14.645979],[-60.251149,-15.077219],[-60.542966,-15.09391],[-60.15839,-16.258284],[-58.24122,-16.299573],[-58.388058,-16.877109],[-58.280804,-17.27171],[-57.734558,-17.552468],[-57.498371,-18.174188],[-57.676009,-18.96184],[-57.949997,-19.400004],[-57.853802,-19.969995],[-58.166392,-20.176701],[-58.183471,-19.868399],[-59.115042,-19.356906],[-60.043565,-19.342747],[-61.786326,-19.633737],[-62.265961,-20.513735],[-62.291179,-21.051635],[-62.685057,-22.249029],[-62.846468,-22.034985]]]}},{type:"Feature",id:"BRA",properties:{name:"Brazil"},geometry:{type:"Polygon",coordinates:[[[-57.625133,-30.216295],[-56.2909,-28.852761],[-55.162286,-27.881915],[-54.490725,-27.474757],[-53.648735,-26.923473],[-53.628349,-26.124865],[-54.13005,-25.547639],[-54.625291,-25.739255],[-54.428946,-25.162185],[-54.293476,-24.5708],[-54.29296,-24.021014],[-54.652834,-23.839578],[-55.027902,-24.001274],[-55.400747,-23.956935],[-55.517639,-23.571998],[-55.610683,-22.655619],[-55.797958,-22.35693],[-56.473317,-22.0863],[-56.88151,-22.282154],[-57.937156,-22.090176],[-57.870674,-20.732688],[-58.166392,-20.176701],[-57.853802,-19.969995],[-57.949997,-19.400004],[-57.676009,-18.96184],[-57.498371,-18.174188],[-57.734558,-17.552468],[-58.280804,-17.27171],[-58.388058,-16.877109],[-58.24122,-16.299573],[-60.15839,-16.258284],[-60.542966,-15.09391],[-60.251149,-15.077219],[-60.264326,-14.645979],[-60.459198,-14.354007],[-60.503304,-13.775955],[-61.084121,-13.479384],[-61.713204,-13.489202],[-62.127081,-13.198781],[-62.80306,-13.000653],[-63.196499,-12.627033],[-64.316353,-12.461978],[-65.402281,-11.56627],[-65.321899,-10.895872],[-65.444837,-10.511451],[-65.338435,-9.761988],[-66.646908,-9.931331],[-67.173801,-10.306812],[-68.048192,-10.712059],[-68.271254,-11.014521],[-68.786158,-11.03638],[-69.529678,-10.951734],[-70.093752,-11.123972],[-70.548686,-11.009147],[-70.481894,-9.490118],[-71.302412,-10.079436],[-72.184891,-10.053598],[-72.563033,-9.520194],[-73.226713,-9.462213],[-73.015383,-9.032833],[-73.571059,-8.424447],[-73.987235,-7.52383],[-73.723401,-7.340999],[-73.724487,-6.918595],[-73.120027,-6.629931],[-73.219711,-6.089189],[-72.964507,-5.741251],[-72.891928,-5.274561],[-71.748406,-4.593983],[-70.928843,-4.401591],[-70.794769,-4.251265],[-69.893635,-4.298187],[-69.444102,-1.556287],[-69.420486,-1.122619],[-69.577065,-.549992],[-70.020656,-.185156],[-70.015566,.541414],[-69.452396,.706159],[-69.252434,.602651],[-69.218638,.985677],[-69.804597,1.089081],[-69.816973,1.714805],[-67.868565,1.692455],[-67.53781,2.037163],[-67.259998,1.719999],[-67.065048,1.130112],[-66.876326,1.253361],[-66.325765,.724452],[-65.548267,.789254],[-65.354713,1.095282],[-64.611012,1.328731],[-64.199306,1.492855],[-64.083085,1.916369],[-63.368788,2.2009],[-63.422867,2.411068],[-64.269999,2.497006],[-64.408828,3.126786],[-64.368494,3.79721],[-64.816064,4.056445],[-64.628659,4.148481],[-63.888343,4.02053],[-63.093198,3.770571],[-62.804533,4.006965],[-62.08543,4.162124],[-60.966893,4.536468],[-60.601179,4.918098],[-60.733574,5.200277],[-60.213683,5.244486],[-59.980959,5.014061],[-60.111002,4.574967],[-59.767406,4.423503],[-59.53804,3.958803],[-59.815413,3.606499],[-59.974525,2.755233],[-59.718546,2.24963],[-59.646044,1.786894],[-59.030862,1.317698],[-58.540013,1.268088],[-58.429477,1.463942],[-58.11345,1.507195],[-57.660971,1.682585],[-57.335823,1.948538],[-56.782704,1.863711],[-56.539386,1.899523],[-55.995698,1.817667],[-55.9056,2.021996],[-56.073342,2.220795],[-55.973322,2.510364],[-55.569755,2.421506],[-55.097587,2.523748],[-54.524754,2.311849],[-54.088063,2.105557],[-53.778521,2.376703],[-53.554839,2.334897],[-53.418465,2.053389],[-52.939657,2.124858],[-52.556425,2.504705],[-52.249338,3.241094],[-51.657797,4.156232],[-51.317146,4.203491],[-51.069771,3.650398],[-50.508875,1.901564],[-49.974076,1.736483],[-49.947101,1.04619],[-50.699251,.222984],[-50.388211,-.078445],[-48.620567,-.235489],[-48.584497,-1.237805],[-47.824956,-.581618],[-46.566584,-.941028],[-44.905703,-1.55174],[-44.417619,-2.13775],[-44.581589,-2.691308],[-43.418791,-2.38311],[-41.472657,-2.912018],[-39.978665,-2.873054],[-38.500383,-3.700652],[-37.223252,-4.820946],[-36.452937,-5.109404],[-35.597796,-5.149504],[-35.235389,-5.464937],[-34.89603,-6.738193],[-34.729993,-7.343221],[-35.128212,-8.996401],[-35.636967,-9.649282],[-37.046519,-11.040721],[-37.683612,-12.171195],[-38.423877,-13.038119],[-38.673887,-13.057652],[-38.953276,-13.79337],[-38.882298,-15.667054],[-39.161092,-17.208407],[-39.267339,-17.867746],[-39.583521,-18.262296],[-39.760823,-19.599113],[-40.774741,-20.904512],[-40.944756,-21.937317],[-41.754164,-22.370676],[-41.988284,-22.97007],[-43.074704,-22.967693],[-44.647812,-23.351959],[-45.352136,-23.796842],[-46.472093,-24.088969],[-47.648972,-24.885199],[-48.495458,-25.877025],[-48.641005,-26.623698],[-48.474736,-27.175912],[-48.66152,-28.186135],[-48.888457,-28.674115],[-49.587329,-29.224469],[-50.696874,-30.984465],[-51.576226,-31.777698],[-52.256081,-32.24537],[-52.7121,-33.196578],[-53.373662,-33.768378],[-53.650544,-33.202004],[-53.209589,-32.727666],[-53.787952,-32.047243],[-54.572452,-31.494511],[-55.60151,-30.853879],[-55.973245,-30.883076],[-56.976026,-30.109686],[-57.625133,-30.216295]]]}},{type:"Feature",id:"BRN",properties:{name:"Brunei"},geometry:{type:"Polygon",coordinates:[[[114.204017,4.525874],[114.599961,4.900011],[115.45071,5.44773],[115.4057,4.955228],[115.347461,4.316636],[114.869557,4.348314],[114.659596,4.007637],[114.204017,4.525874]]]}},{type:"Feature",id:"BTN",properties:{name:"Bhutan"},geometry:{type:"Polygon",coordinates:[[[91.696657,27.771742],[92.103712,27.452614],[92.033484,26.83831],[91.217513,26.808648],[90.373275,26.875724],[89.744528,26.719403],[88.835643,27.098966],[88.814248,27.299316],[89.47581,28.042759],[90.015829,28.296439],[90.730514,28.064954],[91.258854,28.040614],[91.696657,27.771742]]]}},{type:"Feature",id:"BWA",properties:{name:"Botswana"},geometry:{type:"Polygon",coordinates:[[[25.649163,-18.536026],[25.850391,-18.714413],[26.164791,-19.293086],[27.296505,-20.39152],[27.724747,-20.499059],[27.727228,-20.851802],[28.02137,-21.485975],[28.794656,-21.639454],[29.432188,-22.091313],[28.017236,-22.827754],[27.11941,-23.574323],[26.786407,-24.240691],[26.485753,-24.616327],[25.941652,-24.696373],[25.765849,-25.174845],[25.664666,-25.486816],[25.025171,-25.71967],[24.211267,-25.670216],[23.73357,-25.390129],[23.312097,-25.26869],[22.824271,-25.500459],[22.579532,-25.979448],[22.105969,-26.280256],[21.605896,-26.726534],[20.889609,-26.828543],[20.66647,-26.477453],[20.758609,-25.868136],[20.165726,-24.917962],[19.895768,-24.76779],[19.895458,-21.849157],[20.881134,-21.814327],[20.910641,-18.252219],[21.65504,-18.219146],[23.196858,-17.869038],[23.579006,-18.281261],[24.217365,-17.889347],[24.520705,-17.887125],[25.084443,-17.661816],[25.264226,-17.73654],[25.649163,-18.536026]]]}},{type:"Feature",id:"CPV",properties:{name:"Cap Verde"},geometry:{type:"MultiPolygon",coordinates:[[[[-24.683257615999906,14.84247467700014],[-24.686879035999937,14.826646226000108],[-24.695301886999914,14.819403387000165],[-24.7044164699999,14.814032294000114],[-24.710560675999886,14.803941148000149],[-24.71800696499986,14.803941148000149],[-24.725453253999916,14.814113674000097],[-24.74461829299989,14.826605536000116],[-24.751535610999895,14.838771877000099],[-24.758941209999875,14.831854559000092],[-24.754709438999953,14.840806382000125],[-24.7532445949999,14.849351304000137],[-24.754709438999953,14.857855536000088],[-24.758941209999875,14.866644598000136],[-24.745350714999915,14.866644598000136],[-24.74941972599987,14.885484117000175],[-24.7376195949999,14.892035223000079],[-24.719349738999938,14.894435940000108],[-24.704335089999915,14.90082428600013],[-24.693104620999918,14.890692450000174],[-24.686756964999887,14.876166083000143],[-24.683949347999942,14.859442450000117],[-24.683257615999906,14.84247467700014]]],[[[-24.334462042999917,14.831854559000092],[-24.37653561099998,14.815985419000157],[-24.41502844999988,14.820868231000134],[-24.449086066999882,14.838080145000148],[-24.506581183999884,14.884955145000106],[-24.520375128999888,14.903957424000112],[-24.526234503999916,14.924709377000113],[-24.52061926999994,14.945257880000142],[-24.506743943999936,14.969183661000116],[-24.488921678999873,14.99054596600017],[-24.46458899599989,15.007717190000093],[-24.40343176999994,15.03803131700009],[-24.385568813999896,15.043524481000105],[-24.364857550999886,15.04539622600008],[-24.343251105999883,15.04071686400006],[-24.329213019999912,15.02871328300013],[-24.32013912699992,15.01300690300016],[-24.30724036399991,14.979437567000133],[-24.295765753999973,14.930487372000158],[-24.296538865999878,14.917547919000157],[-24.301503058999856,14.906480210000126],[-24.298207160999908,14.895453192000076],[-24.29328365799995,14.884344794000143],[-24.29283606699994,14.872870184000107],[-24.299549933999884,14.86302317900008],[-24.334462042999917,14.831854559000092]]],[[[-23.739898240999906,15.317328192000147],[-23.737945115999878,15.311672268000152],[-23.71922766799989,15.322902736000145],[-23.70323645699989,15.313462632000139],[-23.697824673999946,15.296332098000107],[-23.71068274599986,15.284369208000072],[-23.697336391999954,15.266017971000124],[-23.681752081999946,15.254828192000105],[-23.648548956999946,15.237209377000084],[-23.65607662699992,15.22972239800012],[-23.638783331999917,15.226263739000117],[-23.63027910099987,15.21918366100006],[-23.615101691999882,15.195013739000146],[-23.584217902999853,15.162420966000099],[-23.567372199999852,15.152085679000095],[-23.552357550999915,15.153998114000146],[-23.54914303299995,15.149359442000119],[-23.547474738999938,15.145941473000107],[-23.544992641999926,15.143133856000148],[-23.539296027999853,15.140366929000095],[-23.54076087099989,15.139064846000096],[-23.53441321499986,15.133002020000106],[-23.52725175699993,15.127386786000102],[-23.525705532999893,15.12734609600011],[-23.52293860599991,15.126695054000066],[-23.514068162999877,15.12799713700015],[-23.511382615999906,15.12734609600011],[-23.51081295499992,15.124212958000129],[-23.51203365799995,15.116115627000113],[-23.511382615999906,15.113023179000123],[-23.47044837099986,15.037990627000099],[-23.46654212099986,15.03424713700015],[-23.463612433999856,15.033148505000113],[-23.460682745999918,15.030951239000117],[-23.456776495999918,15.023667710000112],[-23.454579230999855,15.018947658000101],[-23.451893683999856,15.015122789000173],[-23.448353644999884,15.012396552000112],[-23.44310462099989,15.010687567000105],[-23.44782467399989,14.995754299000154],[-23.454660610999923,14.985907294000143],[-23.477894660999937,14.969061591000141],[-23.47044837099986,14.962225653000118],[-23.480213995999918,14.946600653000132],[-23.486317511999886,14.930853583000086],[-23.49400794199991,14.918687242000189],[-23.508290167999917,14.913804429000123],[-23.51622473899988,14.912827867000146],[-23.531849738999938,14.90863678600013],[-23.539296027999853,14.907619533000158],[-23.54735266799986,14.908514716000155],[-23.555816209999904,14.91278717700007],[-23.563221808999884,14.913804429000123],[-23.596424933999913,14.914536851000065],[-23.624134894999912,14.918117580000128],[-23.649728969999956,14.926499742000189],[-23.676503058999884,14.93553294500019],[-23.715077277999853,14.968451239000089],[-23.730539516999954,14.98582591400016],[-23.730702277999853,15.018500067000105],[-23.74205481699991,15.026353257000082],[-23.75829016799986,15.031317450000131],[-23.772084113999966,15.037990627000099],[-23.772694464999915,15.041693427000126],[-23.779530402999853,15.06464264500012],[-23.782297329999892,15.06854889500012],[-23.786284959999875,15.072414455000128],[-23.790109829999892,15.0777041690001],[-23.792591925999915,15.085760809000135],[-23.789865688999953,15.09381745000016],[-23.775624152999853,15.118231512000122],[-23.772084113999966,15.12734609600011],[-23.772938605999855,15.140448309000178],[-23.78575598899991,15.174505927000098],[-23.776193813999896,15.17723216400016],[-23.77013098899991,15.18398672100011],[-23.766753709999904,15.193752346000139],[-23.76585852799991,15.205511786000116],[-23.763661261999914,15.21629466400013],[-23.758697068999965,15.223089911000145],[-23.753814256999902,15.2280947940001],[-23.751576300999915,15.23346588700015],[-23.75495357999992,15.250311591000155],[-23.763295050999886,15.269761460000055],[-23.77440344999991,15.28563060100008],[-23.78575598899991,15.291815497000144],[-23.77912350199992,15.294134833000115],[-23.75841223899991,15.30487702000012],[-23.773060675999943,15.310614325000103],[-23.779530402999853,15.311672268000152],[-23.751576300999915,15.332749742000175],[-23.744130011999914,15.332749742000175],[-23.74356035099987,15.325140692000133],[-23.74201412699992,15.320949611000103],[-23.739898240999906,15.317328192000147]]],[[[-23.17625891799986,15.319159247000115],[-23.161936001999948,15.312567450000145],[-23.139515753999945,15.317775783000144],[-23.127797003999945,15.311672268000152],[-23.121896938999924,15.299139716000155],[-23.120513475999957,15.283351955000114],[-23.121571417999917,15.256415106000134],[-23.110463019999884,15.199408270000134],[-23.111927863999938,15.171942450000088],[-23.127797003999945,15.146633205000143],[-23.132801886999914,15.144720770000092],[-23.14867102799994,15.142767645000134],[-23.155140753999945,15.140366929000095],[-23.158843553999873,15.135565497000115],[-23.16364498599995,15.12372467700014],[-23.168812628999888,15.119859117000146],[-23.18272864499994,15.118597723000136],[-23.1959529289999,15.122056382000139],[-23.217152472999885,15.133530992000175],[-23.240630662999934,15.150051174000154],[-23.252064581999917,15.161810614000132],[-23.258168097999885,15.174505927000098],[-23.255116339999887,15.186835028000147],[-23.247303839999915,15.199204820000176],[-23.24327551999994,15.211330471000082],[-23.25133216099988,15.222886460000097],[-23.237172003999945,15.23102448100012],[-23.230865037999905,15.24396393400012],[-23.23485266799989,15.254828192000105],[-23.25133216099988,15.256415106000134],[-23.245716925999886,15.271063544000143],[-23.224110480999883,15.286688544000128],[-23.209787563999896,15.311672268000152],[-23.214466925999915,15.313544012000122],[-23.21515865799995,15.31443919500012],[-23.21495520699989,15.315822658000101],[-23.217152472999885,15.319159247000115],[-23.2032771479999,15.324896552000098],[-23.189849412999905,15.332749742000175],[-23.189564581999974,15.32949453300013],[-23.189849412999905,15.319159247000115],[-23.181263800999886,15.3257510440001],[-23.178944464999915,15.327948309000178],[-23.17625891799986,15.332749742000175],[-23.168812628999888,15.325344143000095],[-23.17625891799986,15.319159247000115]]],[[[-22.85252844999988,16.206610419000143],[-22.829416469999927,16.204006252000156],[-22.819325324999852,16.212958075000174],[-22.811675584999932,16.228420315],[-22.793812628999945,16.231350002000042],[-22.734689907999922,16.216864325000174],[-22.72386633999986,16.212632554000052],[-22.713856574999852,16.20575592700014],[-22.709828253999888,16.1986351580001],[-22.7037654289999,16.17959219],[-22.69957434799997,16.17568594],[-22.682484503999916,16.16864655200014],[-22.67870032499991,16.15176015800013],[-22.682118292999917,16.11359284100017],[-22.678374803999873,16.111883856000148],[-22.670806443999908,16.102240302],[-22.66657467399989,16.091457424000097],[-22.67251542899993,16.086330471000096],[-22.67560787699992,16.082017320000162],[-22.677113410999965,16.072658596000153],[-22.679798956999946,16.063218492000132],[-22.696441209999904,16.052923895000035],[-22.75108801999994,16.010565497000115],[-22.78758704299989,15.991603908000016],[-22.80614173099991,15.985907294000029],[-22.863677537999877,15.982367255000142],[-22.873890753999916,15.983872789000188],[-22.883656378999945,15.988714911000088],[-22.8977758449999,16.00047435100005],[-22.90929114499994,16.003729559000092],[-22.945546027999853,16.019680080000015],[-22.957753058999913,16.03082916900003],[-22.963978644999884,16.052191473000093],[-22.963246222999942,16.0711937520001],[-22.957753058999913,16.089016018000066],[-22.9474177729999,16.102240302],[-22.932606574999852,16.107407945000105],[-22.913563605999855,16.12555573100009],[-22.924427863999938,16.212958075000174],[-22.91559811099995,16.243963934000092],[-22.911610480999883,16.236721096000068],[-22.90721594999991,16.231431382000025],[-22.895090298999918,16.22284577000009],[-22.87791907499988,16.21491120000003],[-22.85252844999988,16.206610419000143]]],[[[-24.29283606699994,16.641831773000135],[-24.282378709999875,16.641343492000047],[-24.22679602799994,16.649603583000115],[-24.21711178299995,16.647691148000163],[-24.180572068999936,16.630845445000162],[-24.17247473899991,16.629095770000063],[-24.0899958979999,16.622463283000016],[-24.067534959999875,16.613918361000074],[-24.047963019999912,16.598822333000086],[-24.03742428299995,16.593003648000135],[-24.032826300999915,16.596828518000123],[-24.032826300999915,16.56240469],[-24.044097459999904,16.55988190300009],[-24.114735480999855,16.55927155200014],[-24.19196529899989,16.592474677000055],[-24.233306443999908,16.60211823100012],[-24.272328253999888,16.587225653000147],[-24.28636633999986,16.570746161000088],[-24.315337693999936,16.520412502000127],[-24.32469641799989,16.482652085000055],[-24.33340410099987,16.49494049700003],[-24.34748287699989,16.531968492000047],[-24.35338294199994,16.5404320330001],[-24.360178188999953,16.547186591000028],[-24.365630662999905,16.55560944200009],[-24.367909308999884,16.569159247000144],[-24.36856035099993,16.57953522300015],[-24.37092037699989,16.587144273000163],[-24.376088019999884,16.591782945000105],[-24.385080532999893,16.593410549000126],[-24.408273891999926,16.600165106000148],[-24.424712693999936,16.617132880000142],[-24.430653449999852,16.639471747000172],[-24.422596808999913,16.66229889500009],[-24.36148027299987,16.681586005000113],[-24.354237433999856,16.680609442000147],[-24.340565558999913,16.67536041900017],[-24.328684048999946,16.66779205900012],[-24.30516516799989,16.64789459800012],[-24.29283606699994,16.641831773000135]]],[[[-22.89736894399988,16.71027252800009],[-22.88418535099993,16.698431708000115],[-22.88133704299989,16.692694403000147],[-22.88239498599995,16.681545315000122],[-22.886626756999874,16.66168854400003],[-22.887603318999936,16.651434637000094],[-22.889556443999908,16.645900783000073],[-22.898793097999942,16.639471747000172],[-22.901844855999855,16.634426174000126],[-22.90147864499994,16.629095770000063],[-22.89940344999991,16.62164948100009],[-22.896839972999913,16.61546458500011],[-22.895090298999918,16.613918361000074],[-22.90172278599988,16.605902411000145],[-22.90884355399993,16.602199611000103],[-22.917632615999906,16.599188544000086],[-22.92918860599991,16.593410549000126],[-22.941395636999914,16.66937897300015],[-22.95653235599991,16.69944896],[-22.97760982999992,16.689032294000114],[-22.981760219999956,16.703517971000153],[-22.983143683999856,16.723049221000124],[-22.98005123599995,16.741115627000156],[-22.97081458199989,16.75104401200015],[-22.97081458199989,16.757879950000174],[-22.982736782999922,16.761379299000154],[-22.989247199999937,16.77094147300015],[-22.99156653599988,16.78432851800015],[-22.990793423999975,16.81565989800019],[-22.970122850999957,16.83144765800013],[-22.92243404899989,16.860296942000062],[-22.916981574999852,16.853176174000012],[-22.898915167999917,16.836818752000013],[-22.895090298999918,16.829291083000143],[-22.89631100199992,16.82501862200003],[-22.902740037999934,16.813177802000084],[-22.909779425999915,16.80337148600013],[-22.907948370999947,16.800604559000178],[-22.90404212099986,16.798570054000052],[-22.901844855999855,16.79511139500015],[-22.904652472999913,16.73582591400016],[-22.901844855999855,16.71694570500013],[-22.89736894399988,16.71027252800009]]],[[[-24.927723761999914,16.91779205900015],[-24.918771938999896,16.908270575000145],[-24.91470292899993,16.89915599200016],[-24.919748501999948,16.89508698100012],[-24.92292232999992,16.89081452],[-24.914458787999877,16.881415106000176],[-24.90013587099989,16.872015692000062],[-24.885894334999904,16.867743231000063],[-24.88109290299991,16.86229075700011],[-24.876291469999927,16.849839585],[-24.873605923999946,16.835923570000105],[-24.875070766999897,16.826157945000162],[-24.89110266799989,16.813950914000188],[-24.915516730999855,16.805487372000144],[-24.94286048099991,16.800482489000032],[-24.96812903599988,16.798895575000174],[-24.974517381999902,16.796698309000178],[-24.984201626999948,16.787339585000055],[-24.98802649599986,16.785142320000077],[-24.995228644999884,16.78611888200014],[-25.058176235999923,16.809637762000094],[-25.06822669199991,16.81509023600013],[-25.076161261999857,16.82245514500012],[-25.08112545499992,16.832342841000056],[-25.094146287999905,16.826157945000162],[-25.08975175699993,16.847479559000035],[-25.078195766999897,16.86505768400015],[-25.063588019999884,16.87702057500009],[-25.0501195949999,16.881415106000176],[-25.01878821499986,16.882025458000143],[-25.005970831999917,16.88768138200014],[-25.01219641799986,16.9012718770001],[-24.983998175999886,16.915961005],[-24.97809811099995,16.92300039300015],[-24.971262173999946,16.92300039300015],[-24.965199347999942,16.908921617000104],[-24.955189581999946,16.910793361000074],[-24.93773352799991,16.92300039300015],[-24.927723761999914,16.91779205900015]]],[[[-25.091053839999915,17.19301992400007],[-25.0794978509999,17.185370184000035],[-25.053944464999915,17.18618398600013],[-25.03954016799986,17.182440497000115],[-25.030181443999908,17.175482489000117],[-25.026275193999908,17.16771067900011],[-25.025868292999917,17.14492422100001],[-25.02057857999992,17.140366929000052],[-24.99705969999988,17.134182033000073],[-24.991769985999895,17.13092682500003],[-24.988677537999905,17.125718492000047],[-24.974964972999885,17.11448802300005],[-24.971262173999946,17.107326565],[-24.973011847999942,17.09662506700009],[-24.97899329299986,17.08690013200011],[-25.015126105999883,17.04913971600017],[-25.019683397999927,17.049017645],[-25.02391516799986,17.045396226000136],[-25.042713995999918,17.03847890800013],[-25.046986456999917,17.035060940000122],[-25.055572068999936,17.0248070330001],[-25.115874803999873,16.997463283000044],[-25.143422003999888,16.970038153000175],[-25.162953253999888,16.94529857000019],[-25.187855597999913,16.92816803600006],[-25.231312628999945,16.92300039300015],[-25.269195115999906,16.92300039300015],[-25.280832485999895,16.920721747000087],[-25.289662238999938,16.917181708],[-25.298695441999882,16.917385158000158],[-25.31078040299988,16.92609284100014],[-25.31338456899988,16.938462632000082],[-25.31387285099987,17.004950262000094],[-25.3275447259999,17.028225002000013],[-25.33104407499988,17.03095123900009],[-25.3482966789999,17.034125067000147],[-25.35484778599988,17.03847890800013],[-25.360422329999892,17.055243231000148],[-25.35558020699989,17.069566148000135],[-25.330922003999916,17.096828518000123],[-25.316802537999877,17.106105861000074],[-25.30215410099987,17.10805898600013],[-25.289133266999983,17.10700104400017],[-25.27977454299986,17.107326565],[-25.269602016999897,17.11432526200018],[-25.245350714999915,17.13670482000019],[-25.226307745999918,17.144680080000157],[-25.202707485999895,17.15875885600009],[-25.17955481699994,17.164374091000084],[-25.118641730999855,17.192857164000102],[-25.10260982999995,17.196600653000033],[-25.091053839999915,17.19301992400007]]]]}},{type:"Feature",id:"CAF",properties:{name:"Central African Republic"},geometry:{type:"Polygon",coordinates:[[[15.27946,7.421925],[16.106232,7.497088],[16.290562,7.754307],[16.456185,7.734774],[16.705988,7.508328],[17.96493,7.890914],[18.389555,8.281304],[18.911022,8.630895],[18.81201,8.982915],[19.094008,9.074847],[20.059685,9.012706],[21.000868,9.475985],[21.723822,10.567056],[22.231129,10.971889],[22.864165,11.142395],[22.977544,10.714463],[23.554304,10.089255],[23.55725,9.681218],[23.394779,9.265068],[23.459013,8.954286],[23.805813,8.666319],[24.567369,8.229188],[25.114932,7.825104],[25.124131,7.500085],[25.796648,6.979316],[26.213418,6.546603],[26.465909,5.946717],[27.213409,5.550953],[27.374226,5.233944],[27.044065,5.127853],[26.402761,5.150875],[25.650455,5.256088],[25.278798,5.170408],[25.128833,4.927245],[24.805029,4.897247],[24.410531,5.108784],[23.297214,4.609693],[22.84148,4.710126],[22.704124,4.633051],[22.405124,4.02916],[21.659123,4.224342],[20.927591,4.322786],[20.290679,4.691678],[19.467784,5.031528],[18.932312,4.709506],[18.542982,4.201785],[18.453065,3.504386],[17.8099,3.560196],[17.133042,3.728197],[16.537058,3.198255],[16.012852,2.26764],[15.907381,2.557389],[15.862732,3.013537],[15.405396,3.335301],[15.03622,3.851367],[14.950953,4.210389],[14.478372,4.732605],[14.558936,5.030598],[14.459407,5.451761],[14.53656,6.226959],[14.776545,6.408498],[15.27946,7.421925]]]}},{type:"Feature",id:"CAN",properties:{name:"Canada"},geometry:{type:"MultiPolygon",coordinates:[[[[-63.6645,46.55001],[-62.9393,46.41587],[-62.01208,46.44314],[-62.50391,46.03339],[-62.87433,45.96818],[-64.1428,46.39265],[-64.39261,46.72747],[-64.01486,47.03601],[-63.6645,46.55001]]],[[[-61.806305,49.10506],[-62.29318,49.08717],[-63.58926,49.40069],[-64.51912,49.87304],[-64.17322,49.95718],[-62.85829,49.70641],[-61.835585,49.28855],[-61.806305,49.10506]]],[[[-123.510002,48.510011],[-124.012891,48.370846],[-125.655013,48.825005],[-125.954994,49.179996],[-126.850004,49.53],[-127.029993,49.814996],[-128.059336,49.994959],[-128.444584,50.539138],[-128.358414,50.770648],[-127.308581,50.552574],[-126.695001,50.400903],[-125.755007,50.295018],[-125.415002,49.950001],[-124.920768,49.475275],[-123.922509,49.062484],[-123.510002,48.510011]]],[[[-56.134036,50.68701],[-56.795882,49.812309],[-56.143105,50.150117],[-55.471492,49.935815],[-55.822401,49.587129],[-54.935143,49.313011],[-54.473775,49.556691],[-53.476549,49.249139],[-53.786014,48.516781],[-53.086134,48.687804],[-52.958648,48.157164],[-52.648099,47.535548],[-53.069158,46.655499],[-53.521456,46.618292],[-54.178936,46.807066],[-53.961869,47.625207],[-54.240482,47.752279],[-55.400773,46.884994],[-55.997481,46.91972],[-55.291219,47.389562],[-56.250799,47.632545],[-57.325229,47.572807],[-59.266015,47.603348],[-59.419494,47.899454],[-58.796586,48.251525],[-59.231625,48.523188],[-58.391805,49.125581],[-57.35869,50.718274],[-56.73865,51.287438],[-55.870977,51.632094],[-55.406974,51.588273],[-55.600218,51.317075],[-56.134036,50.68701]]],[[[-132.710008,54.040009],[-131.74999,54.120004],[-132.04948,52.984621],[-131.179043,52.180433],[-131.57783,52.182371],[-132.180428,52.639707],[-132.549992,53.100015],[-133.054611,53.411469],[-133.239664,53.85108],[-133.180004,54.169975],[-132.710008,54.040009]]],[[[-79.26582,62.158675],[-79.65752,61.63308],[-80.09956,61.7181],[-80.36215,62.01649],[-80.315395,62.085565],[-79.92939,62.3856],[-79.52002,62.36371],[-79.26582,62.158675]]],[[[-81.89825,62.7108],[-83.06857,62.15922],[-83.77462,62.18231],[-83.99367,62.4528],[-83.25048,62.91409],[-81.87699,62.90458],[-81.89825,62.7108]]],[[[-85.161308,65.657285],[-84.975764,65.217518],[-84.464012,65.371772],[-83.882626,65.109618],[-82.787577,64.766693],[-81.642014,64.455136],[-81.55344,63.979609],[-80.817361,64.057486],[-80.103451,63.725981],[-80.99102,63.411246],[-82.547178,63.651722],[-83.108798,64.101876],[-84.100417,63.569712],[-85.523405,63.052379],[-85.866769,63.637253],[-87.221983,63.541238],[-86.35276,64.035833],[-86.224886,64.822917],[-85.883848,65.738778],[-85.161308,65.657285]]],[[[-75.86588,67.14886],[-76.98687,67.09873],[-77.2364,67.58809],[-76.81166,68.14856],[-75.89521,68.28721],[-75.1145,68.01036],[-75.10333,67.58202],[-75.21597,67.44425],[-75.86588,67.14886]]],[[[-95.647681,69.10769],[-96.269521,68.75704],[-97.617401,69.06003],[-98.431801,68.9507],[-99.797401,69.40003],[-98.917401,69.71003],[-98.218261,70.14354],[-97.157401,69.86003],[-96.557401,69.68003],[-96.257401,69.49003],[-95.647681,69.10769]]],[[[-90.5471,69.49766],[-90.55151,68.47499],[-89.21515,69.25873],[-88.01966,68.61508],[-88.31749,67.87338],[-87.35017,67.19872],[-86.30607,67.92146],[-85.57664,68.78456],[-85.52197,69.88211],[-84.10081,69.80539],[-82.62258,69.65826],[-81.28043,69.16202],[-81.2202,68.66567],[-81.96436,68.13253],[-81.25928,67.59716],[-81.38653,67.11078],[-83.34456,66.41154],[-84.73542,66.2573],[-85.76943,66.55833],[-86.0676,66.05625],[-87.03143,65.21297],[-87.32324,64.77563],[-88.48296,64.09897],[-89.91444,64.03273],[-90.70398,63.61017],[-90.77004,62.96021],[-91.93342,62.83508],[-93.15698,62.02469],[-94.24153,60.89865],[-94.62931,60.11021],[-94.6846,58.94882],[-93.21502,58.78212],[-92.76462,57.84571],[-92.29703,57.08709],[-90.89769,57.28468],[-89.03953,56.85172],[-88.03978,56.47162],[-87.32421,55.99914],[-86.07121,55.72383],[-85.01181,55.3026],[-83.36055,55.24489],[-82.27285,55.14832],[-82.4362,54.28227],[-82.12502,53.27703],[-81.40075,52.15788],[-79.91289,51.20842],[-79.14301,51.53393],[-78.60191,52.56208],[-79.12421,54.14145],[-79.82958,54.66772],[-78.22874,55.13645],[-77.0956,55.83741],[-76.54137,56.53423],[-76.62319,57.20263],[-77.30226,58.05209],[-78.51688,58.80458],[-77.33676,59.85261],[-77.77272,60.75788],[-78.10687,62.31964],[-77.41067,62.55053],[-75.69621,62.2784],[-74.6682,62.18111],[-73.83988,62.4438],[-72.90853,62.10507],[-71.67708,61.52535],[-71.37369,61.13717],[-69.59042,61.06141],[-69.62033,60.22125],[-69.2879,58.95736],[-68.37455,58.80106],[-67.64976,58.21206],[-66.20178,58.76731],[-65.24517,59.87071],[-64.58352,60.33558],[-63.80475,59.4426],[-62.50236,58.16708],[-61.39655,56.96745],[-61.79866,56.33945],[-60.46853,55.77548],[-59.56962,55.20407],[-57.97508,54.94549],[-57.3332,54.6265],[-56.93689,53.78032],[-56.15811,53.64749],[-55.75632,53.27036],[-55.68338,52.14664],[-56.40916,51.7707],[-57.12691,51.41972],[-58.77482,51.0643],[-60.03309,50.24277],[-61.72366,50.08046],[-63.86251,50.29099],[-65.36331,50.2982],[-66.39905,50.22897],[-67.23631,49.51156],[-68.51114,49.06836],[-69.95362,47.74488],[-71.10458,46.82171],[-70.25522,46.98606],[-68.65,48.3],[-66.55243,49.1331],[-65.05626,49.23278],[-64.17099,48.74248],[-65.11545,48.07085],[-64.79854,46.99297],[-64.47219,46.23849],[-63.17329,45.73902],[-61.52072,45.88377],[-60.51815,47.00793],[-60.4486,46.28264],[-59.80287,45.9204],[-61.03988,45.26525],[-63.25471,44.67014],[-64.24656,44.26553],[-65.36406,43.54523],[-66.1234,43.61867],[-66.16173,44.46512],[-64.42549,45.29204],[-66.02605,45.25931],[-67.13741,45.13753],[-67.79134,45.70281],[-67.79046,47.06636],[-68.23444,47.35486],[-68.905,47.185],[-69.237216,47.447781],[-69.99997,46.69307],[-70.305,45.915],[-70.66,45.46],[-71.08482,45.30524],[-71.405,45.255],[-71.50506,45.0082],[-73.34783,45.00738],[-74.867,45.00048],[-75.31821,44.81645],[-76.375,44.09631],[-76.5,44.018459],[-76.820034,43.628784],[-77.737885,43.629056],[-78.72028,43.625089],[-79.171674,43.466339],[-79.01,43.27],[-78.92,42.965],[-78.939362,42.863611],[-80.247448,42.3662],[-81.277747,42.209026],[-82.439278,41.675105],[-82.690089,41.675105],[-83.02981,41.832796],[-83.142,41.975681],[-83.12,42.08],[-82.9,42.43],[-82.43,42.98],[-82.137642,43.571088],[-82.337763,44.44],[-82.550925,45.347517],[-83.592851,45.816894],[-83.469551,45.994686],[-83.616131,46.116927],[-83.890765,46.116927],[-84.091851,46.275419],[-84.14212,46.512226],[-84.3367,46.40877],[-84.6049,46.4396],[-84.543749,46.538684],[-84.779238,46.637102],[-84.87608,46.900083],[-85.652363,47.220219],[-86.461991,47.553338],[-87.439793,47.94],[-88.378114,48.302918],[-89.272917,48.019808],[-89.6,48.01],[-90.83,48.27],[-91.64,48.14],[-92.61,48.45],[-93.63087,48.60926],[-94.32914,48.67074],[-94.64,48.84],[-94.81758,49.38905],[-95.15609,49.38425],[-95.15907,49],[-97.22872,49.0007],[-100.65,49],[-104.04826,48.99986],[-107.05,49],[-110.05,49],[-113,49],[-116.04818,49],[-117.03121,49],[-120,49],[-122.84,49],[-122.97421,49.002538],[-124.91024,49.98456],[-125.62461,50.41656],[-127.43561,50.83061],[-127.99276,51.71583],[-127.85032,52.32961],[-129.12979,52.75538],[-129.30523,53.56159],[-130.51497,54.28757],[-130.53611,54.80278],[-129.98,55.285],[-130.00778,55.91583],[-131.70781,56.55212],[-132.73042,57.69289],[-133.35556,58.41028],[-134.27111,58.86111],[-134.945,59.27056],[-135.47583,59.78778],[-136.47972,59.46389],[-137.4525,58.905],[-138.34089,59.56211],[-139.039,60],[-140.013,60.27682],[-140.99778,60.30639],[-140.9925,66.00003],[-140.986,69.712],[-139.12052,69.47102],[-137.54636,68.99002],[-136.50358,68.89804],[-135.62576,69.31512],[-134.41464,69.62743],[-132.92925,69.50534],[-131.43136,69.94451],[-129.79471,70.19369],[-129.10773,69.77927],[-128.36156,70.01286],[-128.13817,70.48384],[-127.44712,70.37721],[-125.75632,69.48058],[-124.42483,70.1584],[-124.28968,69.39969],[-123.06108,69.56372],[-122.6835,69.85553],[-121.47226,69.79778],[-119.94288,69.37786],[-117.60268,69.01128],[-116.22643,68.84151],[-115.2469,68.90591],[-113.89794,68.3989],[-115.30489,67.90261],[-113.49727,67.68815],[-110.798,67.80612],[-109.94619,67.98104],[-108.8802,67.38144],[-107.79239,67.88736],[-108.81299,68.31164],[-108.16721,68.65392],[-106.95,68.7],[-106.15,68.8],[-105.34282,68.56122],[-104.33791,68.018],[-103.22115,68.09775],[-101.45433,67.64689],[-99.90195,67.80566],[-98.4432,67.78165],[-98.5586,68.40394],[-97.66948,68.57864],[-96.11991,68.23939],[-96.12588,67.29338],[-95.48943,68.0907],[-94.685,68.06383],[-94.23282,69.06903],[-95.30408,69.68571],[-96.47131,70.08976],[-96.39115,71.19482],[-95.2088,71.92053],[-93.88997,71.76015],[-92.87818,71.31869],[-91.51964,70.19129],[-92.40692,69.69997],[-90.5471,69.49766]]],[[[-114.16717,73.12145],[-114.66634,72.65277],[-112.44102,72.9554],[-111.05039,72.4504],[-109.92035,72.96113],[-109.00654,72.63335],[-108.18835,71.65089],[-107.68599,72.06548],[-108.39639,73.08953],[-107.51645,73.23598],[-106.52259,73.07601],[-105.40246,72.67259],[-104.77484,71.6984],[-104.46476,70.99297],[-102.78537,70.49776],[-100.98078,70.02432],[-101.08929,69.58447],[-102.73116,69.50402],[-102.09329,69.11962],[-102.43024,68.75282],[-104.24,68.91],[-105.96,69.18],[-107.12254,69.11922],[-109,68.78],[-111.534149,68.630059],[-113.3132,68.53554],[-113.85496,69.00744],[-115.22,69.28],[-116.10794,69.16821],[-117.34,69.96],[-116.67473,70.06655],[-115.13112,70.2373],[-113.72141,70.19237],[-112.4161,70.36638],[-114.35,70.6],[-116.48684,70.52045],[-117.9048,70.54056],[-118.43238,70.9092],[-116.11311,71.30918],[-117.65568,71.2952],[-119.40199,71.55859],[-118.56267,72.30785],[-117.86642,72.70594],[-115.18909,73.31459],[-114.16717,73.12145]]],[[[-104.5,73.42],[-105.38,72.76],[-106.94,73.46],[-106.6,73.6],[-105.26,73.64],[-104.5,73.42]]],[[[-76.34,73.102685],[-76.251404,72.826385],[-77.314438,72.855545],[-78.39167,72.876656],[-79.486252,72.742203],[-79.775833,72.802902],[-80.876099,73.333183],[-80.833885,73.693184],[-80.353058,73.75972],[-78.064438,73.651932],[-76.34,73.102685]]],[[[-86.562179,73.157447],[-85.774371,72.534126],[-84.850112,73.340278],[-82.31559,73.750951],[-80.600088,72.716544],[-80.748942,72.061907],[-78.770639,72.352173],[-77.824624,72.749617],[-75.605845,72.243678],[-74.228616,71.767144],[-74.099141,71.33084],[-72.242226,71.556925],[-71.200015,70.920013],[-68.786054,70.525024],[-67.91497,70.121948],[-66.969033,69.186087],[-68.805123,68.720198],[-66.449866,68.067163],[-64.862314,67.847539],[-63.424934,66.928473],[-61.851981,66.862121],[-62.163177,66.160251],[-63.918444,64.998669],[-65.14886,65.426033],[-66.721219,66.388041],[-68.015016,66.262726],[-68.141287,65.689789],[-67.089646,65.108455],[-65.73208,64.648406],[-65.320168,64.382737],[-64.669406,63.392927],[-65.013804,62.674185],[-66.275045,62.945099],[-68.783186,63.74567],[-67.369681,62.883966],[-66.328297,62.280075],[-66.165568,61.930897],[-68.877367,62.330149],[-71.023437,62.910708],[-72.235379,63.397836],[-71.886278,63.679989],[-73.378306,64.193963],[-74.834419,64.679076],[-74.818503,64.389093],[-77.70998,64.229542],[-78.555949,64.572906],[-77.897281,65.309192],[-76.018274,65.326969],[-73.959795,65.454765],[-74.293883,65.811771],[-73.944912,66.310578],[-72.651167,67.284576],[-72.92606,67.726926],[-73.311618,68.069437],[-74.843307,68.554627],[-76.869101,68.894736],[-76.228649,69.147769],[-77.28737,69.76954],[-78.168634,69.826488],[-78.957242,70.16688],[-79.492455,69.871808],[-81.305471,69.743185],[-84.944706,69.966634],[-87.060003,70.260001],[-88.681713,70.410741],[-89.51342,70.762038],[-88.467721,71.218186],[-89.888151,71.222552],[-90.20516,72.235074],[-89.436577,73.129464],[-88.408242,73.537889],[-85.826151,73.803816],[-86.562179,73.157447]]],[[[-100.35642,73.84389],[-99.16387,73.63339],[-97.38,73.76],[-97.12,73.47],[-98.05359,72.99052],[-96.54,72.56],[-96.72,71.66],[-98.35966,71.27285],[-99.32286,71.35639],[-100.01482,71.73827],[-102.5,72.51],[-102.48,72.83],[-100.43836,72.70588],[-101.54,73.36],[-100.35642,73.84389]]],[[[-93.196296,72.771992],[-94.269047,72.024596],[-95.409856,72.061881],[-96.033745,72.940277],[-96.018268,73.43743],[-95.495793,73.862417],[-94.503658,74.134907],[-92.420012,74.100025],[-90.509793,73.856732],[-92.003965,72.966244],[-93.196296,72.771992]]],[[[-120.46,71.383602],[-123.09219,70.90164],[-123.62,71.34],[-125.928949,71.868688],[-125.5,72.292261],[-124.80729,73.02256],[-123.94,73.68],[-124.91775,74.29275],[-121.53788,74.44893],[-120.10978,74.24135],[-117.55564,74.18577],[-116.58442,73.89607],[-115.51081,73.47519],[-116.76794,73.22292],[-119.22,72.52],[-120.46,71.82],[-120.46,71.383602]]],[[[-93.612756,74.979997],[-94.156909,74.592347],[-95.608681,74.666864],[-96.820932,74.927623],[-96.288587,75.377828],[-94.85082,75.647218],[-93.977747,75.29649],[-93.612756,74.979997]]],[[[-98.5,76.72],[-97.735585,76.25656],[-97.704415,75.74344],[-98.16,75],[-99.80874,74.89744],[-100.88366,75.05736],[-100.86292,75.64075],[-102.50209,75.5638],[-102.56552,76.3366],[-101.48973,76.30537],[-99.98349,76.64634],[-98.57699,76.58859],[-98.5,76.72]]],[[[-108.21141,76.20168],[-107.81943,75.84552],[-106.92893,76.01282],[-105.881,75.9694],[-105.70498,75.47951],[-106.31347,75.00527],[-109.7,74.85],[-112.22307,74.41696],[-113.74381,74.39427],[-113.87135,74.72029],[-111.79421,75.1625],[-116.31221,75.04343],[-117.7104,75.2222],[-116.34602,76.19903],[-115.40487,76.47887],[-112.59056,76.14134],[-110.81422,75.54919],[-109.0671,75.47321],[-110.49726,76.42982],[-109.5811,76.79417],[-108.54859,76.67832],[-108.21141,76.20168]]],[[[-94.684086,77.097878],[-93.573921,76.776296],[-91.605023,76.778518],[-90.741846,76.449597],[-90.969661,76.074013],[-89.822238,75.847774],[-89.187083,75.610166],[-87.838276,75.566189],[-86.379192,75.482421],[-84.789625,75.699204],[-82.753445,75.784315],[-81.128531,75.713983],[-80.057511,75.336849],[-79.833933,74.923127],[-80.457771,74.657304],[-81.948843,74.442459],[-83.228894,74.564028],[-86.097452,74.410032],[-88.15035,74.392307],[-89.764722,74.515555],[-92.422441,74.837758],[-92.768285,75.38682],[-92.889906,75.882655],[-93.893824,76.319244],[-95.962457,76.441381],[-97.121379,76.751078],[-96.745123,77.161389],[-94.684086,77.097878]]],[[[-116.198587,77.645287],[-116.335813,76.876962],[-117.106051,76.530032],[-118.040412,76.481172],[-119.899318,76.053213],[-121.499995,75.900019],[-122.854924,76.116543],[-122.854925,76.116543],[-121.157535,76.864508],[-119.103939,77.51222],[-117.570131,77.498319],[-116.198587,77.645287]]],[[[-93.840003,77.519997],[-94.295608,77.491343],[-96.169654,77.555111],[-96.436304,77.834629],[-94.422577,77.820005],[-93.720656,77.634331],[-93.840003,77.519997]]],[[[-110.186938,77.697015],[-112.051191,77.409229],[-113.534279,77.732207],[-112.724587,78.05105],[-111.264443,78.152956],[-109.854452,77.996325],[-110.186938,77.697015]]],[[[-109.663146,78.601973],[-110.881314,78.40692],[-112.542091,78.407902],[-112.525891,78.550555],[-111.50001,78.849994],[-110.963661,78.804441],[-109.663146,78.601973]]],[[[-95.830295,78.056941],[-97.309843,77.850597],[-98.124289,78.082857],[-98.552868,78.458105],[-98.631984,78.87193],[-97.337231,78.831984],[-96.754399,78.765813],[-95.559278,78.418315],[-95.830295,78.056941]]],[[[-100.060192,78.324754],[-99.670939,77.907545],[-101.30394,78.018985],[-102.949809,78.343229],[-105.176133,78.380332],[-104.210429,78.67742],[-105.41958,78.918336],[-105.492289,79.301594],[-103.529282,79.165349],[-100.825158,78.800462],[-100.060192,78.324754]]],[[[-87.02,79.66],[-85.81435,79.3369],[-87.18756,79.0393],[-89.03535,78.28723],[-90.80436,78.21533],[-92.87669,78.34333],[-93.95116,78.75099],[-93.93574,79.11373],[-93.14524,79.3801],[-94.974,79.37248],[-96.07614,79.70502],[-96.70972,80.15777],[-96.01644,80.60233],[-95.32345,80.90729],[-94.29843,80.97727],[-94.73542,81.20646],[-92.40984,81.25739],[-91.13289,80.72345],[-89.45,80.509322],[-87.81,80.32],[-87.02,79.66]]],[[[-68.5,83.106322],[-65.82735,83.02801],[-63.68,82.9],[-61.85,82.6286],[-61.89388,82.36165],[-64.334,81.92775],[-66.75342,81.72527],[-67.65755,81.50141],[-65.48031,81.50657],[-67.84,80.9],[-69.4697,80.61683],[-71.18,79.8],[-73.2428,79.63415],[-73.88,79.430162],[-76.90773,79.32309],[-75.52924,79.19766],[-76.22046,79.01907],[-75.39345,78.52581],[-76.34354,78.18296],[-77.88851,77.89991],[-78.36269,77.50859],[-79.75951,77.20968],[-79.61965,76.98336],[-77.91089,77.022045],[-77.88911,76.777955],[-80.56125,76.17812],[-83.17439,76.45403],[-86.11184,76.29901],[-87.6,76.42],[-89.49068,76.47239],[-89.6161,76.95213],[-87.76739,77.17833],[-88.26,77.9],[-87.65,77.970222],[-84.97634,77.53873],[-86.34,78.18],[-87.96192,78.37181],[-87.15198,78.75867],[-85.37868,78.9969],[-85.09495,79.34543],[-86.50734,79.73624],[-86.93179,80.25145],[-84.19844,80.20836],[-83.408696,80.1],[-81.84823,80.46442],[-84.1,80.58],[-87.59895,80.51627],[-89.36663,80.85569],[-90.2,81.26],[-91.36786,81.5531],[-91.58702,81.89429],[-90.1,82.085],[-88.93227,82.11751],[-86.97024,82.27961],[-85.5,82.652273],[-84.260005,82.6],[-83.18,82.32],[-82.42,82.86],[-81.1,83.02],[-79.30664,83.13056],[-76.25,83.172059],[-75.71878,83.06404],[-72.83153,83.23324],[-70.665765,83.169781],[-68.5,83.106322]]]]}},{type:"Feature",id:"CHE",properties:{name:"Switzerland"},geometry:{type:"Polygon",coordinates:[[[9.594226,47.525058],[9.632932,47.347601],[9.47997,47.10281],[9.932448,46.920728],[10.442701,46.893546],[10.363378,46.483571],[9.922837,46.314899],[9.182882,46.440215],[8.966306,46.036932],[8.489952,46.005151],[8.31663,46.163642],[7.755992,45.82449],[7.273851,45.776948],[6.843593,45.991147],[6.5001,46.429673],[6.022609,46.27299],[6.037389,46.725779],[6.768714,47.287708],[6.736571,47.541801],[7.192202,47.449766],[7.466759,47.620582],[8.317301,47.61358],[8.522612,47.830828],[9.594226,47.525058]]]}},{type:"Feature",id:"CHL",properties:{name:"Chile"},geometry:{type:"MultiPolygon",coordinates:[[[[-68.63401,-52.63637],[-68.63335,-54.8695],[-67.56244,-54.87001],[-66.95992,-54.89681],[-67.29103,-55.30124],[-68.14863,-55.61183],[-68.639991,-55.580018],[-69.2321,-55.49906],[-69.95809,-55.19843],[-71.00568,-55.05383],[-72.2639,-54.49514],[-73.2852,-53.95752],[-74.66253,-52.83749],[-73.8381,-53.04743],[-72.43418,-53.7154],[-71.10773,-54.07433],[-70.59178,-53.61583],[-70.26748,-52.93123],[-69.34565,-52.5183],[-68.63401,-52.63637]]],[[[-68.219913,-21.494347],[-67.82818,-22.872919],[-67.106674,-22.735925],[-66.985234,-22.986349],[-67.328443,-24.025303],[-68.417653,-24.518555],[-68.386001,-26.185016],[-68.5948,-26.506909],[-68.295542,-26.89934],[-69.001235,-27.521214],[-69.65613,-28.459141],[-70.01355,-29.367923],[-69.919008,-30.336339],[-70.535069,-31.36501],[-70.074399,-33.09121],[-69.814777,-33.273886],[-69.817309,-34.193571],[-70.388049,-35.169688],[-70.364769,-36.005089],[-71.121881,-36.658124],[-71.118625,-37.576827],[-70.814664,-38.552995],[-71.413517,-38.916022],[-71.680761,-39.808164],[-71.915734,-40.832339],[-71.746804,-42.051386],[-72.148898,-42.254888],[-71.915424,-43.408565],[-71.464056,-43.787611],[-71.793623,-44.207172],[-71.329801,-44.407522],[-71.222779,-44.784243],[-71.659316,-44.973689],[-71.552009,-45.560733],[-71.917258,-46.884838],[-72.447355,-47.738533],[-72.331161,-48.244238],[-72.648247,-48.878618],[-73.415436,-49.318436],[-73.328051,-50.378785],[-72.975747,-50.74145],[-72.309974,-50.67701],[-72.329404,-51.425956],[-71.914804,-52.009022],[-69.498362,-52.142761],[-68.571545,-52.299444],[-69.461284,-52.291951],[-69.94278,-52.537931],[-70.845102,-52.899201],[-71.006332,-53.833252],[-71.429795,-53.856455],[-72.557943,-53.53141],[-73.702757,-52.835069],[-73.702757,-52.83507],[-74.946763,-52.262754],[-75.260026,-51.629355],[-74.976632,-51.043396],[-75.479754,-50.378372],[-75.608015,-48.673773],[-75.18277,-47.711919],[-74.126581,-46.939253],[-75.644395,-46.647643],[-74.692154,-45.763976],[-74.351709,-44.103044],[-73.240356,-44.454961],[-72.717804,-42.383356],[-73.3889,-42.117532],[-73.701336,-43.365776],[-74.331943,-43.224958],[-74.017957,-41.794813],[-73.677099,-39.942213],[-73.217593,-39.258689],[-73.505559,-38.282883],[-73.588061,-37.156285],[-73.166717,-37.12378],[-72.553137,-35.50884],[-71.861732,-33.909093],[-71.43845,-32.418899],[-71.668721,-30.920645],[-71.370083,-30.095682],[-71.489894,-28.861442],[-70.905124,-27.64038],[-70.724954,-25.705924],[-70.403966,-23.628997],[-70.091246,-21.393319],[-70.16442,-19.756468],[-70.372572,-18.347975],[-69.858444,-18.092694],[-69.590424,-17.580012],[-69.100247,-18.260125],[-68.966818,-18.981683],[-68.442225,-19.405068],[-68.757167,-20.372658],[-68.219913,-21.494347]]]]}},{type:"Feature",id:"CHN",properties:{name:"China"},geometry:{type:"MultiPolygon",coordinates:[[[[110.339188,18.678395],[109.47521,18.197701],[108.655208,18.507682],[108.626217,19.367888],[109.119056,19.821039],[110.211599,20.101254],[110.786551,20.077534],[111.010051,19.69593],[110.570647,19.255879],[110.339188,18.678395]]],[[[127.657407,49.76027],[129.397818,49.4406],[130.582293,48.729687],[130.987282,47.790132],[132.506672,47.78897],[133.373596,48.183442],[135.026311,48.47823],[134.500814,47.57844],[134.112362,47.212467],[133.769644,46.116927],[133.097127,45.144066],[131.883454,45.321162],[131.025212,44.967953],[131.288555,44.11152],[131.144688,42.92999],[130.633866,42.903015],[130.640016,42.395009],[129.994267,42.985387],[129.596669,42.424982],[128.052215,41.994285],[128.208433,41.466772],[127.343783,41.503152],[126.869083,41.816569],[126.182045,41.107336],[125.079942,40.569824],[124.265625,39.928493],[122.86757,39.637788],[122.131388,39.170452],[121.054554,38.897471],[121.585995,39.360854],[121.376757,39.750261],[122.168595,40.422443],[121.640359,40.94639],[120.768629,40.593388],[119.639602,39.898056],[119.023464,39.252333],[118.042749,39.204274],[117.532702,38.737636],[118.059699,38.061476],[118.87815,37.897325],[118.911636,37.448464],[119.702802,37.156389],[120.823457,37.870428],[121.711259,37.481123],[122.357937,37.454484],[122.519995,36.930614],[121.104164,36.651329],[120.637009,36.11144],[119.664562,35.609791],[119.151208,34.909859],[120.227525,34.360332],[120.620369,33.376723],[121.229014,32.460319],[121.908146,31.692174],[121.891919,30.949352],[121.264257,30.676267],[121.503519,30.142915],[122.092114,29.83252],[121.938428,29.018022],[121.684439,28.225513],[121.125661,28.135673],[120.395473,27.053207],[119.585497,25.740781],[118.656871,24.547391],[117.281606,23.624501],[115.890735,22.782873],[114.763827,22.668074],[114.152547,22.22376],[113.80678,22.54834],[113.241078,22.051367],[111.843592,21.550494],[110.785466,21.397144],[110.444039,20.341033],[109.889861,20.282457],[109.627655,21.008227],[109.864488,21.395051],[108.522813,21.715212],[108.05018,21.55238],[107.04342,21.811899],[106.567273,22.218205],[106.725403,22.794268],[105.811247,22.976892],[105.329209,23.352063],[104.476858,22.81915],[103.504515,22.703757],[102.706992,22.708795],[102.170436,22.464753],[101.652018,22.318199],[101.80312,21.174367],[101.270026,21.201652],[101.180005,21.436573],[101.150033,21.849984],[100.416538,21.558839],[99.983489,21.742937],[99.240899,22.118314],[99.531992,22.949039],[98.898749,23.142722],[98.660262,24.063286],[97.60472,23.897405],[97.724609,25.083637],[98.671838,25.918703],[98.712094,26.743536],[98.68269,27.508812],[98.246231,27.747221],[97.911988,28.335945],[97.327114,28.261583],[96.248833,28.411031],[96.586591,28.83098],[96.117679,29.452802],[95.404802,29.031717],[94.56599,29.277438],[93.413348,28.640629],[92.503119,27.896876],[91.696657,27.771742],[91.258854,28.040614],[90.730514,28.064954],[90.015829,28.296439],[89.47581,28.042759],[88.814248,27.299316],[88.730326,28.086865],[88.120441,27.876542],[86.954517,27.974262],[85.82332,28.203576],[85.011638,28.642774],[84.23458,28.839894],[83.898993,29.320226],[83.337115,29.463732],[82.327513,30.115268],[81.525804,30.422717],[81.111256,30.183481],[79.721367,30.882715],[78.738894,31.515906],[78.458446,32.618164],[79.176129,32.48378],[79.208892,32.994395],[78.811086,33.506198],[78.912269,34.321936],[77.837451,35.49401],[76.192848,35.898403],[75.896897,36.666806],[75.158028,37.133031],[74.980002,37.41999],[74.829986,37.990007],[74.864816,38.378846],[74.257514,38.606507],[73.928852,38.505815],[73.675379,39.431237],[73.960013,39.660008],[73.822244,39.893973],[74.776862,40.366425],[75.467828,40.562072],[76.526368,40.427946],[76.904484,41.066486],[78.187197,41.185316],[78.543661,41.582243],[80.11943,42.123941],[80.25999,42.349999],[80.18015,42.920068],[80.866206,43.180362],[79.966106,44.917517],[81.947071,45.317027],[82.458926,45.53965],[83.180484,47.330031],[85.16429,47.000956],[85.720484,47.452969],[85.768233,48.455751],[86.598776,48.549182],[87.35997,49.214981],[87.751264,49.297198],[88.013832,48.599463],[88.854298,48.069082],[90.280826,47.693549],[90.970809,46.888146],[90.585768,45.719716],[90.94554,45.286073],[92.133891,45.115076],[93.480734,44.975472],[94.688929,44.352332],[95.306875,44.241331],[95.762455,43.319449],[96.349396,42.725635],[97.451757,42.74889],[99.515817,42.524691],[100.845866,42.663804],[101.83304,42.514873],[103.312278,41.907468],[104.522282,41.908347],[104.964994,41.59741],[106.129316,42.134328],[107.744773,42.481516],[109.243596,42.519446],[110.412103,42.871234],[111.129682,43.406834],[111.829588,43.743118],[111.667737,44.073176],[111.348377,44.457442],[111.873306,45.102079],[112.436062,45.011646],[113.463907,44.808893],[114.460332,45.339817],[115.985096,45.727235],[116.717868,46.388202],[117.421701,46.672733],[118.874326,46.805412],[119.66327,46.69268],[119.772824,47.048059],[118.866574,47.74706],[118.064143,48.06673],[117.295507,47.697709],[116.308953,47.85341],[115.742837,47.726545],[115.485282,48.135383],[116.191802,49.134598],[116.678801,49.888531],[117.879244,49.510983],[119.288461,50.142883],[119.279366,50.582908],[120.18205,51.643566],[120.738191,51.964115],[120.725789,52.516226],[120.177089,52.753886],[121.003085,53.251401],[122.245748,53.431726],[123.571507,53.458804],[125.068211,53.161045],[125.946349,52.792799],[126.564399,51.784255],[126.939157,51.353894],[127.287456,50.739797],[127.657407,49.76027]]]]}},{type:"Feature",id:"CIV",properties:{name:"Ivory Coast"},geometry:{type:"Polygon",coordinates:[[[-2.856125,4.994476],[-3.311084,4.984296],[-4.00882,5.179813],[-4.649917,5.168264],[-5.834496,4.993701],[-6.528769,4.705088],[-7.518941,4.338288],[-7.712159,4.364566],[-7.635368,5.188159],[-7.539715,5.313345],[-7.570153,5.707352],[-7.993693,6.12619],[-8.311348,6.193033],[-8.60288,6.467564],[-8.385452,6.911801],[-8.485446,7.395208],[-8.439298,7.686043],[-8.280703,7.68718],[-8.221792,8.123329],[-8.299049,8.316444],[-8.203499,8.455453],[-7.8321,8.575704],[-8.079114,9.376224],[-8.309616,9.789532],[-8.229337,10.12902],[-8.029944,10.206535],[-7.89959,10.297382],[-7.622759,10.147236],[-6.850507,10.138994],[-6.666461,10.430811],[-6.493965,10.411303],[-6.205223,10.524061],[-6.050452,10.096361],[-5.816926,10.222555],[-5.404342,10.370737],[-4.954653,10.152714],[-4.779884,9.821985],[-4.330247,9.610835],[-3.980449,9.862344],[-3.511899,9.900326],[-2.827496,9.642461],[-2.56219,8.219628],[-2.983585,7.379705],[-3.24437,6.250472],[-2.810701,5.389051],[-2.856125,4.994476]]]}},{type:"Feature",id:"CMR",properties:{name:"Cameroon"},geometry:{type:"Polygon",coordinates:[[[13.075822,2.267097],[12.951334,2.321616],[12.35938,2.192812],[11.751665,2.326758],[11.276449,2.261051],[9.649158,2.283866],[9.795196,3.073404],[9.404367,3.734527],[8.948116,3.904129],[8.744924,4.352215],[8.488816,4.495617],[8.500288,4.771983],[8.757533,5.479666],[9.233163,6.444491],[9.522706,6.453482],[10.118277,7.03877],[10.497375,7.055358],[11.058788,6.644427],[11.745774,6.981383],[11.839309,7.397042],[12.063946,7.799808],[12.218872,8.305824],[12.753672,8.717763],[12.955468,9.417772],[13.1676,9.640626],[13.308676,10.160362],[13.57295,10.798566],[14.415379,11.572369],[14.468192,11.904752],[14.577178,12.085361],[14.181336,12.483657],[14.213531,12.802035],[14.495787,12.859396],[14.893386,12.219048],[14.960152,11.555574],[14.923565,10.891325],[15.467873,9.982337],[14.909354,9.992129],[14.627201,9.920919],[14.171466,10.021378],[13.954218,9.549495],[14.544467,8.965861],[14.979996,8.796104],[15.120866,8.38215],[15.436092,7.692812],[15.27946,7.421925],[14.776545,6.408498],[14.53656,6.226959],[14.459407,5.451761],[14.558936,5.030598],[14.478372,4.732605],[14.950953,4.210389],[15.03622,3.851367],[15.405396,3.335301],[15.862732,3.013537],[15.907381,2.557389],[16.012852,2.26764],[15.940919,1.727673],[15.146342,1.964015],[14.337813,2.227875],[13.075822,2.267097]]]}},{type:"Feature",id:"COM",properties:{name:"Comoros"},geometry:{type:"MultiPolygon",coordinates:[[[[43.84294681100019,-12.373467705999843],[43.81934655000006,-12.373467705999843],[43.751475457000055,-12.35995859199987],[43.681407097000175,-12.358086846999896],[43.665212436000076,-12.352471612999906],[43.66081790500007,-12.34498463299984],[43.66179446700002,-12.327732028999918],[43.65894616000011,-12.318291924999826],[43.6502384770001,-12.310235283999873],[43.64112389400012,-12.30641041499986],[43.633962436000076,-12.30103932099982],[43.63103274800008,-12.287774346999882],[43.62989342500012,-12.251722914999917],[43.63575280000006,-12.236911716999856],[43.652110222000175,-12.242608330999829],[43.666351759000094,-12.250095309999892],[43.708343946000156,-12.257907809999892],[43.72722415500019,-12.263604424999869],[43.77930748800023,-12.297621351999808],[43.78874759200008,-12.30803801899988],[43.797048373000024,-12.311618747999859],[43.85010826900023,-12.346123955999872],[43.86158287900011,-12.363376559999878],[43.85816491000017,-12.371351820999834],[43.84294681100019,-12.373467705999843]]],[[[44.484141472,-12.085544528999876],[44.52637780000006,-12.21884530999992],[44.52906334700006,-12.232842705999886],[44.528493686000076,-12.354750257999882],[44.522959832000225,-12.372816664999888],[44.511485222000175,-12.380303643999866],[44.50269616000011,-12.376722914999888],[44.49244225400011,-12.368259372999859],[44.484141472,-12.358005466999913],[44.48072350400011,-12.349297783999845],[44.47877037900017,-12.336846612999821],[44.473317905000016,-12.329766533999859],[44.39958743600019,-12.279961846999882],[44.39136803500011,-12.26702239399988],[44.38526451900012,-12.251722914999917],[44.37012780000012,-12.244317315999837],[44.330577019000174,-12.236260674999897],[44.26840254000015,-12.20501067499984],[44.26002037900011,-12.198418877999856],[44.219899936000076,-12.174981377999885],[44.2063908210001,-12.160577080999914],[44.22250410200016,-12.160088799999826],[44.23585045700011,-12.163344007999868],[44.2615666020001,-12.174248955999857],[44.27898196700019,-12.178643487999835],[44.31128991000011,-12.183282158999859],[44.323090040000096,-12.187920830999886],[44.32837975400017,-12.18377044099985],[44.33838951900023,-12.178643487999835],[44.343516472000175,-12.174248955999857],[44.37354576900012,-12.18035247199984],[44.40007571700008,-12.156508070999863],[44.41529381600017,-12.119317315999865],[44.41179446700008,-12.085544528999876],[44.42156009200019,-12.08269622199984],[44.435313347,-12.07480234199987],[44.44605553500011,-12.071872653999847],[44.4510197270001,-12.069756768999838],[44.45533287900011,-12.066582940999865],[44.46013431100019,-12.06414153399983],[44.46705162900017,-12.064385674999869],[44.472829623000024,-12.068536065999822],[44.48072350400011,-12.082452080999886],[44.484141472,-12.085544528999876]]],[[[43.46314537900011,-11.930922132999868],[43.44955488400015,-11.932875257999811],[43.437673373000194,-11.931573174999912],[43.43238366000011,-11.924086195999848],[43.425954623000194,-11.911553643999852],[43.36996504000015,-11.86060963299984],[43.35515384200019,-11.854587497999916],[43.312266472,-11.852146091999884],[43.30176842500006,-11.849541924999897],[43.290293816000116,-11.843357028999918],[43.271006707000055,-11.82822030999992],[43.262868686000076,-11.818047783999887],[43.260101759000094,-11.809177341999842],[43.25879967500012,-11.800469658999859],[43.25424238400015,-11.790704033999901],[43.22877037900017,-11.766289971999868],[43.21778405000006,-11.750258070999877],[43.21322675900015,-11.725762627999842],[43.21599368600019,-11.715997002999899],[43.2225041020001,-11.703871351999808],[43.244151238000114,-11.672946872999859],[43.24439537900011,-11.662286065999837],[43.2415470710001,-11.651543877999828],[43.240570509000094,-11.639825127999828],[43.25440514400012,-11.463067315999837],[43.252289259000094,-11.45134856599985],[43.24683678500017,-11.440606377999842],[43.25660241000011,-11.423272393999852],[43.26612389400012,-11.398695570999834],[43.27654056100019,-11.379571221999853],[43.28834069100017,-11.379164320999848],[43.33082116000011,-11.365004164999917],[43.35572350400017,-11.361260674999897],[43.37403405000012,-11.368584893999895],[43.38599694100017,-11.384047132999825],[43.394867384000094,-11.400160414999888],[43.39942467500006,-11.418389580999872],[43.377126498000194,-11.605075778999876],[43.386078321000156,-11.645603122999887],[43.43051191500015,-11.708184502999899],[43.4466251960001,-11.749118747999844],[43.4471134770001,-11.759372653999861],[43.44556725400017,-11.780531507999868],[43.4466251960001,-11.790704033999901],[43.45118248800006,-11.798028252999828],[43.45777428500017,-11.804375908999845],[43.46387780000006,-11.811618747999873],[43.466563347,-11.821709893999838],[43.46908613400015,-11.83171965899983],[43.47535241000017,-11.843031507999811],[43.49878991000017,-11.873630466999913],[43.49830162900017,-11.882012627999885],[43.48698978000019,-11.899834893999852],[43.483734571000156,-11.909926039999917],[43.482595248000194,-11.917168877999842],[43.47999108200011,-11.92278411299985],[43.472666863000114,-11.927911065999865],[43.46314537900011,-11.930922132999868]]]]}},{type:"Feature",id:"COD",properties:{name:"Democratic Republic of the Congo"},geometry:{type:"Polygon",coordinates:[[[30.83386,3.509166],[30.773347,2.339883],[31.174149,2.204465],[30.85267,1.849396],[30.468508,1.583805],[30.086154,1.062313],[29.875779,.59738],[29.819503,-.20531],[29.587838,-.587406],[29.579466,-1.341313],[29.291887,-1.620056],[29.254835,-2.21511],[29.117479,-2.292211],[29.024926,-2.839258],[29.276384,-3.293907],[29.339998,-4.499983],[29.519987,-5.419979],[29.419993,-5.939999],[29.620032,-6.520015],[30.199997,-7.079981],[30.740015,-8.340007],[30.346086,-8.238257],[29.002912,-8.407032],[28.734867,-8.526559],[28.449871,-9.164918],[28.673682,-9.605925],[28.49607,-10.789884],[28.372253,-11.793647],[28.642417,-11.971569],[29.341548,-12.360744],[29.616001,-12.178895],[29.699614,-13.257227],[28.934286,-13.248958],[28.523562,-12.698604],[28.155109,-12.272481],[27.388799,-12.132747],[27.16442,-11.608748],[26.553088,-11.92444],[25.75231,-11.784965],[25.418118,-11.330936],[24.78317,-11.238694],[24.314516,-11.262826],[24.257155,-10.951993],[23.912215,-10.926826],[23.456791,-10.867863],[22.837345,-11.017622],[22.402798,-10.993075],[22.155268,-11.084801],[22.208753,-9.894796],[21.875182,-9.523708],[21.801801,-8.908707],[21.949131,-8.305901],[21.746456,-7.920085],[21.728111,-7.290872],[20.514748,-7.299606],[20.601823,-6.939318],[20.091622,-6.94309],[20.037723,-7.116361],[19.417502,-7.155429],[19.166613,-7.738184],[19.016752,-7.988246],[18.464176,-7.847014],[18.134222,-7.987678],[17.47297,-8.068551],[17.089996,-7.545689],[16.860191,-7.222298],[16.57318,-6.622645],[16.326528,-5.87747],[13.375597,-5.864241],[13.024869,-5.984389],[12.735171,-5.965682],[12.322432,-6.100092],[12.182337,-5.789931],[12.436688,-5.684304],[12.468004,-5.248362],[12.631612,-4.991271],[12.995517,-4.781103],[13.25824,-4.882957],[13.600235,-4.500138],[14.144956,-4.510009],[14.209035,-4.793092],[14.582604,-4.970239],[15.170992,-4.343507],[15.75354,-3.855165],[16.00629,-3.535133],[15.972803,-2.712392],[16.407092,-1.740927],[16.865307,-1.225816],[17.523716,-.74383],[17.638645,-.424832],[17.663553,-.058084],[17.82654,.288923],[17.774192,.855659],[17.898835,1.741832],[18.094276,2.365722],[18.393792,2.900443],[18.453065,3.504386],[18.542982,4.201785],[18.932312,4.709506],[19.467784,5.031528],[20.290679,4.691678],[20.927591,4.322786],[21.659123,4.224342],[22.405124,4.02916],[22.704124,4.633051],[22.84148,4.710126],[23.297214,4.609693],[24.410531,5.108784],[24.805029,4.897247],[25.128833,4.927245],[25.278798,5.170408],[25.650455,5.256088],[26.402761,5.150875],[27.044065,5.127853],[27.374226,5.233944],[27.979977,4.408413],[28.428994,4.287155],[28.696678,4.455077],[29.159078,4.389267],[29.715995,4.600805],[29.9535,4.173699],[30.83386,3.509166]]]}},{type:"Feature",id:"COG",properties:{name:"Republic of the Congo"},geometry:{type:"Polygon",coordinates:[[[12.995517,-4.781103],[12.62076,-4.438023],[12.318608,-4.60623],[11.914963,-5.037987],[11.093773,-3.978827],[11.855122,-3.426871],[11.478039,-2.765619],[11.820964,-2.514161],[12.495703,-2.391688],[12.575284,-1.948511],[13.109619,-2.42874],[13.992407,-2.470805],[14.29921,-1.998276],[14.425456,-1.333407],[14.316418,-.552627],[13.843321,.038758],[14.276266,1.19693],[14.026669,1.395677],[13.282631,1.314184],[13.003114,1.830896],[13.075822,2.267097],[14.337813,2.227875],[15.146342,1.964015],[15.940919,1.727673],[16.012852,2.26764],[16.537058,3.198255],[17.133042,3.728197],[17.8099,3.560196],[18.453065,3.504386],[18.393792,2.900443],[18.094276,2.365722],[17.898835,1.741832],[17.774192,.855659],[17.82654,.288923],[17.663553,-.058084],[17.638645,-.424832],[17.523716,-.74383],[16.865307,-1.225816],[16.407092,-1.740927],[15.972803,-2.712392],[16.00629,-3.535133],[15.75354,-3.855165],[15.170992,-4.343507],[14.582604,-4.970239],[14.209035,-4.793092],[14.144956,-4.510009],[13.600235,-4.500138],[13.25824,-4.882957],[12.995517,-4.781103]]]}},{type:"Feature",id:"COL",properties:{name:"Colombia"},geometry:{type:"Polygon",coordinates:[[[-75.373223,-.152032],[-75.801466,.084801],[-76.292314,.416047],[-76.57638,.256936],[-77.424984,.395687],[-77.668613,.825893],[-77.855061,.809925],[-78.855259,1.380924],[-78.990935,1.69137],[-78.617831,1.766404],[-78.662118,2.267355],[-78.42761,2.629556],[-77.931543,2.696606],[-77.510431,3.325017],[-77.12769,3.849636],[-77.496272,4.087606],[-77.307601,4.667984],[-77.533221,5.582812],[-77.318815,5.845354],[-77.476661,6.691116],[-77.881571,7.223771],[-77.753414,7.70984],[-77.431108,7.638061],[-77.242566,7.935278],[-77.474723,8.524286],[-77.353361,8.670505],[-76.836674,8.638749],[-76.086384,9.336821],[-75.6746,9.443248],[-75.664704,9.774003],[-75.480426,10.61899],[-74.906895,11.083045],[-74.276753,11.102036],[-74.197223,11.310473],[-73.414764,11.227015],[-72.627835,11.731972],[-72.238195,11.95555],[-71.75409,12.437303],[-71.399822,12.376041],[-71.137461,12.112982],[-71.331584,11.776284],[-71.973922,11.608672],[-72.227575,11.108702],[-72.614658,10.821975],[-72.905286,10.450344],[-73.027604,9.73677],[-73.304952,9.152],[-72.78873,9.085027],[-72.660495,8.625288],[-72.439862,8.405275],[-72.360901,8.002638],[-72.479679,7.632506],[-72.444487,7.423785],[-72.198352,7.340431],[-71.960176,6.991615],[-70.674234,7.087785],[-70.093313,6.960376],[-69.38948,6.099861],[-68.985319,6.206805],[-68.265052,6.153268],[-67.695087,6.267318],[-67.34144,6.095468],[-67.521532,5.55687],[-67.744697,5.221129],[-67.823012,4.503937],[-67.621836,3.839482],[-67.337564,3.542342],[-67.303173,3.318454],[-67.809938,2.820655],[-67.447092,2.600281],[-67.181294,2.250638],[-66.876326,1.253361],[-67.065048,1.130112],[-67.259998,1.719999],[-67.53781,2.037163],[-67.868565,1.692455],[-69.816973,1.714805],[-69.804597,1.089081],[-69.218638,.985677],[-69.252434,.602651],[-69.452396,.706159],[-70.015566,.541414],[-70.020656,-.185156],[-69.577065,-.549992],[-69.420486,-1.122619],[-69.444102,-1.556287],[-69.893635,-4.298187],[-70.394044,-3.766591],[-70.692682,-3.742872],[-70.047709,-2.725156],[-70.813476,-2.256865],[-71.413646,-2.342802],[-71.774761,-2.16979],[-72.325787,-2.434218],[-73.070392,-2.308954],[-73.659504,-1.260491],[-74.122395,-1.002833],[-74.441601,-.53082],[-75.106625,-.057205],[-75.373223,-.152032]]]}},{type:"Feature",id:"COK",properties:{name:"Cook Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-157.9151098299999,-21.937676690999865],[-157.92772376199994,-21.93889739399988],[-157.94245358,-21.93718840899996],[-157.95287024599992,-21.932305597],[-157.96104895699995,-21.92392343500002],[-157.96869869699987,-21.912286065999936],[-157.96406002499992,-21.900485934999963],[-157.9551488919999,-21.888848565999865],[-157.94444739499988,-21.880466403999904],[-157.93455969999985,-21.877536716999884],[-157.92133541599992,-21.88225676899998],[-157.91034908799986,-21.8916968729999],[-157.88988196499992,-21.91529713299994],[-157.88707434799986,-21.926364841999884],[-157.8985082669999,-21.933689059999978],[-157.9151098299999,-21.937676690999865]]],[[[-159.73603268099995,-21.236993097],[-159.73786373599995,-21.246270440999965],[-159.7432348299999,-21.254327080999985],[-159.7708634109999,-21.25017669099995],[-159.77428137899992,-21.250909112999977],[-159.7932836579999,-21.241631768999852],[-159.8330785799999,-21.24456145599987],[-159.84626217399995,-21.233819268999937],[-159.83881588399987,-21.22633228999989],[-159.83283443899995,-21.207614841999913],[-159.83141028599988,-21.195570570999905],[-159.82343502499992,-21.18906015399999],[-159.79784094999985,-21.18613046699997],[-159.7784317699999,-21.18694426899998],[-159.75841223899988,-21.19182708099987],[-159.7427465489999,-21.201592706],[-159.7363988919999,-21.216729425],[-159.73603268099995,-21.236993097]]],[[[-157.31798255099986,-20.171807549999926],[-157.32856197799993,-20.179131768999838],[-157.3403214179999,-20.17571379999991],[-157.34935462099992,-20.16073984199997],[-157.34898841099988,-20.143324476999908],[-157.3385717439999,-20.137383721999896],[-157.32441158799986,-20.141696872999987],[-157.31281490799995,-20.155205987999963],[-157.31798255099986,-20.171807549999926]]],[[[-158.08177649599992,-20.012790623000015],[-158.0965470039999,-20.019707940999837],[-158.11510169199988,-20.015720309999935],[-158.12995358,-20.000746351999823],[-158.13520260299993,-19.976495049999926],[-158.12031002499987,-19.97283294099988],[-158.0973608059999,-19.981540622999944],[-158.07831783799992,-19.99423593499992],[-158.08177649599992,-20.012790623000015]]],[[[-158.27330481699988,-19.826267184999892],[-158.2682999339999,-19.832614842000012],[-158.2810766269999,-19.821954033999972],[-158.27635657499985,-19.82350025799984],[-158.27330481699988,-19.826267184999892]]],[[[-158.29377193899995,-19.816582940999922],[-158.29735266799992,-19.81731536299995],[-158.29596920499992,-19.814548434999907],[-158.28766842399995,-19.810642184999907],[-158.29377193899995,-19.816582940999922]]],[[[-157.7082413399999,-19.841241143999838],[-157.72166907499994,-19.855889580999843],[-157.72166907499994,-19.8422177059999],[-157.72687740799992,-19.83228932099989],[-157.73371334499996,-19.825941664999874],[-157.73961341099988,-19.81845468499999],[-157.7421361969999,-19.804620049999983],[-157.73753821499986,-19.796563408999873],[-157.71556555899994,-19.773207289999874],[-157.7079972,-19.76718515399996],[-157.70995032499994,-19.788344007999953],[-157.70722408799986,-19.81585051899999],[-157.7082413399999,-19.841241143999838]]],[[[-158.93797766799995,-19.25709400799981],[-158.9321996739999,-19.264255466999856],[-158.91808020699995,-19.26116301899995],[-158.91889400899996,-19.26409270599997],[-158.92035885299993,-19.266045830999843],[-158.92516028599994,-19.2692196589999],[-158.93744869699987,-19.264255466999856],[-158.9501847,-19.254489841999913],[-158.9555557929999,-19.245293877999927],[-158.94566809799989,-19.24212004999987],[-158.94066321499992,-19.247328382999953],[-158.93797766799995,-19.25709400799981]]],[[[-159.7726130849999,-18.82895273199989],[-159.76199296799984,-18.837253513999954],[-159.76138261599988,-18.845391533999887],[-159.76496334499996,-18.84172942499984],[-159.7666316399999,-18.83521900799984],[-159.76968339799987,-18.834323825999846],[-159.77924557199995,-18.85287851399994],[-159.7796117829999,-18.85637786299985],[-159.77647864499988,-18.878187757999896],[-159.78286699099993,-18.887953382999925],[-159.79360917899993,-18.887465101999936],[-159.80081132699988,-18.878187757999896],[-159.80231686099992,-18.865817966999856],[-159.79788164,-18.84653085699992],[-159.79385331899988,-18.839939059999935],[-159.78510494699992,-18.830824476999865],[-159.7726130849999,-18.82895273199989]]],[[[-165.81403561099987,-10.889092705999872],[-165.81871497299989,-10.891534112999892],[-165.8220922519999,-10.889092705999872],[-165.82453365799995,-10.881768487999864],[-165.81586666599995,-10.880303643999895],[-165.8117569649999,-10.88014088299984],[-165.80768795499995,-10.881280205999872],[-165.81403561099987,-10.889092705999872]]],[[[-160.9799291659999,-10.380954684999864],[-160.93809973899988,-10.422784112999878],[-160.98619544199994,-10.382094007999811],[-160.98623613199993,-10.382094007999811],[-160.99433346299986,-10.374688408999901],[-160.9964086579999,-10.371514580999843],[-160.9799291659999,-10.380954684999864]]],[[[-161.07555091099988,-10.036390882999811],[-161.08726966099988,-10.044610283999901],[-161.0880020819999,-10.035088799999897],[-161.07005774599992,-10.027439059999878],[-161.07555091099988,-10.036390882999811]]],[[[-157.94074459499993,-8.98072682099982],[-157.96186275899993,-8.98072682099982],[-157.9786270819999,-8.976006768999895],[-157.9971410799999,-8.964613539999931],[-158.00829016799992,-8.952894789999945],[-158.00287838399996,-8.94670989399988],[-157.94074459499993,-8.97454192499984],[-157.94074459499993,-8.98072682099982]]]]}},{type:"Feature",id:"CRI",properties:{name:"Costa Rica"},geometry:{type:"Polygon",coordinates:[[[-82.965783,8.225028],[-83.508437,8.446927],[-83.711474,8.656836],[-83.596313,8.830443],[-83.632642,9.051386],[-83.909886,9.290803],[-84.303402,9.487354],[-84.647644,9.615537],[-84.713351,9.908052],[-84.97566,10.086723],[-84.911375,9.795992],[-85.110923,9.55704],[-85.339488,9.834542],[-85.660787,9.933347],[-85.797445,10.134886],[-85.791709,10.439337],[-85.659314,10.754331],[-85.941725,10.895278],[-85.71254,11.088445],[-85.561852,11.217119],[-84.903003,10.952303],[-84.673069,11.082657],[-84.355931,10.999226],[-84.190179,10.79345],[-83.895054,10.726839],[-83.655612,10.938764],[-83.40232,10.395438],[-83.015677,9.992982],[-82.546196,9.566135],[-82.932891,9.476812],[-82.927155,9.07433],[-82.719183,8.925709],[-82.868657,8.807266],[-82.829771,8.626295],[-82.913176,8.423517],[-82.965783,8.225028]]]}},{type:"Feature",id:"CUB",properties:{name:"Cuba"},geometry:{type:"Polygon",coordinates:[[[-82.268151,23.188611],[-81.404457,23.117271],[-80.618769,23.10598],[-79.679524,22.765303],[-79.281486,22.399202],[-78.347434,22.512166],[-77.993296,22.277194],[-77.146422,21.657851],[-76.523825,21.20682],[-76.19462,21.220565],[-75.598222,21.016624],[-75.67106,20.735091],[-74.933896,20.693905],[-74.178025,20.284628],[-74.296648,20.050379],[-74.961595,19.923435],[-75.63468,19.873774],[-76.323656,19.952891],[-77.755481,19.855481],[-77.085108,20.413354],[-77.492655,20.673105],[-78.137292,20.739949],[-78.482827,21.028613],[-78.719867,21.598114],[-79.285,21.559175],[-80.217475,21.827324],[-80.517535,22.037079],[-81.820943,22.192057],[-82.169992,22.387109],[-81.795002,22.636965],[-82.775898,22.68815],[-83.494459,22.168518],[-83.9088,22.154565],[-84.052151,21.910575],[-84.54703,21.801228],[-84.974911,21.896028],[-84.447062,22.20495],[-84.230357,22.565755],[-83.77824,22.788118],[-83.267548,22.983042],[-82.510436,23.078747],[-82.268151,23.188611]]]}},{type:"Feature",id:"CUW",properties:{name:"Cura\xE7ao"},geometry:{type:"MultiPolygon",coordinates:[[[[-68.78075110599988,12.097805080000072],[-68.74522864499991,12.06224192900001],[-68.73973548099988,12.053045966000127],[-68.74864661399991,12.047023830000029],[-68.76984615799992,12.04291413000007],[-68.79474850199995,12.041327216000042],[-68.81480872299991,12.04315827000002],[-68.84117591099991,12.055487372000059],[-68.89342200399992,12.090521552000055],[-68.94473222599993,12.105617580000057],[-68.97777258999989,12.124579169000071],[-69.00743567599991,12.148179429000024],[-69.02025305899986,12.16974518400012],[-69.02721106699994,12.190090236000103],[-69.04360917899996,12.196682033000087],[-69.0628962879999,12.198431708000086],[-69.07860266799995,12.204250393000038],[-69.09190833199997,12.219875393000024],[-69.12267005099994,12.26902903900013],[-69.13438880099994,12.27732982000012],[-69.14810136599996,12.284409898000078],[-69.15953528599994,12.29336172100011],[-69.16429602799991,12.30695221600007],[-69.16197669199997,12.342840887000065],[-69.16380774599995,12.361883856000063],[-69.17174231699991,12.37889232000012],[-69.16612708199989,12.387844143000052],[-69.16120357999995,12.391506252000099],[-69.15623938699989,12.390611070000105],[-69.15062415299988,12.38572825700004],[-69.10777747299991,12.367824611000074],[-69.08958899599992,12.356878973000022],[-69.07152258999989,12.3413760440001],[-69.06041419199997,12.322577216000056],[-69.04995683499988,12.276109117000104],[-69.04076087099992,12.256048895000049],[-69.00401770699992,12.221665757000011],[-68.96129309799991,12.201361395000106],[-68.83527584499987,12.171047268000024],[-68.82079016799992,12.16233958500004],[-68.81480872299991,12.149603583000086],[-68.8118383449999,12.129339911000073],[-68.8040258449999,12.11701080900012],[-68.78075110599988,12.097805080000072]]]]}},{type:"Feature",id:"CYP",properties:{name:"Northern Cyprus"},geometry:{type:"Polygon",coordinates:[[[32.73178,35.140026],[32.802474,35.145504],[32.946961,35.386703],[33.667227,35.373216],[34.576474,35.671596],[33.900804,35.245756],[33.973617,35.058506],[33.86644,35.093595],[33.675392,35.017863],[33.525685,35.038688],[33.475817,35.000345],[33.455922,35.101424],[33.383833,35.162712],[33.190977,35.173125],[32.919572,35.087833],[32.73178,35.140026]]]}},{type:"Feature",id:"NFK",properties:{name:"Norfolk Island"},geometry:{type:"MultiPolygon",coordinates:[[[[167.9841414720001,-29.01783619599989],[167.99634850400008,-29.02564869599989],[167.99463951900015,-29.04257577899996],[167.98503665500004,-29.05925872199991],[167.97348066500007,-29.06633879999997],[167.970062696,-29.068942966999956],[167.96794681100005,-29.07203541499986],[167.96648196700005,-29.075778903999975],[167.96664472700002,-29.08001067499991],[167.96070397200003,-29.06560637799994],[167.9504500660001,-29.056573174999926],[167.93970787900008,-29.055759372999916],[167.9326278000001,-29.06633879999997],[167.92644290500004,-29.06633879999997],[167.9243270190001,-29.05559661299995],[167.92017662900008,-29.0455054669999],[167.918304884,-29.036390882999896],[167.9223738940001,-29.02874114399988],[167.92994225400003,-29.01946379999991],[167.930511915,-29.012139580999914],[167.92457116000008,-29.008721612999906],[167.91211998800014,-29.011651299999926],[167.92652428500003,-28.99749114399991],[167.94556725400003,-29.00123463299994],[167.9658309250001,-29.011814059999978],[167.9841414720001,-29.01783619599989]]]]}},{type:"Feature",id:"CYP",properties:{name:"Cyprus"},geometry:{type:"Polygon",coordinates:[[[33.973617,35.058506],[34.004881,34.978098],[32.979827,34.571869],[32.490296,34.701655],[32.256667,35.103232],[32.73178,35.140026],[32.919572,35.087833],[33.190977,35.173125],[33.383833,35.162712],[33.455922,35.101424],[33.475817,35.000345],[33.525685,35.038688],[33.675392,35.017863],[33.86644,35.093595],[33.973617,35.058506]]]}},{type:"Feature",id:"CZE",properties:{name:"Czech Republic"},geometry:{type:"Polygon",coordinates:[[[16.960288,48.596982],[16.499283,48.785808],[16.029647,48.733899],[15.253416,49.039074],[14.901447,48.964402],[14.338898,48.555305],[13.595946,48.877172],[13.031329,49.307068],[12.521024,49.547415],[12.415191,49.969121],[12.240111,50.266338],[12.966837,50.484076],[13.338132,50.733234],[14.056228,50.926918],[14.307013,51.117268],[14.570718,51.002339],[15.016996,51.106674],[15.490972,50.78473],[16.238627,50.697733],[16.176253,50.422607],[16.719476,50.215747],[16.868769,50.473974],[17.554567,50.362146],[17.649445,50.049038],[18.392914,49.988629],[18.853144,49.49623],[18.554971,49.495015],[18.399994,49.315001],[18.170498,49.271515],[18.104973,49.043983],[17.913512,48.996493],[17.886485,48.903475],[17.545007,48.800019],[17.101985,48.816969],[16.960288,48.596982]]]}},{type:"Feature",id:"DEU",properties:{name:"Germany"},geometry:{type:"Polygon",coordinates:[[[9.921906,54.983104],[9.93958,54.596642],[10.950112,54.363607],[10.939467,54.008693],[11.956252,54.196486],[12.51844,54.470371],[13.647467,54.075511],[14.119686,53.757029],[14.353315,53.248171],[14.074521,52.981263],[14.4376,52.62485],[14.685026,52.089947],[14.607098,51.745188],[15.016996,51.106674],[14.570718,51.002339],[14.307013,51.117268],[14.056228,50.926918],[13.338132,50.733234],[12.966837,50.484076],[12.240111,50.266338],[12.415191,49.969121],[12.521024,49.547415],[13.031329,49.307068],[13.595946,48.877172],[13.243357,48.416115],[12.884103,48.289146],[13.025851,47.637584],[12.932627,47.467646],[12.62076,47.672388],[12.141357,47.703083],[11.426414,47.523766],[10.544504,47.566399],[10.402084,47.302488],[9.896068,47.580197],[9.594226,47.525058],[8.522612,47.830828],[8.317301,47.61358],[7.466759,47.620582],[7.593676,48.333019],[8.099279,49.017784],[6.65823,49.201958],[6.18632,49.463803],[6.242751,49.902226],[6.043073,50.128052],[6.156658,50.803721],[5.988658,51.851616],[6.589397,51.852029],[6.84287,52.22844],[7.092053,53.144043],[6.90514,53.482162],[7.100425,53.693932],[7.936239,53.748296],[8.121706,53.527792],[8.800734,54.020786],[8.572118,54.395646],[8.526229,54.962744],[9.282049,54.830865],[9.921906,54.983104]]]}},{type:"Feature",id:"DJI",properties:{name:"Djibouti"},geometry:{type:"Polygon",coordinates:[[[43.081226,12.699639],[43.317852,12.390148],[43.286381,11.974928],[42.715874,11.735641],[43.145305,11.46204],[42.776852,10.926879],[42.55493,11.10511],[42.31414,11.0342],[41.75557,11.05091],[41.73959,11.35511],[41.66176,11.6312],[42,12.1],[42.35156,12.54223],[42.779642,12.455416],[43.081226,12.699639]]]}},{type:"Feature",id:"DNK",properties:{name:"Denmark"},geometry:{type:"MultiPolygon",coordinates:[[[[12.690006,55.609991],[12.089991,54.800015],[11.043543,55.364864],[10.903914,55.779955],[12.370904,56.111407],[12.690006,55.609991]]],[[[10.912182,56.458621],[10.667804,56.081383],[10.369993,56.190007],[9.649985,55.469999],[9.921906,54.983104],[9.282049,54.830865],[8.526229,54.962744],[8.120311,55.517723],[8.089977,56.540012],[8.256582,56.809969],[8.543438,57.110003],[9.424469,57.172066],[9.775559,57.447941],[10.580006,57.730017],[10.546106,57.215733],[10.25,56.890016],[10.369993,56.609982],[10.912182,56.458621]]]]}},{type:"Feature",id:"DOM",properties:{name:"Dominican Republic"},geometry:{type:"Polygon",coordinates:[[[-71.712361,19.714456],[-71.587304,19.884911],[-70.806706,19.880286],[-70.214365,19.622885],[-69.950815,19.648],[-69.76925,19.293267],[-69.222126,19.313214],[-69.254346,19.015196],[-68.809412,18.979074],[-68.317943,18.612198],[-68.689316,18.205142],[-69.164946,18.422648],[-69.623988,18.380713],[-69.952934,18.428307],[-70.133233,18.245915],[-70.517137,18.184291],[-70.669298,18.426886],[-70.99995,18.283329],[-71.40021,17.598564],[-71.657662,17.757573],[-71.708305,18.044997],[-71.687738,18.31666],[-71.945112,18.6169],[-71.701303,18.785417],[-71.624873,19.169838],[-71.712361,19.714456]]]}},{type:"Feature",id:"DZA",properties:{name:"Algeria"},geometry:{type:"Polygon",coordinates:[[[11.999506,23.471668],[8.572893,21.565661],[5.677566,19.601207],[4.267419,19.155265],[3.158133,19.057364],[3.146661,19.693579],[2.683588,19.85623],[2.060991,20.142233],[1.823228,20.610809],[-1.550055,22.792666],[-4.923337,24.974574],[-8.6844,27.395744],[-8.665124,27.589479],[-8.66559,27.656426],[-8.674116,28.841289],[-7.059228,29.579228],[-6.060632,29.7317],[-5.242129,30.000443],[-4.859646,30.501188],[-3.690441,30.896952],[-3.647498,31.637294],[-3.06898,31.724498],[-2.616605,32.094346],[-1.307899,32.262889],[-1.124551,32.651522],[-1.388049,32.864015],[-1.733455,33.919713],[-1.792986,34.527919],[-2.169914,35.168396],[-1.208603,35.714849],[-.127454,35.888662],[.503877,36.301273],[1.466919,36.605647],[3.161699,36.783905],[4.815758,36.865037],[5.32012,36.716519],[6.26182,37.110655],[7.330385,37.118381],[7.737078,36.885708],[8.420964,36.946427],[8.217824,36.433177],[8.376368,35.479876],[8.140981,34.655146],[7.524482,34.097376],[7.612642,33.344115],[8.430473,32.748337],[8.439103,32.506285],[9.055603,32.102692],[9.48214,30.307556],[9.805634,29.424638],[9.859998,28.95999],[9.683885,28.144174],[9.756128,27.688259],[9.629056,27.140953],[9.716286,26.512206],[9.319411,26.094325],[9.910693,25.365455],[9.948261,24.936954],[10.303847,24.379313],[10.771364,24.562532],[11.560669,24.097909],[11.999506,23.471668]]]}},{type:"Feature",id:"ECU",properties:{name:"Ecuador"},geometry:{type:"Polygon",coordinates:[[[-80.302561,-3.404856],[-79.770293,-2.657512],[-79.986559,-2.220794],[-80.368784,-2.685159],[-80.967765,-2.246943],[-80.764806,-1.965048],[-80.933659,-1.057455],[-80.58337,-.906663],[-80.399325,-.283703],[-80.020898,.36034],[-80.09061,.768429],[-79.542762,.982938],[-78.855259,1.380924],[-77.855061,.809925],[-77.668613,.825893],[-77.424984,.395687],[-76.57638,.256936],[-76.292314,.416047],[-75.801466,.084801],[-75.373223,-.152032],[-75.233723,-.911417],[-75.544996,-1.56161],[-76.635394,-2.608678],[-77.837905,-3.003021],[-78.450684,-3.873097],[-78.639897,-4.547784],[-79.205289,-4.959129],[-79.624979,-4.454198],[-80.028908,-4.346091],[-80.442242,-4.425724],[-80.469295,-4.059287],[-80.184015,-3.821162],[-80.302561,-3.404856]]]}},{type:"Feature",id:"EGY",properties:{name:"Egypt"},geometry:{type:"Polygon",coordinates:[[[34.9226,29.50133],[34.64174,29.09942],[34.42655,28.34399],[34.15451,27.8233],[33.92136,27.6487],[33.58811,27.97136],[33.13676,28.41765],[32.42323,29.85108],[32.32046,29.76043],[32.73482,28.70523],[33.34876,27.69989],[34.10455,26.14227],[34.47387,25.59856],[34.79507,25.03375],[35.69241,23.92671],[35.49372,23.75237],[35.52598,23.10244],[36.69069,22.20485],[36.86623,22],[32.9,22],[29.02,22],[25,22],[25,25.6825],[25,29.238655],[24.70007,30.04419],[24.95762,30.6616],[24.80287,31.08929],[25.16482,31.56915],[26.49533,31.58568],[27.45762,31.32126],[28.45048,31.02577],[28.91353,30.87005],[29.68342,31.18686],[30.09503,31.4734],[30.97693,31.55586],[31.68796,31.4296],[31.96041,30.9336],[32.19247,31.26034],[32.99392,31.02407],[33.7734,30.96746],[34.26544,31.21936],[34.9226,29.50133]]]}},{type:"Feature",id:"ERI",properties:{name:"Eritrea"},geometry:{type:"Polygon",coordinates:[[[42.35156,12.54223],[42.00975,12.86582],[41.59856,13.45209],[41.155194,13.77332],[40.8966,14.11864],[40.026219,14.519579],[39.34061,14.53155],[39.0994,14.74064],[38.51295,14.50547],[37.90607,14.95943],[37.59377,14.2131],[36.42951,14.42211],[36.323189,14.822481],[36.75386,16.291874],[36.85253,16.95655],[37.16747,17.26314],[37.904,17.42754],[38.41009,17.998307],[38.990623,16.840626],[39.26611,15.922723],[39.814294,15.435647],[41.179275,14.49108],[41.734952,13.921037],[42.276831,13.343992],[42.589576,13.000421],[43.081226,12.699639],[42.779642,12.455416],[42.35156,12.54223]]]}},{type:"Feature",id:"ESP",properties:{name:"Spain"},geometry:{type:"Polygon",coordinates:[[[-9.034818,41.880571],[-8.984433,42.592775],[-9.392884,43.026625],[-7.97819,43.748338],[-6.754492,43.567909],[-5.411886,43.57424],[-4.347843,43.403449],[-3.517532,43.455901],[-1.901351,43.422802],[-1.502771,43.034014],[.338047,42.579546],[.701591,42.795734],[1.826793,42.343385],[2.985999,42.473015],[3.039484,41.89212],[2.091842,41.226089],[.810525,41.014732],[.721331,40.678318],[.106692,40.123934],[-.278711,39.309978],[.111291,38.738514],[-.467124,38.292366],[-.683389,37.642354],[-1.438382,37.443064],[-2.146453,36.674144],[-3.415781,36.6589],[-4.368901,36.677839],[-4.995219,36.324708],[-5.37716,35.94685],[-5.866432,36.029817],[-6.236694,36.367677],[-6.520191,36.942913],[-7.453726,37.097788],[-7.537105,37.428904],[-7.166508,37.803894],[-7.029281,38.075764],[-7.374092,38.373059],[-7.098037,39.030073],[-7.498632,39.629571],[-7.066592,39.711892],[-7.026413,40.184524],[-6.86402,40.330872],[-6.851127,41.111083],[-6.389088,41.381815],[-6.668606,41.883387],[-7.251309,41.918346],[-7.422513,41.792075],[-8.013175,41.790886],[-8.263857,42.280469],[-8.671946,42.134689],[-9.034818,41.880571]]]}},{type:"Feature",id:"EST",properties:{name:"Estonia"},geometry:{type:"Polygon",coordinates:[[[24.312863,57.793424],[24.428928,58.383413],[24.061198,58.257375],[23.42656,58.612753],[23.339795,59.18724],[24.604214,59.465854],[25.864189,59.61109],[26.949136,59.445803],[27.981114,59.475388],[28.131699,59.300825],[27.420166,58.724581],[27.716686,57.791899],[27.288185,57.474528],[26.463532,57.476389],[25.60281,57.847529],[25.164594,57.970157],[24.312863,57.793424]]]}},{type:"Feature",id:"ETH",properties:{name:"Ethiopia"},geometry:{type:"Polygon",coordinates:[[[37.90607,14.95943],[38.51295,14.50547],[39.0994,14.74064],[39.34061,14.53155],[40.02625,14.51959],[40.8966,14.11864],[41.1552,13.77333],[41.59856,13.45209],[42.00975,12.86582],[42.35156,12.54223],[42,12.1],[41.66176,11.6312],[41.73959,11.35511],[41.75557,11.05091],[42.31414,11.0342],[42.55493,11.10511],[42.776852,10.926879],[42.55876,10.57258],[42.92812,10.02194],[43.29699,9.54048],[43.67875,9.18358],[46.94834,7.99688],[47.78942,8.003],[44.9636,5.00162],[43.66087,4.95755],[42.76967,4.25259],[42.12861,4.23413],[41.855083,3.918912],[41.1718,3.91909],[40.76848,4.25702],[39.85494,3.83879],[39.559384,3.42206],[38.89251,3.50074],[38.67114,3.61607],[38.43697,3.58851],[38.120915,3.598605],[36.855093,4.447864],[36.159079,4.447864],[35.817448,4.776966],[35.817448,5.338232],[35.298007,5.506],[34.70702,6.59422],[34.25032,6.82607],[34.0751,7.22595],[33.56829,7.71334],[32.95418,7.78497],[33.2948,8.35458],[33.8255,8.37916],[33.97498,8.68456],[33.96162,9.58358],[34.25745,10.63009],[34.73115,10.91017],[34.83163,11.31896],[35.26049,12.08286],[35.86363,12.57828],[36.27022,13.56333],[36.42951,14.42211],[37.59377,14.2131],[37.90607,14.95943]]]}},{type:"Feature",id:"FRO",properties:{name:"Faroe Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-6.887766079999892,61.622219143000095],[-6.877023891999983,61.62173086100002],[-6.865834113999881,61.62250397300012],[-6.914173956999889,61.60138580900012],[-6.914173956999889,61.595200914000046],[-6.825672980999855,61.60016510600009],[-6.79906165299991,61.583441473000065],[-6.737456834999875,61.57904694200009],[-6.715565558999856,61.56785716399999],[-6.713205532999893,61.554429429],[-6.724273240999935,61.54645416900003],[-6.740630662999934,61.544867255],[-6.753773566999911,61.550482489],[-6.76610266799986,61.55801015800016],[-6.782622850999928,61.56159088700012],[-6.797718878999916,61.560614325000145],[-6.805572068999908,61.554185289000046],[-6.786203579999892,61.55170319200003],[-6.774525519999912,61.54328034100014],[-6.766428188999953,61.53359609600001],[-6.757191535999908,61.52692291900014],[-6.747222459999904,61.525946356000176],[-6.725331183999884,61.528469143000095],[-6.715565558999856,61.52692291900014],[-6.70571855399993,61.521063544000114],[-6.70164954299986,61.51471588700015],[-6.704660610999952,61.509344794000114],[-6.715565558999856,61.50580475500014],[-6.715565558999856,61.49896881700012],[-6.67398027299987,61.48847077000015],[-6.677601691999939,61.47992584800012],[-6.686594204999949,61.478420315000065],[-6.698068813999896,61.479559637000094],[-6.709380662999877,61.4791527360001],[-6.743641730999855,61.469956773000135],[-6.761097785999908,61.46889883000007],[-6.78384355399993,61.4723167990001],[-6.78384355399993,61.464829820000105],[-6.77245032499988,61.46356842700011],[-6.762684699999852,61.46002838700004],[-6.755197719999956,61.45368073100009],[-6.750355597999885,61.44432200700005],[-6.738840298999946,61.455715236000046],[-6.72118079299986,61.45937734600007],[-6.681385870999861,61.457993882],[-6.683827277999882,61.45429108300006],[-6.688303188999953,61.44432200700005],[-6.666249152999853,61.43984609600001],[-6.651234503999916,61.42523834800009],[-6.646351691999968,61.40814850500014],[-6.654774542999917,61.395941473000065],[-6.677601691999939,61.394110419000086],[-6.69977779899989,61.40424225500014],[-6.736683722999942,61.430731512000094],[-6.827463344999956,61.471869208],[-6.870472785999908,61.50153229400003],[-6.865834113999881,61.52692291900014],[-6.892241990999963,61.542425848000065],[-6.923085089999916,61.56610748900009],[-6.946034308999913,61.59072500200007],[-6.948963995999918,61.60883209800009],[-6.953521287999877,61.61367422100007],[-6.962554490999878,61.62872955900018],[-6.942128058999913,61.62872955900018],[-6.944325324999909,61.63239166900006],[-6.944691535999908,61.63336823100012],[-6.948963995999918,61.63613515800007],[-6.912220831999917,61.64789459800015],[-6.894642706999889,61.649115302000084],[-6.880034959999875,61.64232005400014],[-6.900217251999919,61.63157786700013],[-6.907338019999969,61.62872955900018],[-6.897857225999871,61.62433502800009],[-6.887766079999892,61.622219143000095]]],[[[-6.841867641999926,61.89887116100006],[-6.8216853509999,61.896877346000124],[-6.789702928999901,61.89940013200005],[-6.777658657999979,61.896877346000124],[-6.768218553999873,61.89179108300003],[-6.754058397999927,61.87982819200009],[-6.742909308999913,61.876410223000065],[-6.666859503999916,61.86603424700017],[-6.654774542999917,61.858954169000114],[-6.648182745999947,61.84479401200018],[-6.619211391999926,61.830877997000115],[-6.612538214999887,61.821112372000144],[-6.626454230999883,61.81049225500011],[-6.633168097999914,61.803697007],[-6.62987219999988,61.80060455900012],[-6.627674933999884,61.795314846000124],[-6.62987219999988,61.766546942],[-6.634632941999882,61.763332424000126],[-6.641916469999899,61.75629303600006],[-6.651031053999873,61.74925364799999],[-6.660959438999896,61.74603913000014],[-6.668039516999926,61.74884674700009],[-6.733225063999953,61.81391022300012],[-6.746652798999946,61.821112372000144],[-6.838286912999934,61.82900625200013],[-6.854359503999916,61.83222077],[-6.86766516799986,61.839341539000046],[-6.873280402999853,61.85211823100009],[-6.877552863999938,61.869574286000145],[-6.899077928999873,61.89386627800003],[-6.907338019999969,61.90985748900012],[-6.884266730999912,61.9078636740001],[-6.841867641999926,61.89887116100006]]],[[[-7.546254035999908,62.09699127800012],[-7.558705206999917,62.096136786000116],[-7.640695766999954,62.099839585000055],[-7.644154425999943,62.107001044000114],[-7.617258266999954,62.114447333000086],[-7.588042772999927,62.11513906500012],[-7.559722459999875,62.10773346600003],[-7.546009894999941,62.10179271000011],[-7.536732550999915,62.098781643],[-7.546254035999908,62.09699127800012]]],[[[-7.160145636999857,62.132554429],[-7.144154425999943,62.11615631700009],[-7.133900519999941,62.10911692900011],[-7.109038865999878,62.10492584800009],[-7.08263098899991,62.105698960000026],[-7.057972785999908,62.1031761740001],[-7.038319464999859,62.088609117000075],[-7.050689256999903,62.07583242400001],[-7.059803839999887,62.06289297100001],[-7.071848110999895,62.05255768400009],[-7.093006964999887,62.04767487200003],[-7.110910610999952,62.04930247600005],[-7.12726803299995,62.053045966000084],[-7.143544074999909,62.05402252800015],[-7.161203579999921,62.04767487200003],[-7.153228318999965,62.04413483300006],[-7.14500891799986,62.04169342700011],[-7.1361384759999,62.040472723],[-7.126454230999855,62.04022858300006],[-7.184885219999927,62.026556708000115],[-7.202137824999852,62.01972077],[-7.19359290299991,62.03058502800009],[-7.189116990999935,62.03400299700009],[-7.196034308999856,62.04791901200018],[-7.207427537999905,62.060207424000126],[-7.221424933999884,62.066229559000035],[-7.236317511999914,62.06134674700017],[-7.228016730999855,62.05805084800012],[-7.215687628999916,62.051174221000124],[-7.206613735999895,62.04254791900003],[-7.2084041009999,62.03400299700009],[-7.218983527999853,62.032863674000154],[-7.263579881999931,62.04767487200003],[-7.325754360999923,62.053900458],[-7.36620032499988,62.06745026200015],[-7.3802791009999,62.06818268400018],[-7.3802791009999,62.07493724200013],[-7.284820115999906,62.07493724200013],[-7.30711829299986,62.083197333000115],[-7.332834438999896,62.089504299000154],[-7.383697068999908,62.094875393],[-7.410755988999966,62.105698960000026],[-7.429554816999911,62.12848541900003],[-7.431548631999931,62.14817942900008],[-7.4076228509999,62.15009186400012],[-7.372059699999909,62.1329613300001],[-7.35985266799986,62.129584052000084],[-7.352406378999945,62.12885163000014],[-7.329172329999949,62.129584052000084],[-7.321359829999949,62.13174062700007],[-7.318837042999917,62.136419989],[-7.318023240999906,62.14109935100011],[-7.315174933999884,62.14325592700011],[-7.303618943999936,62.145493882],[-7.286122199999909,62.15525950700014],[-7.215891079999949,62.16376373900006],[-7.215891079999949,62.15753815300012],[-7.222645636999886,62.15753815300012],[-7.222645636999886,62.15009186400012],[-7.18390865799995,62.137437242000075],[-7.171131964999916,62.13580963700004],[-7.160145636999857,62.132554429]]],[[[-6.326079881999874,62.24713776200015],[-6.341867641999926,62.24433014500012],[-6.358509894999884,62.24583567900008],[-6.370350714999944,62.25592682500003],[-6.380726691999939,62.269110419000086],[-6.384348110999895,62.28021881700012],[-6.372466600999928,62.28799062700001],[-6.355620897999927,62.29189687700001],[-6.321441209999961,62.308091539000074],[-6.291330532999922,62.30768463700015],[-6.275786912999905,62.302720445000105],[-6.276844855999883,62.2962914080001],[-6.306141730999883,62.28180573100015],[-6.299549933999913,62.27155182500003],[-6.299427863999938,62.26227448100015],[-6.304107225999871,62.256008205000015],[-6.313140428999873,62.25079987200003],[-6.326079881999874,62.24713776200015]]],[[[-7.190256313999896,62.30980052300008],[-7.185617641999954,62.30882396],[-7.180816209999875,62.30914948100012],[-7.174956834999932,62.30776601800012],[-7.10643469999988,62.300034898000135],[-7.072621222999914,62.29026927299999],[-7.058216925999943,62.27667877800003],[-7.04548092399989,62.25238678600006],[-6.997222459999875,62.207180080000015],[-6.997385219999927,62.18423086100013],[-6.963775193999908,62.17890045800006],[-6.906605597999942,62.155462958],[-6.856068488999938,62.14789459800012],[-6.847320115999935,62.142035223],[-6.846343553999873,62.13336823100009],[-6.852691209999904,62.12274811400006],[-6.862212693999908,62.11542389500015],[-6.875477667999945,62.10895416900014],[-6.88931230399993,62.10431549700003],[-6.900502081999946,62.10228099200002],[-6.812977667999888,62.10423411700005],[-6.798085089999859,62.09174225500014],[-6.784087693999879,62.07672760600012],[-6.779367641999983,62.06610748900006],[-6.787587042999888,62.06134674700017],[-6.845936652999882,62.06134674700017],[-6.845936652999882,62.053900458],[-6.810536261999857,62.04633209800015],[-6.742909308999913,62.047105210000055],[-6.715565558999856,62.03400299700009],[-6.726144985999895,62.02171458500014],[-6.734038865999878,62.00535716400013],[-6.731922980999855,61.99111562700004],[-6.698841925999915,61.98208242400001],[-6.700754360999952,61.97370026200015],[-6.705881313999896,61.960760809000064],[-6.701893683999913,61.94403717700011],[-6.734486456999946,61.938218492000075],[-6.765004035999908,61.953680731000176],[-6.793853318999936,61.974514065000065],[-6.85692298099994,61.994777736000074],[-6.910145636999914,62.03790924700009],[-6.94554602799991,62.04767487200003],[-6.959828253999916,62.049994208],[-6.969146287999877,62.056952216000084],[-6.974110480999912,62.068589585],[-6.975697394999941,62.08490631700012],[-6.982167120999861,62.094061591000084],[-6.997670050999943,62.103745835000055],[-7.016021287999905,62.111883856000176],[-7.030873175999886,62.11660390800007],[-7.109445766999897,62.12274811400006],[-7.126942511999857,62.12714264500015],[-7.137115037999877,62.13666413000014],[-7.1361384759999,62.146144924000126],[-7.120228644999884,62.15009186400012],[-7.128814256999903,62.16205475500006],[-7.142486131999931,62.16079336100016],[-7.158558722999914,62.15412018400009],[-7.174956834999932,62.15009186400012],[-7.185617641999954,62.15241120000009],[-7.213693813999953,62.16474030200014],[-7.222645636999886,62.170599677],[-7.232085740999906,62.17641836100013],[-7.235218878999888,62.18016185100008],[-7.236317511999914,62.18764883000013],[-7.23395748599998,62.19839101800015],[-7.22826087099989,62.20111725500011],[-7.221587693999936,62.201402085000055],[-7.215891079999949,62.2047386740001],[-7.210357225999928,62.21845123900003],[-7.20946204299986,62.22870514500012],[-7.205067511999857,62.23566315300003],[-7.189116990999935,62.23944733300006],[-7.208159959999932,62.25421784100003],[-7.208119269999941,62.27521393400018],[-7.195423956999889,62.31460195500016],[-7.190256313999896,62.30980052300008]]],[[[-6.887521938999953,62.321437893000066],[-6.883208787999934,62.31122467700014],[-6.900705532999893,62.30414459800009],[-6.923410610999952,62.29791901200012],[-6.934641079999949,62.290350653000175],[-6.93423417899993,62.27358633000016],[-6.931304490999906,62.26007721600017],[-6.92320716099988,62.24900950700014],[-6.907338019999969,62.23944733300006],[-6.917388475999928,62.26992422100001],[-6.912953253999945,62.28180573100015],[-6.83849036399991,62.29417552299999],[-6.813832160999908,62.29340241100006],[-6.798085089999859,62.28046295800006],[-6.805978969999927,62.27948639500009],[-6.824777798999975,62.273016669000086],[-6.746652798999946,62.266791083000115],[-6.737131313999953,62.26211172100001],[-6.745432094999927,62.25202057500006],[-6.763498501999948,62.242417710000055],[-6.78384355399993,62.23944733300006],[-6.78384355399993,62.23200104400017],[-6.772287563999925,62.230169989],[-6.7533259759999,62.22109609600001],[-6.742909308999913,62.21841054900004],[-6.734730597999914,62.219183661000145],[-6.715728318999908,62.224554755],[-6.705637173999946,62.225816148000106],[-6.65094967399989,62.21625397300012],[-6.608631964999887,62.202378648000135],[-6.605539516999897,62.19599030200011],[-6.618763800999943,62.19228750200007],[-6.643950975999928,62.191066799000154],[-6.703968878999916,62.19513580900009],[-6.722401495999861,62.191066799000154],[-6.722401495999861,62.18423086100013],[-6.60008704299986,62.15338776200015],[-6.564116990999906,62.13580963700004],[-6.616200324999852,62.13914622600008],[-6.667795376999891,62.15009186400012],[-6.667795376999891,62.14325592700011],[-6.645822719999899,62.141017971000124],[-6.625477667999888,62.133449611000074],[-6.592030402999853,62.11660390800007],[-6.592030402999853,62.10911692900011],[-6.610096808999856,62.11041901200012],[-6.630686001999891,62.10907623900012],[-6.649159308999913,62.104193427000055],[-6.660959438999896,62.094875393],[-6.656605597999885,62.09296295800006],[-6.652251756999903,62.09003327000012],[-6.647328253999945,62.088609117000075],[-6.647328253999945,62.08124420800006],[-6.655751105999883,62.07705312700013],[-6.659535285999908,62.072943427],[-6.659087693999908,62.06806061400012],[-6.654774542999917,62.06134674700017],[-6.691395636999857,62.073391018000095],[-6.701242641999954,62.09418366100006],[-6.701527472999885,62.11912669500002],[-6.709380662999877,62.14325592700011],[-6.726796027999853,62.16128164300012],[-6.753570115999935,62.18170807500012],[-6.78384355399993,62.19481028899999],[-6.811838344999956,62.191066799000154],[-6.788400844999899,62.17804596600014],[-6.758656378999888,62.16559479400014],[-6.73302161399991,62.148830471000124],[-6.722401495999861,62.12274811400006],[-6.740305141999926,62.10114166900014],[-6.780873175999915,62.116685289000074],[-6.85960852799991,62.16376373900006],[-6.900257941999911,62.162543036000145],[-6.910755988999881,62.167181708000086],[-6.916981574999852,62.17157623900006],[-6.937977667999888,62.18211497600011],[-6.94554602799991,62.18423086100013],[-6.95750891799986,62.1896019550001],[-7.020334438999925,62.239691473],[-7.055083787999877,62.290350653000175],[-7.063588019999912,62.29637278899999],[-7.075021938999953,62.301947333],[-7.084055141999954,62.30776601800012],[-7.085560675999915,62.31460195500016],[-7.07713782499988,62.32160065300003],[-7.06663977799991,62.32050202],[-7.055246548999918,62.31639232000005],[-7.044585740999906,62.31460195500016],[-7.022857225999928,62.31899648600013],[-6.986439581999946,62.33226146000008],[-6.940663214999859,62.33698151200018],[-6.928456183999884,62.33502838700004],[-6.91812089799987,62.33104075700005],[-6.909331834999904,62.326239325000145],[-6.899973110999952,62.32241445500016],[-6.887521938999953,62.321437893000066]]],[[[-6.386586066999882,62.259955145],[-6.405262824999852,62.24461497600005],[-6.436512824999909,62.24237702000006],[-6.468576626999891,62.248928127000156],[-6.489654100999928,62.259955145],[-6.496490037999934,62.252508856000034],[-6.459339972999942,62.22809479400017],[-6.439849412999934,62.220119533000044],[-6.420765753999973,62.225816148000106],[-6.417795376999948,62.20831940300015],[-6.414296027999882,62.20258209800009],[-6.407093878999916,62.197821356000176],[-6.407093878999916,62.191066799000154],[-6.423817511999857,62.18549225500014],[-6.444162563999953,62.18309153900002],[-6.463856574999909,62.18553294500013],[-6.47907467399989,62.19448476800015],[-6.506459113999938,62.221747137000065],[-6.522124803999901,62.22955963700004],[-6.537464972999942,62.225816148000106],[-6.516021287999934,62.19179922100007],[-6.506988084999904,62.18109772300015],[-6.503163214999887,62.174058335],[-6.509917772999927,62.17381419500005],[-6.519398566999939,62.17641836100013],[-6.529367641999926,62.18060944200006],[-6.532093878999916,62.18390534100011],[-6.534087693999936,62.187567450000145],[-6.537464972999942,62.191066799000154],[-6.571278449999852,62.213324286],[-6.582753058999884,62.228583075000145],[-6.57835852799991,62.245672919000114],[-6.571359829999921,62.25177643400009],[-6.567494269999912,62.25112539300015],[-6.564808722999942,62.247707424000126],[-6.561024542999917,62.245672919000114],[-6.553089972999942,62.247015692],[-6.551503058999913,62.25088125200001],[-6.55142167899993,62.25649648600002],[-6.547963019999941,62.26337311400012],[-6.546009894999884,62.271958726000136],[-6.548898891999926,62.299505927000055],[-6.551096157999893,62.30776601800012],[-6.563303188999896,62.32831452000009],[-6.571685350999928,62.34674713700012],[-6.566517706999946,62.36127350500006],[-6.537464972999942,62.369818427000084],[-6.544911261999857,62.362372137000094],[-6.516916469999927,62.32306549700009],[-6.482736782999922,62.29511139500006],[-6.440174933999884,62.275132554],[-6.386586066999882,62.259955145]]],[[[-6.579701300999886,62.266791083000115],[-6.594471808999884,62.26117584800012],[-6.616200324999852,62.26630280200014],[-6.636382615999878,62.280096747000144],[-6.646311001999976,62.289618231000034],[-6.673329230999912,62.321030992000075],[-6.684315558999884,62.34406159100014],[-6.680816209999875,62.36611562700013],[-6.66429602799991,62.37421295800006],[-6.648060675999972,62.36652252800006],[-6.63927161399991,62.351996161],[-6.596262173999946,62.30475495000003],[-6.585275844999899,62.28986237200009],[-6.580718553999958,62.28156159100011],[-6.579701300999886,62.266791083000115]]],[[[-6.643299933999884,62.23851146000008],[-6.658599412999934,62.23647695500013],[-6.676665818999936,62.241400458],[-6.691029425999915,62.252264716000084],[-6.69896399599989,62.26845937700013],[-6.708973761999886,62.28327057500012],[-6.716053839999916,62.289618231000034],[-6.735829230999855,62.30414459800009],[-6.762277798999918,62.32770416900003],[-6.769439256999874,62.33600495000012],[-6.787220831999946,62.36127350500006],[-6.789051886999857,62.37531159100011],[-6.779123501999919,62.37958405200011],[-6.765288865999935,62.373724677000084],[-6.751942511999914,62.362127997000144],[-6.724354620999918,62.328843492000075],[-6.654693162999934,62.26406484600015],[-6.648182745999947,62.25983307500003],[-6.639149542999917,62.24900950700014],[-6.643299933999884,62.23851146000008]]],[[[-6.45482337099989,62.32420482000013],[-6.449126756999903,62.317816473000036],[-6.43846594999988,62.31907786700013],[-6.427479620999918,62.325873114000146],[-6.415516730999883,62.326239325000145],[-6.409169074999852,62.32404205900018],[-6.401519334999932,62.320013739],[-6.394602016999926,62.30988190300015],[-6.399403449999909,62.301092841000084],[-6.405913865999906,62.29425690300015],[-6.423695441999882,62.290350653000175],[-6.455718553999873,62.29596588700015],[-6.485463019999884,62.31000397300012],[-6.509266730999883,62.329779364000146],[-6.524077928999873,62.34650299700017],[-6.533436652999882,62.37189362200009],[-6.546294725999928,62.37811920800006],[-6.555897589999887,62.390936591000084],[-6.542551235999895,62.39891185100005],[-6.519032355999912,62.39533112200017],[-6.504628058999856,62.38760000200007],[-6.494740363999938,62.37494538],[-6.487049933999913,62.36033763200008],[-6.47476152299987,62.34935130400011],[-6.460438605999883,62.339829820000105],[-6.454701300999915,62.33104075700005],[-6.45482337099989,62.32420482000013]]]]}},{type:"Feature",id:"FIN",properties:{name:"Finland"},geometry:{type:"Polygon",coordinates:[[[28.59193,69.064777],[28.445944,68.364613],[29.977426,67.698297],[29.054589,66.944286],[30.21765,65.80598],[29.54443,64.948672],[30.444685,64.204453],[30.035872,63.552814],[31.516092,62.867687],[31.139991,62.357693],[30.211107,61.780028],[28.069998,60.503517],[26.255173,60.423961],[24.496624,60.057316],[22.869695,59.846373],[22.290764,60.391921],[21.322244,60.72017],[21.544866,61.705329],[21.059211,62.607393],[21.536029,63.189735],[22.442744,63.81781],[24.730512,64.902344],[25.398068,65.111427],[25.294043,65.534346],[23.903379,66.006927],[23.56588,66.396051],[23.539473,67.936009],[21.978535,68.616846],[20.645593,69.106247],[21.244936,69.370443],[22.356238,68.841741],[23.66205,68.891247],[24.735679,68.649557],[25.689213,69.092114],[26.179622,69.825299],[27.732292,70.164193],[29.015573,69.766491],[28.59193,69.064777]]]}},{type:"Feature",id:"FJI",properties:{name:"Fiji"},geometry:{type:"MultiPolygon",coordinates:[[[[178.3736,-17.33992],[178.71806,-17.62846],[178.55271,-18.15059],[177.93266,-18.28799],[177.38146,-18.16432],[177.28504,-17.72465],[177.67087,-17.38114],[178.12557,-17.50481],[178.3736,-17.33992]]],[[[179.364143,-16.801354],[178.725059,-17.012042],[178.596839,-16.63915],[179.096609,-16.433984],[179.413509,-16.379054],[180,-16.067133],[180,-16.555217],[179.364143,-16.801354]]],[[[-179.917369,-16.501783],[-180,-16.555217],[-180,-16.067133],[-179.79332,-16.020882],[-179.917369,-16.501783]]]]}},{type:"Feature",id:"FLK",properties:{name:"Falkland Islands"},geometry:{type:"Polygon",coordinates:[[[-61.2,-51.85],[-60,-51.25],[-59.15,-51.5],[-58.55,-51.1],[-57.75,-51.55],[-58.05,-51.9],[-59.4,-52.2],[-59.85,-51.85],[-60.7,-52.3],[-61.2,-51.85]]]}},{type:"Feature",id:"FRA",properties:{name:"France"},geometry:{type:"MultiPolygon",coordinates:[[[[9.560016,42.152492],[9.229752,41.380007],[8.775723,41.583612],[8.544213,42.256517],[8.746009,42.628122],[9.390001,43.009985],[9.560016,42.152492]]],[[[3.588184,50.378992],[4.286023,49.907497],[4.799222,49.985373],[5.674052,49.529484],[5.897759,49.442667],[6.18632,49.463803],[6.65823,49.201958],[8.099279,49.017784],[7.593676,48.333019],[7.466759,47.620582],[7.192202,47.449766],[6.736571,47.541801],[6.768714,47.287708],[6.037389,46.725779],[6.022609,46.27299],[6.5001,46.429673],[6.843593,45.991147],[6.802355,45.70858],[7.096652,45.333099],[6.749955,45.028518],[7.007562,44.254767],[7.549596,44.127901],[7.435185,43.693845],[6.529245,43.128892],[4.556963,43.399651],[3.100411,43.075201],[2.985999,42.473015],[1.826793,42.343385],[.701591,42.795734],[.338047,42.579546],[-1.502771,43.034014],[-1.901351,43.422802],[-1.384225,44.02261],[-1.193798,46.014918],[-2.225724,47.064363],[-2.963276,47.570327],[-4.491555,47.954954],[-4.59235,48.68416],[-3.295814,48.901692],[-1.616511,48.644421],[-1.933494,49.776342],[-.989469,49.347376],[1.338761,50.127173],[1.639001,50.946606],[2.513573,51.148506],[2.658422,50.796848],[3.123252,50.780363],[3.588184,50.378992]]]]}},{type:"Feature",id:"GAB",properties:{name:"Gabon"},geometry:{type:"Polygon",coordinates:[[[11.093773,-3.978827],[10.066135,-2.969483],[9.405245,-2.144313],[8.797996,-1.111301],[8.830087,-.779074],[9.04842,-.459351],[9.291351,.268666],[9.492889,1.01012],[9.830284,1.067894],[11.285079,1.057662],[11.276449,2.261051],[11.751665,2.326758],[12.35938,2.192812],[12.951334,2.321616],[13.075822,2.267097],[13.003114,1.830896],[13.282631,1.314184],[14.026669,1.395677],[14.276266,1.19693],[13.843321,.038758],[14.316418,-.552627],[14.425456,-1.333407],[14.29921,-1.998276],[13.992407,-2.470805],[13.109619,-2.42874],[12.575284,-1.948511],[12.495703,-2.391688],[11.820964,-2.514161],[11.478039,-2.765619],[11.855122,-3.426871],[11.093773,-3.978827]]]}},{type:"Feature",id:"GBR",properties:{name:"United Kingdom"},geometry:{type:"MultiPolygon",coordinates:[[[[-5.661949,54.554603],[-6.197885,53.867565],[-6.95373,54.073702],[-7.572168,54.059956],[-7.366031,54.595841],[-7.572168,55.131622],[-6.733847,55.17286],[-5.661949,54.554603]]],[[[-3.005005,58.635],[-4.073828,57.553025],[-3.055002,57.690019],[-1.959281,57.6848],[-2.219988,56.870017],[-3.119003,55.973793],[-2.085009,55.909998],[-2.005676,55.804903],[-1.114991,54.624986],[-.430485,54.464376],[.184981,53.325014],[.469977,52.929999],[1.681531,52.73952],[1.559988,52.099998],[1.050562,51.806761],[1.449865,51.289428],[.550334,50.765739],[-.787517,50.774989],[-2.489998,50.500019],[-2.956274,50.69688],[-3.617448,50.228356],[-4.542508,50.341837],[-5.245023,49.96],[-5.776567,50.159678],[-4.30999,51.210001],[-3.414851,51.426009],[-3.422719,51.426848],[-4.984367,51.593466],[-5.267296,51.9914],[-4.222347,52.301356],[-4.770013,52.840005],[-4.579999,53.495004],[-3.093831,53.404547],[-3.09208,53.404441],[-2.945009,53.985],[-3.614701,54.600937],[-3.630005,54.615013],[-4.844169,54.790971],[-5.082527,55.061601],[-4.719112,55.508473],[-5.047981,55.783986],[-5.586398,55.311146],[-5.644999,56.275015],[-6.149981,56.78501],[-5.786825,57.818848],[-5.009999,58.630013],[-4.211495,58.550845],[-3.005005,58.635]]]]}},{type:"Feature",id:"GEO",properties:{name:"Georgia"},geometry:{type:"Polygon",coordinates:[[[41.554084,41.535656],[41.703171,41.962943],[41.45347,42.645123],[40.875469,43.013628],[40.321394,43.128634],[39.955009,43.434998],[40.076965,43.553104],[40.922185,43.382159],[42.394395,43.220308],[43.756017,42.740828],[43.9312,42.554974],[44.537623,42.711993],[45.470279,42.502781],[45.77641,42.092444],[46.404951,41.860675],[46.145432,41.722802],[46.637908,41.181673],[46.501637,41.064445],[45.962601,41.123873],[45.217426,41.411452],[44.97248,41.248129],[43.582746,41.092143],[42.619549,41.583173],[41.554084,41.535656]]]}},{type:"Feature",id:"GHA",properties:{name:"Ghana"},geometry:{type:"Polygon",coordinates:[[[1.060122,5.928837],[-.507638,5.343473],[-1.063625,5.000548],[-1.964707,4.710462],[-2.856125,4.994476],[-2.810701,5.389051],[-3.24437,6.250472],[-2.983585,7.379705],[-2.56219,8.219628],[-2.827496,9.642461],[-2.963896,10.395335],[-2.940409,10.96269],[-1.203358,11.009819],[-.761576,10.93693],[-.438702,11.098341],[.023803,11.018682],[-.049785,10.706918],[.36758,10.191213],[.365901,9.465004],[.461192,8.677223],[.712029,8.312465],[.490957,7.411744],[.570384,6.914359],[.836931,6.279979],[1.060122,5.928837]]]}},{type:"Feature",id:"GIB",properties:{name:"Gibraltar"},geometry:{type:"MultiPolygon",coordinates:[[[[-5.358386758763487,36.1411094470883],[-5.338773483119979,36.14111967201225],[-5.339914516999897,36.129828192000076],[-5.339060024999895,36.12384674700007],[-5.34203040299991,36.11050039300005],[-5.350249803999901,36.11928945500003],[-5.358386758763487,36.1411094470883]]]]}},{type:"Feature",id:"GIN",properties:{name:"Guinea"},geometry:{type:"Polygon",coordinates:[[[-8.439298,7.686043],[-8.722124,7.711674],[-8.926065,7.309037],[-9.208786,7.313921],[-9.403348,7.526905],[-9.33728,7.928534],[-9.755342,8.541055],[-10.016567,8.428504],[-10.230094,8.406206],[-10.505477,8.348896],[-10.494315,8.715541],[-10.65477,8.977178],[-10.622395,9.26791],[-10.839152,9.688246],[-11.117481,10.045873],[-11.917277,10.046984],[-12.150338,9.858572],[-12.425929,9.835834],[-12.596719,9.620188],[-12.711958,9.342712],[-13.24655,8.903049],[-13.685154,9.494744],[-14.074045,9.886167],[-14.330076,10.01572],[-14.579699,10.214467],[-14.693232,10.656301],[-14.839554,10.876572],[-15.130311,11.040412],[-14.685687,11.527824],[-14.382192,11.509272],[-14.121406,11.677117],[-13.9008,11.678719],[-13.743161,11.811269],[-13.828272,12.142644],[-13.718744,12.247186],[-13.700476,12.586183],[-13.217818,12.575874],[-12.499051,12.33209],[-12.278599,12.35444],[-12.203565,12.465648],[-11.658301,12.386583],[-11.513943,12.442988],[-11.456169,12.076834],[-11.297574,12.077971],[-11.036556,12.211245],[-10.87083,12.177887],[-10.593224,11.923975],[-10.165214,11.844084],[-9.890993,12.060479],[-9.567912,12.194243],[-9.327616,12.334286],[-9.127474,12.30806],[-8.905265,12.088358],[-8.786099,11.812561],[-8.376305,11.393646],[-8.581305,11.136246],[-8.620321,10.810891],[-8.407311,10.909257],[-8.282357,10.792597],[-8.335377,10.494812],[-8.029944,10.206535],[-8.229337,10.12902],[-8.309616,9.789532],[-8.079114,9.376224],[-7.8321,8.575704],[-8.203499,8.455453],[-8.299049,8.316444],[-8.221792,8.123329],[-8.280703,7.68718],[-8.439298,7.686043]]]}},{type:"Feature",id:"GMB",properties:{name:"Gambia"},geometry:{type:"Polygon",coordinates:[[[-16.841525,13.151394],[-16.713729,13.594959],[-15.624596,13.623587],[-15.39877,13.860369],[-15.081735,13.876492],[-14.687031,13.630357],[-14.376714,13.62568],[-14.046992,13.794068],[-13.844963,13.505042],[-14.277702,13.280585],[-14.712197,13.298207],[-15.141163,13.509512],[-15.511813,13.27857],[-15.691001,13.270353],[-15.931296,13.130284],[-16.841525,13.151394]]]}},{type:"Feature",id:"GGY",properties:{name:"Guernsey"},geometry:{type:"MultiPolygon",coordinates:[[[[-2.364654100999957,49.417873440000065],[-2.373524542999888,49.41156647300012],[-2.378081834999932,49.41274648600016],[-2.374826626999891,49.41917552300008],[-2.373117641999897,49.424261786],[-2.375884568999936,49.430405992000075],[-2.37547766799986,49.435451565],[-2.372629360999895,49.43805573100009],[-2.369862433999856,49.442084052000055],[-2.366118943999908,49.445746161000116],[-2.36375891799986,49.44684479400014],[-2.356353318999879,49.44037506700006],[-2.354400193999908,49.427801825000174],[-2.364654100999957,49.417873440000065]]],[[[-2.445220506999903,49.47459544500005],[-2.45335852799991,49.462144273000106],[-2.454497850999871,49.46613190300009],[-2.455067511999914,49.475043036000145],[-2.453684048999946,49.481878973000065],[-2.44782467399989,49.48395416900017],[-2.445220506999903,49.47459544500005]]],[[[-2.541981574999909,49.43089427300005],[-2.552072719999956,49.42670319200012],[-2.558705206999946,49.427191473],[-2.564849412999905,49.42951080900018],[-2.573109503999916,49.43089427300005],[-2.669341600999928,49.43089427300005],[-2.673451300999886,49.43349844000015],[-2.670765753999916,49.43878815300003],[-2.662953253999916,49.44379303600006],[-2.651844855999883,49.44521719000012],[-2.656564907999893,49.45941803600006],[-2.650257941999939,49.463690497000144],[-2.637928839999916,49.46385325700011],[-2.624623175999886,49.4657250020001],[-2.58023027299987,49.49359772300015],[-2.559559699999852,49.49933502800012],[-2.538197394999884,49.50983307500009],[-2.518218553999901,49.515529690000065],[-2.501698370999918,49.50665924700003],[-2.505767381999903,49.49799225500011],[-2.522124803999901,49.4799665390001],[-2.526722785999937,49.45848216400016],[-2.53294837099989,49.44285716400019],[-2.532785610999923,49.438910223],[-2.534087693999936,49.43622467700011],[-2.541981574999909,49.43089427300005]]],[[[-2.200835740999878,49.70571523600016],[-2.216867641999954,49.703029690000065],[-2.226226365999878,49.707831122000144],[-2.21849524599989,49.71869538000006],[-2.204701300999972,49.7241071640001],[-2.194813605999855,49.72479889500012],[-2.178618943999908,49.730902411000116],[-2.174468553999873,49.73139069200003],[-2.170318162999934,49.72874583500011],[-2.170318162999934,49.72321198100009],[-2.187896287999962,49.71063873900012],[-2.200835740999878,49.70571523600016]]]]}},{type:"Feature",id:"GUM",properties:{name:"Guam"},geometry:{type:"MultiPolygon",coordinates:[[[[144.88640384200005,13.640204169000114],[144.89665774800005,13.617987372000059],[144.91431725400008,13.60541413000007],[144.934418165,13.599839585000069],[144.95191491000008,13.598578192000062],[144.95215905000015,13.586859442000062],[144.93767337300005,13.560532945000062],[144.90699303500008,13.516669012000108],[144.87183678500003,13.485174872000101],[144.80827884200005,13.445786851000022],[144.78345787900008,13.420477606000077],[144.76937910200002,13.37913646000004],[144.760101759,13.28563060100008],[144.73560631600003,13.249172268000024],[144.71802819100003,13.241848049000112],[144.69752037900008,13.241034247000101],[144.68067467500015,13.24677155200007],[144.67042076900015,13.264837958000086],[144.6567488940001,13.282049872000101],[144.65357506600003,13.287014065000065],[144.64747155000015,13.324896552000084],[144.6442977220001,13.331610419000043],[144.63949629,13.337469794000086],[144.63363691500007,13.342108466000099],[144.626312696,13.345363674000055],[144.63656660200007,13.355414130000028],[144.64307701900015,13.36570872600005],[144.6464949880001,13.378485419000086],[144.64747155000015,13.39622630400008],[144.6455184250001,13.404486395000077],[144.64047285200007,13.41478099200009],[144.6347762380001,13.42352936400006],[144.62419681100005,13.431219794000086],[144.6286727220001,13.438788153000132],[144.6364852220001,13.443101304000038],[144.64063561300014,13.437811591000056],[144.6544702480001,13.439154364000046],[144.71485436300014,13.473456122000101],[144.72877037900003,13.485581773000106],[144.78345787900008,13.516669012000108],[144.7941186860001,13.52708567900001],[144.8032332690001,13.539129950000103],[144.81120853000004,13.553615627000056],[144.8322046230001,13.620672919000043],[144.83863366000003,13.632757880000042],[144.85043379000007,13.6437442080001],[144.86670983200008,13.653021552000055],[144.8806258470001,13.654120184000092],[144.88640384200005,13.640204169000114]]]]}},{type:"Feature",id:"GNB",properties:{name:"Guinea Bissau"},geometry:{type:"Polygon",coordinates:[[[-15.130311,11.040412],[-15.66418,11.458474],[-16.085214,11.524594],[-16.314787,11.806515],[-16.308947,11.958702],[-16.613838,12.170911],[-16.677452,12.384852],[-16.147717,12.547762],[-15.816574,12.515567],[-15.548477,12.62817],[-13.700476,12.586183],[-13.718744,12.247186],[-13.828272,12.142644],[-13.743161,11.811269],[-13.9008,11.678719],[-14.121406,11.677117],[-14.382192,11.509272],[-14.685687,11.527824],[-15.130311,11.040412]]]}},{type:"Feature",id:"GNQ",properties:{name:"Equatorial Guinea"},geometry:{type:"Polygon",coordinates:[[[9.492889,1.01012],[9.305613,1.160911],[9.649158,2.283866],[11.276449,2.261051],[11.285079,1.057662],[9.830284,1.067894],[9.492889,1.01012]]]}},{type:"Feature",id:"GRC",properties:{name:"Greece"},geometry:{type:"MultiPolygon",coordinates:[[[[23.69998,35.705004],[24.246665,35.368022],[25.025015,35.424996],[25.769208,35.354018],[25.745023,35.179998],[26.290003,35.29999],[26.164998,35.004995],[24.724982,34.919988],[24.735007,35.084991],[23.514978,35.279992],[23.69998,35.705004]]],[[[26.604196,41.562115],[26.294602,40.936261],[26.056942,40.824123],[25.447677,40.852545],[24.925848,40.947062],[23.714811,40.687129],[24.407999,40.124993],[23.899968,39.962006],[23.342999,39.960998],[22.813988,40.476005],[22.626299,40.256561],[22.849748,39.659311],[23.350027,39.190011],[22.973099,38.970903],[23.530016,38.510001],[24.025025,38.219993],[24.040011,37.655015],[23.115003,37.920011],[23.409972,37.409991],[22.774972,37.30501],[23.154225,36.422506],[22.490028,36.41],[21.670026,36.844986],[21.295011,37.644989],[21.120034,38.310323],[20.730032,38.769985],[20.217712,39.340235],[20.150016,39.624998],[20.615,40.110007],[20.674997,40.435],[20.99999,40.580004],[21.02004,40.842727],[21.674161,40.931275],[22.055378,41.149866],[22.597308,41.130487],[22.76177,41.3048],[22.952377,41.337994],[23.692074,41.309081],[24.492645,41.583896],[25.197201,41.234486],[26.106138,41.328899],[26.117042,41.826905],[26.604196,41.562115]]]]}},{type:"Feature",id:"GRL",properties:{name:"Greenland"},geometry:{type:"Polygon",coordinates:[[[-46.76379,82.62796],[-43.40644,83.22516],[-39.89753,83.18018],[-38.62214,83.54905],[-35.08787,83.64513],[-27.10046,83.51966],[-20.84539,82.72669],[-22.69182,82.34165],[-26.51753,82.29765],[-31.9,82.2],[-31.39646,82.02154],[-27.85666,82.13178],[-24.84448,81.78697],[-22.90328,82.09317],[-22.07175,81.73449],[-23.16961,81.15271],[-20.62363,81.52462],[-15.76818,81.91245],[-12.77018,81.71885],[-12.20855,81.29154],[-16.28533,80.58004],[-16.85,80.35],[-20.04624,80.17708],[-17.73035,80.12912],[-18.9,79.4],[-19.70499,78.75128],[-19.67353,77.63859],[-18.47285,76.98565],[-20.03503,76.94434],[-21.67944,76.62795],[-19.83407,76.09808],[-19.59896,75.24838],[-20.66818,75.15585],[-19.37281,74.29561],[-21.59422,74.22382],[-20.43454,73.81713],[-20.76234,73.46436],[-22.17221,73.30955],[-23.56593,73.30663],[-22.31311,72.62928],[-22.29954,72.18409],[-24.27834,72.59788],[-24.79296,72.3302],[-23.44296,72.08016],[-22.13281,71.46898],[-21.75356,70.66369],[-23.53603,70.471],[-24.30702,70.85649],[-25.54341,71.43094],[-25.20135,70.75226],[-26.36276,70.22646],[-23.72742,70.18401],[-22.34902,70.12946],[-25.02927,69.2588],[-27.74737,68.47046],[-30.67371,68.12503],[-31.77665,68.12078],[-32.81105,67.73547],[-34.20196,66.67974],[-36.35284,65.9789],[-37.04378,65.93768],[-38.37505,65.69213],[-39.81222,65.45848],[-40.66899,64.83997],[-40.68281,64.13902],[-41.1887,63.48246],[-42.81938,62.68233],[-42.41666,61.90093],[-42.86619,61.07404],[-43.3784,60.09772],[-44.7875,60.03676],[-46.26364,60.85328],[-48.26294,60.85843],[-49.23308,61.40681],[-49.90039,62.38336],[-51.63325,63.62691],[-52.14014,64.27842],[-52.27659,65.1767],[-53.66166,66.09957],[-53.30161,66.8365],[-53.96911,67.18899],[-52.9804,68.35759],[-51.47536,68.72958],[-51.08041,69.14781],[-50.87122,69.9291],[-52.013585,69.574925],[-52.55792,69.42616],[-53.45629,69.283625],[-54.68336,69.61003],[-54.75001,70.28932],[-54.35884,70.821315],[-53.431315,70.835755],[-51.39014,70.56978],[-53.10937,71.20485],[-54.00422,71.54719],[-55,71.406537],[-55.83468,71.65444],[-54.71819,72.58625],[-55.32634,72.95861],[-56.12003,73.64977],[-57.32363,74.71026],[-58.59679,75.09861],[-58.58516,75.51727],[-61.26861,76.10238],[-63.39165,76.1752],[-66.06427,76.13486],[-68.50438,76.06141],[-69.66485,76.37975],[-71.40257,77.00857],[-68.77671,77.32312],[-66.76397,77.37595],[-71.04293,77.63595],[-73.297,78.04419],[-73.15938,78.43271],[-69.37345,78.91388],[-65.7107,79.39436],[-65.3239,79.75814],[-68.02298,80.11721],[-67.15129,80.51582],[-63.68925,81.21396],[-62.23444,81.3211],[-62.65116,81.77042],[-60.28249,82.03363],[-57.20744,82.19074],[-54.13442,82.19962],[-53.04328,81.88833],[-50.39061,82.43883],[-48.00386,82.06481],[-46.59984,81.985945],[-44.523,81.6607],[-46.9007,82.19979],[-46.76379,82.62796]]]}},{type:"Feature",id:"GRD",properties:{name:"Grenada"},geometry:{type:"MultiPolygon",coordinates:[[[[-61.631581183999884,12.044094143000152],[-61.67442786399994,12.022040106000148],[-61.67442786399994,12.029486395000134],[-61.68297278599988,12.025376695000176],[-61.6893611319999,12.019761460000083],[-61.693430141999954,12.01227448100012],[-61.694935675999915,12.002834377000099],[-61.70425370999993,12.004543361000103],[-61.71324622299997,12.007269598000079],[-61.72175045499989,12.011053778000104],[-61.729644334999875,12.015814520000092],[-61.73997962099989,12.00690338700015],[-61.75694739499994,12.00340403900016],[-61.775542772999955,12.004339911000145],[-61.79051673099988,12.00836823100012],[-61.755848761999914,12.030259507000054],[-61.74950110599988,12.036322333000143],[-61.74596106699991,12.050930080000157],[-61.748850063999924,12.062648830000157],[-61.75377356699988,12.0741641300001],[-61.756418423999975,12.087836005000128],[-61.75104732999992,12.110093492000175],[-61.73029537699992,12.149318752000099],[-61.729644334999875,12.166652736000088],[-61.67145748599992,12.236070054000123],[-61.65050208199989,12.239732164000173],[-61.627674933999884,12.236721096000082],[-61.606027798999975,12.22337474200016],[-61.606678839999915,12.220282294000171],[-61.61294511599988,12.214422919000128],[-61.60456295499992,12.197455145000148],[-61.602772589999944,12.182928778000118],[-61.606312628999916,12.133775132000096],[-61.60871334499987,12.12677643400012],[-61.61310787699995,12.119859117000118],[-61.6197810539999,12.10455963700015],[-61.61945553299998,12.096747137000165],[-61.613840298999975,12.080389716000141],[-61.616363084999904,12.077297268000066],[-61.62157141799989,12.074937242000118],[-61.62450110599991,12.069037177000084],[-61.62572180899991,12.061224677000084],[-61.62604732999995,12.05304596600017],[-61.631581183999884,12.044094143000152]]],[[[-61.423329230999855,12.49518463700015],[-61.427398240999906,12.47540924700013],[-61.42804928299995,12.454657294000128],[-61.445668097999885,12.459784247000144],[-61.46255449099988,12.455145575000117],[-61.47923743399991,12.446722723000079],[-61.4962458979999,12.440375067000133],[-61.49278723899988,12.446478583000129],[-61.48607337099995,12.462225653000175],[-61.48265540299994,12.468329169000171],[-61.48574785099993,12.46881745000016],[-61.4962458979999,12.468329169000171],[-61.49478105399993,12.47231679900014],[-61.48888098899988,12.482001044000114],[-61.46727454299989,12.475572007000096],[-61.45433508999989,12.492824611000103],[-61.44347083199989,12.516546942000119],[-61.42804928299995,12.529730536000073],[-61.42162024599986,12.513373114000146],[-61.423329230999855,12.49518463700015]]]]}},{type:"Feature",id:"GTM",properties:{name:"Guatemala"},geometry:{type:"Polygon",coordinates:[[[-90.095555,13.735338],[-90.608624,13.909771],[-91.23241,13.927832],[-91.689747,14.126218],[-92.22775,14.538829],[-92.20323,14.830103],[-92.087216,15.064585],[-92.229249,15.251447],[-91.74796,16.066565],[-90.464473,16.069562],[-90.438867,16.41011],[-90.600847,16.470778],[-90.711822,16.687483],[-91.08167,16.918477],[-91.453921,17.252177],[-91.002269,17.254658],[-91.00152,17.817595],[-90.067934,17.819326],[-89.14308,17.808319],[-89.150806,17.015577],[-89.229122,15.886938],[-88.930613,15.887273],[-88.604586,15.70638],[-88.518364,15.855389],[-88.225023,15.727722],[-88.68068,15.346247],[-89.154811,15.066419],[-89.22522,14.874286],[-89.145535,14.678019],[-89.353326,14.424133],[-89.587343,14.362586],[-89.534219,14.244816],[-89.721934,14.134228],[-90.064678,13.88197],[-90.095555,13.735338]]]}},{type:"Feature",id:"GUF",properties:{name:"French Guiana"},geometry:{type:"Polygon",coordinates:[[[-52.556425,2.504705],[-52.939657,2.124858],[-53.418465,2.053389],[-53.554839,2.334897],[-53.778521,2.376703],[-54.088063,2.105557],[-54.524754,2.311849],[-54.27123,2.738748],[-54.184284,3.194172],[-54.011504,3.62257],[-54.399542,4.212611],[-54.478633,4.896756],[-53.958045,5.756548],[-53.618453,5.646529],[-52.882141,5.409851],[-51.823343,4.565768],[-51.657797,4.156232],[-52.249338,3.241094],[-52.556425,2.504705]]]}},{type:"Feature",id:"GUY",properties:{name:"Guyana"},geometry:{type:"Polygon",coordinates:[[[-59.758285,8.367035],[-59.101684,7.999202],[-58.482962,7.347691],[-58.454876,6.832787],[-58.078103,6.809094],[-57.542219,6.321268],[-57.147436,5.97315],[-57.307246,5.073567],[-57.914289,4.812626],[-57.86021,4.576801],[-58.044694,4.060864],[-57.601569,3.334655],[-57.281433,3.333492],[-57.150098,2.768927],[-56.539386,1.899523],[-56.782704,1.863711],[-57.335823,1.948538],[-57.660971,1.682585],[-58.11345,1.507195],[-58.429477,1.463942],[-58.540013,1.268088],[-59.030862,1.317698],[-59.646044,1.786894],[-59.718546,2.24963],[-59.974525,2.755233],[-59.815413,3.606499],[-59.53804,3.958803],[-59.767406,4.423503],[-60.111002,4.574967],[-59.980959,5.014061],[-60.213683,5.244486],[-60.733574,5.200277],[-61.410303,5.959068],[-61.139415,6.234297],[-61.159336,6.696077],[-60.543999,6.856584],[-60.295668,7.043911],[-60.637973,7.415],[-60.550588,7.779603],[-59.758285,8.367035]]]}},{type:"Feature",id:"HND",properties:{name:"Honduras"},geometry:{type:"Polygon",coordinates:[[[-87.316654,12.984686],[-87.489409,13.297535],[-87.793111,13.38448],[-87.723503,13.78505],[-87.859515,13.893312],[-88.065343,13.964626],[-88.503998,13.845486],[-88.541231,13.980155],[-88.843073,14.140507],[-89.058512,14.340029],[-89.353326,14.424133],[-89.145535,14.678019],[-89.22522,14.874286],[-89.154811,15.066419],[-88.68068,15.346247],[-88.225023,15.727722],[-88.121153,15.688655],[-87.901813,15.864458],[-87.61568,15.878799],[-87.522921,15.797279],[-87.367762,15.84694],[-86.903191,15.756713],[-86.440946,15.782835],[-86.119234,15.893449],[-86.001954,16.005406],[-85.683317,15.953652],[-85.444004,15.885749],[-85.182444,15.909158],[-84.983722,15.995923],[-84.52698,15.857224],[-84.368256,15.835158],[-84.063055,15.648244],[-83.773977,15.424072],[-83.410381,15.270903],[-83.147219,14.995829],[-83.489989,15.016267],[-83.628585,14.880074],[-83.975721,14.749436],[-84.228342,14.748764],[-84.449336,14.621614],[-84.649582,14.666805],[-84.820037,14.819587],[-84.924501,14.790493],[-85.052787,14.551541],[-85.148751,14.560197],[-85.165365,14.35437],[-85.514413,14.079012],[-85.698665,13.960078],[-85.801295,13.836055],[-86.096264,14.038187],[-86.312142,13.771356],[-86.520708,13.778487],[-86.755087,13.754845],[-86.733822,13.263093],[-86.880557,13.254204],[-87.005769,13.025794],[-87.316654,12.984686]]]}},{type:"Feature",id:"HKG",properties:{name:"Hong Kong S.A.R"},geometry:{type:"MultiPolygon",coordinates:[[[[114.11744225400005,22.221869208000086],[114.12574303500011,22.213446356000034],[114.13282311300017,22.21613190300009],[114.13282311300017,22.20994700700014],[114.12574303500011,22.205226955000043],[114.13819420700011,22.20604075700014],[114.14966881600017,22.20604075700014],[114.15463300900004,22.203599351000022],[114.14307701900006,22.19611237200003],[114.13908938900013,22.191107489],[114.14535566500015,22.178697007000054],[114.13738040500019,22.178778387000037],[114.11085045700023,22.177069403000033],[114.11410566499998,22.18573639500012],[114.11410566499998,22.21613190300009],[114.10425866000017,22.215969143000123],[114.10637454500025,22.222398179000052],[114.106700066,22.23578522300015],[114.11329186300006,22.23334381700012],[114.11744225400005,22.221869208000086]]],[[[114.22138264637076,22.288349808099827],[114.22536348241296,22.283972058309097],[114.23367030282009,22.283327709473234],[114.2403402087662,22.277515946311503],[114.2501935050235,22.267615611895906],[114.25629173616737,22.255811329217533],[114.25147545700011,22.248887437000022],[114.24529056100002,22.241888739000146],[114.24903405000018,22.23253001500011],[114.25375410200016,22.22398509300008],[114.24903405000018,22.222398179000052],[114.25611412900005,22.203599351000022],[114.24366295700011,22.201280015000137],[114.24048912900005,22.205226955000043],[114.23275800900004,22.211493231000176],[114.23267662900005,22.22199127800006],[114.22950280000006,22.233587958000058],[114.22266686300006,22.238836981000063],[114.21680748800023,22.23432038],[114.22266686300006,22.23253001500011],[114.22266686300006,22.224758205000015],[114.21867923300007,22.22398509300008],[114.21176191499998,22.21613190300009],[114.21867923300007,22.206000067000147],[114.215586785,22.19896067900008],[114.219493035,22.191880601000108],[114.20769290500002,22.189561265000137],[114.20606530000012,22.205226955000043],[114.20932050900015,22.207546291000185],[114.20655358200011,22.21238841400016],[114.19605553500006,22.207546291000185],[114.19141686300011,22.20994700700014],[114.19605553500006,22.21531810099999],[114.18905683700004,22.21922435099999],[114.1936955090001,22.22553131700012],[114.19141686300011,22.230983791000156],[114.1827091810002,22.23253001500011],[114.18384850400005,22.24103424700003],[114.17115319100017,22.233303127000127],[114.16724694100017,22.22785065300009],[114.16488691500015,22.22785065300009],[114.16260826900017,22.233303127000127],[114.16098066500015,22.2403832050001],[114.15219160200016,22.245021877000013],[114.13599694100006,22.245754299000126],[114.12907962300014,22.248887437000022],[114.12501061300006,22.256740627000013],[114.12354576900012,22.261379299000126],[114.11882571700019,22.26919179900004],[114.11255944100006,22.271511135000182],[114.11337324300004,22.277818101000108],[114.11565188900013,22.279364325000145],[114.12045332100004,22.281683661000116],[114.12907962300014,22.285630601000108],[114.13786491124577,22.290158161652766],[114.14762726519193,22.289935992466592],[114.15740094240132,22.287424305472108],[114.16455787109598,22.283594369538427],[114.17529250958732,22.282612408073263],[114.18816165500007,22.287176825000145],[114.196461429599,22.293215737651014],[114.21006425426319,22.292766672079033],[114.22138264637076,22.288349808099827]]],[[[114.05176842500012,22.328517971000096],[114.05022220099997,22.319932359000077],[114.046153191,22.323146877000127],[114.03834069100006,22.32457103100002],[114.03142337300014,22.32457103100002],[114.02963300900015,22.30898672100001],[114.01270592500023,22.311346747000144],[114.01270592500023,22.298081773000135],[114.02214603000007,22.30190664300015],[114.01758873800023,22.289048570000134],[114.01889082100004,22.26459381700009],[114.00416100400005,22.26459381700009],[113.99537194100017,22.26776764500015],[114.00725345100003,22.25210195500007],[113.99244225400005,22.241197007],[114.01498457100004,22.227077541000156],[114.00017337300008,22.21613190300009],[113.98194420700005,22.208238023000135],[113.98064212300008,22.21531810099999],[113.98064212300008,22.237250067000033],[113.96908613400015,22.237250067000033],[113.95956464900004,22.237250067000033],[113.9456486340001,22.237250067000033],[113.92839603000007,22.22398509300008],[113.9214787120001,22.22398509300008],[113.91830488400004,22.21922435099999],[113.92839603000007,22.216905015000023],[113.92839603000007,22.210760809000035],[113.91911868600013,22.205023505000085],[113.90626061300011,22.204006252000013],[113.89405358200011,22.21531810099999],[113.89250735800024,22.222398179000052],[113.88396243600008,22.219997463000098],[113.87370853000002,22.213080145],[113.85914147200018,22.20140208500011],[113.84644616000006,22.197088934000092],[113.83920332100004,22.204901434000092],[113.83790123800011,22.217962958000086],[113.83733157600014,22.228623765000023],[113.83920332100004,22.23419830900012],[113.8492130870001,22.23419830900012],[113.8492130870001,22.244126695000105],[113.85678144600016,22.245998440000093],[113.85678144600016,22.252264716000056],[113.85059655000006,22.256740627000013],[113.85059655000006,22.256781317],[113.85108483200017,22.257106838000126],[113.85987389400023,22.263454494000044],[113.86695397200018,22.268988348000065],[113.86760501400013,22.270738023000078],[113.87680097700004,22.272284247000115],[113.88396243600008,22.279364325000145],[113.89250735800024,22.292710679],[113.91130618600002,22.292710679],[113.9214787120001,22.29185618700008],[113.92839603000007,22.284857489],[113.93864993600019,22.288723049000012],[113.96192467500012,22.30117422100004],[113.97673587300008,22.298081773000135],[113.98373457100016,22.309027411],[113.99244225400005,22.31057363500004],[113.99952233200011,22.32225169500005],[114.01734459700018,22.33551666900017],[114.02051842500023,22.328517971000096],[114.04379316500015,22.34577057500009],[114.04932701900006,22.342230536000116],[114.0548608730002,22.336330471000096],[114.05176842500012,22.328517971000096]]],[[[114.17321740100019,22.56394603200006],[114.18303511600018,22.556195374000126],[114.19988163300016,22.556195374000126],[114.22071373800011,22.55512116100006],[114.22982832100004,22.555812893000095],[114.23471113399998,22.556179104000094],[114.22722415500013,22.547064520000035],[114.22217858200005,22.541449286000116],[114.21485436300006,22.534491278000033],[114.20997155000012,22.534491278000033],[114.20932050900015,22.52370840100012],[114.21794681100008,22.526027736000074],[114.21867923300007,22.52985260600009],[114.23039798300019,22.532945054],[114.23430423300024,22.53693268400015],[114.2420353520001,22.5501976580001],[114.2459416020001,22.55097077],[114.24903405000018,22.54783763200014],[114.25456790500019,22.55097077],[114.25766035200016,22.54783763200014],[114.25326582099999,22.539455471000068],[114.25920657600003,22.540798244000158],[114.26563561300023,22.535264390000137],[114.26514733200023,22.528469143000038],[114.27003014400012,22.52558014500009],[114.27800540500007,22.52985260600009],[114.27979576900023,22.526027736000074],[114.27979576900023,22.51972077000015],[114.27767988400015,22.511664130000028],[114.28516686300011,22.51117584800012],[114.28923587300008,22.50519440300009],[114.29851321700019,22.50100332200016],[114.32658938900013,22.508775132000082],[114.33277428500017,22.51194896000014],[114.33513431100002,22.506415106000034],[114.31633548300007,22.492377020000063],[114.305430535,22.483018296000054],[114.29363040500007,22.478257554000137],[114.28044681100019,22.47288646],[114.26872806100019,22.46503327],[114.26408938900019,22.458075262000094],[114.25375410200016,22.451768296000168],[114.2459416020001,22.451768296000168],[114.23121178500017,22.469794012000094],[114.21713300900015,22.467352606000148],[114.21176191499998,22.470567124000027],[114.20932050900015,22.46580638200011],[114.21094811300006,22.457302151000093],[114.215586785,22.454982815000122],[114.21713300900015,22.447943427000055],[114.20997155000012,22.449489651000093],[114.20932050900015,22.45408763200014],[114.20224043100009,22.458075262000094],[114.19060306100019,22.45652903900016],[114.18669681100019,22.451768296000168],[114.16749108200023,22.44806549700003],[114.17652428500006,22.44322337400014],[114.18751061300011,22.436143296000083],[114.20020592500018,22.428168036000116],[114.21176191499998,22.420599677],[114.20997155000012,22.412746486000103],[114.21485436300006,22.408880927],[114.20932050900015,22.398667710000055],[114.215586785,22.400336005000085],[114.22339928500011,22.415025132000082],[114.23422285199999,22.42475006700012],[114.23821048300024,22.43537018400015],[114.24382571700008,22.435532945000134],[114.25147545700011,22.430731512000037],[114.2671818370001,22.430731512000037],[114.26937910200016,22.425523179000052],[114.2671818370001,22.415961005000057],[114.2725529310002,22.409654039000102],[114.2764591810002,22.419826565000065],[114.28899173300013,22.42601146000011],[114.2764591810002,22.443996486000074],[114.28899173300013,22.45331452],[114.30160566499998,22.45652903900016],[114.30079186300011,22.46503327],[114.32374108200005,22.48004791900003],[114.3250431650001,22.47520579600014],[114.33073978000007,22.474107164000102],[114.3250431650001,22.464260158000073],[114.335703972,22.461737372000144],[114.33806399800008,22.446356512000122],[114.33277428500017,22.44000885600009],[114.33741295700011,22.431586005000142],[114.34278405000018,22.43768952000012],[114.34758548300024,22.422919012000037],[114.35230553500017,22.42369212400017],[114.35157311300023,22.440985419000143],[114.35987389400012,22.46116771],[114.36784915500007,22.454982815000122],[114.36736087300008,22.44627513200014],[114.3702091810002,22.44000885600009],[114.38575280000012,22.439235744000158],[114.39975019599999,22.436143296000083],[114.39739017000014,22.428412177000084],[114.40129642000014,22.412746486000103],[114.38933353000019,22.41791413],[114.38176517000025,22.41905345300013],[114.3702091810002,22.397975979000122],[114.37501061300011,22.400539455000043],[114.3849389980002,22.387355861000074],[114.3897404310002,22.365952867000132],[114.38656660200004,22.36522044500019],[114.38575280000012,22.370184637000065],[114.37639407600003,22.370632229000037],[114.3794865240001,22.362087307000124],[114.3755802740001,22.353461005000113],[114.3702091810002,22.348822333],[114.36085045700011,22.34577057500009],[114.35759524800002,22.332424221000096],[114.35230553500017,22.339463609000163],[114.35230553500017,22.351914781000076],[114.34197024800008,22.34577057500009],[114.33904056100002,22.352687893],[114.33277428500017,22.359767971000068],[114.33432050900004,22.37531159100014],[114.32040449300004,22.380764065],[114.31861412900017,22.389390367000104],[114.31006920700023,22.383775132000025],[114.30005944100006,22.381577867000104],[114.28598066500004,22.390977281000133],[114.27800540500007,22.390977281000133],[114.26872806100019,22.378444729000037],[114.27336673300013,22.36363353100016],[114.27979576900023,22.35500722900015],[114.2764591810002,22.348049221000068],[114.2671818370001,22.355780341000084],[114.26636803500006,22.365952867000132],[114.2583927740001,22.362087307000124],[114.25554446700008,22.35590241100006],[114.2657983730002,22.346340236000074],[114.2725529310002,22.32070547100001],[114.27719160200016,22.319199937000135],[114.29127037900011,22.316555080000157],[114.2920841810002,22.30516185099999],[114.2959904310002,22.30516185099999],[114.30388431100008,22.30670807500003],[114.31161543100009,22.297308661000116],[114.30567467500023,22.290757554000137],[114.29769941500004,22.285630601000108],[114.29053795700017,22.28794993700008],[114.28899173300013,22.287176825000145],[114.28972415500007,22.281683661000116],[114.28956139400006,22.273911851000136],[114.30005944100006,22.277044989],[114.30315188900013,22.26919179900004],[114.30315188900013,22.26215241100006],[114.29672285200004,22.25828685100005],[114.28899173300013,22.26459381700009],[114.27833092500006,22.27045319200012],[114.27979576900023,22.279364325000145],[114.27336673300013,22.29576243700008],[114.26482181100019,22.301947333000143],[114.26563561300023,22.309800523000106],[114.26636803500006,22.315985419000086],[114.25554446700008,22.32233307500003],[114.25147545700011,22.30516185099999],[114.25302168100004,22.29576243700008],[114.23894290500019,22.281683661000116],[114.22811933700021,22.29185618700008],[114.21176191499998,22.31057363500004],[114.21485436300006,22.30117422100004],[114.21249433700021,22.30117422100004],[114.19548587300008,22.318264065000065],[114.18653405000023,22.30874258000007],[114.19141686300011,22.301947333000143],[114.19141686300011,22.298895575000145],[114.1836857430001,22.301947333000143],[114.18165123800017,22.29441966400016],[114.17652428500006,22.291083075000145],[114.17188561300011,22.288723049000012],[114.16724694100017,22.29417552300005],[114.16822350400017,22.30548737200003],[114.16570071700008,22.31057363500004],[114.16488691500015,22.315212307000152],[114.1595158210001,22.315212307000152],[114.1595158210001,22.32225169500005],[114.15219160200016,22.328517971000096],[114.13819420700011,22.336004950000145],[114.12435957100004,22.342230536000116],[114.12354576900012,22.33714427299999],[114.11337324300004,22.352687893],[114.11101321700019,22.365952867000132],[114.10482832100004,22.369859117000132],[114.09750410200004,22.36302317900011],[114.07911217500006,22.365952867000132],[114.07829837300008,22.362860419000143],[114.07040449300021,22.362860419000143],[114.06723066500015,22.358994859000134],[114.05795332099999,22.361314195000105],[114.05022220099997,22.358994859000134],[114.03988691500015,22.35500722900015],[114.02051842500023,22.35036855700004],[114.01498457100004,22.353461005000113],[114.01498457100004,22.358994859000134],[113.99862714900021,22.358994859000134],[113.99187259200008,22.364081122000144],[113.982676629,22.366766669000057],[113.97673587300008,22.37921784100014],[113.97291100400017,22.379990953000075],[113.97063235800007,22.387071031000133],[113.96436608200023,22.38068268400012],[113.97461998800006,22.37205638200011],[113.95492597700004,22.369859117000132],[113.94483483200005,22.362087307000124],[113.93067467500023,22.369086005],[113.92595462300002,22.369086005],[113.91439863400004,22.376125393000066],[113.91830488400004,22.387844143000066],[113.91057376400008,22.398667710000055],[113.89698326900023,22.408758856000034],[113.90943444100006,22.41860586100013],[113.93067467500023,22.419826565000065],[113.94100996200004,22.426784572000045],[113.95411217500012,22.449489651000093],[113.97754967500012,22.458848374000027],[113.99862714900021,22.48855215100015],[114.00489342500018,22.48855215100015],[114.01270592500023,22.48611074400013],[114.01172936300006,22.48004791900003],[114.01115970100003,22.47288646],[114.01498457100004,22.47520579600014],[114.02678470100003,22.478257554000137],[114.0298771490001,22.478257554000137],[114.03142337300014,22.48224518400012],[114.03060957100004,22.487656968000167],[114.03060957100004,22.49551015800013],[114.042246941,22.50100332200016],[114.05795332099999,22.504868882],[114.06177819100012,22.508775132000082],[114.0657658210001,22.51585521000014],[114.07349694100017,22.51817454600011],[114.07829837300008,22.51972077000015],[114.08529707100016,22.522935289000102],[114.08236738400015,22.529364325000117],[114.09146447800018,22.534387919],[114.10841434700004,22.534387919],[114.11399540200003,22.52880686400009],[114.11709598800016,22.527566630000038],[114.12887821400008,22.5381086230001],[114.13817997200019,22.53934885700015],[114.14872196500008,22.5381086230001],[114.15388960900023,22.551854554000144],[114.16195113200015,22.560536194000107],[114.17321740100019,22.56394603200006]]]]}},{type:"Feature",id:"HRV",properties:{name:"Croatia"},geometry:{type:"Polygon",coordinates:[[[18.829838,45.908878],[19.072769,45.521511],[19.390476,45.236516],[19.005486,44.860234],[18.553214,45.08159],[17.861783,45.06774],[17.002146,45.233777],[16.534939,45.211608],[16.318157,45.004127],[15.959367,45.233777],[15.750026,44.818712],[16.23966,44.351143],[16.456443,44.04124],[16.916156,43.667722],[17.297373,43.446341],[17.674922,43.028563],[18.56,42.65],[18.450016,42.479991],[17.50997,42.849995],[16.930006,43.209998],[16.015385,43.507215],[15.174454,44.243191],[15.37625,44.317915],[14.920309,44.738484],[14.901602,45.07606],[14.258748,45.233777],[13.952255,44.802124],[13.656976,45.136935],[13.679403,45.484149],[13.71506,45.500324],[14.411968,45.466166],[14.595109,45.634941],[14.935244,45.471695],[15.327675,45.452316],[15.323954,45.731783],[15.67153,45.834154],[15.768733,46.238108],[16.564808,46.503751],[16.882515,46.380632],[17.630066,45.951769],[18.456062,45.759481],[18.829838,45.908878]]]}},{type:"Feature",id:"HTI",properties:{name:"Haiti"},geometry:{type:"Polygon",coordinates:[[[-73.189791,19.915684],[-72.579673,19.871501],[-71.712361,19.714456],[-71.624873,19.169838],[-71.701303,18.785417],[-71.945112,18.6169],[-71.687738,18.31666],[-71.708305,18.044997],[-72.372476,18.214961],[-72.844411,18.145611],[-73.454555,18.217906],[-73.922433,18.030993],[-74.458034,18.34255],[-74.369925,18.664908],[-73.449542,18.526053],[-72.694937,18.445799],[-72.334882,18.668422],[-72.79165,19.101625],[-72.784105,19.483591],[-73.415022,19.639551],[-73.189791,19.915684]]]}},{type:"Feature",id:"HUN",properties:{name:"Hungary"},geometry:{type:"Polygon",coordinates:[[[16.202298,46.852386],[16.534268,47.496171],[16.340584,47.712902],[16.903754,47.714866],[16.979667,48.123497],[17.488473,47.867466],[17.857133,47.758429],[18.696513,47.880954],[18.777025,48.081768],[19.174365,48.111379],[19.661364,48.266615],[19.769471,48.202691],[20.239054,48.327567],[20.473562,48.56285],[20.801294,48.623854],[21.872236,48.319971],[22.085608,48.422264],[22.64082,48.15024],[22.710531,47.882194],[22.099768,47.672439],[21.626515,46.994238],[21.021952,46.316088],[20.220192,46.127469],[19.596045,46.17173],[18.829838,45.908878],[18.456062,45.759481],[17.630066,45.951769],[16.882515,46.380632],[16.564808,46.503751],[16.370505,46.841327],[16.202298,46.852386]]]}},{type:"Feature",id:"IDN",properties:{name:"Indonesia"},geometry:{type:"MultiPolygon",coordinates:[[[[120.715609,-10.239581],[120.295014,-10.25865],[118.967808,-9.557969],[119.90031,-9.36134],[120.425756,-9.665921],[120.775502,-9.969675],[120.715609,-10.239581]]],[[[124.43595,-10.140001],[123.579982,-10.359987],[123.459989,-10.239995],[123.550009,-9.900016],[123.980009,-9.290027],[124.968682,-8.89279],[125.07002,-9.089987],[125.08852,-9.393173],[124.43595,-10.140001]]],[[[117.900018,-8.095681],[118.260616,-8.362383],[118.87846,-8.280683],[119.126507,-8.705825],[117.970402,-8.906639],[117.277731,-9.040895],[116.740141,-9.032937],[117.083737,-8.457158],[117.632024,-8.449303],[117.900018,-8.095681]]],[[[122.903537,-8.094234],[122.756983,-8.649808],[121.254491,-8.933666],[119.924391,-8.810418],[119.920929,-8.444859],[120.715092,-8.236965],[121.341669,-8.53674],[122.007365,-8.46062],[122.903537,-8.094234]]],[[[108.623479,-6.777674],[110.539227,-6.877358],[110.759576,-6.465186],[112.614811,-6.946036],[112.978768,-7.594213],[114.478935,-7.776528],[115.705527,-8.370807],[114.564511,-8.751817],[113.464734,-8.348947],[112.559672,-8.376181],[111.522061,-8.302129],[110.58615,-8.122605],[109.427667,-7.740664],[108.693655,-7.6416],[108.277763,-7.766657],[106.454102,-7.3549],[106.280624,-6.9249],[105.365486,-6.851416],[106.051646,-5.895919],[107.265009,-5.954985],[108.072091,-6.345762],[108.486846,-6.421985],[108.623479,-6.777674]]],[[[134.724624,-6.214401],[134.210134,-6.895238],[134.112776,-6.142467],[134.290336,-5.783058],[134.499625,-5.445042],[134.727002,-5.737582],[134.724624,-6.214401]]],[[[127.249215,-3.459065],[126.874923,-3.790983],[126.183802,-3.607376],[125.989034,-3.177273],[127.000651,-3.129318],[127.249215,-3.459065]]],[[[130.471344,-3.093764],[130.834836,-3.858472],[129.990547,-3.446301],[129.155249,-3.362637],[128.590684,-3.428679],[127.898891,-3.393436],[128.135879,-2.84365],[129.370998,-2.802154],[130.471344,-3.093764]]],[[[134.143368,-1.151867],[134.422627,-2.769185],[135.457603,-3.367753],[136.293314,-2.307042],[137.440738,-1.703513],[138.329727,-1.702686],[139.184921,-2.051296],[139.926684,-2.409052],[141.00021,-2.600151],[141.017057,-5.859022],[141.033852,-9.117893],[140.143415,-8.297168],[139.127767,-8.096043],[138.881477,-8.380935],[137.614474,-8.411683],[138.039099,-7.597882],[138.668621,-7.320225],[138.407914,-6.232849],[137.92784,-5.393366],[135.98925,-4.546544],[135.164598,-4.462931],[133.66288,-3.538853],[133.367705,-4.024819],[132.983956,-4.112979],[132.756941,-3.746283],[132.753789,-3.311787],[131.989804,-2.820551],[133.066845,-2.460418],[133.780031,-2.479848],[133.696212,-2.214542],[132.232373,-2.212526],[131.836222,-1.617162],[130.94284,-1.432522],[130.519558,-.93772],[131.867538,-.695461],[132.380116,-.369538],[133.985548,-.78021],[134.143368,-1.151867]]],[[[125.240501,1.419836],[124.437035,.427881],[123.685505,.235593],[122.723083,.431137],[121.056725,.381217],[120.183083,.237247],[120.04087,-.519658],[120.935905,-1.408906],[121.475821,-.955962],[123.340565,-.615673],[123.258399,-1.076213],[122.822715,-.930951],[122.38853,-1.516858],[121.508274,-1.904483],[122.454572,-3.186058],[122.271896,-3.5295],[123.170963,-4.683693],[123.162333,-5.340604],[122.628515,-5.634591],[122.236394,-5.282933],[122.719569,-4.464172],[121.738234,-4.851331],[121.489463,-4.574553],[121.619171,-4.188478],[120.898182,-3.602105],[120.972389,-2.627643],[120.305453,-2.931604],[120.390047,-4.097579],[120.430717,-5.528241],[119.796543,-5.6734],[119.366906,-5.379878],[119.653606,-4.459417],[119.498835,-3.494412],[119.078344,-3.487022],[118.767769,-2.801999],[119.180974,-2.147104],[119.323394,-1.353147],[119.825999,.154254],[120.035702,.566477],[120.885779,1.309223],[121.666817,1.013944],[122.927567,.875192],[124.077522,.917102],[125.065989,1.643259],[125.240501,1.419836]]],[[[128.688249,1.132386],[128.635952,.258486],[128.12017,.356413],[127.968034,-.252077],[128.379999,-.780004],[128.100016,-.899996],[127.696475,-.266598],[127.39949,1.011722],[127.600512,1.810691],[127.932378,2.174596],[128.004156,1.628531],[128.594559,1.540811],[128.688249,1.132386]]],[[[117.875627,1.827641],[118.996747,.902219],[117.811858,.784242],[117.478339,.102475],[117.521644,-.803723],[116.560048,-1.487661],[116.533797,-2.483517],[116.148084,-4.012726],[116.000858,-3.657037],[114.864803,-4.106984],[114.468652,-3.495704],[113.755672,-3.43917],[113.256994,-3.118776],[112.068126,-3.478392],[111.703291,-2.994442],[111.04824,-3.049426],[110.223846,-2.934032],[110.070936,-1.592874],[109.571948,-1.314907],[109.091874,-.459507],[108.952658,.415375],[109.069136,1.341934],[109.66326,2.006467],[109.830227,1.338136],[110.514061,.773131],[111.159138,.976478],[111.797548,.904441],[112.380252,1.410121],[112.859809,1.49779],[113.80585,1.217549],[114.621355,1.430688],[115.134037,2.821482],[115.519078,3.169238],[115.865517,4.306559],[117.015214,4.306094],[117.882035,4.137551],[117.313232,3.234428],[118.04833,2.28769],[117.875627,1.827641]]],[[[105.817655,-5.852356],[104.710384,-5.873285],[103.868213,-5.037315],[102.584261,-4.220259],[102.156173,-3.614146],[101.399113,-2.799777],[100.902503,-2.050262],[100.141981,-.650348],[99.26374,.183142],[98.970011,1.042882],[98.601351,1.823507],[97.699598,2.453184],[97.176942,3.308791],[96.424017,3.86886],[95.380876,4.970782],[95.293026,5.479821],[95.936863,5.439513],[97.484882,5.246321],[98.369169,4.26837],[99.142559,3.59035],[99.693998,3.174329],[100.641434,2.099381],[101.658012,2.083697],[102.498271,1.3987],[103.07684,.561361],[103.838396,.104542],[103.437645,-.711946],[104.010789,-1.059212],[104.369991,-1.084843],[104.53949,-1.782372],[104.887893,-2.340425],[105.622111,-2.428844],[106.108593,-3.061777],[105.857446,-4.305525],[105.817655,-5.852356]]]]}},{type:"Feature",id:"IOT",properties:{name:"British Indian Ocean Territory"},geometry:{type:"MultiPolygon",coordinates:[[[[72.43897545700011,-7.340264580999858],[72.432871941,-7.425388278999847],[72.4432072270001,-7.416436455999829],[72.46753991000011,-7.383884372999859],[72.4715275400001,-7.379082940999865],[72.47478274800014,-7.376560153999847],[72.47771243600008,-7.372816664999917],[72.48031660200016,-7.364678643999895],[72.48316491000017,-7.370293877999899],[72.48462975400011,-7.375909112999892],[72.48414147200006,-7.382500908999873],[72.48064212300008,-7.390557549999912],[72.47266686300011,-7.399997653999918],[72.44410241000011,-7.424981377999842],[72.432871941,-7.43222421699987],[72.42693118600019,-7.403985283999901],[72.432871941,-7.346774997999845],[72.42603600400011,-7.322930596999868],[72.41944420700023,-7.317315362999864],[72.3966577480002,-7.304864190999851],[72.38819420700005,-7.302504164999888],[72.37924238400015,-7.296807549999897],[72.35767662900011,-7.268324476999808],[72.37094160200016,-7.270196221999868],[72.42017662900017,-7.30388762799987],[72.432871941,-7.316094658999845],[72.43897545700011,-7.340264580999858]]],[[[72.47535241000011,-7.352797132999854],[72.47901451900006,-7.361911716999842],[72.4749455090001,-7.356540622999887],[72.470469597,-7.348890882999854],[72.46802819100017,-7.340590101999879],[72.47071373800006,-7.333184502999885],[72.4865014980002,-7.302422783999901],[72.47722415500007,-7.278415622999859],[72.45679772200018,-7.255140882999854],[72.43970787900011,-7.226739190999822],[72.45045006600006,-7.234144789999903],[72.48422285200016,-7.278252862999892],[72.49463951900012,-7.296156507999854],[72.4895939460001,-7.309828382999896],[72.47934004000015,-7.323174737999906],[72.47380618600008,-7.340020440999908],[72.47429446700002,-7.346937757999811],[72.47535241000011,-7.352797132999854]]],[[[71.36207116000011,-6.652927341999913],[71.355235222,-6.656345309999921],[71.35173587300014,-6.655694268999881],[71.35035241000011,-6.653497002999885],[71.35035241000011,-6.652520440999822],[71.36207116000011,-6.652927341999913]]],[[[71.26482181100002,-6.385918877999899],[71.26140384200002,-6.388604424999883],[71.260996941,-6.378024997999845],[71.26238040500019,-6.373955987999878],[71.26734459700006,-6.370049737999878],[71.268809441,-6.378106377999828],[71.26758873800011,-6.382745049999841],[71.26482181100002,-6.385918877999899]]],[[[71.35108483200005,-6.200290622999873],[71.34473717500006,-6.204847914999903],[71.33838951900012,-6.195896091999884],[71.34229576900012,-6.188083591999884],[71.3470158210001,-6.182224216999856],[71.35328209700018,-6.178399346999839],[71.36052493600019,-6.177341403999876],[71.35670006600017,-6.188734632999839],[71.35108483200005,-6.200290622999873]]],[[[71.77418053500017,-5.438083591999856],[71.77320397200018,-5.440199476999865],[71.76465905000006,-5.433851820999848],[71.76238040500019,-5.431735934999921],[71.77173912900011,-5.43336353999986],[71.77458743600008,-5.435723565999908],[71.77418053500017,-5.438083591999856]]],[[[72.22291100400011,-5.32773202899989],[72.22144616000017,-5.327813408999873],[72.23096764400006,-5.319268487999864],[72.22828209700018,-5.32480234199987],[72.22535241000011,-5.327243747999901],[72.22291100400011,-5.32773202899989]]],[[[71.73894290500013,-5.284926039999903],[71.73707116000011,-5.285251559999921],[71.74708092500012,-5.269952080999872],[71.7454533210001,-5.278741143999838],[71.74236087300014,-5.283135674999826],[71.73894290500013,-5.284926039999903]]],[[[71.76644941500015,-5.239190362999892],[71.7644962900001,-5.239678643999881],[71.76270592500012,-5.237969658999873],[71.76026451900006,-5.236586195999806],[71.76856530000006,-5.23414478999986],[71.76644941500015,-5.239190362999892]]],[[[71.9661564460001,-5.231703382999825],[71.9661564460001,-5.2347958309999],[71.96461022200018,-5.232354424999869],[71.9627384770001,-5.231215101999837],[71.96168053500017,-5.23007577899989],[71.9627384770001,-5.226983330999914],[71.96648196700008,-5.227471612999892],[71.96705162900011,-5.229180596999896],[71.9661564460001,-5.231703382999825]]]]}},{type:"Feature",id:"IND",properties:{name:"India"},geometry:{type:"Polygon",coordinates:[[[77.837451,35.49401],[78.912269,34.321936],[78.811086,33.506198],[79.208892,32.994395],[79.176129,32.48378],[78.458446,32.618164],[78.738894,31.515906],[79.721367,30.882715],[81.111256,30.183481],[80.476721,29.729865],[80.088425,28.79447],[81.057203,28.416095],[81.999987,27.925479],[83.304249,27.364506],[84.675018,27.234901],[85.251779,26.726198],[86.024393,26.630985],[87.227472,26.397898],[88.060238,26.414615],[88.174804,26.810405],[88.043133,27.445819],[88.120441,27.876542],[88.730326,28.086865],[88.814248,27.299316],[88.835643,27.098966],[89.744528,26.719403],[90.373275,26.875724],[91.217513,26.808648],[92.033484,26.83831],[92.103712,27.452614],[91.696657,27.771742],[92.503119,27.896876],[93.413348,28.640629],[94.56599,29.277438],[95.404802,29.031717],[96.117679,29.452802],[96.586591,28.83098],[96.248833,28.411031],[97.327114,28.261583],[97.402561,27.882536],[97.051989,27.699059],[97.133999,27.083774],[96.419366,27.264589],[95.124768,26.573572],[95.155153,26.001307],[94.603249,25.162495],[94.552658,24.675238],[94.106742,23.850741],[93.325188,24.078556],[93.286327,23.043658],[93.060294,22.703111],[93.166128,22.27846],[92.672721,22.041239],[92.146035,23.627499],[91.869928,23.624346],[91.706475,22.985264],[91.158963,23.503527],[91.46773,24.072639],[91.915093,24.130414],[92.376202,24.976693],[91.799596,25.147432],[90.872211,25.132601],[89.920693,25.26975],[89.832481,25.965082],[89.355094,26.014407],[88.563049,26.446526],[88.209789,25.768066],[88.931554,25.238692],[88.306373,24.866079],[88.084422,24.501657],[88.69994,24.233715],[88.52977,23.631142],[88.876312,22.879146],[89.031961,22.055708],[88.888766,21.690588],[88.208497,21.703172],[86.975704,21.495562],[87.033169,20.743308],[86.499351,20.151638],[85.060266,19.478579],[83.941006,18.30201],[83.189217,17.671221],[82.192792,17.016636],[82.191242,16.556664],[81.692719,16.310219],[80.791999,15.951972],[80.324896,15.899185],[80.025069,15.136415],[80.233274,13.835771],[80.286294,13.006261],[79.862547,12.056215],[79.857999,10.357275],[79.340512,10.308854],[78.885345,9.546136],[79.18972,9.216544],[78.277941,8.933047],[77.941165,8.252959],[77.539898,7.965535],[76.592979,8.899276],[76.130061,10.29963],[75.746467,11.308251],[75.396101,11.781245],[74.864816,12.741936],[74.616717,13.992583],[74.443859,14.617222],[73.534199,15.990652],[73.119909,17.92857],[72.820909,19.208234],[72.824475,20.419503],[72.630533,21.356009],[71.175273,20.757441],[70.470459,20.877331],[69.16413,22.089298],[69.644928,22.450775],[69.349597,22.84318],[68.176645,23.691965],[68.842599,24.359134],[71.04324,24.356524],[70.844699,25.215102],[70.282873,25.722229],[70.168927,26.491872],[69.514393,26.940966],[70.616496,27.989196],[71.777666,27.91318],[72.823752,28.961592],[73.450638,29.976413],[74.42138,30.979815],[74.405929,31.692639],[75.258642,32.271105],[74.451559,32.7649],[74.104294,33.441473],[73.749948,34.317699],[74.240203,34.748887],[75.757061,34.504923],[76.871722,34.653544],[77.837451,35.49401]]]}},{type:"Feature",id:"IRL",properties:{name:"Ireland"},geometry:{type:"Polygon",coordinates:[[[-6.197885,53.867565],[-6.032985,53.153164],[-6.788857,52.260118],[-8.561617,51.669301],[-9.977086,51.820455],[-9.166283,52.864629],[-9.688525,53.881363],[-8.327987,54.664519],[-7.572168,55.131622],[-7.366031,54.595841],[-7.572168,54.059956],[-6.95373,54.073702],[-6.197885,53.867565]]]}},{type:"Feature",id:"IRN",properties:{name:"Iran"},geometry:{type:"Polygon",coordinates:[[[53.921598,37.198918],[54.800304,37.392421],[55.511578,37.964117],[56.180375,37.935127],[56.619366,38.121394],[57.330434,38.029229],[58.436154,37.522309],[59.234762,37.412988],[60.377638,36.527383],[61.123071,36.491597],[61.210817,35.650072],[60.803193,34.404102],[60.52843,33.676446],[60.9637,33.528832],[60.536078,32.981269],[60.863655,32.18292],[60.941945,31.548075],[61.699314,31.379506],[61.781222,30.73585],[60.874248,29.829239],[61.369309,29.303276],[61.771868,28.699334],[62.72783,28.259645],[62.755426,27.378923],[63.233898,27.217047],[63.316632,26.756532],[61.874187,26.239975],[61.497363,25.078237],[59.616134,25.380157],[58.525761,25.609962],[57.397251,25.739902],[56.970766,26.966106],[56.492139,27.143305],[55.72371,26.964633],[54.71509,26.480658],[53.493097,26.812369],[52.483598,27.580849],[51.520763,27.86569],[50.852948,28.814521],[50.115009,30.147773],[49.57685,29.985715],[48.941333,30.31709],[48.567971,29.926778],[48.014568,30.452457],[48.004698,30.985137],[47.685286,30.984853],[47.849204,31.709176],[47.334661,32.469155],[46.109362,33.017287],[45.416691,33.967798],[45.64846,34.748138],[46.151788,35.093259],[46.07634,35.677383],[45.420618,35.977546],[44.77267,37.17045],[44.225756,37.971584],[44.421403,38.281281],[44.109225,39.428136],[44.79399,39.713003],[44.952688,39.335765],[45.457722,38.874139],[46.143623,38.741201],[46.50572,38.770605],[47.685079,39.508364],[48.060095,39.582235],[48.355529,39.288765],[48.010744,38.794015],[48.634375,38.270378],[48.883249,38.320245],[49.199612,37.582874],[50.147771,37.374567],[50.842354,36.872814],[52.264025,36.700422],[53.82579,36.965031],[53.921598,37.198918]]]}},{type:"Feature",id:"IRQ",properties:{name:"Iraq"},geometry:{type:"Polygon",coordinates:[[[45.420618,35.977546],[46.07634,35.677383],[46.151788,35.093259],[45.64846,34.748138],[45.416691,33.967798],[46.109362,33.017287],[47.334661,32.469155],[47.849204,31.709176],[47.685286,30.984853],[48.004698,30.985137],[48.014568,30.452457],[48.567971,29.926778],[47.974519,29.975819],[47.302622,30.05907],[46.568713,29.099025],[44.709499,29.178891],[41.889981,31.190009],[40.399994,31.889992],[39.195468,32.161009],[38.792341,33.378686],[41.006159,34.419372],[41.383965,35.628317],[41.289707,36.358815],[41.837064,36.605854],[42.349591,37.229873],[42.779126,37.385264],[43.942259,37.256228],[44.293452,37.001514],[44.772699,37.170445],[45.420618,35.977546]]]}},{type:"Feature",id:"ISL",properties:{name:"Iceland"},geometry:{type:"Polygon",coordinates:[[[-14.508695,66.455892],[-14.739637,65.808748],[-13.609732,65.126671],[-14.909834,64.364082],[-17.794438,63.678749],[-18.656246,63.496383],[-19.972755,63.643635],[-22.762972,63.960179],[-21.778484,64.402116],[-23.955044,64.89113],[-22.184403,65.084968],[-22.227423,65.378594],[-24.326184,65.611189],[-23.650515,66.262519],[-22.134922,66.410469],[-20.576284,65.732112],[-19.056842,66.276601],[-17.798624,65.993853],[-16.167819,66.526792],[-14.508695,66.455892]]]}},{type:"Feature",id:"ISR",properties:{name:"Israel"},geometry:{type:"Polygon",coordinates:[[[35.719918,32.709192],[35.545665,32.393992],[35.18393,32.532511],[34.974641,31.866582],[35.225892,31.754341],[34.970507,31.616778],[34.927408,31.353435],[35.397561,31.489086],[35.420918,31.100066],[34.922603,29.501326],[34.265433,31.219361],[34.556372,31.548824],[34.488107,31.605539],[34.752587,32.072926],[34.955417,32.827376],[35.098457,33.080539],[35.126053,33.0909],[35.460709,33.08904],[35.552797,33.264275],[35.821101,33.277426],[35.836397,32.868123],[35.700798,32.716014],[35.719918,32.709192]]]}},{type:"Feature",id:"ITA",properties:{name:"Italy"},geometry:{type:"MultiPolygon",coordinates:[[[[15.520376,38.231155],[15.160243,37.444046],[15.309898,37.134219],[15.099988,36.619987],[14.335229,36.996631],[13.826733,37.104531],[12.431004,37.61295],[12.570944,38.126381],[13.741156,38.034966],[14.761249,38.143874],[15.520376,38.231155]]],[[[9.210012,41.209991],[9.809975,40.500009],[9.669519,39.177376],[9.214818,39.240473],[8.806936,38.906618],[8.428302,39.171847],[8.388253,40.378311],[8.159998,40.950007],[8.709991,40.899984],[9.210012,41.209991]]],[[[12.376485,46.767559],[13.806475,46.509306],[13.69811,46.016778],[13.93763,45.591016],[13.141606,45.736692],[12.328581,45.381778],[12.383875,44.885374],[12.261453,44.600482],[12.589237,44.091366],[13.526906,43.587727],[14.029821,42.761008],[15.14257,41.95514],[15.926191,41.961315],[16.169897,41.740295],[15.889346,41.541082],[16.785002,41.179606],[17.519169,40.877143],[18.376687,40.355625],[18.480247,40.168866],[18.293385,39.810774],[17.73838,40.277671],[16.869596,40.442235],[16.448743,39.795401],[17.17149,39.4247],[17.052841,38.902871],[16.635088,38.843572],[16.100961,37.985899],[15.684087,37.908849],[15.687963,38.214593],[15.891981,38.750942],[16.109332,38.964547],[15.718814,39.544072],[15.413613,40.048357],[14.998496,40.172949],[14.703268,40.60455],[14.060672,40.786348],[13.627985,41.188287],[12.888082,41.25309],[12.106683,41.704535],[11.191906,42.355425],[10.511948,42.931463],[10.200029,43.920007],[9.702488,44.036279],[8.888946,44.366336],[8.428561,44.231228],[7.850767,43.767148],[7.435185,43.693845],[7.549596,44.127901],[7.007562,44.254767],[6.749955,45.028518],[7.096652,45.333099],[6.802355,45.70858],[6.843593,45.991147],[7.273851,45.776948],[7.755992,45.82449],[8.31663,46.163642],[8.489952,46.005151],[8.966306,46.036932],[9.182882,46.440215],[9.922837,46.314899],[10.363378,46.483571],[10.442701,46.893546],[11.048556,46.751359],[11.164828,46.941579],[12.153088,47.115393],[12.376485,46.767559]]]]}},{type:"Feature",id:"JAM",properties:{name:"Jamaica"},geometry:{type:"Polygon",coordinates:[[[-77.569601,18.490525],[-76.896619,18.400867],[-76.365359,18.160701],[-76.199659,17.886867],[-76.902561,17.868238],[-77.206341,17.701116],[-77.766023,17.861597],[-78.337719,18.225968],[-78.217727,18.454533],[-77.797365,18.524218],[-77.569601,18.490525]]]}},{type:"Feature",id:"JOR",properties:{name:"Jordan"},geometry:{type:"Polygon",coordinates:[[[35.545665,32.393992],[35.719918,32.709192],[36.834062,32.312938],[38.792341,33.378686],[39.195468,32.161009],[39.004886,32.010217],[37.002166,31.508413],[37.998849,30.5085],[37.66812,30.338665],[37.503582,30.003776],[36.740528,29.865283],[36.501214,29.505254],[36.068941,29.197495],[34.956037,29.356555],[34.922603,29.501326],[35.420918,31.100066],[35.397561,31.489086],[35.545252,31.782505],[35.545665,32.393992]]]}},{type:"Feature",id:"JPN",properties:{name:"Japan"},geometry:{type:"MultiPolygon",coordinates:[[[[134.638428,34.149234],[134.766379,33.806335],[134.203416,33.201178],[133.79295,33.521985],[133.280268,33.28957],[133.014858,32.704567],[132.363115,32.989382],[132.371176,33.463642],[132.924373,34.060299],[133.492968,33.944621],[133.904106,34.364931],[134.638428,34.149234]]],[[[140.976388,37.142074],[140.59977,36.343983],[140.774074,35.842877],[140.253279,35.138114],[138.975528,34.6676],[137.217599,34.606286],[135.792983,33.464805],[135.120983,33.849071],[135.079435,34.596545],[133.340316,34.375938],[132.156771,33.904933],[130.986145,33.885761],[132.000036,33.149992],[131.33279,31.450355],[130.686318,31.029579],[130.20242,31.418238],[130.447676,32.319475],[129.814692,32.61031],[129.408463,33.296056],[130.353935,33.604151],[130.878451,34.232743],[131.884229,34.749714],[132.617673,35.433393],[134.608301,35.731618],[135.677538,35.527134],[136.723831,37.304984],[137.390612,36.827391],[138.857602,37.827485],[139.426405,38.215962],[140.05479,39.438807],[139.883379,40.563312],[140.305783,41.195005],[141.368973,41.37856],[141.914263,39.991616],[141.884601,39.180865],[140.959489,38.174001],[140.976388,37.142074]]],[[[143.910162,44.1741],[144.613427,43.960883],[145.320825,44.384733],[145.543137,43.262088],[144.059662,42.988358],[143.18385,41.995215],[141.611491,42.678791],[141.067286,41.584594],[139.955106,41.569556],[139.817544,42.563759],[140.312087,43.333273],[141.380549,43.388825],[141.671952,44.772125],[141.967645,45.551483],[143.14287,44.510358],[143.910162,44.1741]]]]}},{type:"Feature",id:"JEY",properties:{name:"Jersey"},geometry:{type:"MultiPolygon",coordinates:[[[[-2.082671678999901,49.260239976],[-2.067860480999855,49.25067780200001],[-2.020659959999875,49.235256252000084],[-2.02196204299986,49.22549062700003],[-2.017323370999918,49.2213809270001],[-2.011870897999899,49.2152774110001],[-2.008290167999917,49.21246979400004],[-2.0169978509999,49.20722077000008],[-2.020985480999883,49.20075104400007],[-2.022043423999946,49.19245026200008],[-2.02196204299986,49.18138255400004],[-2.024525519999969,49.17133209800008],[-2.031158006999931,49.17145416900004],[-2.04002844999988,49.17572663000004],[-2.049224412999934,49.17829010600005],[-2.079986131999931,49.17869700700007],[-2.096994594999899,49.1836612000001],[-2.120228644999912,49.19916413000004],[-2.128895636999914,49.20307038000004],[-2.137928839999916,49.205633856000134],[-2.144846157999922,49.205633856000134],[-2.152943488999938,49.19993724200006],[-2.16063391799986,49.190741278000075],[-2.168690558999913,49.17829010600005],[-2.177154100999928,49.18016185100004],[-2.189686652999853,49.189113674000055],[-2.200103318999936,49.191961981000105],[-2.202951626999976,49.19041575700007],[-2.223378058999856,49.18471914300008],[-2.233631964999887,49.18451569200002],[-2.226470506999931,49.20600006700005],[-2.233225063999953,49.228501695000034],[-2.242014126999919,49.24795156500005],[-2.241118943999936,49.260239976],[-2.229359503999945,49.26300690300005],[-2.215199347999942,49.260239976],[-2.196278449999909,49.25340403900009],[-2.182728644999941,49.25405508000003],[-2.17235266799986,49.256252346000025],[-2.162709113999881,49.26040273600006],[-2.151682094999927,49.26703522300002],[-2.143788214999859,49.26186758000003],[-2.121978318999908,49.25828685100004],[-2.110666469999927,49.25340403900009],[-2.103871222999914,49.25820547100005],[-2.097564256999874,49.25967031500002],[-2.082671678999901,49.260239976]]]]}},{type:"Feature",id:"KAZ",properties:{name:"Kazakhstan"},geometry:{type:"Polygon",coordinates:[[[70.962315,42.266154],[70.388965,42.081308],[69.070027,41.384244],[68.632483,40.668681],[68.259896,40.662325],[67.985856,41.135991],[66.714047,41.168444],[66.510649,41.987644],[66.023392,41.994646],[66.098012,42.99766],[64.900824,43.728081],[63.185787,43.650075],[62.0133,43.504477],[61.05832,44.405817],[60.239972,44.784037],[58.689989,45.500014],[58.503127,45.586804],[55.928917,44.995858],[55.968191,41.308642],[55.455251,41.259859],[54.755345,42.043971],[54.079418,42.324109],[52.944293,42.116034],[52.50246,41.783316],[52.446339,42.027151],[52.692112,42.443895],[52.501426,42.792298],[51.342427,43.132975],[50.891292,44.031034],[50.339129,44.284016],[50.305643,44.609836],[51.278503,44.514854],[51.316899,45.245998],[52.16739,45.408391],[53.040876,45.259047],[53.220866,46.234646],[53.042737,46.853006],[52.042023,46.804637],[51.191945,47.048705],[50.034083,46.60899],[49.10116,46.39933],[48.593241,46.561034],[48.694734,47.075628],[48.057253,47.743753],[47.315231,47.715847],[46.466446,48.394152],[47.043672,49.152039],[46.751596,49.356006],[47.54948,50.454698],[48.577841,49.87476],[48.702382,50.605128],[50.766648,51.692762],[52.328724,51.718652],[54.532878,51.02624],[55.716941,50.621717],[56.777961,51.043551],[58.363291,51.063653],[59.642282,50.545442],[59.932807,50.842194],[61.337424,50.79907],[61.588003,51.272659],[59.967534,51.96042],[60.927269,52.447548],[60.739993,52.719986],[61.699986,52.979996],[60.978066,53.664993],[61.436591,54.006265],[65.178534,54.354228],[65.666876,54.601267],[68.1691,54.970392],[69.068167,55.38525],[70.865267,55.169734],[71.180131,54.133285],[72.22415,54.376655],[73.508516,54.035617],[73.425679,53.48981],[74.384845,53.546861],[76.8911,54.490524],[76.525179,54.177003],[77.800916,53.404415],[80.03556,50.864751],[80.568447,51.388336],[81.945986,50.812196],[83.383004,51.069183],[83.935115,50.889246],[84.416377,50.3114],[85.11556,50.117303],[85.54127,49.692859],[86.829357,49.826675],[87.35997,49.214981],[86.598776,48.549182],[85.768233,48.455751],[85.720484,47.452969],[85.16429,47.000956],[83.180484,47.330031],[82.458926,45.53965],[81.947071,45.317027],[79.966106,44.917517],[80.866206,43.180362],[80.18015,42.920068],[80.25999,42.349999],[79.643645,42.496683],[79.142177,42.856092],[77.658392,42.960686],[76.000354,42.988022],[75.636965,42.8779],[74.212866,43.298339],[73.645304,43.091272],[73.489758,42.500894],[71.844638,42.845395],[71.186281,42.704293],[70.962315,42.266154]]]}},{type:"Feature",id:"KEN",properties:{name:"Kenya"},geometry:{type:"Polygon",coordinates:[[[40.993,-.85829],[41.58513,-1.68325],[40.88477,-2.08255],[40.63785,-2.49979],[40.26304,-2.57309],[40.12119,-3.27768],[39.80006,-3.68116],[39.60489,-4.34653],[39.20222,-4.67677],[37.7669,-3.67712],[37.69869,-3.09699],[34.07262,-1.05982],[33.903711,-.95],[33.893569,.109814],[34.18,.515],[34.6721,1.17694],[35.03599,1.90584],[34.59607,3.05374],[34.47913,3.5556],[34.005,4.249885],[34.620196,4.847123],[35.298007,5.506],[35.817448,5.338232],[35.817448,4.776966],[36.159079,4.447864],[36.855093,4.447864],[38.120915,3.598605],[38.43697,3.58851],[38.67114,3.61607],[38.89251,3.50074],[39.559384,3.42206],[39.85494,3.83879],[40.76848,4.25702],[41.1718,3.91909],[41.855083,3.918912],[40.98105,2.78452],[40.993,-.85829]]]}},{type:"Feature",id:"KGZ",properties:{name:"Kyrgyzstan"},geometry:{type:"Polygon",coordinates:[[[70.962315,42.266154],[71.186281,42.704293],[71.844638,42.845395],[73.489758,42.500894],[73.645304,43.091272],[74.212866,43.298339],[75.636965,42.8779],[76.000354,42.988022],[77.658392,42.960686],[79.142177,42.856092],[79.643645,42.496683],[80.25999,42.349999],[80.11943,42.123941],[78.543661,41.582243],[78.187197,41.185316],[76.904484,41.066486],[76.526368,40.427946],[75.467828,40.562072],[74.776862,40.366425],[73.822244,39.893973],[73.960013,39.660008],[73.675379,39.431237],[71.784694,39.279463],[70.549162,39.604198],[69.464887,39.526683],[69.55961,40.103211],[70.648019,39.935754],[71.014198,40.244366],[71.774875,40.145844],[73.055417,40.866033],[71.870115,41.3929],[71.157859,41.143587],[70.420022,41.519998],[71.259248,42.167711],[70.962315,42.266154]]]}},{type:"Feature",id:"KHM",properties:{name:"Cambodia"},geometry:{type:"Polygon",coordinates:[[[103.49728,10.632555],[103.09069,11.153661],[102.584932,12.186595],[102.348099,13.394247],[102.988422,14.225721],[104.281418,14.416743],[105.218777,14.273212],[106.043946,13.881091],[106.496373,14.570584],[107.382727,14.202441],[107.614548,13.535531],[107.491403,12.337206],[105.810524,11.567615],[106.24967,10.961812],[105.199915,10.88931],[104.334335,10.486544],[103.49728,10.632555]]]}},{type:"Feature",id:"KOR",properties:{name:"South Korea"},geometry:{type:"Polygon",coordinates:[[[128.349716,38.612243],[129.21292,37.432392],[129.46045,36.784189],[129.468304,35.632141],[129.091377,35.082484],[128.18585,34.890377],[127.386519,34.475674],[126.485748,34.390046],[126.37392,34.93456],[126.559231,35.684541],[126.117398,36.725485],[126.860143,36.893924],[126.174759,37.749686],[126.237339,37.840378],[126.68372,37.804773],[127.073309,38.256115],[127.780035,38.304536],[128.205746,38.370397],[128.349716,38.612243]]]}},{type:"Feature",id:"UNK",properties:{name:"Kosovo"},geometry:{type:"MultiPolygon",coordinates:[[[[20.864700154000047,43.217337342000036],[20.861599569000106,43.217518209000076],[20.85147098800013,43.21981781100001],[20.83999882000012,43.21209218400011],[20.8406189370001,43.20697621700003],[20.839068644000065,43.19245514000008],[20.836071411000148,43.17943267800004],[20.832040649000078,43.178605855000114],[20.838551880000125,43.170466817],[20.91249413300011,43.138805129000076],[20.993431297000086,43.10414825700013],[21.005156698000093,43.099127502000016],[21.02582727100011,43.09336558000007],[21.092593221000072,43.09067840600002],[21.10850956200008,43.081557516000146],[21.124012491000087,43.058277283000024],[21.139308716000045,43.005825704000074],[21.14788700300008,42.99262237600007],[21.165353638000028,42.98510345500006],[21.17940962700004,42.99058115700012],[21.19305220600006,42.99789337200011],[21.20979536900009,42.99587799100007],[21.225298299000116,42.97355377200009],[21.2267452400001,42.942522075000085],[21.23242964700006,42.91089609800008],[21.260541626000105,42.88655649900008],[21.271600383000106,42.884282735000056],[21.294958130000055,42.88438608800007],[21.306326945000137,42.88244822200005],[21.31697229000011,42.87761647600013],[21.336402628000116,42.86547251400012],[21.34673791500012,42.86084747300009],[21.378777303000106,42.85529225700006],[21.39893111100008,42.85456878700006],[21.408439575000074,42.84699819000011],[21.40841888600005,42.84174320800008],[21.40833622200006,42.820746562000096],[21.404098755000092,42.80397755900012],[21.390559529000114,42.77041371700011],[21.3871488850001,42.7549624640001],[21.383944946000042,42.74997568800006],[21.379190714000117,42.747004293000145],[21.37867395100008,42.74413625100007],[21.38869917800011,42.739046123000094],[21.405545695000086,42.73529958100008],[21.41780040600011,42.73557016200007],[21.44182255000004,42.73610056600009],[21.542488240000097,42.7258169560001],[21.56522587000009,42.720184225000054],[21.58052209500005,42.71021067300006],[21.61266483600008,42.68039337200014],[21.629407999000108,42.67220265700013],[21.64408410700011,42.67230601000006],[21.68738895700008,42.686827088000086],[21.708886352,42.6871888230001],[21.738651977000103,42.682150370000045],[21.744249788000076,42.679424528000084],[21.7643868400001,42.66961883600004],[21.772758422000067,42.647501323000114],[21.767074016000038,42.63871632900003],[21.756532023000148,42.63362620000004],[21.74454309100011,42.62964711600006],[21.734724569000036,42.624246928000105],[21.735551392000048,42.62127553400009],[21.73007369000007,42.601018372000084],[21.728833455000114,42.59830535900005],[21.72697310300012,42.59639333100003],[21.720151815000065,42.59388702400014],[21.71829146300007,42.591018982000065],[21.719738403000065,42.586678162000084],[21.72676639800008,42.57794484500002],[21.72769657400002,42.57414662700009],[21.71767134600009,42.55115061500004],[21.66785526500007,42.49009491000004],[21.6278577060001,42.460380961000084],[21.61896936000008,42.44924469100005],[21.616902303000103,42.43392262800009],[21.621863240000067,42.402167460000044],[21.61741906800006,42.38663869200013],[21.596645141000124,42.372091777000094],[21.537320597000104,42.35863006600002],[21.516029907000103,42.3419385790001],[21.514893026000095,42.31783152300005],[21.553857056000084,42.27398407000004],[21.564065710000108,42.246289302000065],[21.561815226000135,42.247164002000034],[21.51985396300006,42.23902496400012],[21.499286743000056,42.23866322800012],[21.481510051000043,42.2477841190001],[21.471973165000094,42.23913027900005],[21.467557413000037,42.235123393000066],[21.457222127000136,42.23703542100009],[21.447920369000116,42.24414093100012],[21.436344848000147,42.246879782000065],[21.419911743000085,42.24005849200012],[21.421462036000037,42.23135101300005],[21.42869673700008,42.222566020000045],[21.42983361800009,42.21584808400013],[21.419084920000074,42.21502126100009],[21.384255005000114,42.224943136],[21.36678837100007,42.223857930000094],[21.36060206500005,42.22011423300006],[21.35376591000002,42.21597727500006],[21.294958130000055,42.14897878100007],[21.2937178950001,42.14016794900007],[21.295784953000066,42.13479360000011],[21.298782186000096,42.12941925100006],[21.300332479000105,42.12089263900003],[21.30126265400014,42.1006096400001],[21.30079636100004,42.09842542700005],[21.299298950000036,42.09141123500012],[21.288860311000093,42.089705912000056],[21.245727456000054,42.09616710900008],[21.23780399600011,42.09735402400014],[21.229298016000115,42.10382211300009],[21.22540165200013,42.10678497300009],[21.21620324700004,42.121151022000106],[21.199873494000116,42.14114980100004],[21.164423462000087,42.16703969400007],[21.126389607000135,42.18892466200003],[21.112953735000104,42.1944023640001],[21.106235799000075,42.19579762800009],[21.098484334000148,42.195952657000106],[21.074403117000116,42.184454651000095],[21.04093997800007,42.15996989400006],[21.02923791500004,42.151407573000114],[21.00391646300008,42.14195078600005],[20.9751451810001,42.134658012000074],[20.904170441000076,42.116667755000066],[20.81054325300002,42.09293569000005],[20.784911743000066,42.08203196200006],[20.765378052000045,42.06433278500006],[20.755352824000028,42.0427837120001],[20.74305383300009,41.99348439500011],[20.741813598000135,41.97077260300006],[20.75143912800013,41.94033778400012],[20.754422648000087,41.93090423600012],[20.751052494000106,41.910217695000114],[20.750495240000106,41.90679718000007],[20.73995324700013,41.88803863500007],[20.723313436000126,41.86661875500005],[20.71439819800011,41.85916299100009],[20.702952921000104,41.84959137000001],[20.681455525000047,41.844010316000094],[20.671843709000143,41.84930715000013],[20.65282678300008,41.869280091000064],[20.643421672000017,41.873646749000045],[20.63701379300008,41.870365295000056],[20.626161743000125,41.855198263000034],[20.6187203370001,41.85052154600007],[20.602390584000062,41.849875591000085],[20.590298299000096,41.854733175],[20.56714725800009,41.873181662000036],[20.567767375000074,41.88051971500002],[20.562703084000077,41.89284454400007],[20.562496379000038,41.90010508200004],[20.567250611000105,41.91217153000011],[20.573348430000067,41.917675070000115],[20.580583130000036,41.92173166900011],[20.58874800600006,41.92958648800004],[20.59928999800013,41.94787994400011],[20.59928999800013,41.960566509000074],[20.59432906100008,41.97371816000003],[20.589678182000114,41.993639425000055],[20.55825891100008,42.05510854100007],[20.55216109200012,42.07378957200012],[20.551954386000148,42.105803122000026],[20.54937056500006,42.123476461000024],[20.53862186700013,42.150115662000076],[20.500794719000055,42.211223043000075],[20.481674439000074,42.23070505800007],[20.47366457600009,42.23712300200006],[20.45697310400007,42.250497132000135],[20.333363078000076,42.31788320000007],[20.317963501000094,42.31982106500007],[20.24964725700002,42.31860666900005],[20.237761678000084,42.3199244190001],[20.22959680200009,42.326719869000044],[20.220915161000107,42.34310129800011],[20.219468221000113,42.35020680800005],[20.221225220000093,42.36372019500001],[20.218848104000074,42.37144582200011],[20.21306034300008,42.37751780200006],[20.197454061000144,42.387439677000145],[20.19280318200009,42.39369252600005],[20.194043416000113,42.400100403000096],[20.204378703000117,42.41183095300008],[20.204688761000114,42.42009918200003],[20.199727824000064,42.4277989710001],[20.18629195200012,42.43743662500012],[20.180814249000036,42.44309519500007],[20.152702271000095,42.49340220200014],[20.152702271000095,42.49342804000014],[20.152598918000052,42.493608907000095],[20.152598918000052,42.493712260000024],[20.15239221200011,42.493712260000024],[20.135545695000133,42.509628601000145],[20.085626261000073,42.53001495400008],[20.064955688000055,42.54675811800004],[20.07704797300005,42.55990977000002],[20.07818485500013,42.57290639300004],[20.075394328000073,42.58696238200005],[20.07570438600007,42.603085430000135],[20.079218384000114,42.611250305000056],[20.09058719900011,42.627347514000036],[20.103919718000043,42.653108216000135],[20.10195601400011,42.65667389],[20.094204549000096,42.666983337],[20.037006251000065,42.70736309700007],[20.0361202390001,42.707988587000045],[20.024751424000016,42.72341400200014],[20.02650842300011,42.74320607500002],[20.034673299000104,42.75142262800006],[20.05563844800008,42.76386622900006],[20.06505904100007,42.76945770300006],[20.076324503000137,42.77343678900013],[20.112084595000056,42.76653798500007],[20.149498331000103,42.749872335000134],[20.183398071000113,42.74250844300013],[20.208409464000113,42.76328236900008],[20.209959757000036,42.7729717010001],[20.208409464000113,42.782092591000094],[20.209236288000056,42.79170440700008],[20.21760787000011,42.802737325000095],[20.226082805000118,42.80676808700008],[20.26442671700005,42.81725840300004],[20.345352010000028,42.8274386600001],[20.4280343020001,42.8406419880001],[20.47630008900012,42.85552480100003],[20.49883101400013,42.87787485800001],[20.494366526000135,42.88746653100014],[20.488909139000043,42.8991913860001],[20.466688273000102,42.909500834000085],[20.45097863700005,42.92203236900011],[20.459453572000115,42.950015158000014],[20.47640344200005,42.966370748000145],[20.493456665000082,42.9701948040001],[20.51113000500007,42.9701948040001],[20.53045699000012,42.97515574200014],[20.538415161000074,42.980659281000044],[20.54389286300008,42.987248027000106],[20.55340132600014,43.0025959270001],[20.56239302600011,43.009494731000075],[20.572831665000137,43.009339702000034],[20.584303833000064,43.006910909000055],[20.596396118000143,43.00709177700011],[20.617273397000105,43.02212961900011],[20.643835083000027,43.05225697900008],[20.664919068000074,43.0854074100001],[20.6691565350001,43.10979868600003],[20.661818481000125,43.115948182000096],[20.651689901000054,43.11630991600009],[20.64094120300004,43.11527638800001],[20.632052856000115,43.117265930000144],[20.62605839000011,43.12372548500011],[20.62058068900012,43.13333730100001],[20.612105754000112,43.154938050000084],[20.600116821000142,43.17382578600012],[20.597533,43.184962057000035],[20.604044230000113,43.19795867900007],[20.612312459000066,43.20227366200004],[20.64486861200001,43.20330719000012],[20.66698612400012,43.20966339200007],[20.745327596000095,43.25286488800009],[20.769512166000084,43.26084889800006],[20.794420207000144,43.26307098400008],[20.809717238000076,43.25961018900006],[20.819431600000144,43.25741241500003],[20.83844852700011,43.24586273200009],[20.848473755000043,43.238137106000096],[20.855088338000115,43.231445008000065],[20.864700154000047,43.217337342000036]]]]}},{type:"Feature",id:"KWT",properties:{name:"Kuwait"},geometry:{type:"Polygon",coordinates:[[[47.974519,29.975819],[48.183189,29.534477],[48.093943,29.306299],[48.416094,28.552004],[47.708851,28.526063],[47.459822,29.002519],[46.568713,29.099025],[47.302622,30.05907],[47.974519,29.975819]]]}},{type:"Feature",id:"LAO",properties:{name:"Laos"},geometry:{type:"Polygon",coordinates:[[[105.218777,14.273212],[105.544338,14.723934],[105.589039,15.570316],[104.779321,16.441865],[104.716947,17.428859],[103.956477,18.240954],[103.200192,18.309632],[102.998706,17.961695],[102.413005,17.932782],[102.113592,18.109102],[101.059548,17.512497],[101.035931,18.408928],[101.282015,19.462585],[100.606294,19.508344],[100.548881,20.109238],[100.115988,20.41785],[100.329101,20.786122],[101.180005,21.436573],[101.270026,21.201652],[101.80312,21.174367],[101.652018,22.318199],[102.170436,22.464753],[102.754896,21.675137],[103.203861,20.766562],[104.435,20.758733],[104.822574,19.886642],[104.183388,19.624668],[103.896532,19.265181],[105.094598,18.666975],[105.925762,17.485315],[106.556008,16.604284],[107.312706,15.908538],[107.564525,15.202173],[107.382727,14.202441],[106.496373,14.570584],[106.043946,13.881091],[105.218777,14.273212]]]}},{type:"Feature",id:"LBN",properties:{name:"Lebanon"},geometry:{type:"Polygon",coordinates:[[[35.821101,33.277426],[35.552797,33.264275],[35.460709,33.08904],[35.126053,33.0909],[35.482207,33.90545],[35.979592,34.610058],[35.998403,34.644914],[36.448194,34.593935],[36.61175,34.201789],[36.06646,33.824912],[35.821101,33.277426]]]}},{type:"Feature",id:"LBR",properties:{name:"Liberia"},geometry:{type:"Polygon",coordinates:[[[-7.712159,4.364566],[-7.974107,4.355755],[-9.004794,4.832419],[-9.91342,5.593561],[-10.765384,6.140711],[-11.438779,6.785917],[-11.199802,7.105846],[-11.146704,7.396706],[-10.695595,7.939464],[-10.230094,8.406206],[-10.016567,8.428504],[-9.755342,8.541055],[-9.33728,7.928534],[-9.403348,7.526905],[-9.208786,7.313921],[-8.926065,7.309037],[-8.722124,7.711674],[-8.439298,7.686043],[-8.485446,7.395208],[-8.385452,6.911801],[-8.60288,6.467564],[-8.311348,6.193033],[-7.993693,6.12619],[-7.570153,5.707352],[-7.539715,5.313345],[-7.635368,5.188159],[-7.712159,4.364566]]]}},{type:"Feature",id:"LIE",properties:{name:"Liechtenstein"},geometry:{type:"MultiPolygon",coordinates:[[[[9.581202840000032,47.05687042300008],[9.560635620000141,47.052400412000054],[9.499554077000141,47.05935089100004],[9.477023153000118,47.063898417000075],[9.475886271000121,47.07322601400011],[9.487565145000104,47.08394887400004],[9.50286136800014,47.09469757200014],[9.512369832000047,47.108030091000074],[9.511853068000107,47.12937245700007],[9.503481486000112,47.145392151000124],[9.492629435000083,47.159809876000054],[9.484981323000085,47.17634633400013],[9.487358439000047,47.210013529000065],[9.504618368000138,47.243732402000035],[9.52115482500011,47.262801005000114],[9.530249878000092,47.25365427700004],[9.547096395000068,47.243034770000065],[9.540378458000134,47.229107972000065],[9.544822632000148,47.22032297800007],[9.554331095000123,47.21161549900012],[9.562909383000061,47.19774037700006],[9.561875854000078,47.190609029000115],[9.551953979000103,47.17557118800002],[9.552057332000118,47.16688954700007],[9.5818229570001,47.15490061500009],[9.605594116000077,47.13226633700006],[9.615722697000109,47.106764018000035],[9.608798055000136,47.08077077300007],[9.581202840000032,47.05687042300008]]]]}},{type:"Feature",id:"LBY",properties:{name:"Libya"},geometry:{type:"Polygon",coordinates:[[[14.8513,22.86295],[14.143871,22.491289],[13.581425,23.040506],[11.999506,23.471668],[11.560669,24.097909],[10.771364,24.562532],[10.303847,24.379313],[9.948261,24.936954],[9.910693,25.365455],[9.319411,26.094325],[9.716286,26.512206],[9.629056,27.140953],[9.756128,27.688259],[9.683885,28.144174],[9.859998,28.95999],[9.805634,29.424638],[9.48214,30.307556],[9.970017,30.539325],[10.056575,30.961831],[9.950225,31.37607],[10.636901,31.761421],[10.94479,32.081815],[11.432253,32.368903],[11.488787,33.136996],[12.66331,32.79278],[13.08326,32.87882],[13.91868,32.71196],[15.24563,32.26508],[15.71394,31.37626],[16.61162,31.18218],[18.02109,30.76357],[19.08641,30.26639],[19.57404,30.52582],[20.05335,30.98576],[19.82033,31.75179],[20.13397,32.2382],[20.85452,32.7068],[21.54298,32.8432],[22.89576,32.63858],[23.2368,32.19149],[23.60913,32.18726],[23.9275,32.01667],[24.92114,31.89936],[25.16482,31.56915],[24.80287,31.08929],[24.95762,30.6616],[24.70007,30.04419],[25,29.238655],[25,25.6825],[25,22],[25,20.00304],[23.85,20],[23.83766,19.58047],[19.84926,21.49509],[15.86085,23.40972],[14.8513,22.86295]]]}},{type:"Feature",id:"LKA",properties:{name:"Sri Lanka"},geometry:{type:"Polygon",coordinates:[[[81.787959,7.523055],[81.637322,6.481775],[81.21802,6.197141],[80.348357,5.96837],[79.872469,6.763463],[79.695167,8.200843],[80.147801,9.824078],[80.838818,9.268427],[81.304319,8.564206],[81.787959,7.523055]]]}},{type:"Feature",id:"LSO",properties:{name:"Lesotho"},geometry:{type:"Polygon",coordinates:[[[28.978263,-28.955597],[29.325166,-29.257387],[29.018415,-29.743766],[28.8484,-30.070051],[28.291069,-30.226217],[28.107205,-30.545732],[27.749397,-30.645106],[26.999262,-29.875954],[27.532511,-29.242711],[28.074338,-28.851469],[28.5417,-28.647502],[28.978263,-28.955597]]]}},{type:"Feature",id:"LTU",properties:{name:"Lithuania"},geometry:{type:"Polygon",coordinates:[[[22.731099,54.327537],[22.651052,54.582741],[22.757764,54.856574],[22.315724,55.015299],[21.268449,55.190482],[21.0558,56.031076],[22.201157,56.337802],[23.878264,56.273671],[24.860684,56.372528],[25.000934,56.164531],[25.533047,56.100297],[26.494331,55.615107],[26.588279,55.167176],[25.768433,54.846963],[25.536354,54.282423],[24.450684,53.905702],[23.484128,53.912498],[23.243987,54.220567],[22.731099,54.327537]]]}},{type:"Feature",id:"LCA",properties:{name:"Saint Lucia"},geometry:{type:"MultiPolygon",coordinates:[[[[-60.886789516999926,14.010077216000113],[-60.88296464799993,13.980617580000043],[-60.88304602799991,13.954413153000104],[-60.89509029899992,13.87734609600004],[-60.89220130099997,13.833197333000058],[-60.90461178299992,13.78424713700008],[-60.90729732999998,13.77732982000009],[-60.9103083979999,13.776109117000075],[-60.92284094999988,13.772691148000064],[-60.92711341099991,13.769924221000096],[-60.93175208199992,13.76032135600012],[-60.94078528599994,13.722113348000065],[-60.94701087099989,13.716294664000102],[-60.95010331899988,13.714667059000092],[-60.95506751199994,13.714667059000092],[-60.973378058999884,13.738999742000061],[-61.0481664699999,13.76732005400001],[-61.06493079299992,13.786932684000064],[-61.06810462099989,13.792181708000058],[-61.07420813699986,13.798732815000037],[-61.07811438699986,13.806301174000083],[-61.07115637899997,13.82196686400006],[-61.07005774599992,13.832098700000103],[-61.07115637899997,13.851792710000055],[-61.07274329299989,13.858221747000073],[-61.07559160099993,13.86326732000009],[-61.07811438699986,13.869614976000037],[-61.07852128799996,13.87978750200007],[-61.07591712099986,13.890366929000038],[-61.06688391799986,13.909002997000115],[-61.06493079299992,13.91730377800009],[-61.059478318999965,13.931219794000071],[-61.035552537999905,13.964911200000074],[-61.02660071499989,13.98737213700008],[-61.00226803299992,14.023138739000103],[-60.99705969999991,14.027167059000064],[-60.98729407499988,14.032538153000118],[-60.98232988199993,14.037339585000026],[-60.97996985599988,14.043524481000077],[-60.97606360599988,14.061183986000088],[-60.9720759759999,14.068101304000095],[-60.94762122299994,14.10228099200009],[-60.93346106699994,14.111883856000063],[-60.9141332669999,14.105698960000097],[-60.91860917899987,14.088446356000091],[-60.91193600199992,14.079494533000059],[-60.90103105399993,14.073391018000066],[-60.892974412999905,14.064683335000083],[-60.89020748599995,14.052232164000074],[-60.886789516999926,14.010077216000113]]]]}},{type:"Feature",id:"LUX",properties:{name:"Luxembourg"},geometry:{type:"Polygon",coordinates:[[[6.043073,50.128052],[6.242751,49.902226],[6.18632,49.463803],[5.897759,49.442667],[5.674052,49.529484],[5.782417,50.090328],[6.043073,50.128052]]]}},{type:"Feature",id:"LVA",properties:{name:"Latvia"},geometry:{type:"Polygon",coordinates:[[[21.0558,56.031076],[21.090424,56.783873],[21.581866,57.411871],[22.524341,57.753374],[23.318453,57.006236],[24.12073,57.025693],[24.312863,57.793424],[25.164594,57.970157],[25.60281,57.847529],[26.463532,57.476389],[27.288185,57.474528],[27.770016,57.244258],[27.855282,56.759326],[28.176709,56.16913],[27.10246,55.783314],[26.494331,55.615107],[25.533047,56.100297],[25.000934,56.164531],[24.860684,56.372528],[23.878264,56.273671],[22.201157,56.337802],[21.0558,56.031076]]]}},{type:"Feature",id:"IMN",properties:{name:"Isle of Man"},geometry:{type:"MultiPolygon",coordinates:[[[[-4.612131313999925,54.05695221600013],[-4.620757615999935,54.069647528000075],[-4.631255662999905,54.07062409100007],[-4.64321855399993,54.06659577000008],[-4.656402147999899,54.06378815300005],[-4.671009894999912,54.06704336100009],[-4.689686652999882,54.08152903900003],[-4.704497850999871,54.084865627000056],[-4.7259822259999,54.07900625200003],[-4.745594855999855,54.06736888200001],[-4.766224738999881,54.05923086100009],[-4.790150519999941,54.06378815300005],[-4.790150519999941,54.07123444200002],[-4.784820115999878,54.0730654970001],[-4.781320766999983,54.074774481000105],[-4.777088995999861,54.076239325000074],[-4.76968339799987,54.077460028000075],[-4.770863410999908,54.09682851800008],[-4.737172003999888,54.12490469000011],[-4.728138800999886,54.142564195],[-4.727650519999912,54.17259349200006],[-4.723784959999904,54.18545156500008],[-4.714466925999943,54.20034414300005],[-4.711089647999927,54.20990631700002],[-4.712269660999965,54.21662018400008],[-4.710275844999927,54.22064850500004],[-4.68814042899993,54.223781643000024],[-4.663970506999931,54.23354726800005],[-4.643055792999888,54.24941640800009],[-4.612456834999961,54.26544830900008],[-4.598378058999913,54.27659739800009],[-4.554595506999931,54.339178778000104],[-4.530995245999918,54.366115627000084],[-4.495350714999859,54.38589101800011],[-4.44200598899991,54.40436432500013],[-4.404449022999899,54.409654039],[-4.385731574999937,54.4157168640001],[-4.367787238999881,54.419012762000136],[-4.35130774599989,54.41380442900004],[-4.357085740999963,54.39940013200007],[-4.37755286399991,54.36188385600005],[-4.375599738999881,54.3483340520001],[-4.370228644999912,54.34088776200011],[-4.363758917999917,54.324286200000046],[-4.358225063999896,54.317613023],[-4.350493943999879,54.31476471600007],[-4.332183397999927,54.313421942000076],[-4.32469641799986,54.31020742400011],[-4.319406704999977,54.30459219000002],[-4.313221808999913,54.2955996770001],[-4.3119197259999,54.287176825000046],[-4.32095292899993,54.2835147160001],[-4.32673092399989,54.28034088700011],[-4.340809699999909,54.26300690300013],[-4.34825598899991,54.25950755400004],[-4.354359503999888,54.2515322940001],[-4.359771287999934,54.242254950000046],[-4.365630662999877,54.23505280200001],[-4.371815558999856,54.23126862200007],[-4.399159308999913,54.222072658000116],[-4.39077714799987,54.19472890800003],[-4.412587042999917,54.180080471000025],[-4.446888800999886,54.16913483300007],[-4.475493943999936,54.15314362200007],[-4.474598761999857,54.14081452000002],[-4.529286261999914,54.11908600500004],[-4.543771938999953,54.10846588700011],[-4.549794074999852,54.10065338700011],[-4.563832160999908,54.09682851800008],[-4.579579230999883,54.09442780200004],[-4.590931769999941,54.091050523000035],[-4.598947719999984,54.08388906500008],[-4.612131313999925,54.05695221600013]]]]}},{type:"Feature",id:"MCO",properties:{name:"Monaco"},geometry:{type:"MultiPolygon",coordinates:[[[[7.437454032063101,43.743360540917394],[7.432845087000061,43.73985254800007],[7.417956880000105,43.73090382500004],[7.404319061000052,43.71796907700008],[7.380722515000059,43.71927314100006],[7.365750207000076,43.72273028300003],[7.367262599000071,43.734124533000085],[7.372655477000052,43.745832215000036],[7.387538289000105,43.757898662000116],[7.406968628000072,43.763505554000034],[7.426246111000125,43.75546422900004],[7.437454032063101,43.743360540917394]]]]}},{type:"Feature",id:"MSR",properties:{name:"Montserrat"},geometry:{type:"MultiPolygon",coordinates:[[[[-62.14736894399991,16.744289455000057],[-62.147694464999915,16.737046617000118],[-62.1517634759999,16.72451406500005],[-62.150786912999905,16.720363674000083],[-62.14757239499994,16.715887762000136],[-62.14391028599991,16.70897044500012],[-62.141184048999946,16.70184967700007],[-62.1405330069999,16.696478583000044],[-62.14403235599988,16.688218492000118],[-62.14976966099994,16.68178945500003],[-62.157826300999886,16.67731354400007],[-62.16787675699996,16.6753604190001],[-62.218861456999946,16.68870677300012],[-62.230132615999935,16.727606512000108],[-62.218861456999946,16.776312567000048],[-62.202015753999945,16.819322007000096],[-62.189442511999886,16.81443919500012],[-62.18293209499987,16.81273021000004],[-62.17467200399989,16.81313711100003],[-62.179310675999915,16.794501044000043],[-62.170033331999946,16.777004299000083],[-62.156320766999926,16.76032135600005],[-62.14736894399991,16.744289455000057]]]]}},{type:"Feature",id:"HMD",properties:{name:"Heard Island and McDonald Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[73.73511803500014,-53.11239999799994],[73.76189212300005,-53.11891041499993],[73.78907311300009,-53.12053801899995],[73.8121850920001,-53.118503513999926],[73.66163170700014,-53.14666106599991],[73.60954837300011,-53.17986419099992],[73.58082116000014,-53.187595309999935],[73.50733483200008,-53.19255950299989],[73.47339928500008,-53.18922291499987],[73.44019616000008,-53.173272393999945],[73.43043053500008,-53.165297132999896],[73.40414472700013,-53.1393368469999],[73.37094160200013,-53.0905087219999],[73.36378014400009,-53.074802341999934],[73.37126712300005,-53.06462981599989],[73.35971113400012,-53.05885182099993],[73.35328209700003,-53.05169036299989],[73.3541772800001,-53.04420338299992],[73.36443118600005,-53.03728606599992],[73.34473717500009,-53.02922942499989],[73.32886803500008,-53.025079033999944],[73.27100670700014,-53.02174244599992],[73.25367272200009,-53.01506926899996],[73.24170983200014,-53.002211195999934],[73.23601321700005,-52.98202890399991],[73.26937910200013,-52.975274346999875],[73.29688561300009,-52.96160247199993],[73.33090254000007,-52.984795830999964],[73.33716881600003,-52.98577239399994],[73.34457441500012,-52.99651458099995],[73.36109459700003,-53.009209893999916],[73.37745201900003,-53.01702239399991],[73.38493899800011,-53.013116143999916],[73.38917076900003,-52.99781666499986],[73.3995874360001,-52.990980726999936],[73.41293379000012,-52.9928524719999],[73.42652428500008,-53.00318775799991],[73.41285241000014,-53.009372653999975],[73.42562910200007,-53.02532317499989],[73.44703209700003,-53.02809010199994],[73.47022545700014,-53.02157968499995],[73.48796634200005,-53.009372653999975],[73.50766035200007,-53.01531340899991],[73.56421959700009,-53.01677825299996],[73.5875757170001,-53.026788018999945],[73.59848066500007,-53.03386809699991],[73.62094160200007,-53.03964609199997],[73.63257897200009,-53.044122002999934],[73.64014733200014,-53.05071379999991],[73.65560957100007,-53.06796640399992],[73.66334069100009,-53.07146575299991],[73.68897545700014,-53.09026458099996],[73.69947350400008,-53.10084400799991],[73.73511803500014,-53.11239999799994]]]]}},{type:"Feature",id:"FSM",properties:{name:"Federated Sates of Micronesia"},geometry:{type:"MultiPolygon",coordinates:[[[[154.81763756600006,.922186591000127],[154.81283613400015,.918158270000148],[154.80176842500012,.91819896000014],[154.79859459700006,.924465236000103],[154.802989129,.92706940300009],[154.80811608200023,.927801825000117],[154.814300977,.92576732000019],[154.81763756600006,.922186591000127]]],[[[154.73292076900023,.96702708500014],[154.72681725400005,.960638739000117],[154.71509850400017,.961371161000059],[154.71485436300011,.965562242000175],[154.72193444100017,.969183661000059],[154.73292076900023,.96702708500014]]],[[[154.7965600920002,.965806382000125],[154.7923283210001,.962876695000105],[154.78370201900006,.963690497000115],[154.77816816500015,.968817450000046],[154.7784936860002,.973700262000108],[154.78435306100002,.975490627000084],[154.7931421230002,.972113348000079],[154.7965600920002,.965806382000125]]],[[[154.89429772200018,3.762844143000123],[154.87924238400015,3.751939195000063],[154.87671959700006,3.767971096000053],[154.89185631600006,3.778794664000131],[154.89429772200018,3.762844143000123]]],[[[154.79175866,3.776556708000058],[154.7736922540001,3.766262111000131],[154.77125084700006,3.781480210000112],[154.78931725400017,3.79181549700013],[154.79175866,3.776556708000058]]],[[[153.67823326900012,5.28949616100013],[153.66773522200006,5.286037502000127],[153.67172285200004,5.29767487200013],[153.68531334700018,5.309719143000137],[153.70085696700008,5.316961981000162],[153.71070397200018,5.314601955000114],[153.7076929050002,5.305365302000055],[153.69410241000006,5.296454169000114],[153.67823326900012,5.28949616100013]]],[[[163.04297936300006,5.310939846000153],[163.02572675899998,5.280015367000118],[163.0192163420002,5.272691148000121],[163.00554446700008,5.269761460000098],[162.99341881600006,5.272853908000087],[162.98145592500012,5.277655341000155],[162.96762129000004,5.280178127000085],[162.94597415500002,5.280015367000118],[162.93132571700014,5.281927802000084],[162.91618899800014,5.286932684000121],[162.91211998800006,5.304185289000131],[162.924082879,5.321030992000132],[162.97144616000006,5.361761786000102],[162.99073326900006,5.374823309000178],[163.0105900400001,5.379706122000144],[163.0260522800002,5.368841864000075],[163.02735436300011,5.362697658000087],[163.02572675899998,5.347601630000085],[163.0260522800002,5.340887762000136],[163.0304468110002,5.335679429000138],[163.0372827480002,5.333685614000103],[163.043711785,5.330959377000127],[163.04656009200008,5.323553778000147],[163.04297936300006,5.310939846000153]]],[[[157.16244550899998,5.775824286000088],[157.161875847,5.77387116100013],[157.16065514400012,5.776190497000101],[157.15894616000017,5.777899481000105],[157.158457879,5.779201565000093],[157.16089928500006,5.779933986000131],[157.16391035200004,5.778713283000116],[157.16382897200006,5.777289130000142],[157.16244550899998,5.775824286000088]]],[[[149.32105553500017,6.702215887000179],[149.31576582099999,6.696926174000112],[149.3160913420002,6.703924872000101],[149.31690514400023,6.709906317000105],[149.31885826900006,6.715073960000112],[149.32349694100012,6.719468492000189],[149.3256942070001,6.712551174000097],[149.32471764400012,6.707098700000159],[149.32105553500017,6.702215887000179]]],[[[157.94581139400012,6.722601630000071],[157.9363712900001,6.717189846000125],[157.939219597,6.727362372000158],[157.94206790500007,6.730536200000131],[157.94890384200008,6.731675523000163],[157.94825280000012,6.725775458000129],[157.94581139400012,6.722601630000071]]],[[[158.20167076900006,6.970038153000104],[158.20826256600006,6.965277411000116],[158.21802819100017,6.970851955000114],[158.22527103000013,6.970200914000159],[158.23243248800017,6.967108466000084],[158.24236087300008,6.965277411000116],[158.26734459700018,6.966376044000157],[158.27662194100006,6.965277411000116],[158.27735436300017,6.963202216000099],[158.29395592500012,6.952297268000109],[158.2970483730002,6.951646226000165],[158.30347741,6.942857164000188],[158.30079186300023,6.940741278000175],[158.29078209700006,6.937974351000122],[158.29623457099999,6.92812734600011],[158.30469811300023,6.924383856000162],[158.31470787900005,6.925767320000148],[158.32496178500006,6.931138414000117],[158.3382267590001,6.879095770000149],[158.33863366000017,6.869086005000071],[158.3307397800002,6.866603908000144],[158.30884850400017,6.868475653000118],[158.30445397200018,6.865952867000189],[158.30640709700006,6.855210679000081],[158.3156030610002,6.836615302000084],[158.31755618600008,6.824693101000136],[158.31381269600004,6.808661200000145],[158.30453535200016,6.799302476000122],[158.29249108200017,6.7950707050001],[158.2444767590001,6.788275458000072],[158.2253524100001,6.789496161000088],[158.21509850400017,6.800767320000176],[158.19353274800008,6.793443101000165],[158.18018639400023,6.802476304000095],[158.17058353000007,6.817531643000109],[158.16049238400004,6.828111070000148],[158.16456139400017,6.841213283000116],[158.16602623800023,6.853989976000165],[158.16293379000015,6.865790106000134],[158.15308678500006,6.87592194200009],[158.15593509200008,6.879868882000082],[158.16049238400004,6.890204169000171],[158.13298587300008,6.891913153000175],[158.12582441500004,6.907416083000101],[158.1324975920002,6.941351630000142],[158.141856316,6.950995184000121],[158.16114342500023,6.951361395000134],[158.17823326900012,6.956040757000139],[158.18091881600017,6.978949286000145],[158.20167076900006,6.970038153000104]]],[[[151.86182701900006,7.327134507000068],[151.85678144600004,7.316595770000106],[151.85320071700008,7.353827216000099],[151.85450280000018,7.370062567000133],[151.8626408210001,7.361761786000145],[151.86557050900004,7.350653387000122],[151.86524498800006,7.338771877000085],[151.86182701900006,7.327134507000068]]],[[[149.18669681100008,7.376125393000123],[149.1857202480002,7.371649481000162],[149.18083743600013,7.381170966000155],[149.18726647200006,7.381577867000161],[149.188243035,7.379787502000085],[149.18669681100008,7.376125393000123]]],[[[151.63640384200002,7.387111721000096],[151.65015709700006,7.369370835000098],[151.65072675900004,7.354234117000189],[151.64454186300023,7.3360863300001],[151.63428795700023,7.327866929000095],[151.6227319670002,7.34267812700007],[151.6158960300002,7.34267812700007],[151.60743248800023,7.336127020000092],[151.595957879,7.336737372000144],[151.58269290500007,7.340399481000105],[151.56812584700006,7.34267812700007],[151.57113691500015,7.346258856000134],[151.57422936300023,7.347723700000103],[151.58179772200018,7.348863023000135],[151.59107506600006,7.353420315000093],[151.61736087300002,7.3589541690001],[151.6227319670002,7.365912177000098],[151.61841881600012,7.375881252000085],[151.59693444100017,7.372748114000117],[151.5886336600001,7.383612372000101],[151.6224064460001,7.391750393000109],[151.63640384200002,7.387111721000096]]],[[[151.8702905610002,7.463527736000103],[151.876719597,7.458726304000109],[151.88379967500006,7.463568427000098],[151.89226321700002,7.462469794000143],[151.90316816500004,7.459540106000119],[151.91765384200008,7.458726304000109],[151.907481316,7.44692617400014],[151.89063561300011,7.435248114000146],[151.87191816500004,7.42674388200011],[151.85621178500017,7.424627997000101],[151.8556421230002,7.43695709800015],[151.85678144600004,7.447170315000093],[151.86304772200018,7.465562242000132],[151.86744225400017,7.464748440000122],[151.8702905610002,7.463527736000103]]],[[[150.408457879,8.579291083000086],[150.40748131600006,8.57550690300016],[150.40463300900004,8.586004950000131],[150.4093530610002,8.58466217700014],[150.4098413420002,8.58234284100017],[150.408457879,8.579291083000086]]],[[[149.67448978000007,8.581732489000117],[149.668711785,8.574693101000065],[149.66529381600012,8.587591864000075],[149.66781660200004,8.604234117000118],[149.67554772200006,8.616441148000177],[149.687266472,8.616034247000172],[149.68881269600016,8.607326565000108],[149.68295332100004,8.59430573100012],[149.67448978000007,8.581732489000117]]],[[[150.122813347,8.978216864000075],[150.11817467500012,8.976304429000109],[150.12427819100017,8.98550039300008],[150.12745201900023,8.987494208000115],[150.13298587300008,8.986070054000052],[150.13054446700002,8.980943101000136],[150.12712649800014,8.979152736000145],[150.122813347,8.978216864000075]]],[[[138.1842554050002,9.544378973000136],[138.197520379,9.539007880000085],[138.21900475400005,9.54857005400008],[138.21412194100017,9.537054755000142],[138.20240319100017,9.521185614000117],[138.18873131600006,9.506822007000139],[138.17798912900005,9.500189520000077],[138.16407311300023,9.504828192000105],[138.15658613399998,9.525783596000139],[138.14380944100006,9.521307684000178],[138.1344507170002,9.511867580000157],[138.07984459700006,9.425441799000069],[138.06812584700006,9.41205475500007],[138.06381269600016,9.436102606000105],[138.07300866000006,9.470404364000075],[138.08912194100012,9.501166083000143],[138.10596764400012,9.514471747000158],[138.1129663420002,9.521470445000148],[138.12126712300008,9.55487702000012],[138.126231316,9.565985419000143],[138.14112389400017,9.5743675800001],[138.14722741000006,9.567368882000125],[138.1500757170002,9.541164455000086],[138.15186608200005,9.550848700000145],[138.15495853000007,9.560736395000148],[138.15919030000006,9.569525458000129],[138.16439863399998,9.575873114000146],[138.17318769600016,9.582342841000155],[138.18490644600004,9.588812567000062],[138.19361412900005,9.588853257000054],[138.19239342500012,9.575873114000146],[138.18165123800011,9.558742580000114],[138.1842554050002,9.544378973000136]]],[[[140.52466881600006,9.764471747000115],[140.515391472,9.761175848000079],[140.51417076900006,9.76780833500014],[140.52173912900005,9.774725653000132],[140.53126061300023,9.775580145000134],[140.53288821700008,9.771918036000088],[140.52466881600006,9.764471747000115]]]]}},{type:"Feature",id:"MAC",properties:{name:"Mocao S.A.R"},geometry:{type:"MultiPolygon",coordinates:[[[[113.56578796582595,22.178150738299212],[113.57269320501172,22.176476902962307],[113.5802706226224,22.169824518866072],[113.59039297205865,22.15762606953588],[113.5959509846867,22.14624597745448],[113.59759570050656,22.138784879704744],[113.5833079211651,22.143690704196963],[113.58108442562241,22.1383635957775],[113.58531418281997,22.13523049964258],[113.58594811300011,22.131944078000075],[113.58668053500006,22.12954336100013],[113.58749433700004,22.127224026000178],[113.58749433700004,22.124863999000027],[113.58594811300011,22.124090887000094],[113.5835880870001,22.123317776000178],[113.5774845710001,22.126654364],[113.57797285200016,22.120917059000035],[113.57406660200016,22.119370835],[113.57097415500019,22.120143947000102],[113.56674238400015,22.12335846600017],[113.56666100400017,22.117377020000063],[113.56519616000006,22.112616278000147],[113.56633548300024,22.107692776000093],[113.56324303500017,22.10691966400016],[113.55738366000006,22.111151434000092],[113.55225670700011,22.107692776000093],[113.55152428500017,22.106146552000055],[113.54916425900004,22.105373440000122],[113.54680423300019,22.105373440000122],[113.54371178500011,22.107692776000093],[113.5411076180001,22.113267320000105],[113.54525800900015,22.114243882],[113.54232832100004,22.140733140000137],[113.54224694100006,22.14081452000012],[113.53410892000014,22.148789781000076],[113.53223717500023,22.15253327000012],[113.53223717500023,22.152614651000093],[113.52692431077317,22.168760192115823],[113.53784133758728,22.172620879932616],[113.54428547260484,22.176504660964298],[113.55584649461062,22.178538947454722],[113.56578796582595,22.178150738299212]]],[[[113.5541294584012,22.215271888466667],[113.55983815121535,22.212685395244904],[113.56187517271822,22.20688407835336],[113.55821809672415,22.20411083940164],[113.55724807683178,22.20099501060631],[113.55789156932298,22.194299289453465],[113.55740177822122,22.18941009184685],[113.55414606652067,22.186543982386034],[113.54869359252064,22.183887813144135],[113.5429889253112,22.18113213820274],[113.53810309310758,22.17916678115551],[113.53288821700019,22.178697007000054],[113.52890058700021,22.178697007000054],[113.52483157600008,22.17381419500019],[113.5247501960001,22.173732815],[113.51986738400004,22.18370189000011],[113.51986738400004,22.1837425800001],[113.52019290500002,22.184881903000033],[113.52214603000019,22.190497137000037],[113.52483157600008,22.193060614000146],[113.52540123800023,22.193630276000093],[113.53036543100009,22.201524156000076],[113.53524824300004,22.207546291000185],[113.53370201900012,22.210760809000035],[113.53207441499998,22.210760809000035],[113.53288821700019,22.209173895],[113.52735436300006,22.207546291000185],[113.52434329500025,22.212551174000126],[113.52890058700021,22.21385325700011],[113.52890058700021,22.214626369000044],[113.53524824300004,22.214626369000044],[113.53646894600016,22.217067776000178],[113.53891035199999,22.22077057500003],[113.54452558700021,22.217678127000127],[113.54452558700021,22.21613190300009],[113.54924110969498,22.216876142265193],[113.5541294584012,22.215271888466667]]]]}},{type:"Feature",id:"MHL",properties:{name:"Marshall Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[168.71680748800023,4.574774481000134],[168.685394727,4.573797919000157],[168.7350366550002,4.590521552000084],[168.74431399800008,4.59861888200011],[168.76807701900017,4.629055080000157],[168.7584741550002,4.604641018000123],[168.74138431100002,4.585842190000079],[168.71680748800023,4.574774481000134]]],[[[168.12794030000012,5.601629950000088],[168.11622155000012,5.591376044000157],[168.1010848320001,5.599310614000132],[168.10132897200006,5.599595445000162],[168.107269727,5.597235419000114],[168.11524498800023,5.595404364000132],[168.12110436300006,5.597357489000089],[168.12566165500002,5.60569896000014],[168.1276147800002,5.614243882000082],[168.12728925900015,5.622788804000095],[168.1245223320001,5.631048895000092],[168.13200931100008,5.618557033000073],[168.12794030000012,5.601629950000088]]],[[[169.12061608200005,5.647406317000105],[169.11451256600017,5.638128973000136],[169.11646569100006,5.649237372000172],[169.12061608200005,5.647406317000105]]],[[[169.63502037900005,5.829046942000062],[169.61524498800011,5.798773505000071],[169.59034264400006,5.800930080000157],[169.6101180350001,5.81191640800013],[169.61752363399998,5.81826406500015],[169.62354576900006,5.827297268000066],[169.62964928500017,5.840155341000099],[169.63868248800006,5.870347398000192],[169.6451929050002,5.917141018000081],[169.65552819100017,5.942857164000117],[169.67603600400005,5.961004950000117],[169.70020592500023,5.97601959800015],[169.718597852,5.99310944200009],[169.7345483730002,6.01312897300015],[169.72144616000006,5.976629950000103],[169.66521243600008,5.938788153000161],[169.65251712300008,5.899847723000079],[169.64779707100016,5.870021877000085],[169.63502037900005,5.829046942000062]]],[[[171.99610436300011,6.060980536000088],[172.02979576900012,6.054144598000079],[172.00831139400012,6.056219794000086],[171.98414147200018,6.051703192000133],[171.9624129570001,6.051825262000108],[171.94841556100008,6.067775783000116],[171.95053144600016,6.066595770000092],[171.956797722,6.064154364000146],[171.96648196700008,6.061997789000145],[171.99610436300011,6.060980536000088]]],[[[171.74317467500023,6.083197333000143],[171.74512780000012,6.079128322000173],[171.73845462300002,6.079169012000165],[171.72820071700014,6.079291083000143],[171.72282962300008,6.083441473000093],[171.72169030000012,6.090969143000137],[171.72461998800023,6.101711330000157],[171.72852623800023,6.09764232000019],[171.73243248800023,6.09210846600017],[171.74317467500023,6.083197333000143]]],[[[171.59799238400015,7.024725653000147],[171.611175977,7.019924221000153],[171.6761173840001,7.022853908000087],[171.68946373800006,7.019924221000153],[171.73406009200008,6.984686591000113],[171.75668379000004,6.972113348000121],[171.73031660200004,6.975572007000125],[171.68873131600006,7.006577867000146],[171.660411004,7.013088283000144],[171.61394290500007,7.006089585000069],[171.59262129,7.01528554900014],[171.57732181100002,7.047186591000155],[171.58725019600004,7.034084377000085],[171.59799238400015,7.024725653000147]]],[[[171.77588951900006,7.028143622000158],[171.76417076900012,7.019517320000148],[171.7701929050002,7.0288760440001],[171.79224694100012,7.054999091000141],[171.7944442070001,7.057766018000109],[171.79590905000023,7.06020742400014],[171.79786217500012,7.061916408000144],[171.80095462300008,7.062689520000077],[171.7944442070001,7.049750067000062],[171.78598066500015,7.038234768000123],[171.77588951900006,7.028143622000158]]],[[[171.90894616000017,7.092271226000122],[171.8921004570001,7.090806382000068],[171.8960067070001,7.093898830000143],[171.900238477,7.095770575000117],[171.90967858200023,7.098781643000109],[171.91773522200006,7.10512929900014],[171.92188561300011,7.111761786000116],[171.92123457100016,7.118475653000147],[171.91537519599999,7.125148830000114],[171.92888431100008,7.118312893000095],[171.92383873800023,7.104396877000113],[171.90894616000017,7.092271226000122]]],[[[171.05713951900012,7.143459377000085],[171.22641035200016,7.075751044000143],[171.2374780610002,7.075913804000109],[171.2633569670002,7.080796617000175],[171.28484134200014,7.08832428600013],[171.39356530000023,7.109930731000134],[171.36687259200002,7.094468492000118],[171.29346764400023,7.083685614000103],[171.26319420700023,7.067694403000104],[171.23519941500004,7.067694403000104],[171.20215905000023,7.072455145000106],[171.06088300900015,7.135402736000131],[171.03565514400012,7.155096747000172],[171.0503035820001,7.170721747000158],[171.05054772200006,7.161037502000113],[171.05225670700023,7.154852606000134],[171.05713951900012,7.143459377000085]]],[[[168.73829186300023,7.30906810100015],[168.75782311300023,7.307928778000118],[168.83008873800011,7.307928778000118],[168.81527754000004,7.292466539000188],[168.79151451900023,7.293402411000074],[168.74610436300023,7.304185289000174],[168.69581139400006,7.313381252000141],[168.67505944100017,7.320868231000119],[168.67920983200023,7.335191148000192],[168.6940210300002,7.321763414000117],[168.71631920700023,7.31537506700009],[168.73829186300023,7.30906810100015]]],[[[168.572520379,7.417792059000178],[168.57683353000002,7.404120184000149],[168.5639754570001,7.412746486000145],[168.55518639400023,7.430324611000089],[168.55372155000018,7.44985586100016],[168.56251061300023,7.464341539000117],[168.56641686300023,7.450995184000107],[168.572520379,7.417792059000178]]],[[[168.96924889400012,7.578680731000148],[168.96859785200016,7.571234442000076],[168.96558678500006,7.574652411000088],[168.96762129,7.580633856000105],[168.96810957100016,7.584499416000114],[168.96208743600008,7.591701565000136],[168.95134524800008,7.595689195000119],[168.93848717500012,7.59638092700007],[168.94410241000006,7.598089911000074],[168.95183353000002,7.599188544000114],[168.95964603000002,7.598578192000147],[168.96558678500006,7.595363674000097],[168.96924889400012,7.586737372000087],[168.96973717500012,7.58388906500015],[168.96924889400012,7.578680731000148]]],[[[167.40170332100016,8.317816473000107],[167.40772545700005,8.307277736000131],[167.39966881600006,8.310777085000126],[167.40170332100016,8.317816473000107]]],[[[167.74000084700018,8.733221747000158],[167.73161868600002,8.724595445000162],[167.73072350400005,8.730373440000122],[167.73031660200004,8.735256252000099],[167.7330835300002,8.739691473000079],[167.74024498800023,8.743841864000103],[167.74154707100004,8.73769765800013],[167.74000084700018,8.733221747000158]]],[[[170.85173587300008,8.897772528000175],[170.84473717500006,8.886501369000186],[170.83912194100017,8.888169664000102],[170.8385522800002,8.88837311400006],[170.83790123800023,8.88865794500019],[170.83741295700005,8.889064846000096],[170.83716881600006,8.889593817000076],[170.84131920700005,8.8985863300001],[170.84457441500004,8.900783596000096],[170.85010826900023,8.901434637000136],[170.85173587300008,8.897772528000175]]],[[[170.24708092500006,9.457749742000189],[170.24024498800006,9.449774481000134],[170.23878014400012,9.466701565000122],[170.243907097,9.4663760440001],[170.24708092500006,9.457749742000189]]],[[[170.878754102,10.275091864000132],[170.87468509200002,10.274603583000143],[170.87452233200005,10.286607164000173],[170.87859134200002,10.287176825000145],[170.878754102,10.275091864000132]]],[[[166.89421634200014,11.155178127000156],[166.875254754,11.14496491100013],[166.85336347700016,11.145412502000127],[166.83578535200004,11.159247137000122],[166.8718367850001,11.16229889500012],[166.90414472700004,11.17291901200015],[166.89421634200014,11.155178127000156]]],[[[165.55062910200016,11.626939195000176],[165.55372155000023,11.61981842700014],[165.54021243600008,11.63377513200011],[165.54281660200016,11.633002020000092],[165.54688561300011,11.631008205000143],[165.55062910200016,11.626939195000176]]],[[[165.28891035200004,11.705959377000099],[165.28223717500018,11.695786851000065],[165.28223717500018,11.708441473000121],[165.2867944670002,11.71088288000007],[165.28891035200004,11.705959377000099]]],[[[168.99691816500004,14.593085028000147],[168.98731530000012,14.58685944200009],[168.99830162900017,14.599025783000087],[169.01075280000012,14.610174872000101],[169.01368248800023,14.610500393000123],[169.0073348320001,14.602769273000106],[168.99691816500004,14.593085028000147]]]]}},{type:"Feature",id:"MAR",properties:{name:"Morocco"},geometry:{type:"Polygon",coordinates:[[[-5.193863,35.755182],[-4.591006,35.330712],[-3.640057,35.399855],[-2.604306,35.179093],[-2.169914,35.168396],[-1.792986,34.527919],[-1.733455,33.919713],[-1.388049,32.864015],[-1.124551,32.651522],[-1.307899,32.262889],[-2.616605,32.094346],[-3.06898,31.724498],[-3.647498,31.637294],[-3.690441,30.896952],[-4.859646,30.501188],[-5.242129,30.000443],[-6.060632,29.7317],[-7.059228,29.579228],[-8.674116,28.841289],[-8.66559,27.656426],[-8.817809,27.656426],[-8.817828,27.656426],[-8.794884,27.120696],[-9.413037,27.088476],[-9.735343,26.860945],[-10.189424,26.860945],[-10.551263,26.990808],[-11.392555,26.883424],[-11.71822,26.104092],[-12.030759,26.030866],[-12.500963,24.770116],[-13.89111,23.691009],[-14.221168,22.310163],[-14.630833,21.86094],[-14.750955,21.5006],[-17.002962,21.420734],[-17.020428,21.42231],[-16.973248,21.885745],[-16.589137,22.158234],[-16.261922,22.67934],[-16.326414,23.017768],[-15.982611,23.723358],[-15.426004,24.359134],[-15.089332,24.520261],[-14.824645,25.103533],[-14.800926,25.636265],[-14.43994,26.254418],[-13.773805,26.618892],[-13.139942,27.640148],[-13.121613,27.654148],[-12.618837,28.038186],[-11.688919,28.148644],[-10.900957,28.832142],[-10.399592,29.098586],[-9.564811,29.933574],[-9.814718,31.177736],[-9.434793,32.038096],[-9.300693,32.564679],[-8.657476,33.240245],[-7.654178,33.697065],[-6.912544,34.110476],[-6.244342,35.145865],[-5.929994,35.759988],[-5.193863,35.755182]]]}},{type:"Feature",id:"MYT",properties:{name:"Mayotte"},geometry:{type:"MultiPolygon",coordinates:[[[[45.04101,-12.64686],[45.04139,-12.64715],[45.04161,-12.64723],[45.04201,-12.64774],[45.042,-12.64811],[45.04158,-12.64865],[45.04138,-12.64883],[45.0413,-12.64898],[45.04093,-12.64917],[45.04081,-12.64932],[45.04056,-12.64924],[45.04037,-12.64925],[45.03992,-12.6494],[45.0398,-12.64952],[45.03975,-12.6497],[45.03943,-12.64992],[45.03898,-12.64999],[45.03875,-12.64994],[45.03847,-12.65011],[45.03807,-12.65011],[45.03759,-12.6502],[45.03658,-12.65052],[45.03636,-12.65062],[45.03599,-12.651],[45.03572,-12.65156],[45.03546,-12.65174],[45.03509,-12.65209],[45.035,-12.65229],[45.03476,-12.6525],[45.03449,-12.65289],[45.0344,-12.65309],[45.03408,-12.65362],[45.0341,-12.65383],[45.03399,-12.65415],[45.03365,-12.65447],[45.03333,-12.65515],[45.03326,-12.65519],[45.03308,-12.65554],[45.03283,-12.6557],[45.03284,-12.65586],[45.03254,-12.65587],[45.0323,-12.65573],[45.03213,-12.65577],[45.03175,-12.65602],[45.03154,-12.65579],[45.03141,-12.65582],[45.03118,-12.65577],[45.03101,-12.65543],[45.03089,-12.65532],[45.03056,-12.65531],[45.03029,-12.65518],[45.02914,-12.65527],[45.02876,-12.65509],[45.02909,-12.65485],[45.02955,-12.65418],[45.02961,-12.65389],[45.02994,-12.65314],[45.0301,-12.65267],[45.03037,-12.65209],[45.03047,-12.65157],[45.03039,-12.65128],[45.03023,-12.65097],[45.02984,-12.65048],[45.02932,-12.64994],[45.02887,-12.64951],[45.02783,-12.64862],[45.02687,-12.648],[45.02629,-12.64767],[45.02606,-12.64758],[45.02533,-12.64712],[45.02499,-12.64687],[45.02467,-12.64682],[45.02428,-12.64663],[45.02355,-12.64635],[45.02322,-12.64635],[45.02277,-12.64656],[45.0224,-12.647],[45.02228,-12.64724],[45.02225,-12.64741],[45.02199,-12.64761],[45.02184,-12.64758],[45.02135,-12.64766],[45.02116,-12.64773],[45.02096,-12.64759],[45.02046,-12.64736],[45.02006,-12.64724],[45.01961,-12.64724],[45.01928,-12.64737],[45.01881,-12.64717],[45.01869,-12.64705],[45.01866,-12.64689],[45.01883,-12.64661],[45.01897,-12.64652],[45.01899,-12.64618],[45.01915,-12.64563],[45.01914,-12.64551],[45.01893,-12.64523],[45.01888,-12.64493],[45.01869,-12.64463],[45.01834,-12.64435],[45.01833,-12.64406],[45.01845,-12.6438],[45.01841,-12.64345],[45.01848,-12.64327],[45.0189,-12.64307],[45.01904,-12.64312],[45.01935,-12.64304],[45.01953,-12.64318],[45.02033,-12.64307],[45.02054,-12.64282],[45.02094,-12.64263],[45.02165,-12.64244],[45.02186,-12.64235],[45.02228,-12.642],[45.02274,-12.64177],[45.02293,-12.64163],[45.02295,-12.64148],[45.02328,-12.64107],[45.02356,-12.64101],[45.02426,-12.64049],[45.02473,-12.64],[45.02494,-12.63955],[45.02511,-12.63934],[45.02514,-12.63898],[45.02506,-12.63888],[45.02523,-12.63875],[45.02511,-12.63852],[45.02515,-12.63823],[45.02524,-12.63799],[45.02542,-12.63789],[45.02561,-12.63758],[45.02555,-12.63755],[45.0258,-12.63724],[45.02615,-12.63692],[45.02635,-12.6368],[45.0266,-12.63659],[45.02701,-12.63667],[45.0271,-12.63681],[45.02753,-12.63701],[45.02774,-12.63715],[45.02823,-12.63734],[45.02984,-12.63802],[45.03027,-12.63837],[45.03046,-12.63847],[45.03077,-12.6387],[45.0313,-12.63885],[45.03158,-12.63887],[45.03182,-12.63898],[45.03232,-12.63929],[45.03263,-12.63965],[45.03287,-12.63977],[45.03308,-12.63996],[45.03323,-12.63998],[45.03347,-12.64029],[45.03375,-12.64074],[45.03389,-12.64126],[45.03427,-12.64183],[45.03474,-12.64215],[45.03508,-12.64229],[45.03531,-12.64235],[45.03565,-12.64266],[45.03601,-12.64286],[45.03628,-12.64306],[45.0366,-12.64346],[45.03686,-12.64368],[45.03714,-12.64376],[45.03725,-12.64389],[45.03725,-12.64405],[45.03736,-12.64427],[45.03804,-12.64484],[45.03837,-12.64504],[45.03889,-12.64545],[45.03939,-12.64579],[45.03981,-12.64624],[45.04009,-12.6465],[45.04043,-12.64659],[45.04056,-12.64656],[45.04085,-12.6467],[45.04101,-12.64686]]],[[[45.02801,-12.65673],[45.02791,-12.65712],[45.02766,-12.65735],[45.02765,-12.65749],[45.02741,-12.65765],[45.02737,-12.65786],[45.02702,-12.65815],[45.02693,-12.65794],[45.02691,-12.65754],[45.02701,-12.6574],[45.02682,-12.65691],[45.0269,-12.65674],[45.02727,-12.65645],[45.02734,-12.65623],[45.02766,-12.65594],[45.02773,-12.6557],[45.02795,-12.65542],[45.0283,-12.65543],[45.02825,-12.65591],[45.02817,-12.65592],[45.02822,-12.65623],[45.02815,-12.65653],[45.02801,-12.65673]]],[[[45.13822,-13.00341],[45.13799,-13.00454],[45.13798,-13.00471],[45.13788,-13.00503],[45.13772,-13.00523],[45.13757,-13.00526],[45.13735,-13.00498],[45.13704,-13.00488],[45.13703,-13.00471],[45.13683,-13.00428],[45.13678,-13.00401],[45.13683,-13.00366],[45.13701,-13.00325],[45.13701,-13.003],[45.13715,-13.00289],[45.13756,-13.00219],[45.13769,-13.0019],[45.1381,-13.00132],[45.13845,-13.0012],[45.13853,-13.00155],[45.13846,-13.00247],[45.13842,-13.00273],[45.13832,-13.00296],[45.13822,-13.00341]]],[[[45.2342,-12.89812],[45.23422,-12.89827],[45.23413,-12.89893],[45.23405,-12.89907],[45.23379,-12.89927],[45.23368,-12.89923],[45.23349,-12.89956],[45.23351,-12.89976],[45.23343,-12.89988],[45.2329,-12.90018],[45.23256,-12.90027],[45.23232,-12.90066],[45.23229,-12.90081],[45.23239,-12.90095],[45.23235,-12.90122],[45.23255,-12.90144],[45.23237,-12.90149],[45.23223,-12.90143],[45.23209,-12.90165],[45.23186,-12.90161],[45.23174,-12.90177],[45.23151,-12.90181],[45.23138,-12.90162],[45.23155,-12.90141],[45.23157,-12.90104],[45.23136,-12.90072],[45.23096,-12.90067],[45.23086,-12.9003],[45.23065,-12.90015],[45.23051,-12.90031],[45.23035,-12.90021],[45.23047,-12.89999],[45.23034,-12.89954],[45.23011,-12.89942],[45.22988,-12.89945],[45.22965,-12.89936],[45.22952,-12.89908],[45.22971,-12.8989],[45.2299,-12.89851],[45.2299,-12.89826],[45.23005,-12.89822],[45.23009,-12.89799],[45.22997,-12.89784],[45.23008,-12.89775],[45.23014,-12.89756],[45.23016,-12.89708],[45.23014,-12.89671],[45.23024,-12.89623],[45.23045,-12.89578],[45.23065,-12.89561],[45.23065,-12.89553],[45.23124,-12.89531],[45.23123,-12.89514],[45.23158,-12.8952],[45.23195,-12.89544],[45.23225,-12.89546],[45.23239,-12.8954],[45.23275,-12.89546],[45.23306,-12.89575],[45.23318,-12.89593],[45.23357,-12.8961],[45.23383,-12.89639],[45.23398,-12.89649],[45.2341,-12.89677],[45.23408,-12.89691],[45.23419,-12.8971],[45.23416,-12.89748],[45.23409,-12.8977],[45.23409,-12.89796],[45.2342,-12.89812]]],[[[45.06653,-12.7597],[45.0663,-12.75988],[45.06612,-12.75985],[45.06636,-12.75955],[45.06653,-12.7595],[45.06653,-12.7597]]],[[[45.08976,-12.84651],[45.08966,-12.84694],[45.08957,-12.84697],[45.08929,-12.84683],[45.08907,-12.84707],[45.08893,-12.84714],[45.08873,-12.84707],[45.08857,-12.84687],[45.08866,-12.8466],[45.08881,-12.84649],[45.08894,-12.84625],[45.08932,-12.84611],[45.08949,-12.84598],[45.08974,-12.8464],[45.08976,-12.84651]]],[[[45.21881,-12.98296],[45.21833,-12.98359],[45.21804,-12.98435],[45.21784,-12.985],[45.21757,-12.9857],[45.21724,-12.98618],[45.2168,-12.98641],[45.21637,-12.98644],[45.21604,-12.98632],[45.21591,-12.98613],[45.21576,-12.98552],[45.21594,-12.98502],[45.2163,-12.98453],[45.21646,-12.98408],[45.21643,-12.98359],[45.21651,-12.98333],[45.21703,-12.98268],[45.21714,-12.98219],[45.2169,-12.98146],[45.21706,-12.98111],[45.21729,-12.98083],[45.21742,-12.98087],[45.21767,-12.98124],[45.218,-12.98127],[45.21841,-12.98159],[45.21867,-12.9817],[45.21924,-12.98164],[45.2193,-12.98183],[45.21917,-12.9824],[45.21881,-12.98296]]],[[[45.1604,-12.97564],[45.15978,-12.97592],[45.15946,-12.97587],[45.15955,-12.97567],[45.15978,-12.97554],[45.16031,-12.97546],[45.16073,-12.97533],[45.16078,-12.9754],[45.16105,-12.97534],[45.1609,-12.97567],[45.16068,-12.97561],[45.1604,-12.97564]]],[[[45.14365,-12.91995],[45.14364,-12.9202],[45.14336,-12.92042],[45.14317,-12.92063],[45.14294,-12.92076],[45.14282,-12.92094],[45.14247,-12.92117],[45.14231,-12.9215],[45.14207,-12.92168],[45.14195,-12.92206],[45.142,-12.92225],[45.1418,-12.92254],[45.14157,-12.9226],[45.14138,-12.92244],[45.14127,-12.92224],[45.1411,-12.9221],[45.14095,-12.92175],[45.14078,-12.92197],[45.14057,-12.92213],[45.14031,-12.92201],[45.14016,-12.9217],[45.13971,-12.92176],[45.13945,-12.92175],[45.13906,-12.9214],[45.13938,-12.92091],[45.13946,-12.92073],[45.1397,-12.92059],[45.13995,-12.92058],[45.1402,-12.92004],[45.14034,-12.91992],[45.14085,-12.91911],[45.14093,-12.91869],[45.14115,-12.91839],[45.1412,-12.9181],[45.14122,-12.91759],[45.14159,-12.9173],[45.14189,-12.91733],[45.14201,-12.91742],[45.14239,-12.91784],[45.14268,-12.91786],[45.14279,-12.91793],[45.14296,-12.9182],[45.14306,-12.91861],[45.14328,-12.91876],[45.14345,-12.91902],[45.14364,-12.91955],[45.14373,-12.91969],[45.14365,-12.91995]]],[[[45.20258,-12.93363],[45.20244,-12.93385],[45.20257,-12.93417],[45.2025,-12.93452],[45.20232,-12.93484],[45.20232,-12.93503],[45.20218,-12.93507],[45.20134,-12.9345],[45.20114,-12.93447],[45.20104,-12.93437],[45.20072,-12.93428],[45.20039,-12.93403],[45.19994,-12.93377],[45.19975,-12.93373],[45.19971,-12.93354],[45.1995,-12.93337],[45.19917,-12.93317],[45.19879,-12.93287],[45.19847,-12.93273],[45.19822,-12.93269],[45.19787,-12.93243],[45.19846,-12.93245],[45.19885,-12.9324],[45.19898,-12.93229],[45.19984,-12.9324],[45.20012,-12.93258],[45.20055,-12.93266],[45.20126,-12.93271],[45.2017,-12.93289],[45.2019,-12.93304],[45.20231,-12.93328],[45.20258,-12.93363]]],[[[45.20736,-12.92046],[45.20779,-12.92066],[45.20768,-12.92083],[45.20772,-12.92109],[45.20793,-12.92116],[45.20785,-12.92132],[45.2076,-12.92127],[45.20753,-12.92114],[45.20641,-12.92063],[45.20612,-12.92055],[45.20558,-12.92054],[45.20546,-12.92045],[45.20543,-12.92016],[45.20552,-12.9201],[45.20629,-12.92016],[45.20656,-12.92022],[45.20675,-12.9202],[45.20713,-12.9203],[45.20736,-12.92046]]],[[[45.20585,-12.91095],[45.20535,-12.91109],[45.20561,-12.91086],[45.20585,-12.91095]]],[[[45.20534,-12.90965],[45.2052,-12.90982],[45.20502,-12.90977],[45.20522,-12.9096],[45.20534,-12.90965]]],[[[45.12806,-12.72462],[45.12851,-12.72483],[45.12836,-12.7249],[45.1279,-12.72475],[45.12778,-12.72463],[45.12768,-12.72436],[45.12785,-12.72431],[45.12806,-12.72462]]],[[[45.17379,-12.71833],[45.1735,-12.71845],[45.17327,-12.71881],[45.17314,-12.71866],[45.17342,-12.71834],[45.17372,-12.71816],[45.17379,-12.71833]]],[[[45.12781,-12.72325],[45.12775,-12.72349],[45.12757,-12.72337],[45.1277,-12.72311],[45.12781,-12.72325]]],[[[45.19556,-12.90685],[45.19559,-12.90717],[45.19548,-12.9072],[45.19544,-12.90692],[45.19556,-12.90685]]],[[[45.11818,-12.67502],[45.11813,-12.67508],[45.11801,-12.67568],[45.11833,-12.67651],[45.11824,-12.67669],[45.11749,-12.67646],[45.11727,-12.67634],[45.11695,-12.67609],[45.11671,-12.67598],[45.11622,-12.67585],[45.11578,-12.67579],[45.11551,-12.6757],[45.11532,-12.67572],[45.11497,-12.67558],[45.11476,-12.67555],[45.11434,-12.67566],[45.11396,-12.67569],[45.1135,-12.67581],[45.11333,-12.67592],[45.11295,-12.67631],[45.11273,-12.67645],[45.11258,-12.67634],[45.11245,-12.67613],[45.11201,-12.67583],[45.11148,-12.6758],[45.11124,-12.67573],[45.1109,-12.67556],[45.11088,-12.67547],[45.11108,-12.6752],[45.11143,-12.67495],[45.11189,-12.67456],[45.11202,-12.67434],[45.11226,-12.67408],[45.11267,-12.67386],[45.11283,-12.67372],[45.11304,-12.67363],[45.11359,-12.67322],[45.11391,-12.67343],[45.11403,-12.67368],[45.11426,-12.67388],[45.11468,-12.67416],[45.1149,-12.67436],[45.11505,-12.67458],[45.11572,-12.67494],[45.11591,-12.67501],[45.11655,-12.67497],[45.11676,-12.675],[45.11723,-12.67501],[45.11808,-12.67486],[45.11818,-12.67502]]],[[[45.05929,-12.67671],[45.05935,-12.6769],[45.05947,-12.67696],[45.05949,-12.67716],[45.05888,-12.677],[45.05877,-12.67714],[45.0584,-12.67723],[45.0582,-12.67745],[45.05767,-12.67743],[45.05742,-12.67752],[45.05727,-12.67765],[45.05708,-12.67767],[45.05698,-12.67759],[45.05677,-12.67764],[45.05659,-12.6776],[45.05628,-12.67745],[45.05616,-12.67757],[45.05608,-12.67733],[45.05577,-12.677],[45.05564,-12.67698],[45.05546,-12.67679],[45.05535,-12.6769],[45.05515,-12.67673],[45.05516,-12.67646],[45.0553,-12.67642],[45.05553,-12.67651],[45.05559,-12.67637],[45.05578,-12.67645],[45.05598,-12.6767],[45.05625,-12.6767],[45.05668,-12.67644],[45.0566,-12.67625],[45.05682,-12.67618],[45.05693,-12.67595],[45.05709,-12.67577],[45.05709,-12.67558],[45.05723,-12.67558],[45.05732,-12.67601],[45.05779,-12.67605],[45.05814,-12.67594],[45.05821,-12.67565],[45.05847,-12.67581],[45.05857,-12.67581],[45.05864,-12.67559],[45.05876,-12.67545],[45.05872,-12.67514],[45.05881,-12.67512],[45.05891,-12.67533],[45.05924,-12.6753],[45.05958,-12.67539],[45.05996,-12.67518],[45.06006,-12.67537],[45.05991,-12.6755],[45.05966,-12.67561],[45.05961,-12.67582],[45.05928,-12.67659],[45.05929,-12.67671]]],[[[45.04898,-12.67178],[45.04906,-12.67204],[45.04953,-12.67283],[45.04945,-12.67305],[45.04925,-12.67308],[45.04901,-12.67299],[45.04853,-12.6726],[45.04811,-12.67242],[45.04796,-12.67246],[45.04768,-12.67229],[45.04756,-12.67237],[45.04701,-12.67198],[45.04657,-12.67179],[45.04641,-12.67193],[45.04613,-12.6718],[45.04621,-12.67158],[45.04647,-12.67149],[45.04686,-12.67152],[45.04713,-12.67145],[45.04741,-12.67147],[45.04865,-12.67127],[45.04886,-12.67155],[45.04898,-12.67178]]],[[[45.13021,-12.68939],[45.12994,-12.68952],[45.1293,-12.68964],[45.12881,-12.68979],[45.12854,-12.68974],[45.12832,-12.68938],[45.12814,-12.68916],[45.12824,-12.68907],[45.12849,-12.68906],[45.12894,-12.68911],[45.12954,-12.68912],[45.13011,-12.68927],[45.13021,-12.68939]]],[[[45.11909,-12.68858],[45.11878,-12.68869],[45.1187,-12.68853],[45.11898,-12.68848],[45.11909,-12.68858]]],[[[45.05146,-12.67552],[45.0516,-12.67576],[45.05141,-12.67579],[45.05132,-12.6756],[45.05146,-12.67552]]],[[[45.09984,-12.80194],[45.09982,-12.80138],[45.09971,-12.80089],[45.09983,-12.80048],[45.09995,-12.7996],[45.09985,-12.79944],[45.10002,-12.79936],[45.10014,-12.79918],[45.10025,-12.7984],[45.10012,-12.79817],[45.10023,-12.7981],[45.10024,-12.79792],[45.10046,-12.7976],[45.10068,-12.79742],[45.10113,-12.79695],[45.10164,-12.79672],[45.10202,-12.79666],[45.10285,-12.79672],[45.10321,-12.79661],[45.10335,-12.79669],[45.10355,-12.79659],[45.10429,-12.79659],[45.10466,-12.79647],[45.10476,-12.79649],[45.10534,-12.79621],[45.10567,-12.79618],[45.10575,-12.79612],[45.10628,-12.79612],[45.1065,-12.79603],[45.10712,-12.79569],[45.10737,-12.79574],[45.1077,-12.79556],[45.1078,-12.79544],[45.10814,-12.79488],[45.10845,-12.79492],[45.10879,-12.79508],[45.10876,-12.79524],[45.10901,-12.79547],[45.10912,-12.79566],[45.10977,-12.79574],[45.11003,-12.7958],[45.11019,-12.79594],[45.11014,-12.79611],[45.11026,-12.7962],[45.11047,-12.79648],[45.11091,-12.79673],[45.11132,-12.79662],[45.11172,-12.79632],[45.11183,-12.79643],[45.1121,-12.79636],[45.11224,-12.79612],[45.11226,-12.79588],[45.11236,-12.79555],[45.11249,-12.79539],[45.11251,-12.79513],[45.11244,-12.79498],[45.11247,-12.79444],[45.11262,-12.79396],[45.1125,-12.79374],[45.11239,-12.79372],[45.11234,-12.79334],[45.11208,-12.79332],[45.11198,-12.79318],[45.11162,-12.793],[45.1113,-12.79258],[45.11132,-12.79237],[45.11121,-12.79228],[45.11097,-12.79238],[45.11082,-12.79234],[45.11052,-12.79216],[45.11046,-12.79197],[45.1101,-12.79181],[45.10996,-12.79171],[45.10973,-12.79137],[45.10945,-12.7912],[45.10919,-12.7911],[45.10871,-12.79097],[45.10833,-12.79101],[45.10823,-12.79097],[45.10796,-12.7911],[45.10757,-12.79108],[45.10685,-12.79121],[45.10648,-12.79145],[45.10625,-12.79168],[45.10623,-12.79213],[45.10643,-12.79228],[45.10627,-12.79238],[45.10606,-12.79229],[45.10596,-12.79237],[45.1057,-12.7924],[45.10556,-12.79279],[45.10535,-12.79291],[45.10487,-12.79272],[45.10439,-12.7929],[45.1042,-12.7929],[45.10383,-12.79282],[45.10343,-12.7929],[45.10301,-12.79273],[45.10255,-12.79269],[45.10239,-12.79274],[45.10159,-12.79267],[45.1014,-12.79276],[45.1012,-12.79274],[45.10102,-12.79265],[45.1007,-12.79265],[45.1005,-12.79253],[45.09998,-12.79209],[45.09948,-12.79197],[45.09936,-12.79208],[45.09897,-12.79205],[45.09857,-12.79205],[45.0978,-12.79224],[45.09768,-12.7924],[45.0973,-12.79207],[45.09709,-12.79199],[45.09698,-12.79174],[45.09676,-12.79172],[45.09677,-12.79152],[45.09659,-12.79145],[45.09686,-12.79095],[45.09676,-12.79053],[45.09652,-12.78994],[45.09646,-12.7895],[45.09675,-12.78913],[45.09687,-12.78867],[45.09683,-12.78851],[45.09702,-12.78833],[45.097,-12.78796],[45.09696,-12.78785],[45.09702,-12.78756],[45.09698,-12.78735],[45.09668,-12.78696],[45.09679,-12.78687],[45.09674,-12.78673],[45.09686,-12.78664],[45.09697,-12.78672],[45.09709,-12.78639],[45.09738,-12.7862],[45.09782,-12.7861],[45.09819,-12.78612],[45.0985,-12.7858],[45.09817,-12.78565],[45.09824,-12.78541],[45.09824,-12.78505],[45.09816,-12.78479],[45.09831,-12.78445],[45.09813,-12.78428],[45.09778,-12.78419],[45.09738,-12.78425],[45.09732,-12.78436],[45.09694,-12.78455],[45.0967,-12.78473],[45.09653,-12.78497],[45.0963,-12.78511],[45.09596,-12.78563],[45.09603,-12.78597],[45.09628,-12.7861],[45.09642,-12.7861],[45.09616,-12.78646],[45.09622,-12.78667],[45.09613,-12.7868],[45.09591,-12.78674],[45.09568,-12.7865],[45.09564,-12.78637],[45.09535,-12.78632],[45.09506,-12.78613],[45.0946,-12.78545],[45.09466,-12.7853],[45.0945,-12.7849],[45.09432,-12.78461],[45.09415,-12.78449],[45.09389,-12.78454],[45.09386,-12.78441],[45.09415,-12.78442],[45.09446,-12.78432],[45.09467,-12.78452],[45.0949,-12.78451],[45.09505,-12.78441],[45.09532,-12.78437],[45.09565,-12.78419],[45.0958,-12.78394],[45.09599,-12.7838],[45.09637,-12.78378],[45.09662,-12.78347],[45.09688,-12.78336],[45.0971,-12.78334],[45.09728,-12.78314],[45.09759,-12.78292],[45.09787,-12.7828],[45.09801,-12.78286],[45.09822,-12.78274],[45.09832,-12.78256],[45.09842,-12.78219],[45.0984,-12.78206],[45.0986,-12.78201],[45.09876,-12.78216],[45.09904,-12.78207],[45.09936,-12.78178],[45.09944,-12.78138],[45.09967,-12.78104],[45.09983,-12.78087],[45.1,-12.78082],[45.10058,-12.78086],[45.10088,-12.78095],[45.10101,-12.78108],[45.10142,-12.7809],[45.10149,-12.78077],[45.1018,-12.78057],[45.10193,-12.78031],[45.10188,-12.7801],[45.10187,-12.77973],[45.10157,-12.77925],[45.10108,-12.77876],[45.10092,-12.77849],[45.10091,-12.77824],[45.10096,-12.77786],[45.10109,-12.77774],[45.10162,-12.77772],[45.10179,-12.77744],[45.10181,-12.77723],[45.10172,-12.77654],[45.10173,-12.77601],[45.10164,-12.77545],[45.10149,-12.77485],[45.10141,-12.7747],[45.10134,-12.77419],[45.10138,-12.77397],[45.10183,-12.77355],[45.10236,-12.77344],[45.10286,-12.7735],[45.10326,-12.77333],[45.10337,-12.7729],[45.10336,-12.77227],[45.10327,-12.77211],[45.10292,-12.77106],[45.10291,-12.77087],[45.10268,-12.77055],[45.10263,-12.77029],[45.1025,-12.77016],[45.10228,-12.76976],[45.10204,-12.76955],[45.10204,-12.76941],[45.10221,-12.76925],[45.10224,-12.76896],[45.1022,-12.76866],[45.10208,-12.7684],[45.10198,-12.7683],[45.10193,-12.76806],[45.10205,-12.76791],[45.10219,-12.76745],[45.1022,-12.76708],[45.10243,-12.76719],[45.10263,-12.76685],[45.10243,-12.76677],[45.10248,-12.76653],[45.1022,-12.76673],[45.10204,-12.76669],[45.10198,-12.76652],[45.10184,-12.76646],[45.10192,-12.76621],[45.10165,-12.76598],[45.1015,-12.76617],[45.10099,-12.7659],[45.10086,-12.76573],[45.10068,-12.76568],[45.10007,-12.7654],[45.09996,-12.7653],[45.09945,-12.76516],[45.09911,-12.76515],[45.09886,-12.76522],[45.09805,-12.76553],[45.09783,-12.7657],[45.09772,-12.76596],[45.09725,-12.76645],[45.09705,-12.7667],[45.09686,-12.76685],[45.09665,-12.76673],[45.09657,-12.76646],[45.09634,-12.76651],[45.09609,-12.76635],[45.0958,-12.76622],[45.09542,-12.76619],[45.09507,-12.76625],[45.09448,-12.76629],[45.09441,-12.76653],[45.09442,-12.76671],[45.09474,-12.76735],[45.09473,-12.76754],[45.09461,-12.76796],[45.09479,-12.76821],[45.09492,-12.76813],[45.09491,-12.76795],[45.09501,-12.76775],[45.09539,-12.76793],[45.09504,-12.76833],[45.09497,-12.76849],[45.09509,-12.7687],[45.09501,-12.7691],[45.09507,-12.76934],[45.09497,-12.7696],[45.09489,-12.77032],[45.0945,-12.77065],[45.09405,-12.77088],[45.09374,-12.77083],[45.09329,-12.77094],[45.093,-12.77098],[45.09283,-12.77114],[45.09239,-12.77141],[45.0921,-12.77139],[45.09186,-12.77122],[45.09171,-12.77091],[45.09164,-12.77063],[45.09169,-12.77046],[45.09191,-12.77017],[45.09188,-12.77003],[45.09167,-12.76969],[45.09128,-12.76938],[45.09081,-12.76893],[45.09065,-12.76883],[45.09011,-12.76836],[45.08996,-12.76827],[45.08917,-12.76764],[45.08908,-12.76753],[45.08857,-12.7671],[45.08839,-12.76718],[45.08799,-12.76716],[45.0877,-12.76663],[45.08772,-12.76639],[45.08746,-12.76601],[45.08719,-12.76553],[45.08709,-12.76524],[45.08733,-12.76461],[45.08726,-12.76455],[45.08708,-12.76492],[45.08689,-12.76523],[45.08657,-12.76535],[45.08592,-12.76524],[45.08534,-12.76503],[45.08508,-12.76489],[45.08476,-12.76481],[45.08444,-12.7648],[45.08421,-12.76485],[45.08336,-12.76466],[45.08255,-12.7644],[45.0818,-12.7641],[45.08111,-12.76402],[45.08083,-12.76387],[45.08071,-12.76397],[45.08032,-12.76466],[45.08039,-12.76481],[45.08035,-12.76498],[45.08008,-12.76518],[45.07965,-12.76556],[45.07958,-12.7658],[45.07956,-12.76612],[45.07941,-12.76647],[45.07908,-12.7669],[45.07892,-12.76688],[45.07849,-12.7667],[45.0783,-12.7667],[45.07806,-12.76677],[45.07782,-12.7667],[45.07767,-12.76659],[45.07731,-12.76652],[45.07697,-12.76659],[45.07682,-12.76651],[45.07645,-12.7661],[45.07614,-12.76591],[45.07575,-12.76574],[45.07537,-12.76569],[45.07516,-12.76577],[45.07485,-12.76559],[45.07483,-12.7654],[45.07461,-12.7652],[45.0741,-12.76526],[45.07386,-12.76523],[45.07384,-12.76481],[45.07404,-12.7646],[45.07416,-12.76433],[45.07416,-12.76413],[45.07407,-12.76392],[45.07356,-12.76327],[45.07337,-12.76284],[45.07296,-12.76158],[45.07282,-12.76164],[45.07239,-12.76165],[45.07194,-12.76149],[45.07155,-12.76158],[45.07128,-12.76144],[45.07106,-12.7611],[45.07063,-12.76068],[45.07061,-12.76058],[45.07021,-12.76001],[45.07007,-12.75989],[45.06964,-12.7598],[45.06946,-12.75955],[45.06948,-12.75932],[45.0693,-12.75927],[45.06899,-12.75899],[45.06872,-12.7588],[45.0684,-12.75867],[45.06777,-12.7583],[45.06732,-12.75815],[45.06692,-12.75814],[45.06669,-12.75823],[45.0664,-12.75827],[45.06612,-12.75812],[45.06591,-12.75791],[45.06562,-12.75748],[45.06541,-12.75739],[45.06493,-12.75723],[45.06466,-12.75705],[45.0646,-12.75678],[45.06471,-12.75622],[45.06478,-12.75597],[45.06462,-12.7553],[45.06447,-12.75503],[45.06421,-12.75473],[45.06417,-12.75456],[45.06394,-12.75424],[45.0637,-12.75353],[45.06323,-12.75335],[45.06292,-12.75333],[45.06279,-12.75301],[45.06287,-12.75284],[45.06274,-12.75233],[45.06214,-12.75211],[45.06205,-12.75201],[45.06198,-12.75174],[45.06164,-12.75146],[45.06166,-12.75176],[45.0616,-12.75183],[45.06086,-12.75137],[45.06022,-12.75107],[45.06017,-12.75088],[45.06004,-12.75087],[45.0599,-12.75104],[45.0597,-12.75101],[45.05936,-12.75108],[45.05898,-12.75111],[45.05894,-12.75134],[45.05875,-12.75149],[45.0586,-12.75182],[45.05797,-12.75156],[45.05729,-12.75146],[45.05705,-12.75147],[45.05682,-12.75141],[45.05693,-12.75125],[45.05704,-12.7509],[45.05691,-12.75092],[45.05667,-12.75117],[45.05652,-12.75123],[45.05643,-12.7514],[45.05576,-12.75152],[45.0554,-12.75161],[45.05516,-12.75174],[45.05477,-12.75182],[45.05426,-12.75214],[45.05423,-12.75231],[45.05446,-12.75274],[45.05447,-12.75297],[45.05423,-12.75412],[45.05405,-12.7544],[45.05356,-12.75465],[45.05343,-12.7548],[45.05321,-12.75525],[45.05301,-12.75535],[45.0528,-12.75556],[45.05213,-12.75581],[45.05198,-12.75591],[45.05179,-12.75616],[45.05164,-12.75623],[45.05152,-12.75611],[45.05147,-12.75584],[45.05128,-12.7557],[45.05124,-12.75553],[45.0511,-12.75534],[45.05096,-12.75502],[45.05084,-12.75467],[45.05072,-12.75445],[45.05039,-12.75378],[45.0501,-12.75345],[45.04975,-12.75325],[45.04977,-12.75292],[45.04989,-12.75276],[45.04996,-12.75223],[45.04994,-12.752],[45.04943,-12.7514],[45.049,-12.75109],[45.0489,-12.75106],[45.04843,-12.75106],[45.04801,-12.75116],[45.04769,-12.75146],[45.04759,-12.7515],[45.04716,-12.7515],[45.04696,-12.75143],[45.04646,-12.75101],[45.0461,-12.75081],[45.04575,-12.75051],[45.04542,-12.75015],[45.04521,-12.75019],[45.04503,-12.75003],[45.04521,-12.74983],[45.04517,-12.74971],[45.04495,-12.74951],[45.04466,-12.74947],[45.04451,-12.74961],[45.04436,-12.74959],[45.04422,-12.74927],[45.04406,-12.74932],[45.04396,-12.74924],[45.04378,-12.74882],[45.0436,-12.74874],[45.0433,-12.74848],[45.04328,-12.7483],[45.04308,-12.74781],[45.04293,-12.74773],[45.04298,-12.74761],[45.04281,-12.74734],[45.04274,-12.74692],[45.04263,-12.7467],[45.04249,-12.74619],[45.04238,-12.7461],[45.04233,-12.74582],[45.04247,-12.74561],[45.04251,-12.74525],[45.04238,-12.74508],[45.04245,-12.74491],[45.04253,-12.74449],[45.04258,-12.74402],[45.04266,-12.74393],[45.04299,-12.7438],[45.04359,-12.74345],[45.04395,-12.74298],[45.04404,-12.74282],[45.04441,-12.74258],[45.04471,-12.74225],[45.04498,-12.74206],[45.04531,-12.74156],[45.04557,-12.74136],[45.04591,-12.74098],[45.04601,-12.74075],[45.04605,-12.74052],[45.04599,-12.73999],[45.04615,-12.73985],[45.04633,-12.73978],[45.04689,-12.73972],[45.04796,-12.73938],[45.04831,-12.73919],[45.04931,-12.73889],[45.04983,-12.73883],[45.05032,-12.73862],[45.05061,-12.73855],[45.05096,-12.73833],[45.05148,-12.73783],[45.05196,-12.73727],[45.05254,-12.73651],[45.05278,-12.7361],[45.05314,-12.73565],[45.05366,-12.73546],[45.05395,-12.73518],[45.05406,-12.73501],[45.05444,-12.73394],[45.05498,-12.7334],[45.05511,-12.73319],[45.0552,-12.7329],[45.05547,-12.73226],[45.05581,-12.73185],[45.05599,-12.73172],[45.05636,-12.73135],[45.05651,-12.73095],[45.05641,-12.73045],[45.05653,-12.73013],[45.05681,-12.72992],[45.05723,-12.7294],[45.05732,-12.72924],[45.05733,-12.72902],[45.05745,-12.72888],[45.05799,-12.72805],[45.05801,-12.72785],[45.05791,-12.72771],[45.05781,-12.72735],[45.05777,-12.72699],[45.05759,-12.72666],[45.05726,-12.72633],[45.05678,-12.72568],[45.05666,-12.72547],[45.05659,-12.72521],[45.05658,-12.72496],[45.05676,-12.72481],[45.05669,-12.72461],[45.05647,-12.72464],[45.05599,-12.72419],[45.05525,-12.72328],[45.05504,-12.7233],[45.05488,-12.72346],[45.05425,-12.72333],[45.0541,-12.72343],[45.05378,-12.72344],[45.0534,-12.72336],[45.05294,-12.72344],[45.05266,-12.72367],[45.05235,-12.72357],[45.05202,-12.72369],[45.05171,-12.72358],[45.05155,-12.72347],[45.05103,-12.72337],[45.05086,-12.72315],[45.0501,-12.72258],[45.0497,-12.72234],[45.04923,-12.72224],[45.04852,-12.72237],[45.04796,-12.72258],[45.0477,-12.72266],[45.04687,-12.72254],[45.0461,-12.72251],[45.0455,-12.72255],[45.04493,-12.72254],[45.04466,-12.72257],[45.04438,-12.72268],[45.04421,-12.72284],[45.04392,-12.72295],[45.04341,-12.72322],[45.04316,-12.7233],[45.04254,-12.72342],[45.04207,-12.72358],[45.04184,-12.72354],[45.04139,-12.72333],[45.04106,-12.72326],[45.04048,-12.72329],[45.04029,-12.72322],[45.04013,-12.72324],[45.04002,-12.72281],[45.03986,-12.72247],[45.03981,-12.72219],[45.03989,-12.72186],[45.04026,-12.72164],[45.04066,-12.72163],[45.0408,-12.72169],[45.04135,-12.72175],[45.04153,-12.72167],[45.0419,-12.72162],[45.04222,-12.72174],[45.04256,-12.72164],[45.04285,-12.72142],[45.04326,-12.72118],[45.04341,-12.72103],[45.04377,-12.72041],[45.04402,-12.72016],[45.04414,-12.71993],[45.04446,-12.71952],[45.04444,-12.71922],[45.04451,-12.71894],[45.04496,-12.71848],[45.04515,-12.71824],[45.04521,-12.71809],[45.04555,-12.71798],[45.0457,-12.71787],[45.04589,-12.7176],[45.04609,-12.71746],[45.04645,-12.71709],[45.04667,-12.71704],[45.04715,-12.71671],[45.04758,-12.71611],[45.04779,-12.71574],[45.04787,-12.71546],[45.04783,-12.71524],[45.04798,-12.71463],[45.04817,-12.71438],[45.04834,-12.71431],[45.04844,-12.71392],[45.04842,-12.71368],[45.04852,-12.71342],[45.04898,-12.71302],[45.04904,-12.71287],[45.04932,-12.71265],[45.04963,-12.71246],[45.05,-12.71216],[45.05014,-12.71188],[45.05019,-12.71149],[45.05032,-12.7113],[45.0503,-12.71104],[45.05017,-12.71094],[45.04998,-12.71058],[45.05009,-12.71004],[45.05032,-12.70991],[45.05054,-12.70957],[45.05112,-12.70937],[45.05118,-12.70923],[45.05119,-12.70872],[45.05133,-12.70845],[45.05144,-12.70793],[45.05151,-12.70742],[45.05143,-12.70694],[45.05131,-12.70675],[45.05107,-12.70668],[45.05081,-12.70637],[45.05084,-12.70612],[45.05064,-12.70591],[45.05055,-12.70562],[45.0506,-12.70546],[45.05048,-12.70515],[45.05038,-12.70505],[45.05034,-12.70476],[45.05024,-12.70468],[45.05001,-12.70469],[45.04994,-12.70457],[45.04964,-12.70434],[45.04917,-12.70428],[45.04933,-12.70407],[45.04944,-12.70405],[45.04966,-12.70362],[45.04977,-12.70357],[45.04999,-12.70331],[45.05002,-12.70273],[45.05043,-12.70248],[45.05047,-12.70237],[45.05073,-12.70209],[45.05086,-12.70209],[45.05101,-12.70194],[45.05128,-12.70178],[45.05151,-12.70175],[45.05174,-12.70148],[45.05175,-12.70118],[45.05157,-12.7011],[45.05163,-12.70084],[45.05154,-12.70049],[45.0516,-12.70009],[45.05172,-12.70012],[45.05211,-12.70007],[45.05261,-12.69973],[45.05315,-12.6998],[45.05349,-12.69989],[45.05358,-12.70003],[45.05376,-12.7001],[45.05425,-12.70064],[45.05446,-12.70106],[45.05463,-12.70126],[45.0549,-12.70137],[45.0552,-12.70134],[45.05582,-12.70116],[45.05604,-12.70121],[45.05628,-12.70149],[45.05689,-12.7015],[45.05749,-12.70145],[45.05758,-12.70153],[45.05784,-12.70145],[45.05811,-12.70113],[45.05853,-12.70091],[45.05896,-12.70109],[45.05932,-12.70087],[45.05967,-12.70079],[45.05972,-12.70099],[45.06006,-12.70118],[45.06028,-12.70137],[45.06078,-12.70128],[45.06102,-12.70108],[45.06126,-12.70118],[45.06144,-12.7015],[45.06176,-12.70183],[45.06198,-12.70188],[45.06227,-12.70184],[45.06244,-12.70172],[45.06279,-12.70156],[45.06319,-12.70132],[45.06365,-12.70098],[45.064,-12.70055],[45.06416,-12.70023],[45.06438,-12.70023],[45.06474,-12.70013],[45.06512,-12.70032],[45.06531,-12.70026],[45.06601,-12.70014],[45.06628,-12.69998],[45.06679,-12.69952],[45.067,-12.69921],[45.06731,-12.69899],[45.06736,-12.69878],[45.06747,-12.6986],[45.06773,-12.69833],[45.06798,-12.69803],[45.06846,-12.69757],[45.06878,-12.69724],[45.06926,-12.69659],[45.0693,-12.69618],[45.06917,-12.69587],[45.0688,-12.69556],[45.06856,-12.6954],[45.06825,-12.69531],[45.06824,-12.69515],[45.06806,-12.69469],[45.06794,-12.69452],[45.06747,-12.69436],[45.06736,-12.69412],[45.06742,-12.69385],[45.06758,-12.69391],[45.06778,-12.69388],[45.06797,-12.69392],[45.06901,-12.69448],[45.06912,-12.69487],[45.06923,-12.69502],[45.06967,-12.69527],[45.06998,-12.69522],[45.07033,-12.69504],[45.07058,-12.69479],[45.07094,-12.69423],[45.07107,-12.69396],[45.0712,-12.69381],[45.07154,-12.69308],[45.07165,-12.69291],[45.07172,-12.69253],[45.07192,-12.69239],[45.07225,-12.69225],[45.07264,-12.69188],[45.07287,-12.6914],[45.07305,-12.69068],[45.07334,-12.69031],[45.07341,-12.69015],[45.07349,-12.68949],[45.07354,-12.68792],[45.07352,-12.68756],[45.0734,-12.68694],[45.07332,-12.68639],[45.07321,-12.68596],[45.07304,-12.68552],[45.07286,-12.68529],[45.07258,-12.68507],[45.07248,-12.68508],[45.07219,-12.68481],[45.07176,-12.68455],[45.07138,-12.68407],[45.07111,-12.6839],[45.07085,-12.68364],[45.07067,-12.68352],[45.0703,-12.6835],[45.06993,-12.68358],[45.0696,-12.68379],[45.06927,-12.68394],[45.06908,-12.68397],[45.06876,-12.68392],[45.06839,-12.6836],[45.06814,-12.68344],[45.06778,-12.68311],[45.06747,-12.68306],[45.06731,-12.68273],[45.06706,-12.68253],[45.06692,-12.68233],[45.0667,-12.68228],[45.06666,-12.68196],[45.06656,-12.68173],[45.06633,-12.68166],[45.06646,-12.68151],[45.06643,-12.68132],[45.06655,-12.68108],[45.06681,-12.68095],[45.06702,-12.68101],[45.06703,-12.68116],[45.06722,-12.68124],[45.06774,-12.68162],[45.0681,-12.6817],[45.06867,-12.68172],[45.06943,-12.68191],[45.06986,-12.68217],[45.07017,-12.68239],[45.07078,-12.68266],[45.07153,-12.68297],[45.07204,-12.6831],[45.07245,-12.68331],[45.07273,-12.68337],[45.07287,-12.68347],[45.07319,-12.6835],[45.07414,-12.68349],[45.0748,-12.68343],[45.0756,-12.68322],[45.07582,-12.68309],[45.07591,-12.68324],[45.07607,-12.68367],[45.0766,-12.68368],[45.07705,-12.68364],[45.07749,-12.68356],[45.07812,-12.68328],[45.07838,-12.68319],[45.07968,-12.68244],[45.08,-12.6822],[45.08046,-12.6818],[45.08093,-12.68148],[45.08111,-12.68145],[45.08118,-12.68129],[45.08206,-12.68064],[45.08223,-12.68035],[45.08231,-12.68004],[45.08285,-12.67965],[45.08326,-12.67914],[45.08338,-12.67884],[45.08333,-12.67856],[45.08312,-12.67794],[45.08293,-12.67776],[45.08297,-12.6774],[45.08285,-12.67712],[45.08285,-12.67668],[45.08263,-12.67625],[45.08224,-12.67584],[45.08234,-12.6757],[45.08219,-12.67549],[45.08222,-12.67532],[45.08194,-12.67498],[45.0821,-12.67488],[45.0822,-12.67458],[45.08204,-12.67407],[45.08231,-12.67409],[45.08246,-12.67396],[45.08273,-12.67347],[45.08275,-12.67318],[45.08257,-12.67277],[45.08243,-12.67252],[45.08247,-12.6723],[45.08228,-12.67183],[45.08248,-12.67158],[45.08258,-12.67133],[45.08256,-12.67116],[45.0832,-12.67078],[45.0834,-12.67095],[45.08359,-12.67099],[45.0839,-12.67095],[45.08418,-12.67108],[45.08446,-12.67098],[45.08469,-12.67085],[45.0852,-12.67043],[45.08558,-12.66996],[45.08565,-12.66971],[45.08556,-12.66952],[45.08563,-12.66934],[45.08562,-12.66909],[45.08554,-12.66898],[45.0853,-12.66887],[45.08526,-12.66878],[45.08531,-12.66847],[45.08546,-12.66799],[45.08545,-12.66784],[45.08564,-12.66771],[45.08566,-12.66756],[45.08546,-12.66703],[45.08556,-12.66679],[45.08601,-12.66637],[45.08624,-12.6663],[45.08652,-12.66639],[45.08689,-12.66633],[45.08723,-12.66649],[45.08768,-12.66649],[45.08811,-12.66625],[45.08836,-12.66621],[45.08882,-12.66606],[45.08933,-12.66585],[45.08941,-12.66574],[45.08995,-12.66556],[45.0901,-12.66566],[45.09064,-12.66538],[45.09081,-12.66533],[45.09115,-12.66509],[45.09145,-12.66493],[45.09157,-12.66481],[45.09154,-12.66461],[45.09168,-12.66458],[45.09215,-12.66432],[45.0924,-12.66412],[45.09272,-12.66366],[45.09322,-12.66303],[45.09338,-12.66275],[45.09351,-12.6624],[45.09355,-12.66199],[45.09344,-12.66169],[45.09357,-12.66128],[45.09366,-12.66056],[45.09354,-12.66045],[45.09351,-12.66018],[45.09342,-12.65998],[45.09321,-12.6597],[45.09293,-12.65945],[45.09269,-12.65905],[45.0926,-12.65866],[45.09268,-12.65811],[45.09284,-12.65787],[45.09263,-12.65749],[45.09262,-12.65724],[45.09276,-12.65729],[45.09317,-12.65764],[45.09338,-12.658],[45.09353,-12.65804],[45.09374,-12.65835],[45.09442,-12.65862],[45.09452,-12.65859],[45.09471,-12.65872],[45.09496,-12.65865],[45.09505,-12.65876],[45.09527,-12.65887],[45.0962,-12.6589],[45.09663,-12.65885],[45.09688,-12.65876],[45.09752,-12.65838],[45.09837,-12.65798],[45.09867,-12.65758],[45.09868,-12.65741],[45.09884,-12.65722],[45.09914,-12.65699],[45.09988,-12.6568],[45.10042,-12.65659],[45.10056,-12.65662],[45.10083,-12.65653],[45.10101,-12.6563],[45.1011,-12.65598],[45.10152,-12.6559],[45.10182,-12.6557],[45.10193,-12.65536],[45.10209,-12.6552],[45.10216,-12.65483],[45.1021,-12.65454],[45.10226,-12.65441],[45.1025,-12.65434],[45.10256,-12.65422],[45.103,-12.65399],[45.10332,-12.65379],[45.10339,-12.65361],[45.10361,-12.65352],[45.10381,-12.65287],[45.10378,-12.65262],[45.10367,-12.65251],[45.10413,-12.65195],[45.10437,-12.65195],[45.10451,-12.65187],[45.10487,-12.65131],[45.10491,-12.65081],[45.10501,-12.65074],[45.10515,-12.65087],[45.10509,-12.65109],[45.1054,-12.65129],[45.10558,-12.65126],[45.10581,-12.6515],[45.10599,-12.65149],[45.10628,-12.65164],[45.10655,-12.65211],[45.10691,-12.65233],[45.1071,-12.65275],[45.1069,-12.65285],[45.10669,-12.65304],[45.10622,-12.65306],[45.10576,-12.65338],[45.10524,-12.65392],[45.10496,-12.65394],[45.10483,-12.65417],[45.1046,-12.65417],[45.10429,-12.65427],[45.10356,-12.65465],[45.10341,-12.65485],[45.10304,-12.65568],[45.10297,-12.65611],[45.10276,-12.65632],[45.10256,-12.65661],[45.10246,-12.6571],[45.10252,-12.65728],[45.10266,-12.65749],[45.10276,-12.6579],[45.10244,-12.65825],[45.1024,-12.65839],[45.10215,-12.65871],[45.10223,-12.65896],[45.10212,-12.65927],[45.10213,-12.65948],[45.10221,-12.65972],[45.10235,-12.65992],[45.10241,-12.66032],[45.10255,-12.66051],[45.10329,-12.66089],[45.10344,-12.66106],[45.10363,-12.66116],[45.10404,-12.66126],[45.10428,-12.6616],[45.10468,-12.66168],[45.10501,-12.66194],[45.10521,-12.66194],[45.10558,-12.66178],[45.10561,-12.66193],[45.10542,-12.6623],[45.10504,-12.66234],[45.10483,-12.66248],[45.10453,-12.66248],[45.10437,-12.66268],[45.10414,-12.66256],[45.10383,-12.66258],[45.10355,-12.66244],[45.10251,-12.66249],[45.10232,-12.66255],[45.10161,-12.66252],[45.10136,-12.66263],[45.10111,-12.66268],[45.10041,-12.66294],[45.10009,-12.66309],[45.09994,-12.66325],[45.09919,-12.66349],[45.09908,-12.66349],[45.09848,-12.6637],[45.09772,-12.66402],[45.09743,-12.66419],[45.09671,-12.66447],[45.09639,-12.66454],[45.09569,-12.66485],[45.09548,-12.66488],[45.09491,-12.66504],[45.094,-12.6655],[45.09346,-12.66582],[45.09265,-12.66647],[45.09241,-12.66669],[45.09198,-12.66699],[45.09155,-12.66722],[45.09109,-12.66735],[45.09059,-12.66736],[45.0901,-12.66744],[45.08988,-12.66751],[45.08968,-12.66766],[45.08926,-12.66829],[45.08908,-12.66836],[45.08873,-12.66863],[45.08842,-12.66912],[45.08819,-12.66981],[45.08825,-12.67017],[45.08833,-12.67039],[45.08843,-12.67039],[45.08848,-12.6707],[45.08863,-12.67106],[45.08878,-12.67128],[45.08925,-12.67133],[45.08943,-12.67143],[45.08971,-12.67175],[45.08979,-12.6719],[45.0902,-12.67216],[45.0903,-12.67238],[45.09076,-12.67246],[45.09154,-12.67247],[45.09179,-12.67235],[45.09232,-12.67217],[45.0928,-12.67215],[45.09349,-12.67228],[45.09403,-12.67244],[45.09474,-12.67258],[45.09504,-12.67267],[45.09565,-12.67272],[45.09653,-12.67282],[45.09705,-12.67294],[45.09741,-12.67313],[45.09748,-12.67321],[45.09738,-12.67364],[45.09714,-12.67405],[45.09716,-12.67423],[45.09727,-12.67447],[45.09757,-12.67494],[45.09802,-12.67528],[45.09865,-12.67552],[45.09924,-12.67561],[45.09975,-12.67554],[45.10006,-12.67545],[45.10126,-12.67557],[45.10146,-12.67571],[45.10157,-12.67588],[45.10192,-12.67632],[45.10244,-12.67668],[45.10264,-12.67675],[45.10314,-12.67675],[45.10344,-12.67667],[45.1037,-12.67655],[45.10401,-12.67646],[45.1046,-12.67642],[45.10479,-12.67655],[45.10484,-12.67673],[45.10464,-12.6767],[45.10455,-12.67682],[45.10435,-12.67689],[45.10416,-12.67705],[45.10394,-12.67756],[45.10361,-12.67793],[45.1031,-12.67896],[45.10295,-12.67922],[45.10282,-12.67923],[45.10182,-12.67982],[45.10098,-12.68006],[45.10105,-12.68013],[45.101,-12.68044],[45.10101,-12.68064],[45.10113,-12.68095],[45.10136,-12.68133],[45.10151,-12.68172],[45.10153,-12.68205],[45.10163,-12.68228],[45.10177,-12.68244],[45.1018,-12.68265],[45.10214,-12.68317],[45.10265,-12.68358],[45.10305,-12.68359],[45.10343,-12.68354],[45.1038,-12.68341],[45.1046,-12.68349],[45.10524,-12.68323],[45.10557,-12.68323],[45.10603,-12.68329],[45.10666,-12.68311],[45.107,-12.68289],[45.10724,-12.68279],[45.10745,-12.68281],[45.10806,-12.68299],[45.10825,-12.68325],[45.1083,-12.68407],[45.10851,-12.68478],[45.10874,-12.68524],[45.10896,-12.68572],[45.10933,-12.68597],[45.10966,-12.68599],[45.11034,-12.68592],[45.11058,-12.68596],[45.1108,-12.68606],[45.1113,-12.68612],[45.11141,-12.68618],[45.11196,-12.68617],[45.11216,-12.68629],[45.11221,-12.68657],[45.11254,-12.68702],[45.11325,-12.68771],[45.11359,-12.68801],[45.11376,-12.68825],[45.11368,-12.6885],[45.11343,-12.68853],[45.11318,-12.68849],[45.11282,-12.68853],[45.11236,-12.68844],[45.11198,-12.68849],[45.11159,-12.68873],[45.11146,-12.68874],[45.11131,-12.68905],[45.11131,-12.68926],[45.1112,-12.68978],[45.11102,-12.68994],[45.11114,-12.6901],[45.11118,-12.69056],[45.11115,-12.6908],[45.11122,-12.69123],[45.11131,-12.69138],[45.11166,-12.69175],[45.11168,-12.69195],[45.11159,-12.69221],[45.11175,-12.69254],[45.11205,-12.69283],[45.11218,-12.69316],[45.1123,-12.69331],[45.11308,-12.69409],[45.11326,-12.69451],[45.11351,-12.69491],[45.11415,-12.69537],[45.11427,-12.69554],[45.11456,-12.69577],[45.11489,-12.69593],[45.11541,-12.69597],[45.1158,-12.6961],[45.11633,-12.69618],[45.11692,-12.69618],[45.11737,-12.69643],[45.11801,-12.69703],[45.11849,-12.69729],[45.11908,-12.69742],[45.11981,-12.69789],[45.12003,-12.69823],[45.12022,-12.69839],[45.12047,-12.69851],[45.12153,-12.69886],[45.122,-12.69906],[45.12306,-12.69946],[45.12338,-12.6997],[45.1239,-12.70002],[45.12428,-12.70011],[45.12486,-12.70034],[45.12596,-12.70094],[45.12641,-12.70115],[45.1271,-12.70135],[45.12773,-12.7014],[45.12827,-12.70138],[45.12895,-12.70127],[45.12923,-12.7011],[45.1297,-12.70058],[45.12984,-12.70036],[45.13027,-12.70047],[45.13052,-12.70045],[45.13056,-12.70058],[45.13047,-12.70132],[45.13046,-12.70211],[45.13054,-12.70258],[45.13051,-12.70317],[45.13061,-12.70375],[45.13069,-12.70392],[45.13056,-12.70403],[45.13022,-12.70394],[45.12962,-12.70387],[45.12917,-12.70396],[45.12895,-12.70383],[45.1287,-12.70349],[45.12844,-12.70329],[45.12834,-12.70307],[45.12747,-12.7028],[45.12716,-12.70256],[45.1267,-12.70244],[45.12621,-12.70224],[45.12594,-12.70217],[45.1258,-12.70242],[45.12539,-12.70274],[45.12504,-12.70288],[45.12492,-12.70311],[45.12484,-12.70342],[45.12431,-12.70391],[45.124,-12.7045],[45.12361,-12.70505],[45.12342,-12.70537],[45.12313,-12.70521],[45.12296,-12.70526],[45.12274,-12.70545],[45.12261,-12.7057],[45.12261,-12.70601],[45.12273,-12.70629],[45.12294,-12.70627],[45.1232,-12.70596],[45.12322,-12.70568],[45.1234,-12.70559],[45.12328,-12.70646],[45.1233,-12.70662],[45.12323,-12.70718],[45.12322,-12.70751],[45.12336,-12.70757],[45.12344,-12.70775],[45.12341,-12.70795],[45.12344,-12.70829],[45.12356,-12.70907],[45.12348,-12.70924],[45.12357,-12.70945],[45.12369,-12.71018],[45.12378,-12.71049],[45.12404,-12.71113],[45.12427,-12.71154],[45.12445,-12.71172],[45.12494,-12.71206],[45.12545,-12.71225],[45.12596,-12.71221],[45.12633,-12.71237],[45.12674,-12.71262],[45.12692,-12.7128],[45.1272,-12.71317],[45.12768,-12.71393],[45.12794,-12.71422],[45.12822,-12.71444],[45.12877,-12.71483],[45.12936,-12.71516],[45.12954,-12.71541],[45.12956,-12.71591],[45.12968,-12.71643],[45.1298,-12.71661],[45.12997,-12.71711],[45.12998,-12.71728],[45.13016,-12.71764],[45.13015,-12.71802],[45.13008,-12.71818],[45.12978,-12.7184],[45.12971,-12.71876],[45.12939,-12.71897],[45.12926,-12.71925],[45.12925,-12.71962],[45.12941,-12.72003],[45.13002,-12.72094],[45.13051,-12.72156],[45.13083,-12.72183],[45.13157,-12.72108],[45.1316,-12.72111],[45.13084,-12.7219],[45.13078,-12.72202],[45.13085,-12.72225],[45.13063,-12.72235],[45.1305,-12.72218],[45.13008,-12.72227],[45.12989,-12.72225],[45.12922,-12.7224],[45.12864,-12.72266],[45.12825,-12.7227],[45.12796,-12.72279],[45.12762,-12.72302],[45.12754,-12.72327],[45.12733,-12.72333],[45.12709,-12.72314],[45.12673,-12.72296],[45.1263,-12.72301],[45.12581,-12.72319],[45.12521,-12.72353],[45.12506,-12.72352],[45.1247,-12.72326],[45.12426,-12.72303],[45.12402,-12.72298],[45.12352,-12.72303],[45.12299,-12.72303],[45.12264,-12.72292],[45.12246,-12.72295],[45.1222,-12.7231],[45.12209,-12.72306],[45.12198,-12.72284],[45.12179,-12.72273],[45.12163,-12.72276],[45.12148,-12.72288],[45.12145,-12.72317],[45.1217,-12.72286],[45.12187,-12.72285],[45.12201,-12.72314],[45.12228,-12.72322],[45.12256,-12.72306],[45.12271,-12.72305],[45.12294,-12.72318],[45.12317,-12.7232],[45.12362,-12.72316],[45.1241,-12.72316],[45.12446,-12.72328],[45.12475,-12.7235],[45.12499,-12.72373],[45.12517,-12.72382],[45.12538,-12.72379],[45.12611,-12.72331],[45.1264,-12.72318],[45.12665,-12.72317],[45.12726,-12.72356],[45.12755,-12.72379],[45.1275,-12.724],[45.12731,-12.72405],[45.12687,-12.72396],[45.1266,-12.72399],[45.1263,-12.72409],[45.12614,-12.72421],[45.12605,-12.72439],[45.12605,-12.72494],[45.12616,-12.72527],[45.12613,-12.72555],[45.12594,-12.72582],[45.12591,-12.72619],[45.12597,-12.72632],[45.12544,-12.72734],[45.12566,-12.72744],[45.12645,-12.72767],[45.12677,-12.72774],[45.12806,-12.72784],[45.12838,-12.72783],[45.12877,-12.72769],[45.12895,-12.72748],[45.12925,-12.72735],[45.12958,-12.72747],[45.12977,-12.72791],[45.12988,-12.72836],[45.1302,-12.72877],[45.13029,-12.72895],[45.13032,-12.72917],[45.13029,-12.72965],[45.13045,-12.73005],[45.13059,-12.73062],[45.13073,-12.73087],[45.13097,-12.73095],[45.13119,-12.73069],[45.13149,-12.73043],[45.13188,-12.72992],[45.13207,-12.72972],[45.13232,-12.72965],[45.13247,-12.72973],[45.13333,-12.73062],[45.13351,-12.73085],[45.13376,-12.73131],[45.134,-12.73147],[45.1344,-12.73144],[45.13459,-12.73113],[45.13492,-12.73108],[45.13547,-12.73084],[45.13598,-12.73072],[45.13622,-12.73071],[45.13653,-12.73076],[45.13688,-12.731],[45.13701,-12.73102],[45.13745,-12.73081],[45.1377,-12.73087],[45.13777,-12.73153],[45.13737,-12.73189],[45.13747,-12.73247],[45.13741,-12.73267],[45.1375,-12.73294],[45.13766,-12.73304],[45.13796,-12.73302],[45.1382,-12.73293],[45.13839,-12.73275],[45.13849,-12.73256],[45.13869,-12.73259],[45.13885,-12.7331],[45.13896,-12.73324],[45.13913,-12.73328],[45.13938,-12.73327],[45.13956,-12.73314],[45.13978,-12.73315],[45.13988,-12.73348],[45.13944,-12.73386],[45.13951,-12.73408],[45.13969,-12.73411],[45.13988,-12.73448],[45.1401,-12.7346],[45.14027,-12.73447],[45.14068,-12.7345],[45.14032,-12.73427],[45.14007,-12.73443],[45.13992,-12.73433],[45.13973,-12.73392],[45.13981,-12.73376],[45.13995,-12.73372],[45.14002,-12.73353],[45.13997,-12.73321],[45.13977,-12.73301],[45.13945,-12.73306],[45.1392,-12.73318],[45.13902,-12.73316],[45.139,-12.73281],[45.13891,-12.73257],[45.13864,-12.73238],[45.13843,-12.73242],[45.13819,-12.73276],[45.13807,-12.73285],[45.13782,-12.73286],[45.13762,-12.73276],[45.13758,-12.73258],[45.13766,-12.73234],[45.13764,-12.73196],[45.13794,-12.73157],[45.13804,-12.73161],[45.1381,-12.73199],[45.13856,-12.73189],[45.139,-12.73218],[45.13941,-12.7326],[45.13966,-12.73262],[45.14002,-12.73277],[45.1403,-12.73308],[45.14065,-12.73296],[45.14128,-12.7331],[45.14169,-12.73345],[45.14201,-12.73362],[45.14216,-12.73339],[45.14229,-12.73331],[45.14242,-12.73309],[45.14237,-12.73277],[45.14264,-12.7326],[45.14266,-12.73231],[45.14326,-12.73201],[45.14398,-12.73203],[45.14426,-12.73191],[45.14418,-12.73151],[45.14432,-12.73132],[45.14438,-12.73107],[45.14409,-12.73055],[45.14384,-12.72991],[45.14374,-12.72979],[45.14362,-12.72948],[45.14353,-12.72936],[45.14318,-12.7291],[45.1426,-12.72914],[45.14236,-12.72925],[45.142,-12.72924],[45.14185,-12.7292],[45.14124,-12.72934],[45.14051,-12.72914],[45.14037,-12.72899],[45.14044,-12.72887],[45.14066,-12.72873],[45.14077,-12.72852],[45.14084,-12.72813],[45.14093,-12.7279],[45.14121,-12.72788],[45.14179,-12.72807],[45.14232,-12.72813],[45.14288,-12.72837],[45.14307,-12.72839],[45.14374,-12.72853],[45.14417,-12.72858],[45.14507,-12.72861],[45.14522,-12.72855],[45.14526,-12.72838],[45.14541,-12.7282],[45.14561,-12.72828],[45.14603,-12.72816],[45.14635,-12.72799],[45.14654,-12.72798],[45.14681,-12.72816],[45.14695,-12.72833],[45.14739,-12.72845],[45.14755,-12.72845],[45.14787,-12.72817],[45.148,-12.72814],[45.1483,-12.72827],[45.14873,-12.72853],[45.1492,-12.72858],[45.14956,-12.7288],[45.14997,-12.72898],[45.15073,-12.72921],[45.1508,-12.7294],[45.15068,-12.72947],[45.15065,-12.72966],[45.15036,-12.7299],[45.15036,-12.7301],[45.15027,-12.73016],[45.15024,-12.73051],[45.15009,-12.7306],[45.14998,-12.73076],[45.14995,-12.73098],[45.1501,-12.73135],[45.15006,-12.73162],[45.14995,-12.73195],[45.14992,-12.73231],[45.15004,-12.73253],[45.15005,-12.73267],[45.15021,-12.73282],[45.15031,-12.73303],[45.15026,-12.73336],[45.15031,-12.73363],[45.1506,-12.73412],[45.15056,-12.73436],[45.15066,-12.73459],[45.15098,-12.73482],[45.15147,-12.73511],[45.15176,-12.73525],[45.15271,-12.73557],[45.15289,-12.73556],[45.15323,-12.73572],[45.15335,-12.73585],[45.15327,-12.73611],[45.15375,-12.7367],[45.15411,-12.73671],[45.15483,-12.73668],[45.1554,-12.73621],[45.15588,-12.7362],[45.15627,-12.73589],[45.15667,-12.73563],[45.15723,-12.73542],[45.15742,-12.73543],[45.15786,-12.73515],[45.15815,-12.7351],[45.15862,-12.73458],[45.15878,-12.73448],[45.15911,-12.73401],[45.15918,-12.73382],[45.15956,-12.73323],[45.15969,-12.73307],[45.15994,-12.73267],[45.16035,-12.7324],[45.16045,-12.73239],[45.161,-12.73251],[45.16136,-12.73236],[45.1614,-12.73249],[45.16161,-12.73245],[45.16154,-12.73228],[45.16127,-12.73214],[45.16121,-12.73167],[45.16136,-12.73141],[45.1616,-12.73125],[45.16205,-12.73107],[45.16215,-12.73092],[45.16215,-12.73074],[45.16208,-12.73035],[45.16214,-12.73017],[45.16201,-12.72965],[45.16177,-12.72931],[45.16159,-12.72888],[45.16151,-12.72844],[45.16166,-12.72821],[45.16151,-12.72787],[45.16197,-12.72771],[45.16251,-12.72746],[45.16263,-12.72737],[45.1628,-12.72709],[45.16298,-12.72689],[45.16318,-12.72697],[45.16343,-12.72697],[45.16394,-12.72678],[45.16453,-12.72644],[45.16479,-12.72622],[45.16504,-12.72609],[45.16549,-12.72566],[45.1655,-12.72555],[45.16505,-12.72548],[45.16482,-12.72541],[45.16426,-12.72531],[45.16415,-12.72524],[45.16358,-12.72436],[45.16349,-12.72418],[45.16338,-12.72348],[45.16352,-12.72306],[45.16553,-12.72344],[45.16548,-12.7237],[45.16559,-12.72377],[45.16561,-12.72408],[45.16568,-12.72417],[45.16666,-12.72435],[45.16676,-12.72433],[45.16697,-12.72338],[45.16721,-12.72204],[45.16721,-12.72191],[45.16693,-12.7218],[45.16653,-12.72159],[45.16632,-12.72154],[45.16501,-12.72131],[45.16482,-12.72162],[45.16469,-12.72159],[45.16482,-12.72122],[45.16473,-12.72118],[45.16454,-12.72093],[45.16439,-12.72082],[45.16421,-12.72093],[45.16361,-12.71991],[45.16381,-12.7198],[45.16378,-12.71971],[45.16395,-12.71953],[45.1645,-12.71923],[45.16464,-12.71902],[45.16487,-12.71881],[45.1652,-12.71861],[45.16543,-12.71836],[45.16558,-12.71811],[45.16551,-12.7179],[45.1656,-12.71769],[45.16589,-12.71749],[45.1662,-12.71753],[45.1664,-12.71772],[45.16702,-12.71865],[45.16726,-12.71896],[45.16811,-12.72021],[45.16833,-12.72051],[45.16896,-12.72144],[45.16917,-12.72183],[45.16981,-12.72261],[45.17009,-12.72305],[45.17014,-12.72325],[45.1698,-12.72346],[45.16999,-12.72413],[45.16997,-12.72434],[45.16971,-12.72512],[45.16979,-12.7254],[45.17003,-12.72575],[45.17075,-12.72615],[45.17135,-12.72637],[45.17147,-12.72647],[45.17156,-12.72686],[45.17185,-12.72698],[45.17212,-12.72722],[45.17244,-12.72738],[45.17261,-12.72739],[45.1731,-12.72723],[45.17328,-12.72727],[45.17365,-12.72763],[45.17382,-12.72798],[45.17419,-12.72839],[45.17453,-12.72862],[45.17498,-12.72874],[45.17523,-12.72898],[45.17549,-12.72906],[45.17602,-12.72916],[45.17622,-12.72925],[45.17648,-12.7295],[45.17653,-12.72986],[45.17663,-12.73007],[45.17679,-12.73014],[45.17743,-12.73013],[45.17784,-12.73016],[45.17825,-12.73024],[45.17886,-12.73044],[45.17932,-12.73045],[45.17955,-12.73031],[45.18029,-12.72975],[45.18041,-12.72957],[45.18029,-12.72906],[45.18029,-12.72879],[45.18062,-12.72887],[45.18124,-12.72881],[45.18158,-12.72863],[45.18156,-12.72814],[45.18176,-12.72807],[45.18195,-12.72777],[45.1823,-12.72771],[45.18243,-12.72761],[45.18257,-12.72723],[45.18269,-12.72712],[45.18322,-12.72692],[45.18387,-12.72705],[45.18405,-12.72704],[45.18466,-12.72719],[45.18506,-12.72726],[45.18524,-12.72751],[45.18524,-12.72797],[45.18528,-12.72883],[45.18538,-12.7291],[45.1857,-12.72939],[45.186,-12.72953],[45.18639,-12.72962],[45.1866,-12.72955],[45.18694,-12.72951],[45.18782,-12.72928],[45.18802,-12.72935],[45.18819,-12.72951],[45.18847,-12.72938],[45.18878,-12.72935],[45.18912,-12.72937],[45.18931,-12.72919],[45.18952,-12.72853],[45.18952,-12.72821],[45.18968,-12.72815],[45.18981,-12.72828],[45.18997,-12.72857],[45.19037,-12.7289],[45.19064,-12.729],[45.19102,-12.72922],[45.19128,-12.72931],[45.19179,-12.72939],[45.19217,-12.72936],[45.19247,-12.72915],[45.19268,-12.72922],[45.19274,-12.72953],[45.19263,-12.72986],[45.19271,-12.72998],[45.19301,-12.73019],[45.19339,-12.7303],[45.19356,-12.73042],[45.19376,-12.7307],[45.19419,-12.73075],[45.19457,-12.7309],[45.19532,-12.73104],[45.1962,-12.73112],[45.1963,-12.7312],[45.19648,-12.73095],[45.19646,-12.73084],[45.19677,-12.73044],[45.19686,-12.73044],[45.19712,-12.73024],[45.19726,-12.73037],[45.19755,-12.73039],[45.19788,-12.73015],[45.19813,-12.73011],[45.19824,-12.73028],[45.19827,-12.73074],[45.1984,-12.73088],[45.19875,-12.73101],[45.19939,-12.73106],[45.20055,-12.731],[45.20072,-12.73096],[45.20099,-12.73079],[45.2009,-12.73025],[45.20097,-12.73009],[45.2015,-12.72954],[45.20173,-12.72959],[45.20183,-12.72987],[45.20198,-12.73009],[45.2023,-12.73029],[45.20252,-12.73035],[45.203,-12.73042],[45.20332,-12.73039],[45.20367,-12.73025],[45.20392,-12.73021],[45.20414,-12.73053],[45.20448,-12.7308],[45.20491,-12.73099],[45.20511,-12.73103],[45.20552,-12.73096],[45.20572,-12.73111],[45.20564,-12.73147],[45.20571,-12.73168],[45.20573,-12.73204],[45.20579,-12.73217],[45.20616,-12.73226],[45.20645,-12.73246],[45.20677,-12.7325],[45.207,-12.73216],[45.20705,-12.73231],[45.20687,-12.73263],[45.20676,-12.73305],[45.20671,-12.7336],[45.2065,-12.73391],[45.20646,-12.73414],[45.20664,-12.73436],[45.20694,-12.73457],[45.20743,-12.73478],[45.20792,-12.7348],[45.20855,-12.7351],[45.20905,-12.73525],[45.20926,-12.73516],[45.2093,-12.73492],[45.20947,-12.73455],[45.20977,-12.73439],[45.20992,-12.7344],[45.21,-12.73455],[45.20998,-12.73477],[45.2097,-12.73517],[45.20985,-12.73535],[45.21028,-12.73554],[45.21079,-12.73557],[45.21102,-12.73562],[45.21138,-12.73562],[45.21152,-12.73552],[45.21165,-12.73508],[45.21194,-12.73489],[45.21208,-12.73466],[45.21212,-12.73429],[45.21204,-12.73422],[45.21213,-12.73398],[45.21236,-12.73393],[45.21243,-12.73376],[45.21289,-12.73331],[45.21287,-12.73293],[45.21266,-12.73255],[45.21276,-12.73242],[45.21297,-12.7324],[45.21312,-12.73225],[45.21335,-12.73219],[45.21358,-12.73232],[45.21361,-12.73247],[45.21377,-12.73247],[45.21391,-12.73233],[45.2142,-12.73244],[45.21406,-12.7327],[45.2141,-12.73309],[45.21436,-12.73322],[45.21452,-12.73337],[45.21452,-12.73355],[45.21437,-12.73365],[45.2143,-12.73382],[45.21412,-12.73407],[45.21396,-12.73408],[45.21383,-12.73432],[45.21384,-12.73452],[45.21376,-12.73465],[45.21381,-12.73485],[45.21381,-12.73522],[45.21394,-12.7354],[45.21372,-12.73582],[45.21373,-12.7359],[45.21347,-12.73609],[45.21325,-12.73632],[45.2129,-12.73658],[45.21252,-12.73678],[45.21222,-12.73698],[45.21187,-12.73731],[45.21185,-12.73759],[45.21189,-12.73778],[45.21177,-12.73813],[45.21176,-12.73834],[45.21188,-12.73873],[45.21205,-12.73903],[45.21235,-12.73943],[45.21274,-12.73978],[45.21306,-12.74055],[45.21329,-12.74087],[45.21355,-12.74105],[45.2146,-12.74167],[45.21519,-12.742],[45.21556,-12.74203],[45.21569,-12.74213],[45.21593,-12.74219],[45.21626,-12.74202],[45.21695,-12.74185],[45.21744,-12.74183],[45.21786,-12.74168],[45.21813,-12.74173],[45.21848,-12.74186],[45.21849,-12.74198],[45.21882,-12.74281],[45.21884,-12.743],[45.2187,-12.74314],[45.21899,-12.7432],[45.21945,-12.74356],[45.22003,-12.74395],[45.22107,-12.74445],[45.22144,-12.74446],[45.22168,-12.74455],[45.2221,-12.74463],[45.22227,-12.74459],[45.22246,-12.74445],[45.22283,-12.74434],[45.22348,-12.74435],[45.22362,-12.74438],[45.22434,-12.74436],[45.22457,-12.74423],[45.22468,-12.74375],[45.2249,-12.7434],[45.22504,-12.7433],[45.22527,-12.74339],[45.22545,-12.74363],[45.22566,-12.74365],[45.22602,-12.7441],[45.226,-12.74419],[45.2261,-12.74453],[45.22645,-12.74484],[45.22646,-12.74503],[45.22624,-12.74505],[45.22616,-12.74516],[45.22619,-12.74546],[45.22628,-12.74562],[45.22662,-12.74585],[45.22662,-12.74616],[45.22713,-12.74666],[45.22734,-12.7468],[45.22759,-12.74703],[45.22805,-12.7474],[45.22828,-12.74775],[45.22821,-12.74804],[45.22812,-12.74817],[45.2279,-12.74884],[45.22792,-12.74913],[45.22818,-12.74926],[45.22836,-12.74941],[45.22867,-12.74982],[45.22852,-12.74999],[45.22881,-12.75024],[45.2295,-12.75067],[45.22944,-12.75049],[45.22912,-12.75031],[45.22911,-12.75015],[45.22975,-12.75061],[45.22998,-12.7508],[45.23039,-12.75104],[45.23052,-12.75121],[45.23118,-12.75188],[45.23125,-12.75201],[45.23162,-12.75234],[45.23172,-12.7525],[45.2319,-12.75249],[45.23241,-12.75256],[45.23331,-12.75281],[45.23354,-12.75252],[45.23367,-12.75246],[45.23386,-12.75223],[45.23422,-12.75189],[45.23454,-12.7518],[45.23499,-12.75176],[45.23515,-12.7518],[45.23549,-12.75177],[45.23577,-12.75191],[45.23591,-12.75212],[45.23585,-12.75243],[45.23587,-12.75258],[45.23602,-12.75283],[45.23622,-12.75295],[45.23658,-12.75297],[45.23691,-12.75348],[45.23695,-12.75374],[45.23689,-12.75428],[45.23662,-12.75476],[45.23607,-12.75542],[45.23596,-12.75552],[45.23536,-12.75583],[45.23516,-12.75599],[45.23511,-12.75637],[45.23496,-12.75654],[45.23496,-12.75674],[45.23522,-12.75698],[45.23559,-12.75709],[45.23571,-12.75735],[45.2358,-12.75775],[45.23599,-12.75818],[45.23605,-12.75846],[45.2363,-12.75897],[45.23645,-12.7592],[45.23657,-12.75953],[45.23657,-12.75969],[45.23648,-12.75998],[45.23676,-12.76005],[45.23702,-12.76036],[45.23745,-12.76051],[45.23791,-12.7604],[45.2381,-12.76041],[45.23871,-12.76039],[45.23871,-12.7605],[45.23905,-12.76069],[45.23916,-12.7606],[45.23943,-12.76095],[45.23963,-12.76103],[45.23979,-12.76123],[45.23982,-12.76163],[45.2399,-12.76182],[45.23985,-12.762],[45.23991,-12.76219],[45.23991,-12.76266],[45.23972,-12.76296],[45.23954,-12.76309],[45.23917,-12.76318],[45.23894,-12.7633],[45.23859,-12.76332],[45.23821,-12.76327],[45.23779,-12.76316],[45.23713,-12.76359],[45.23674,-12.7639],[45.23647,-12.76419],[45.23621,-12.7644],[45.23598,-12.76468],[45.23578,-12.76522],[45.23579,-12.76549],[45.23588,-12.76582],[45.23602,-12.76604],[45.23617,-12.7661],[45.23616,-12.76663],[45.2362,-12.7669],[45.23618,-12.76711],[45.23601,-12.76732],[45.23583,-12.76765],[45.23573,-12.76796],[45.23557,-12.76814],[45.23504,-12.76915],[45.2348,-12.76968],[45.23466,-12.77042],[45.23464,-12.77068],[45.23469,-12.771],[45.23462,-12.77123],[45.23446,-12.77142],[45.23426,-12.77207],[45.23437,-12.77254],[45.23427,-12.77286],[45.23438,-12.77319],[45.23446,-12.7733],[45.23406,-12.7733],[45.23368,-12.77313],[45.23309,-12.77321],[45.23291,-12.77315],[45.23278,-12.77321],[45.23255,-12.77303],[45.23228,-12.77309],[45.23219,-12.77317],[45.2317,-12.7732],[45.23133,-12.77339],[45.23113,-12.7734],[45.23103,-12.77349],[45.23055,-12.77365],[45.2303,-12.77357],[45.23006,-12.77331],[45.22976,-12.77324],[45.2297,-12.77313],[45.22974,-12.77293],[45.22985,-12.77277],[45.23013,-12.77219],[45.23028,-12.77197],[45.23045,-12.77184],[45.23058,-12.7716],[45.23088,-12.77131],[45.23085,-12.77118],[45.23125,-12.7709],[45.23158,-12.77063],[45.23168,-12.77046],[45.23242,-12.76955],[45.23277,-12.76918],[45.23297,-12.76909],[45.2334,-12.76926],[45.23352,-12.76872],[45.23354,-12.76811],[45.23363,-12.76785],[45.23369,-12.76752],[45.23369,-12.76713],[45.2335,-12.76674],[45.23337,-12.7667],[45.23235,-12.76672],[45.23234,-12.76666],[45.23291,-12.76662],[45.23292,-12.76632],[45.23286,-12.766],[45.23214,-12.76411],[45.23187,-12.76349],[45.23162,-12.76303],[45.23137,-12.76268],[45.23096,-12.76227],[45.23073,-12.76211],[45.23035,-12.7621],[45.23006,-12.76226],[45.23,-12.76246],[45.2302,-12.76314],[45.23037,-12.76336],[45.23037,-12.7635],[45.23017,-12.76382],[45.23013,-12.76422],[45.2304,-12.76497],[45.23041,-12.7653],[45.23054,-12.76542],[45.23065,-12.76594],[45.23044,-12.76624],[45.23102,-12.76636],[45.23115,-12.76649],[45.2311,-12.7667],[45.23221,-12.76667],[45.23222,-12.76674],[45.23107,-12.76682],[45.23083,-12.76704],[45.23061,-12.76698],[45.23044,-12.76704],[45.23021,-12.76725],[45.23015,-12.76771],[45.23018,-12.76804],[45.23009,-12.76831],[45.22994,-12.76844],[45.22977,-12.7684],[45.22959,-12.76871],[45.22948,-12.76902],[45.22909,-12.76891],[45.22869,-12.76903],[45.22855,-12.76898],[45.22861,-12.76861],[45.2285,-12.76839],[45.22827,-12.76821],[45.22783,-12.76804],[45.22785,-12.7682],[45.22827,-12.76836],[45.22847,-12.76855],[45.22837,-12.76882],[45.22841,-12.769],[45.22856,-12.76917],[45.22882,-12.76919],[45.22905,-12.76909],[45.22938,-12.76922],[45.22945,-12.76944],[45.22936,-12.76965],[45.22916,-12.76981],[45.22916,-12.77005],[45.22908,-12.77022],[45.22854,-12.77053],[45.22803,-12.77055],[45.22775,-12.77038],[45.22758,-12.77011],[45.22737,-12.76996],[45.22717,-12.77009],[45.22709,-12.7703],[45.22724,-12.7705],[45.22742,-12.77057],[45.22765,-12.7708],[45.2276,-12.77095],[45.22733,-12.77096],[45.22719,-12.7711],[45.2271,-12.77138],[45.22696,-12.77138],[45.22702,-12.77168],[45.22697,-12.77198],[45.22703,-12.77211],[45.22728,-12.77226],[45.2277,-12.77266],[45.22768,-12.77296],[45.22742,-12.77325],[45.22748,-12.77379],[45.22739,-12.77407],[45.22718,-12.77422],[45.22689,-12.77431],[45.22656,-12.77429],[45.22628,-12.77418],[45.22604,-12.77392],[45.22581,-12.77395],[45.22564,-12.77427],[45.22563,-12.77446],[45.22591,-12.77455],[45.22611,-12.77474],[45.22634,-12.77486],[45.22658,-12.77508],[45.22684,-12.7751],[45.22715,-12.7753],[45.22724,-12.77555],[45.22742,-12.77565],[45.22779,-12.77554],[45.22803,-12.77538],[45.22815,-12.77521],[45.22841,-12.77512],[45.22869,-12.77488],[45.22883,-12.77471],[45.22899,-12.77467],[45.22984,-12.77474],[45.23017,-12.77492],[45.23062,-12.77539],[45.2309,-12.7755],[45.23118,-12.7755],[45.2315,-12.77538],[45.23184,-12.77544],[45.23201,-12.77566],[45.23208,-12.77591],[45.23231,-12.77601],[45.23367,-12.77615],[45.23339,-12.77668],[45.23334,-12.77684],[45.23337,-12.77704],[45.2335,-12.77707],[45.23354,-12.77726],[45.23341,-12.77735],[45.23339,-12.77767],[45.23327,-12.77785],[45.23272,-12.77788],[45.23259,-12.77801],[45.23263,-12.77813],[45.23258,-12.7786],[45.23264,-12.77879],[45.2325,-12.77886],[45.2327,-12.77918],[45.23297,-12.77907],[45.23305,-12.77925],[45.2328,-12.77936],[45.23289,-12.77954],[45.23283,-12.77973],[45.23353,-12.78049],[45.23384,-12.78077],[45.23448,-12.78127],[45.23474,-12.78143],[45.23518,-12.78176],[45.23536,-12.78179],[45.23557,-12.78166],[45.23587,-12.78133],[45.23602,-12.78142],[45.23628,-12.78138],[45.23645,-12.78126],[45.23695,-12.78124],[45.23707,-12.78134],[45.23747,-12.78136],[45.23781,-12.78152],[45.23814,-12.78185],[45.23828,-12.78205],[45.23819,-12.78234],[45.23827,-12.78287],[45.23818,-12.78303],[45.23819,-12.78318],[45.2381,-12.78335],[45.23819,-12.78342],[45.23796,-12.78384],[45.23809,-12.78401],[45.23796,-12.7842],[45.23803,-12.78444],[45.23791,-12.78482],[45.23771,-12.78464],[45.23763,-12.78466],[45.23769,-12.78498],[45.23755,-12.78521],[45.23709,-12.78568],[45.23697,-12.78566],[45.23665,-12.786],[45.23628,-12.78627],[45.23595,-12.7861],[45.23558,-12.78608],[45.23542,-12.78596],[45.23539,-12.78566],[45.23519,-12.78549],[45.23544,-12.78516],[45.23573,-12.78498],[45.23566,-12.78453],[45.23506,-12.784],[45.23486,-12.78355],[45.23473,-12.78335],[45.23433,-12.78326],[45.23392,-12.78337],[45.23242,-12.78386],[45.23158,-12.78412],[45.23133,-12.78413],[45.23057,-12.78403],[45.23026,-12.78401],[45.23021,-12.78415],[45.23058,-12.7843],[45.23066,-12.78461],[45.23042,-12.7848],[45.2302,-12.78525],[45.23022,-12.78566],[45.23032,-12.78582],[45.2303,-12.78604],[45.23053,-12.78627],[45.23084,-12.78632],[45.23072,-12.78652],[45.23056,-12.7865],[45.23029,-12.78631],[45.23023,-12.78613],[45.22995,-12.78605],[45.22978,-12.78609],[45.22973,-12.78594],[45.22935,-12.78585],[45.22891,-12.78592],[45.22857,-12.78617],[45.22765,-12.78617],[45.22748,-12.78593],[45.2267,-12.7866],[45.2265,-12.78673],[45.22645,-12.78689],[45.22602,-12.78717],[45.2257,-12.78719],[45.22561,-12.78772],[45.22552,-12.788],[45.22539,-12.78823],[45.22504,-12.78871],[45.22439,-12.78945],[45.22344,-12.79059],[45.22323,-12.79081],[45.22298,-12.79117],[45.22289,-12.7912],[45.2226,-12.7909],[45.22259,-12.7906],[45.22278,-12.79032],[45.22249,-12.79012],[45.22237,-12.78998],[45.22223,-12.78995],[45.22196,-12.79015],[45.22142,-12.78976],[45.22093,-12.78962],[45.22097,-12.78978],[45.2213,-12.78994],[45.22172,-12.79023],[45.22155,-12.79049],[45.22188,-12.79104],[45.22218,-12.79097],[45.22234,-12.79099],[45.22259,-12.79126],[45.22263,-12.79138],[45.22214,-12.79165],[45.22161,-12.79198],[45.22104,-12.7924],[45.2202,-12.79307],[45.219,-12.79397],[45.21879,-12.79416],[45.21847,-12.79454],[45.2182,-12.79474],[45.21804,-12.79479],[45.21774,-12.7948],[45.21698,-12.79469],[45.21691,-12.79488],[45.21675,-12.79502],[45.21641,-12.79488],[45.21637,-12.795],[45.21661,-12.79516],[45.21653,-12.79542],[45.21637,-12.79572],[45.21625,-12.79608],[45.21624,-12.79647],[45.21614,-12.79676],[45.21601,-12.79736],[45.21589,-12.79825],[45.21584,-12.79887],[45.21582,-12.79972],[45.21585,-12.79987],[45.21602,-12.8002],[45.21635,-12.80001],[45.21666,-12.79969],[45.21652,-12.80009],[45.21635,-12.80024],[45.21585,-12.80052],[45.21577,-12.80066],[45.21559,-12.80121],[45.21541,-12.80152],[45.21518,-12.80179],[45.21479,-12.80212],[45.21412,-12.80197],[45.21395,-12.80185],[45.21379,-12.80199],[45.21423,-12.80224],[45.21443,-12.8024],[45.21407,-12.80276],[45.21386,-12.80303],[45.21363,-12.80302],[45.21333,-12.80319],[45.21144,-12.80442],[45.21122,-12.80462],[45.21119,-12.80486],[45.21091,-12.80515],[45.21072,-12.80514],[45.21072,-12.80532],[45.21053,-12.80549],[45.21026,-12.80588],[45.21016,-12.80607],[45.21001,-12.80661],[45.20987,-12.80666],[45.20979,-12.80647],[45.20963,-12.80628],[45.20978,-12.80591],[45.21003,-12.80574],[45.21011,-12.8055],[45.21002,-12.80541],[45.20932,-12.80561],[45.20941,-12.80592],[45.20935,-12.80612],[45.20894,-12.80647],[45.20836,-12.80661],[45.20809,-12.80692],[45.20758,-12.80711],[45.20652,-12.80747],[45.20629,-12.8076],[45.20629,-12.80798],[45.20604,-12.80827],[45.20559,-12.80841],[45.20542,-12.80841],[45.20512,-12.80818],[45.2049,-12.80817],[45.20479,-12.80835],[45.20486,-12.80859],[45.20478,-12.80873],[45.20463,-12.8088],[45.20438,-12.80878],[45.20424,-12.8087],[45.20395,-12.80864],[45.20383,-12.80868],[45.20358,-12.809],[45.20359,-12.80918],[45.20381,-12.80946],[45.20375,-12.80954],[45.20324,-12.80942],[45.20311,-12.80952],[45.20304,-12.80969],[45.20322,-12.80972],[45.20378,-12.80989],[45.20399,-12.81023],[45.20349,-12.81002],[45.20309,-12.81015],[45.20308,-12.81039],[45.20334,-12.81076],[45.20328,-12.81107],[45.20351,-12.81135],[45.20355,-12.81167],[45.20364,-12.81193],[45.20361,-12.81201],[45.20383,-12.81254],[45.2042,-12.81279],[45.20425,-12.8129],[45.2045,-12.813],[45.20472,-12.81281],[45.20491,-12.8125],[45.205,-12.81223],[45.20518,-12.81233],[45.205,-12.81269],[45.20488,-12.81281],[45.20441,-12.8135],[45.20426,-12.81367],[45.20408,-12.81377],[45.20399,-12.81395],[45.20382,-12.81407],[45.20376,-12.81462],[45.20391,-12.81549],[45.20419,-12.81558],[45.20426,-12.81576],[45.20455,-12.81597],[45.20475,-12.81627],[45.20409,-12.81686],[45.20386,-12.81714],[45.20369,-12.81749],[45.20377,-12.81817],[45.2039,-12.81852],[45.20385,-12.81875],[45.20396,-12.81889],[45.20403,-12.81913],[45.20372,-12.81965],[45.20344,-12.81992],[45.20272,-12.82024],[45.20216,-12.82031],[45.20206,-12.82026],[45.20167,-12.82043],[45.20157,-12.82058],[45.20144,-12.82062],[45.20125,-12.8208],[45.20099,-12.82089],[45.20092,-12.82063],[45.20073,-12.8204],[45.20042,-12.82047],[45.20012,-12.82064],[45.19927,-12.82135],[45.19877,-12.8218],[45.19858,-12.8218],[45.19825,-12.82193],[45.19807,-12.8221],[45.19797,-12.8221],[45.19759,-12.82234],[45.19733,-12.8224],[45.19716,-12.82253],[45.19668,-12.82259],[45.1961,-12.82289],[45.196,-12.82301],[45.1957,-12.82313],[45.1954,-12.8235],[45.19499,-12.82412],[45.1948,-12.8241],[45.19464,-12.82425],[45.19428,-12.82494],[45.19405,-12.8255],[45.19387,-12.82586],[45.19366,-12.82635],[45.19337,-12.82684],[45.19309,-12.82749],[45.193,-12.82809],[45.19298,-12.8286],[45.19301,-12.82904],[45.19309,-12.82972],[45.19323,-12.83014],[45.19302,-12.83013],[45.19301,-12.82989],[45.19289,-12.82904],[45.19285,-12.82797],[45.1927,-12.82802],[45.19279,-12.82819],[45.19263,-12.82838],[45.19244,-12.82892],[45.19223,-12.82921],[45.19218,-12.82946],[45.19206,-12.82966],[45.19197,-12.82999],[45.19218,-12.83025],[45.19215,-12.83046],[45.19223,-12.83061],[45.19203,-12.83072],[45.19207,-12.831],[45.19223,-12.83104],[45.19212,-12.83137],[45.19235,-12.83142],[45.19261,-12.83128],[45.19284,-12.83083],[45.19297,-12.83038],[45.19304,-12.83039],[45.1929,-12.83089],[45.19295,-12.83111],[45.1931,-12.83112],[45.19351,-12.83101],[45.19385,-12.83084],[45.19417,-12.83086],[45.19434,-12.83101],[45.19446,-12.83095],[45.19484,-12.83105],[45.19517,-12.83107],[45.19541,-12.83113],[45.19564,-12.83099],[45.19579,-12.83099],[45.19638,-12.83068],[45.19688,-12.83051],[45.19702,-12.83049],[45.19752,-12.83055],[45.19773,-12.83064],[45.19776,-12.83076],[45.19758,-12.83109],[45.19739,-12.83118],[45.19722,-12.83137],[45.19695,-12.83177],[45.19677,-12.83218],[45.19651,-12.83297],[45.19639,-12.83315],[45.19604,-12.83333],[45.19558,-12.83366],[45.19517,-12.83387],[45.19493,-12.83411],[45.19457,-12.8343],[45.19419,-12.83443],[45.19414,-12.83435],[45.19378,-12.83448],[45.19362,-12.83462],[45.19332,-12.83519],[45.19293,-12.83585],[45.19271,-12.83631],[45.19255,-12.8365],[45.19231,-12.8367],[45.19202,-12.83684],[45.1911,-12.83705],[45.19079,-12.83707],[45.19035,-12.83715],[45.19021,-12.83721],[45.18997,-12.83743],[45.1898,-12.83781],[45.18972,-12.83814],[45.18956,-12.83843],[45.18931,-12.8386],[45.18891,-12.83866],[45.18837,-12.83862],[45.18762,-12.83846],[45.18729,-12.83842],[45.18701,-12.83834],[45.18662,-12.83835],[45.18581,-12.83829],[45.18548,-12.8383],[45.18521,-12.83842],[45.18516,-12.83851],[45.18564,-12.83895],[45.18606,-12.8395],[45.18609,-12.83998],[45.18599,-12.84057],[45.18586,-12.8407],[45.18584,-12.84089],[45.186,-12.84143],[45.18572,-12.84151],[45.18541,-12.84153],[45.18481,-12.84154],[45.18464,-12.84162],[45.18443,-12.84183],[45.1842,-12.84182],[45.18407,-12.84207],[45.1842,-12.84219],[45.18449,-12.84222],[45.18434,-12.84239],[45.18457,-12.84247],[45.18473,-12.84205],[45.18489,-12.84192],[45.18508,-12.84186],[45.18613,-12.84179],[45.18617,-12.84198],[45.18613,-12.84247],[45.18621,-12.84274],[45.18647,-12.84286],[45.1867,-12.84306],[45.18712,-12.84362],[45.18729,-12.8437],[45.18767,-12.8436],[45.1879,-12.84341],[45.18809,-12.8434],[45.18822,-12.84354],[45.18841,-12.84351],[45.18863,-12.84332],[45.18895,-12.84312],[45.18923,-12.84306],[45.18962,-12.84264],[45.18991,-12.8424],[45.19031,-12.84225],[45.1907,-12.84229],[45.1909,-12.84261],[45.19122,-12.84269],[45.1918,-12.84258],[45.19224,-12.84286],[45.19249,-12.84283],[45.19288,-12.84305],[45.19316,-12.84358],[45.19341,-12.84391],[45.19355,-12.84397],[45.19383,-12.84427],[45.19392,-12.84417],[45.19424,-12.84437],[45.19427,-12.84458],[45.19394,-12.84492],[45.19387,-12.84519],[45.19391,-12.84546],[45.19411,-12.84564],[45.1942,-12.84558],[45.19463,-12.84569],[45.19499,-12.84558],[45.19519,-12.84558],[45.19547,-12.84531],[45.19566,-12.84488],[45.19575,-12.84504],[45.19563,-12.8452],[45.19562,-12.84538],[45.19542,-12.84563],[45.19529,-12.84569],[45.19523,-12.84589],[45.19499,-12.846],[45.19478,-12.84657],[45.19461,-12.84765],[45.1946,-12.84803],[45.19462,-12.84855],[45.19489,-12.84967],[45.19532,-12.85016],[45.19546,-12.85029],[45.19584,-12.85049],[45.19618,-12.8509],[45.19629,-12.85133],[45.19657,-12.85148],[45.19668,-12.85189],[45.19689,-12.85316],[45.19678,-12.85316],[45.19666,-12.8537],[45.19666,-12.85386],[45.1968,-12.85416],[45.19717,-12.85476],[45.19759,-12.85505],[45.19784,-12.85505],[45.19801,-12.85548],[45.19848,-12.85575],[45.19863,-12.85558],[45.1989,-12.855],[45.19891,-12.85483],[45.1991,-12.85453],[45.19947,-12.85428],[45.19948,-12.8542],[45.19978,-12.85399],[45.20028,-12.85391],[45.20042,-12.85403],[45.20066,-12.85412],[45.20078,-12.85443],[45.20075,-12.85455],[45.20079,-12.85489],[45.20092,-12.85521],[45.20125,-12.85582],[45.20156,-12.85636],[45.20177,-12.85661],[45.20205,-12.8568],[45.20213,-12.85708],[45.20212,-12.85747],[45.20233,-12.85827],[45.20241,-12.8589],[45.20231,-12.85932],[45.20224,-12.85947],[45.20223,-12.85993],[45.20211,-12.86002],[45.20157,-12.86018],[45.2015,-12.86028],[45.20124,-12.86036],[45.20085,-12.86065],[45.20084,-12.86097],[45.20117,-12.8611],[45.2013,-12.86109],[45.20177,-12.86134],[45.20186,-12.86156],[45.20162,-12.86163],[45.20168,-12.86194],[45.20184,-12.86192],[45.20202,-12.86208],[45.2015,-12.86248],[45.20153,-12.86268],[45.20172,-12.86265],[45.20203,-12.86282],[45.20226,-12.86289],[45.20239,-12.86283],[45.20259,-12.86296],[45.2027,-12.86315],[45.20271,-12.86334],[45.20298,-12.86328],[45.2031,-12.86348],[45.20333,-12.86326],[45.20338,-12.86312],[45.20369,-12.86318],[45.2038,-12.86309],[45.20416,-12.86305],[45.20449,-12.86317],[45.20468,-12.86308],[45.20494,-12.86319],[45.20517,-12.863],[45.20529,-12.86258],[45.20539,-12.86243],[45.2056,-12.86264],[45.20591,-12.86287],[45.20658,-12.86362],[45.20685,-12.86366],[45.20734,-12.86347],[45.2076,-12.8634],[45.2083,-12.8637],[45.20873,-12.86359],[45.20901,-12.86321],[45.20929,-12.86313],[45.20977,-12.8626],[45.20983,-12.86243],[45.21009,-12.86235],[45.21039,-12.86246],[45.21089,-12.86255],[45.21132,-12.86269],[45.21159,-12.86269],[45.21244,-12.86299],[45.21256,-12.86324],[45.21276,-12.86353],[45.21277,-12.86381],[45.21252,-12.86399],[45.21226,-12.86428],[45.21217,-12.86447],[45.21192,-12.8648],[45.21162,-12.86504],[45.21144,-12.8653],[45.21116,-12.86592],[45.21085,-12.86707],[45.21075,-12.86758],[45.2104,-12.86829],[45.2101,-12.86866],[45.21002,-12.86888],[45.21013,-12.8693],[45.21041,-12.86989],[45.21152,-12.87126],[45.21191,-12.8717],[45.21213,-12.872],[45.21244,-12.87232],[45.21328,-12.87307],[45.21391,-12.87349],[45.21448,-12.87342],[45.21512,-12.87315],[45.21565,-12.87275],[45.21635,-12.87228],[45.21766,-12.87169],[45.21793,-12.87164],[45.21867,-12.87132],[45.21919,-12.87119],[45.22027,-12.87099],[45.22065,-12.87099],[45.22114,-12.87123],[45.22166,-12.87135],[45.22187,-12.87137],[45.2219,-12.87166],[45.22206,-12.8719],[45.22196,-12.87233],[45.22195,-12.8727],[45.22175,-12.87352],[45.22138,-12.87388],[45.22122,-12.87418],[45.22079,-12.8747],[45.22066,-12.87492],[45.22047,-12.87492],[45.22019,-12.87482],[45.21963,-12.87518],[45.21909,-12.87562],[45.21902,-12.87563],[45.21856,-12.87606],[45.2183,-12.87639],[45.21797,-12.8767],[45.21767,-12.87708],[45.2173,-12.87772],[45.21727,-12.87798],[45.21757,-12.87817],[45.21763,-12.8785],[45.21739,-12.87855],[45.21739,-12.87867],[45.21708,-12.87901],[45.21692,-12.87905],[45.21668,-12.87957],[45.21654,-12.88007],[45.21631,-12.8805],[45.21601,-12.88124],[45.21586,-12.88182],[45.21572,-12.88268],[45.21573,-12.88297],[45.21587,-12.88346],[45.21609,-12.8838],[45.21652,-12.88412],[45.21672,-12.88414],[45.21691,-12.8843],[45.21703,-12.88432],[45.21754,-12.88426],[45.21784,-12.88428],[45.2179,-12.88446],[45.2177,-12.88473],[45.21739,-12.88526],[45.21748,-12.88557],[45.21735,-12.88589],[45.2173,-12.88618],[45.21709,-12.88615],[45.2167,-12.88618],[45.21615,-12.88637],[45.21573,-12.88655],[45.21572,-12.88664],[45.2153,-12.88666],[45.21491,-12.88684],[45.2143,-12.88732],[45.21381,-12.88762],[45.21328,-12.88816],[45.21267,-12.8887],[45.21228,-12.88914],[45.21176,-12.88947],[45.21167,-12.8895],[45.21149,-12.88972],[45.21137,-12.89],[45.21127,-12.89007],[45.21114,-12.8904],[45.21121,-12.89058],[45.21147,-12.89069],[45.21151,-12.89087],[45.21101,-12.89105],[45.21083,-12.89139],[45.21044,-12.89134],[45.21019,-12.89135],[45.20993,-12.89145],[45.20882,-12.89207],[45.20855,-12.89236],[45.20824,-12.89234],[45.20809,-12.89227],[45.20733,-12.89252],[45.20704,-12.89278],[45.20687,-12.89298],[45.20655,-12.89301],[45.20584,-12.89326],[45.20565,-12.89326],[45.20529,-12.89297],[45.20504,-12.8929],[45.20476,-12.89298],[45.20457,-12.89312],[45.20427,-12.89323],[45.2042,-12.8934],[45.20354,-12.89399],[45.20331,-12.89411],[45.20284,-12.89457],[45.20237,-12.89459],[45.20177,-12.89482],[45.20122,-12.89488],[45.20093,-12.89495],[45.20069,-12.89514],[45.20049,-12.89517],[45.20028,-12.89532],[45.20002,-12.89568],[45.19977,-12.89593],[45.19938,-12.89611],[45.19896,-12.89609],[45.19873,-12.89595],[45.19841,-12.89607],[45.19819,-12.89682],[45.19795,-12.89717],[45.19744,-12.89769],[45.19723,-12.89768],[45.19674,-12.89744],[45.19605,-12.89731],[45.19584,-12.89743],[45.1958,-12.8976],[45.19592,-12.89778],[45.19593,-12.89796],[45.19607,-12.89797],[45.19631,-12.89785],[45.19641,-12.89769],[45.19676,-12.89778],[45.19698,-12.89775],[45.19727,-12.89787],[45.19726,-12.89831],[45.19742,-12.89869],[45.19741,-12.89911],[45.19717,-12.89935],[45.19672,-12.89999],[45.19652,-12.90044],[45.19636,-12.90069],[45.196,-12.90116],[45.19588,-12.90164],[45.19579,-12.90171],[45.19563,-12.90199],[45.19554,-12.90243],[45.19541,-12.90282],[45.19553,-12.90316],[45.19572,-12.90354],[45.19568,-12.9038],[45.19553,-12.90409],[45.19556,-12.90439],[45.1954,-12.90485],[45.19536,-12.90535],[45.19539,-12.90565],[45.19549,-12.90621],[45.19543,-12.90636],[45.19528,-12.90629],[45.19525,-12.90609],[45.19513,-12.90576],[45.19511,-12.90538],[45.1952,-12.90462],[45.19536,-12.90411],[45.19543,-12.90368],[45.19538,-12.90354],[45.195,-12.90367],[45.19484,-12.90402],[45.19463,-12.90434],[45.19448,-12.90468],[45.19451,-12.90484],[45.19434,-12.90504],[45.19414,-12.90512],[45.19401,-12.90535],[45.19386,-12.9054],[45.19346,-12.90519],[45.19313,-12.90543],[45.19246,-12.90576],[45.19251,-12.90603],[45.19273,-12.90619],[45.19292,-12.90652],[45.19292,-12.90683],[45.19302,-12.90685],[45.19316,-12.90704],[45.19339,-12.90719],[45.19357,-12.90743],[45.19377,-12.90755],[45.19412,-12.9076],[45.19458,-12.90777],[45.19471,-12.90786],[45.19487,-12.90785],[45.19554,-12.90794],[45.19577,-12.90795],[45.19571,-12.90757],[45.19579,-12.90744],[45.19602,-12.90742],[45.19609,-12.90749],[45.19624,-12.90826],[45.19629,-12.90933],[45.19624,-12.90954],[45.19588,-12.90955],[45.1957,-12.90951],[45.19515,-12.90951],[45.19497,-12.90963],[45.19474,-12.91018],[45.19481,-12.91026],[45.19505,-12.90984],[45.19522,-12.90974],[45.19547,-12.90971],[45.19592,-12.90982],[45.19618,-12.90992],[45.19655,-12.91031],[45.1966,-12.91046],[45.19656,-12.9107],[45.19635,-12.91127],[45.19629,-12.91161],[45.19631,-12.91183],[45.19661,-12.91243],[45.19665,-12.91261],[45.19669,-12.9131],[45.19683,-12.91328],[45.1969,-12.91359],[45.197,-12.91375],[45.1971,-12.91423],[45.19732,-12.91437],[45.19828,-12.91487],[45.1986,-12.91525],[45.19899,-12.91521],[45.19945,-12.91509],[45.20004,-12.91521],[45.20037,-12.9156],[45.20065,-12.91575],[45.20091,-12.91583],[45.20105,-12.91606],[45.2012,-12.91668],[45.20145,-12.91706],[45.20158,-12.91718],[45.20182,-12.91755],[45.20208,-12.91754],[45.20253,-12.91774],[45.2027,-12.91789],[45.20306,-12.91841],[45.20334,-12.91901],[45.20346,-12.91915],[45.20356,-12.91944],[45.20369,-12.91957],[45.20459,-12.92005],[45.20498,-12.92002],[45.205,-12.92014],[45.2048,-12.92024],[45.20456,-12.92011],[45.20426,-12.92014],[45.20357,-12.92052],[45.20333,-12.92047],[45.20295,-12.92029],[45.20263,-12.92023],[45.20239,-12.92026],[45.20206,-12.92019],[45.20158,-12.92001],[45.20042,-12.92024],[45.2,-12.92011],[45.19942,-12.92],[45.19912,-12.9199],[45.19884,-12.91962],[45.19857,-12.91953],[45.19816,-12.91952],[45.19774,-12.9193],[45.19753,-12.91923],[45.19727,-12.91922],[45.19687,-12.91912],[45.19653,-12.91898],[45.1965,-12.91886],[45.19613,-12.91836],[45.19557,-12.91789],[45.19541,-12.91772],[45.19508,-12.91754],[45.19426,-12.9173],[45.19328,-12.91714],[45.19306,-12.91715],[45.1929,-12.91707],[45.1924,-12.91694],[45.19147,-12.91675],[45.1909,-12.91684],[45.19042,-12.917],[45.19019,-12.91703],[45.18982,-12.917],[45.18957,-12.91685],[45.18881,-12.91653],[45.18834,-12.91642],[45.1877,-12.91642],[45.18705,-12.91667],[45.18645,-12.91703],[45.186,-12.91745],[45.18551,-12.91807],[45.18512,-12.9185],[45.18496,-12.91881],[45.1846,-12.91929],[45.18457,-12.91943],[45.1843,-12.91985],[45.18424,-12.92014],[45.18412,-12.9205],[45.1841,-12.92074],[45.1839,-12.92136],[45.18446,-12.92222],[45.18467,-12.92239],[45.18479,-12.92257],[45.1848,-12.92271],[45.18464,-12.92327],[45.18473,-12.92375],[45.185,-12.92428],[45.18499,-12.92441],[45.18471,-12.9245],[45.18418,-12.92439],[45.18395,-12.92431],[45.18375,-12.92436],[45.18335,-12.92468],[45.18326,-12.92481],[45.18301,-12.92499],[45.18254,-12.92523],[45.18223,-12.92525],[45.18196,-12.92537],[45.18165,-12.92535],[45.18072,-12.92513],[45.18047,-12.92517],[45.18014,-12.92542],[45.17979,-12.92574],[45.17961,-12.92584],[45.17923,-12.92634],[45.17897,-12.92679],[45.17856,-12.92738],[45.17839,-12.92772],[45.17827,-12.92774],[45.17818,-12.92809],[45.17774,-12.92876],[45.17712,-12.92939],[45.17701,-12.92962],[45.17676,-12.93044],[45.17648,-12.93111],[45.17633,-12.93139],[45.17611,-12.93199],[45.17596,-12.93254],[45.17584,-12.93335],[45.17581,-12.93381],[45.17585,-12.93456],[45.17582,-12.93488],[45.17574,-12.93503],[45.17587,-12.93528],[45.17625,-12.9355],[45.1765,-12.93592],[45.1767,-12.93612],[45.17709,-12.9363],[45.17728,-12.93645],[45.17753,-12.93681],[45.1777,-12.93692],[45.17788,-12.93693],[45.17823,-12.93718],[45.17857,-12.93765],[45.17866,-12.93796],[45.17915,-12.93851],[45.17929,-12.93877],[45.17949,-12.93896],[45.17968,-12.9392],[45.17955,-12.94042],[45.17965,-12.94056],[45.17963,-12.94091],[45.17968,-12.9413],[45.17963,-12.94172],[45.1797,-12.94192],[45.17962,-12.94231],[45.17951,-12.94239],[45.1794,-12.94283],[45.17937,-12.94334],[45.17945,-12.94345],[45.17908,-12.94352],[45.17885,-12.94341],[45.17882,-12.94332],[45.17839,-12.94316],[45.17801,-12.94299],[45.17772,-12.943],[45.17735,-12.94295],[45.17691,-12.94274],[45.17664,-12.94274],[45.17631,-12.94259],[45.1758,-12.94261],[45.17538,-12.94215],[45.17523,-12.94187],[45.17486,-12.94153],[45.1739,-12.9414],[45.17341,-12.94147],[45.17324,-12.94147],[45.1727,-12.94163],[45.17235,-12.94192],[45.17206,-12.94204],[45.17159,-12.94236],[45.17118,-12.94273],[45.17048,-12.9436],[45.17028,-12.94375],[45.1702,-12.94357],[45.1704,-12.94325],[45.17083,-12.94281],[45.17085,-12.94262],[45.17038,-12.94274],[45.17043,-12.94285],[45.17031,-12.94298],[45.17003,-12.943],[45.16985,-12.94313],[45.16978,-12.94328],[45.16958,-12.94324],[45.16936,-12.94303],[45.16953,-12.94374],[45.16959,-12.9444],[45.16972,-12.94439],[45.16985,-12.94423],[45.16994,-12.94399],[45.17008,-12.94419],[45.16978,-12.9448],[45.16967,-12.94512],[45.16948,-12.94545],[45.16943,-12.94579],[45.16926,-12.9462],[45.16915,-12.94666],[45.16889,-12.94741],[45.16882,-12.94786],[45.16876,-12.94884],[45.16865,-12.94903],[45.16883,-12.94935],[45.16882,-12.94957],[45.16898,-12.94984],[45.16914,-12.94999],[45.16924,-12.95039],[45.16934,-12.95047],[45.16947,-12.95081],[45.16963,-12.95149],[45.16999,-12.95198],[45.17018,-12.95208],[45.17035,-12.95229],[45.17045,-12.9529],[45.17066,-12.95319],[45.17086,-12.95333],[45.17126,-12.95347],[45.17184,-12.95362],[45.17253,-12.95394],[45.17272,-12.95415],[45.1732,-12.95447],[45.17366,-12.95508],[45.174,-12.95539],[45.17418,-12.95563],[45.17438,-12.95579],[45.1749,-12.95606],[45.17514,-12.95633],[45.17535,-12.95692],[45.17535,-12.95708],[45.17559,-12.9577],[45.17583,-12.95808],[45.17596,-12.95844],[45.17622,-12.95874],[45.17626,-12.95887],[45.17627,-12.9593],[45.17619,-12.95993],[45.17598,-12.96042],[45.17606,-12.96088],[45.17625,-12.96174],[45.17608,-12.96189],[45.17633,-12.96218],[45.17659,-12.96301],[45.17678,-12.96344],[45.17684,-12.96367],[45.17674,-12.96402],[45.17644,-12.96407],[45.17611,-12.96388],[45.17623,-12.96431],[45.1765,-12.96446],[45.17667,-12.96444],[45.1768,-12.96459],[45.17692,-12.96516],[45.17692,-12.96537],[45.17722,-12.96526],[45.17741,-12.96514],[45.17732,-12.96501],[45.17713,-12.96454],[45.17696,-12.96429],[45.17707,-12.9641],[45.17749,-12.965],[45.17779,-12.96541],[45.17791,-12.96575],[45.1781,-12.9659],[45.17878,-12.96599],[45.17889,-12.96614],[45.17925,-12.96634],[45.17944,-12.96636],[45.17981,-12.96676],[45.18025,-12.96688],[45.18048,-12.96702],[45.18077,-12.9673],[45.18127,-12.96797],[45.18156,-12.96819],[45.18215,-12.96841],[45.18233,-12.96851],[45.18266,-12.96851],[45.18279,-12.96841],[45.18293,-12.96855],[45.18353,-12.96925],[45.1838,-12.96951],[45.18428,-12.96973],[45.18473,-12.97006],[45.18513,-12.97014],[45.18593,-12.97003],[45.18657,-12.97013],[45.18725,-12.97037],[45.18754,-12.97035],[45.18824,-12.97045],[45.18867,-12.97063],[45.18893,-12.97059],[45.18929,-12.97048],[45.19049,-12.97123],[45.1905,-12.97143],[45.19067,-12.97167],[45.19069,-12.97186],[45.19096,-12.97209],[45.19114,-12.97252],[45.19109,-12.97262],[45.19157,-12.97332],[45.19185,-12.97368],[45.19222,-12.97382],[45.19275,-12.97382],[45.193,-12.97389],[45.19313,-12.97441],[45.19376,-12.97494],[45.19376,-12.97508],[45.19352,-12.97524],[45.19324,-12.97531],[45.19299,-12.97552],[45.19298,-12.97566],[45.19307,-12.97595],[45.1932,-12.97601],[45.19355,-12.97603],[45.1937,-12.97596],[45.19392,-12.97558],[45.19397,-12.97515],[45.19405,-12.9751],[45.19478,-12.97543],[45.19504,-12.97559],[45.19582,-12.97586],[45.19623,-12.97596],[45.19661,-12.97595],[45.19709,-12.97569],[45.19732,-12.97545],[45.19782,-12.97465],[45.19835,-12.97454],[45.19881,-12.97437],[45.19965,-12.97429],[45.19976,-12.97432],[45.20077,-12.97425],[45.20118,-12.97427],[45.20178,-12.97442],[45.20221,-12.97445],[45.20253,-12.97442],[45.20312,-12.97425],[45.2036,-12.97421],[45.20393,-12.97426],[45.20426,-12.97445],[45.20436,-12.97456],[45.20435,-12.97491],[45.20426,-12.97507],[45.20387,-12.97551],[45.20338,-12.97583],[45.20309,-12.97608],[45.20284,-12.97634],[45.20261,-12.97652],[45.20241,-12.97675],[45.20234,-12.97704],[45.20218,-12.97719],[45.20181,-12.97796],[45.20155,-12.97803],[45.20118,-12.97831],[45.20087,-12.97882],[45.20075,-12.97932],[45.20077,-12.97949],[45.20094,-12.97971],[45.20081,-12.97986],[45.2009,-12.98064],[45.20068,-12.98091],[45.20033,-12.98094],[45.20004,-12.98085],[45.19956,-12.98063],[45.19912,-12.98081],[45.19869,-12.98114],[45.19867,-12.98144],[45.19841,-12.98162],[45.19811,-12.98159],[45.19783,-12.98151],[45.19758,-12.98162],[45.19744,-12.98185],[45.19704,-12.9822],[45.19677,-12.98252],[45.19655,-12.98294],[45.19655,-12.98319],[45.19663,-12.98336],[45.19683,-12.98351],[45.19688,-12.98362],[45.1968,-12.9838],[45.19607,-12.98373],[45.1958,-12.98387],[45.19533,-12.98426],[45.195,-12.98405],[45.19489,-12.98391],[45.19471,-12.98382],[45.19459,-12.9841],[45.1947,-12.9845],[45.19501,-12.98456],[45.19447,-12.9851],[45.19424,-12.9853],[45.19401,-12.98557],[45.19373,-12.98662],[45.19369,-12.98714],[45.19386,-12.98748],[45.19348,-12.98725],[45.19326,-12.98728],[45.19321,-12.98742],[45.19275,-12.98749],[45.19224,-12.98739],[45.192,-12.98723],[45.1918,-12.98701],[45.19146,-12.98678],[45.19118,-12.98665],[45.19063,-12.98643],[45.19038,-12.98609],[45.18979,-12.98584],[45.1894,-12.98564],[45.18868,-12.98552],[45.1881,-12.98521],[45.18722,-12.98497],[45.18684,-12.98482],[45.18641,-12.98474],[45.18631,-12.98464],[45.18608,-12.98403],[45.18595,-12.98397],[45.18552,-12.98398],[45.18504,-12.9839],[45.18458,-12.9839],[45.18421,-12.98396],[45.18344,-12.98396],[45.18265,-12.98423],[45.18239,-12.9842],[45.18229,-12.98411],[45.18215,-12.98381],[45.1819,-12.9836],[45.18165,-12.98372],[45.18153,-12.98393],[45.18157,-12.98411],[45.18186,-12.98426],[45.18189,-12.98446],[45.18171,-12.98461],[45.1811,-12.98482],[45.18101,-12.98473],[45.18095,-12.98449],[45.18075,-12.98429],[45.18066,-12.98436],[45.18055,-12.98507],[45.18045,-12.9852],[45.18019,-12.98523],[45.18003,-12.98544],[45.17994,-12.98581],[45.17946,-12.98644],[45.17914,-12.98698],[45.17906,-12.98733],[45.17908,-12.98759],[45.17896,-12.98819],[45.17881,-12.98838],[45.17863,-12.98892],[45.17845,-12.98911],[45.17827,-12.98945],[45.17813,-12.98981],[45.17765,-12.99054],[45.17753,-12.99067],[45.17753,-12.99103],[45.17748,-12.99132],[45.1775,-12.99188],[45.17758,-12.99251],[45.17794,-12.99305],[45.17815,-12.99324],[45.1784,-12.99339],[45.17861,-12.99358],[45.1789,-12.99373],[45.17916,-12.99406],[45.17938,-12.99412],[45.17942,-12.99432],[45.17902,-12.99451],[45.17885,-12.99447],[45.17841,-12.99467],[45.17838,-12.99483],[45.17818,-12.99497],[45.17811,-12.99487],[45.1777,-12.99479],[45.17714,-12.99487],[45.17694,-12.99482],[45.17652,-12.9949],[45.17608,-12.99528],[45.17576,-12.99514],[45.17561,-12.99501],[45.1754,-12.99459],[45.17542,-12.9944],[45.17556,-12.99388],[45.17552,-12.99351],[45.17544,-12.99334],[45.1755,-12.99315],[45.1755,-12.99292],[45.17558,-12.99263],[45.17554,-12.99234],[45.17532,-12.99201],[45.17534,-12.9918],[45.1751,-12.99126],[45.17492,-12.99074],[45.17491,-12.9905],[45.17468,-12.99002],[45.17448,-12.98951],[45.17453,-12.98938],[45.17441,-12.98898],[45.17447,-12.98887],[45.17434,-12.9884],[45.17419,-12.98802],[45.17433,-12.98783],[45.17436,-12.98721],[45.17444,-12.98685],[45.1744,-12.98663],[45.17451,-12.98636],[45.17449,-12.98618],[45.17455,-12.98585],[45.17453,-12.98563],[45.17438,-12.9851],[45.17444,-12.98472],[45.17433,-12.98431],[45.17415,-12.98403],[45.17368,-12.98353],[45.17355,-12.98355],[45.1734,-12.98332],[45.17322,-12.98286],[45.17314,-12.98277],[45.17288,-12.98206],[45.17287,-12.98181],[45.17272,-12.9815],[45.17236,-12.98114],[45.17201,-12.98049],[45.17199,-12.98035],[45.17216,-12.97973],[45.17213,-12.97964],[45.17221,-12.97931],[45.17219,-12.97903],[45.1721,-12.97878],[45.17185,-12.97844],[45.17091,-12.97775],[45.17065,-12.97746],[45.17055,-12.97726],[45.17026,-12.9769],[45.16976,-12.97663],[45.16937,-12.97651],[45.16908,-12.97658],[45.16885,-12.97636],[45.16808,-12.9763],[45.1679,-12.97618],[45.16806,-12.97594],[45.16806,-12.97581],[45.16792,-12.97567],[45.1677,-12.97558],[45.16699,-12.97544],[45.16686,-12.97549],[45.16663,-12.97541],[45.16651,-12.97495],[45.1663,-12.97492],[45.16507,-12.97502],[45.16432,-12.97511],[45.16388,-12.97526],[45.1631,-12.97565],[45.1626,-12.97588],[45.16227,-12.97597],[45.1618,-12.97601],[45.16129,-12.97584],[45.16152,-12.97562],[45.16186,-12.97568],[45.16214,-12.97561],[45.16249,-12.97542],[45.1628,-12.97541],[45.16288,-12.97525],[45.16311,-12.97509],[45.16256,-12.97483],[45.16235,-12.97478],[45.16239,-12.97505],[45.16218,-12.97529],[45.16189,-12.97538],[45.16186,-12.97528],[45.16155,-12.97522],[45.16141,-12.9749],[45.1612,-12.97484],[45.16108,-12.97453],[45.16109,-12.97433],[45.16087,-12.97436],[45.16069,-12.97428],[45.16041,-12.97425],[45.16035,-12.97403],[45.16047,-12.97378],[45.16045,-12.97356],[45.16048,-12.97319],[45.1607,-12.9731],[45.1608,-12.97298],[45.16076,-12.97284],[45.16048,-12.97259],[45.16034,-12.97275],[45.16037,-12.97284],[45.16071,-12.97295],[45.16061,-12.97306],[45.16035,-12.97316],[45.16033,-12.97349],[45.16036,-12.97368],[45.16031,-12.97391],[45.16017,-12.97417],[45.16037,-12.97463],[45.16017,-12.97482],[45.15981,-12.97505],[45.15918,-12.97512],[45.15919,-12.97543],[45.15895,-12.97569],[45.15894,-12.97577],[45.15857,-12.97605],[45.15842,-12.97625],[45.15814,-12.97632],[45.15817,-12.97669],[45.15807,-12.97687],[45.1579,-12.97693],[45.15796,-12.97723],[45.15779,-12.97773],[45.15779,-12.97786],[45.1579,-12.97807],[45.15815,-12.97792],[45.15829,-12.97767],[45.15852,-12.9775],[45.15915,-12.9772],[45.15934,-12.97675],[45.15953,-12.97683],[45.15952,-12.97702],[45.1594,-12.97738],[45.15915,-12.97766],[45.1585,-12.97811],[45.15828,-12.97822],[45.15775,-12.9787],[45.15753,-12.97872],[45.1571,-12.97898],[45.15685,-12.97936],[45.15647,-12.97971],[45.15617,-12.98016],[45.15599,-12.98031],[45.15616,-12.98068],[45.15628,-12.98111],[45.15627,-12.98157],[45.1563,-12.98199],[45.15641,-12.98224],[45.15668,-12.98248],[45.15679,-12.98265],[45.15697,-12.98324],[45.15702,-12.98378],[45.15697,-12.98432],[45.15706,-12.9846],[45.15737,-12.9849],[45.1575,-12.98519],[45.15734,-12.9857],[45.15738,-12.98607],[45.1575,-12.98632],[45.15769,-12.98704],[45.15767,-12.98724],[45.15747,-12.98772],[45.15746,-12.98816],[45.15759,-12.98842],[45.15786,-12.98871],[45.15747,-12.98945],[45.15722,-12.98983],[45.15665,-12.9903],[45.15628,-12.99046],[45.15604,-12.99071],[45.15594,-12.99066],[45.15563,-12.99127],[45.15559,-12.99176],[45.15564,-12.99225],[45.15557,-12.99246],[45.15539,-12.99241],[45.15521,-12.99259],[45.1546,-12.99312],[45.15405,-12.99374],[45.15377,-12.99411],[45.15357,-12.99428],[45.1537,-12.99457],[45.15355,-12.99491],[45.15352,-12.9951],[45.1536,-12.99521],[45.15345,-12.99551],[45.1532,-12.99586],[45.15309,-12.99609],[45.15295,-12.99673],[45.15293,-12.99691],[45.15254,-12.99715],[45.15221,-12.99744],[45.15199,-12.99759],[45.15177,-12.99782],[45.15155,-12.99822],[45.15124,-12.99858],[45.15091,-12.99873],[45.15063,-12.99905],[45.15018,-12.99931],[45.14985,-12.99935],[45.14945,-12.99952],[45.14914,-12.99977],[45.14845,-12.99998],[45.14814,-13.0001],[45.14778,-13.00001],[45.14754,-12.99983],[45.14738,-12.9996],[45.14698,-12.99933],[45.14696,-12.99915],[45.1468,-12.99921],[45.14674,-12.99951],[45.14655,-12.99964],[45.14633,-12.99961],[45.14623,-12.99968],[45.14606,-12.99956],[45.14537,-12.99939],[45.14517,-12.99942],[45.14488,-12.99928],[45.14465,-12.99927],[45.14435,-12.99935],[45.14424,-12.99925],[45.1435,-12.99922],[45.14303,-12.99938],[45.14257,-12.99959],[45.14241,-12.99961],[45.14198,-12.99953],[45.14177,-12.99932],[45.14164,-12.99911],[45.14138,-12.99888],[45.14109,-12.99851],[45.1408,-12.99768],[45.14074,-12.9973],[45.14048,-12.99665],[45.14014,-12.99606],[45.14012,-12.99592],[45.13991,-12.99552],[45.13971,-12.99524],[45.13948,-12.99471],[45.13945,-12.99441],[45.13933,-12.99415],[45.13952,-12.99357],[45.13949,-12.99339],[45.13919,-12.99281],[45.1394,-12.9922],[45.13933,-12.99177],[45.1394,-12.99146],[45.13913,-12.99117],[45.13895,-12.99133],[45.13912,-12.99167],[45.139,-12.99203],[45.13882,-12.99199],[45.13856,-12.99179],[45.13785,-12.99139],[45.13707,-12.99105],[45.13651,-12.99092],[45.13601,-12.99074],[45.13549,-12.99069],[45.13504,-12.99058],[45.13502,-12.99046],[45.13535,-12.99044],[45.13563,-12.99014],[45.13604,-12.99005],[45.13639,-12.98956],[45.13622,-12.98962],[45.13572,-12.98966],[45.1354,-12.98962],[45.13526,-12.98966],[45.1352,-12.99007],[45.13503,-12.99013],[45.13438,-12.99017],[45.13401,-12.99023],[45.13382,-12.99017],[45.13384,-12.98999],[45.13405,-12.98984],[45.13418,-12.98961],[45.1343,-12.98929],[45.13431,-12.98896],[45.13413,-12.98887],[45.13395,-12.98891],[45.13353,-12.98914],[45.1331,-12.98905],[45.13287,-12.98908],[45.13295,-12.9893],[45.13281,-12.98993],[45.13317,-12.99016],[45.13332,-12.99038],[45.13328,-12.99051],[45.1331,-12.99071],[45.13302,-12.99093],[45.13265,-12.99109],[45.13244,-12.99141],[45.13215,-12.99156],[45.13217,-12.99191],[45.13206,-12.99216],[45.13179,-12.99243],[45.13169,-12.99272],[45.13152,-12.99295],[45.13144,-12.99344],[45.13104,-12.99373],[45.13081,-12.99385],[45.13059,-12.99408],[45.13028,-12.99412],[45.13018,-12.99418],[45.1301,-12.9944],[45.12991,-12.99466],[45.12961,-12.99477],[45.12889,-12.99481],[45.12857,-12.99479],[45.12825,-12.9947],[45.12791,-12.99474],[45.12742,-12.99499],[45.1272,-12.99496],[45.12678,-12.99512],[45.12662,-12.99532],[45.1264,-12.99547],[45.12634,-12.99567],[45.12611,-12.99535],[45.12607,-12.99483],[45.12625,-12.99451],[45.12634,-12.99418],[45.12633,-12.99383],[45.12622,-12.99358],[45.12576,-12.99305],[45.12565,-12.9928],[45.12561,-12.99253],[45.12566,-12.99228],[45.12547,-12.99185],[45.12539,-12.99176],[45.12503,-12.9909],[45.12516,-12.99068],[45.12533,-12.99007],[45.12538,-12.98968],[45.12549,-12.98941],[45.12576,-12.98822],[45.12594,-12.98793],[45.12608,-12.98758],[45.12638,-12.98721],[45.12667,-12.98716],[45.12664,-12.98693],[45.12645,-12.98673],[45.12647,-12.9864],[45.12606,-12.98562],[45.12575,-12.98517],[45.12553,-12.98495],[45.12544,-12.98476],[45.12526,-12.98465],[45.12523,-12.9845],[45.12533,-12.98414],[45.12541,-12.98339],[45.12535,-12.98304],[45.12516,-12.98277],[45.1249,-12.98276],[45.1246,-12.9826],[45.12453,-12.98242],[45.1246,-12.98218],[45.1245,-12.98173],[45.12456,-12.98153],[45.12483,-12.98103],[45.12486,-12.98075],[45.1251,-12.97995],[45.12504,-12.97991],[45.12464,-12.98019],[45.12459,-12.9809],[45.12447,-12.98101],[45.12435,-12.98089],[45.1241,-12.98096],[45.124,-12.98131],[45.12416,-12.98141],[45.12426,-12.98165],[45.1243,-12.98197],[45.12427,-12.98212],[45.12409,-12.98207],[45.12349,-12.98176],[45.12277,-12.98134],[45.12239,-12.98124],[45.12173,-12.98102],[45.12108,-12.98073],[45.12043,-12.98057],[45.11998,-12.98037],[45.1196,-12.98025],[45.1192,-12.98067],[45.11869,-12.9806],[45.11845,-12.98064],[45.11821,-12.98058],[45.1177,-12.98055],[45.1173,-12.98064],[45.11722,-12.98073],[45.11702,-12.98072],[45.1167,-12.98082],[45.11614,-12.98082],[45.11571,-12.98101],[45.11551,-12.98124],[45.11525,-12.98137],[45.11501,-12.98156],[45.11453,-12.9817],[45.11404,-12.982],[45.11362,-12.9824],[45.11334,-12.98283],[45.11301,-12.98316],[45.11287,-12.98351],[45.11253,-12.98403],[45.11236,-12.98457],[45.11199,-12.98472],[45.11189,-12.98486],[45.11157,-12.98508],[45.11117,-12.98551],[45.11096,-12.98588],[45.11096,-12.98621],[45.1109,-12.98632],[45.1107,-12.98699],[45.11053,-12.98741],[45.11054,-12.98765],[45.11045,-12.98797],[45.11031,-12.9881],[45.11005,-12.98857],[45.10995,-12.98882],[45.10993,-12.9893],[45.10979,-12.98967],[45.10976,-12.99001],[45.10982,-12.99027],[45.10968,-12.99057],[45.10968,-12.99073],[45.10958,-12.99086],[45.10942,-12.99121],[45.1094,-12.9915],[45.10944,-12.99185],[45.10927,-12.99232],[45.10931,-12.99284],[45.10897,-12.99335],[45.10903,-12.9935],[45.10891,-12.99368],[45.10899,-12.99392],[45.10881,-12.99389],[45.1088,-12.99364],[45.10865,-12.99359],[45.10868,-12.99311],[45.10861,-12.99294],[45.10858,-12.99258],[45.10829,-12.99208],[45.10817,-12.99166],[45.10783,-12.99118],[45.10758,-12.9909],[45.10734,-12.99072],[45.1071,-12.99061],[45.1064,-12.98975],[45.10598,-12.9892],[45.10584,-12.98858],[45.10559,-12.988],[45.1056,-12.98777],[45.10555,-12.9873],[45.10557,-12.98701],[45.10566,-12.98673],[45.10611,-12.98606],[45.10624,-12.98573],[45.10706,-12.98493],[45.10729,-12.98435],[45.10745,-12.98426],[45.10769,-12.98375],[45.10778,-12.98366],[45.10793,-12.98304],[45.10805,-12.98274],[45.10819,-12.98257],[45.10827,-12.98195],[45.10822,-12.9817],[45.10823,-12.98144],[45.10811,-12.98103],[45.10811,-12.9809],[45.10795,-12.98045],[45.10772,-12.98025],[45.10757,-12.9802],[45.10763,-12.97982],[45.10748,-12.97969],[45.10735,-12.97935],[45.10738,-12.97887],[45.10732,-12.97844],[45.10767,-12.97793],[45.10754,-12.97759],[45.10754,-12.97732],[45.10764,-12.9771],[45.10756,-12.97689],[45.10721,-12.97641],[45.1071,-12.97579],[45.107,-12.97537],[45.10667,-12.97493],[45.10653,-12.97464],[45.10658,-12.97432],[45.10698,-12.97374],[45.10715,-12.97325],[45.10745,-12.97293],[45.10767,-12.97281],[45.10843,-12.97215],[45.10866,-12.97203],[45.10901,-12.97175],[45.10924,-12.97117],[45.10933,-12.97086],[45.1096,-12.97045],[45.10961,-12.97013],[45.10952,-12.96939],[45.10958,-12.96905],[45.11006,-12.96862],[45.11026,-12.96828],[45.11053,-12.9679],[45.11074,-12.96775],[45.11071,-12.96748],[45.11076,-12.9674],[45.11068,-12.96691],[45.1107,-12.96661],[45.11076,-12.96654],[45.11071,-12.96629],[45.1107,-12.96568],[45.11079,-12.96519],[45.11065,-12.96459],[45.11068,-12.9644],[45.11062,-12.96369],[45.11063,-12.96349],[45.1105,-12.96323],[45.11051,-12.96245],[45.11064,-12.9621],[45.11085,-12.96175],[45.11101,-12.96139],[45.11089,-12.96079],[45.1108,-12.9606],[45.11079,-12.9604],[45.11057,-12.96016],[45.11018,-12.95984],[45.11009,-12.9598],[45.10953,-12.95983],[45.10933,-12.95951],[45.10912,-12.95927],[45.10891,-12.95862],[45.10865,-12.95818],[45.10862,-12.95799],[45.10845,-12.95772],[45.10828,-12.95761],[45.10828,-12.95724],[45.10768,-12.95733],[45.10746,-12.95698],[45.10743,-12.95678],[45.10698,-12.95698],[45.10667,-12.95724],[45.10657,-12.95743],[45.10641,-12.95753],[45.10621,-12.95787],[45.10637,-12.95797],[45.10667,-12.95799],[45.10686,-12.95805],[45.10691,-12.95828],[45.10622,-12.95813],[45.10569,-12.95792],[45.10523,-12.95766],[45.10473,-12.95758],[45.10451,-12.95764],[45.10446,-12.95773],[45.10408,-12.958],[45.10404,-12.95814],[45.10407,-12.95846],[45.10388,-12.9586],[45.10375,-12.95886],[45.1038,-12.9591],[45.10362,-12.95947],[45.10334,-12.95945],[45.10315,-12.95962],[45.1031,-12.95977],[45.10268,-12.96012],[45.1026,-12.96026],[45.10209,-12.96052],[45.10179,-12.96071],[45.10165,-12.96095],[45.1012,-12.96127],[45.1011,-12.96143],[45.10077,-12.96174],[45.10067,-12.96202],[45.10078,-12.96225],[45.10076,-12.96246],[45.10053,-12.96275],[45.10045,-12.96294],[45.10042,-12.96326],[45.10022,-12.96369],[45.10016,-12.96399],[45.09992,-12.96428],[45.09994,-12.96443],[45.09961,-12.96447],[45.09931,-12.96438],[45.09873,-12.96427],[45.09761,-12.96428],[45.09709,-12.96457],[45.0965,-12.96484],[45.0963,-12.965],[45.09607,-12.96508],[45.09559,-12.96515],[45.09529,-12.96532],[45.09504,-12.96559],[45.0949,-12.96566],[45.0945,-12.96562],[45.09394,-12.96591],[45.09324,-12.96614],[45.09287,-12.96641],[45.09259,-12.96651],[45.09238,-12.96653],[45.09158,-12.9662],[45.09093,-12.9658],[45.0906,-12.96562],[45.09029,-12.96542],[45.0901,-12.96539],[45.08981,-12.96519],[45.08973,-12.96504],[45.08926,-12.96482],[45.08914,-12.96486],[45.08875,-12.96476],[45.08839,-12.9644],[45.08803,-12.96385],[45.08762,-12.9635],[45.08718,-12.96321],[45.08642,-12.96275],[45.08589,-12.96247],[45.08547,-12.96223],[45.08487,-12.96196],[45.08454,-12.96177],[45.08396,-12.96153],[45.08321,-12.9613],[45.08282,-12.96123],[45.08247,-12.96136],[45.08215,-12.96157],[45.08202,-12.9617],[45.08153,-12.96185],[45.08126,-12.96204],[45.08109,-12.96236],[45.08093,-12.96254],[45.08076,-12.96259],[45.08038,-12.96279],[45.07997,-12.96292],[45.07963,-12.96292],[45.07915,-12.96277],[45.07887,-12.96253],[45.07878,-12.96226],[45.07894,-12.96201],[45.07951,-12.96159],[45.07986,-12.96139],[45.08013,-12.96105],[45.08073,-12.96079],[45.08103,-12.96056],[45.0813,-12.96043],[45.08192,-12.96003],[45.08229,-12.95988],[45.08263,-12.9598],[45.08291,-12.95957],[45.08324,-12.95943],[45.08356,-12.95919],[45.08376,-12.95894],[45.08399,-12.95872],[45.08403,-12.95861],[45.08453,-12.95842],[45.08498,-12.95797],[45.08508,-12.95791],[45.08552,-12.95751],[45.08639,-12.95743],[45.08664,-12.95732],[45.08687,-12.95713],[45.08686,-12.95702],[45.08714,-12.95697],[45.08728,-12.95685],[45.08749,-12.9568],[45.08787,-12.95651],[45.08798,-12.95647],[45.08816,-12.95627],[45.08914,-12.95591],[45.0902,-12.95574],[45.09077,-12.95555],[45.09116,-12.95536],[45.09154,-12.95529],[45.09183,-12.95513],[45.09214,-12.95485],[45.0925,-12.95478],[45.09272,-12.95457],[45.09289,-12.95457],[45.09317,-12.95473],[45.09345,-12.95469],[45.09406,-12.95403],[45.09434,-12.95389],[45.09505,-12.9532],[45.09552,-12.95252],[45.09583,-12.95201],[45.09606,-12.95184],[45.09643,-12.95143],[45.0968,-12.95098],[45.09743,-12.95003],[45.09788,-12.94955],[45.09801,-12.94934],[45.09822,-12.94888],[45.09838,-12.94875],[45.09903,-12.94807],[45.09925,-12.94791],[45.09958,-12.94754],[45.09992,-12.94736],[45.10024,-12.9471],[45.10048,-12.94661],[45.10067,-12.94633],[45.10091,-12.9458],[45.10094,-12.94565],[45.10115,-12.94555],[45.10103,-12.94529],[45.10125,-12.94451],[45.10138,-12.94425],[45.10156,-12.94354],[45.10155,-12.94292],[45.10164,-12.94243],[45.10157,-12.94203],[45.10136,-12.94151],[45.10136,-12.94128],[45.10162,-12.94093],[45.10171,-12.94055],[45.10175,-12.94019],[45.10175,-12.93978],[45.1018,-12.93952],[45.10174,-12.93934],[45.10163,-12.93929],[45.10151,-12.93882],[45.1015,-12.93832],[45.10158,-12.9379],[45.10159,-12.93753],[45.1017,-12.93714],[45.10188,-12.93664],[45.10231,-12.93644],[45.10275,-12.93649],[45.10307,-12.9361],[45.10314,-12.9359],[45.10342,-12.93539],[45.10368,-12.93511],[45.10379,-12.93379],[45.10393,-12.93355],[45.10419,-12.93331],[45.10428,-12.93315],[45.1043,-12.93282],[45.10418,-12.93231],[45.1041,-12.93216],[45.10401,-12.93176],[45.10375,-12.9308],[45.10339,-12.93011],[45.10299,-12.92955],[45.10272,-12.92901],[45.10261,-12.92864],[45.10248,-12.92848],[45.10198,-12.92776],[45.10166,-12.92738],[45.10109,-12.92677],[45.10054,-12.92628],[45.10011,-12.926],[45.09919,-12.92549],[45.09829,-12.92501],[45.09792,-12.9249],[45.09763,-12.92512],[45.09695,-12.92501],[45.09676,-12.92496],[45.09648,-12.925],[45.09622,-12.92496],[45.096,-12.92498],[45.09572,-12.92512],[45.09534,-12.92538],[45.09521,-12.9258],[45.0951,-12.92604],[45.09497,-12.9262],[45.09473,-12.92665],[45.09422,-12.92697],[45.09401,-12.92719],[45.09377,-12.92722],[45.09309,-12.9272],[45.09292,-12.92728],[45.09274,-12.92753],[45.09251,-12.92762],[45.09213,-12.92761],[45.09193,-12.92785],[45.09151,-12.928],[45.0913,-12.92802],[45.09106,-12.92823],[45.09089,-12.92826],[45.09049,-12.92878],[45.0901,-12.92911],[45.08946,-12.92929],[45.08935,-12.92928],[45.08905,-12.92948],[45.08859,-12.92948],[45.08835,-12.92956],[45.08824,-12.92969],[45.08785,-12.92981],[45.08769,-12.92977],[45.08742,-12.92989],[45.08713,-12.92989],[45.08702,-12.92959],[45.08735,-12.92889],[45.08732,-12.92872],[45.08743,-12.9285],[45.08804,-12.92821],[45.08851,-12.92804],[45.08867,-12.92818],[45.08902,-12.92812],[45.08916,-12.92797],[45.08939,-12.92742],[45.08947,-12.92712],[45.0894,-12.9265],[45.08917,-12.92582],[45.08885,-12.9251],[45.08856,-12.92469],[45.0882,-12.92406],[45.08777,-12.92351],[45.08762,-12.92327],[45.08738,-12.92297],[45.08714,-12.92288],[45.08695,-12.92237],[45.0867,-12.92207],[45.08636,-12.92201],[45.08618,-12.92211],[45.08561,-12.922],[45.08524,-12.92226],[45.08498,-12.92214],[45.08432,-12.9222],[45.08399,-12.92208],[45.08385,-12.92212],[45.08344,-12.92208],[45.08329,-12.92191],[45.08324,-12.92147],[45.08302,-12.92105],[45.08289,-12.92103],[45.08289,-12.92085],[45.08275,-12.91999],[45.08264,-12.91961],[45.08236,-12.91893],[45.08217,-12.91816],[45.08204,-12.918],[45.08148,-12.91767],[45.0811,-12.91737],[45.08078,-12.917],[45.08069,-12.9168],[45.08094,-12.91658],[45.08107,-12.91614],[45.0809,-12.91561],[45.08098,-12.91537],[45.08076,-12.91491],[45.08062,-12.91428],[45.08029,-12.91348],[45.0799,-12.91312],[45.0792,-12.9128],[45.07917,-12.91257],[45.07934,-12.9123],[45.07931,-12.91186],[45.07914,-12.91139],[45.079,-12.91129],[45.0791,-12.91104],[45.0789,-12.90989],[45.0788,-12.90973],[45.07875,-12.90945],[45.07854,-12.90873],[45.07845,-12.90857],[45.07837,-12.90818],[45.07822,-12.90789],[45.07807,-12.90746],[45.07799,-12.90736],[45.07787,-12.90698],[45.07787,-12.90666],[45.07793,-12.90653],[45.07776,-12.90647],[45.07763,-12.90605],[45.07739,-12.90552],[45.07737,-12.90534],[45.07721,-12.90524],[45.07719,-12.90512],[45.07692,-12.90473],[45.07669,-12.90444],[45.07631,-12.90386],[45.07612,-12.9038],[45.07597,-12.90356],[45.07562,-12.90321],[45.07536,-12.90309],[45.07518,-12.90294],[45.0747,-12.90277],[45.07426,-12.90238],[45.07395,-12.90214],[45.07339,-12.90191],[45.07298,-12.90187],[45.07256,-12.90191],[45.07219,-12.90201],[45.07204,-12.90212],[45.07181,-12.90212],[45.07156,-12.90203],[45.07132,-12.90173],[45.07152,-12.90126],[45.07163,-12.90119],[45.07184,-12.9009],[45.07184,-12.90052],[45.07178,-12.90023],[45.07153,-12.89984],[45.07093,-12.89952],[45.0712,-12.89947],[45.07115,-12.89932],[45.07136,-12.89922],[45.07163,-12.89946],[45.07186,-12.89944],[45.07201,-12.8995],[45.07223,-12.89949],[45.0726,-12.89925],[45.07289,-12.89915],[45.07312,-12.89921],[45.07361,-12.89917],[45.07381,-12.89922],[45.07421,-12.89917],[45.07477,-12.89915],[45.07587,-12.8985],[45.07637,-12.89861],[45.07721,-12.89848],[45.07772,-12.89841],[45.07782,-12.89836],[45.07844,-12.89819],[45.079,-12.89854],[45.07922,-12.89861],[45.07968,-12.89886],[45.08033,-12.89895],[45.08039,-12.89886],[45.08128,-12.89891],[45.08186,-12.89877],[45.0822,-12.89879],[45.08245,-12.89865],[45.08276,-12.89862],[45.08293,-12.89854],[45.08325,-12.89853],[45.08345,-12.89834],[45.08361,-12.89843],[45.08395,-12.89822],[45.08406,-12.89821],[45.08455,-12.89798],[45.08483,-12.89781],[45.08582,-12.89779],[45.08606,-12.89782],[45.08648,-12.89795],[45.08672,-12.89799],[45.08697,-12.89809],[45.08724,-12.89829],[45.08755,-12.89833],[45.08796,-12.89844],[45.08837,-12.8984],[45.08883,-12.89827],[45.08907,-12.8983],[45.08945,-12.89825],[45.08975,-12.89835],[45.09005,-12.8983],[45.09045,-12.89843],[45.09064,-12.89841],[45.09126,-12.89824],[45.09204,-12.89793],[45.09256,-12.89788],[45.09298,-12.89807],[45.09342,-12.89811],[45.09395,-12.89798],[45.09402,-12.89813],[45.09459,-12.89855],[45.09479,-12.89863],[45.09529,-12.89857],[45.09563,-12.89866],[45.09603,-12.89867],[45.09666,-12.89853],[45.09696,-12.89843],[45.09734,-12.89843],[45.09792,-12.89857],[45.09887,-12.89868],[45.09895,-12.89856],[45.09917,-12.89861],[45.09921,-12.8987],[45.09965,-12.89908],[45.09936,-12.89934],[45.09927,-12.89983],[45.09935,-12.90013],[45.09956,-12.90047],[45.0998,-12.90114],[45.10003,-12.90151],[45.10009,-12.90148],[45.10065,-12.90192],[45.10091,-12.90207],[45.10139,-12.9024],[45.10156,-12.9026],[45.10219,-12.90308],[45.10247,-12.90338],[45.10265,-12.90376],[45.10282,-12.9043],[45.10279,-12.90465],[45.10269,-12.90488],[45.10239,-12.90521],[45.10225,-12.9053],[45.10268,-12.9054],[45.10275,-12.90554],[45.10275,-12.90589],[45.10247,-12.90691],[45.10232,-12.90719],[45.10202,-12.90748],[45.1018,-12.90752],[45.102,-12.90776],[45.10192,-12.90859],[45.10159,-12.90965],[45.10159,-12.91027],[45.10153,-12.91044],[45.10158,-12.91096],[45.10154,-12.91129],[45.1016,-12.91153],[45.10199,-12.91211],[45.10208,-12.9122],[45.10233,-12.91216],[45.10226,-12.91244],[45.10232,-12.91286],[45.10229,-12.91298],[45.10208,-12.91307],[45.10207,-12.91344],[45.10195,-12.91389],[45.10206,-12.91396],[45.10215,-12.91428],[45.10217,-12.915],[45.10227,-12.91633],[45.10235,-12.9167],[45.10245,-12.91771],[45.10234,-12.91788],[45.10271,-12.91861],[45.10279,-12.91881],[45.10311,-12.91884],[45.103,-12.91899],[45.1031,-12.91934],[45.10341,-12.92007],[45.10336,-12.92035],[45.10353,-12.92036],[45.10387,-12.92067],[45.10398,-12.9209],[45.10468,-12.92174],[45.1051,-12.92198],[45.10525,-12.922],[45.10553,-12.92192],[45.10566,-12.92227],[45.10576,-12.92236],[45.1058,-12.92262],[45.10567,-12.92284],[45.10563,-12.92302],[45.10568,-12.92321],[45.106,-12.9235],[45.10644,-12.92382],[45.10656,-12.92383],[45.1072,-12.92413],[45.10797,-12.92427],[45.10806,-12.92434],[45.10827,-12.92431],[45.10911,-12.92444],[45.10952,-12.92463],[45.10979,-12.92456],[45.11029,-12.92464],[45.11116,-12.92491],[45.11164,-12.92511],[45.11198,-12.92515],[45.11313,-12.92572],[45.11361,-12.9258],[45.11401,-12.9259],[45.1144,-12.92593],[45.11482,-12.92603],[45.11506,-12.92613],[45.11542,-12.92622],[45.11552,-12.92647],[45.11568,-12.92658],[45.11606,-12.92674],[45.11636,-12.92677],[45.11665,-12.92707],[45.11664,-12.92725],[45.11698,-12.92744],[45.11731,-12.92753],[45.11842,-12.92802],[45.11918,-12.92845],[45.12018,-12.92888],[45.12057,-12.92897],[45.12083,-12.92907],[45.12127,-12.92907],[45.12163,-12.92902],[45.12174,-12.92906],[45.12222,-12.92902],[45.12276,-12.92902],[45.12342,-12.92911],[45.12367,-12.92909],[45.12394,-12.92921],[45.12434,-12.92946],[45.12445,-12.92958],[45.12451,-12.92981],[45.12444,-12.93012],[45.12444,-12.93058],[45.12436,-12.93091],[45.1244,-12.93149],[45.12433,-12.9316],[45.12417,-12.93148],[45.12396,-12.93167],[45.12395,-12.93212],[45.12406,-12.93242],[45.12428,-12.93228],[45.12461,-12.9324],[45.12464,-12.93262],[45.125,-12.93307],[45.12519,-12.93339],[45.12536,-12.93332],[45.12565,-12.93343],[45.12583,-12.93359],[45.12627,-12.93359],[45.12652,-12.93367],[45.12673,-12.93363],[45.12706,-12.9337],[45.12753,-12.93415],[45.12765,-12.93423],[45.12839,-12.93453],[45.12871,-12.9347],[45.12892,-12.93488],[45.1297,-12.93532],[45.13015,-12.93552],[45.13063,-12.93569],[45.13091,-12.93585],[45.13097,-12.936],[45.13138,-12.93601],[45.13155,-12.93608],[45.13214,-12.93596],[45.13276,-12.93598],[45.13285,-12.93603],[45.13372,-12.93624],[45.13436,-12.93636],[45.13514,-12.9364],[45.1359,-12.93634],[45.13615,-12.9364],[45.13595,-12.93675],[45.13607,-12.93688],[45.1362,-12.93641],[45.13656,-12.93637],[45.13675,-12.93667],[45.13666,-12.93686],[45.13673,-12.93726],[45.13665,-12.93739],[45.13669,-12.93768],[45.1368,-12.93793],[45.13704,-12.93814],[45.13702,-12.93789],[45.13691,-12.93759],[45.13691,-12.93729],[45.13701,-12.93703],[45.13732,-12.93726],[45.1375,-12.93734],[45.13817,-12.93714],[45.13797,-12.93695],[45.13789,-12.93668],[45.13801,-12.9365],[45.13806,-12.93609],[45.13827,-12.93593],[45.13865,-12.93598],[45.13917,-12.93599],[45.13939,-12.93592],[45.13965,-12.93613],[45.14007,-12.93621],[45.14061,-12.93625],[45.14086,-12.93642],[45.14106,-12.93632],[45.1417,-12.93625],[45.14203,-12.93625],[45.14338,-12.93595],[45.14409,-12.93577],[45.14458,-12.9357],[45.14487,-12.93576],[45.14527,-12.93589],[45.14548,-12.9357],[45.14582,-12.93523],[45.14631,-12.9345],[45.14652,-12.9343],[45.14675,-12.93427],[45.147,-12.93442],[45.14722,-12.93423],[45.14754,-12.93387],[45.14789,-12.93376],[45.14809,-12.93346],[45.14834,-12.93325],[45.14872,-12.93309],[45.14878,-12.93323],[45.1492,-12.9336],[45.14915,-12.93318],[45.14942,-12.93312],[45.1494,-12.93293],[45.14966,-12.93252],[45.14984,-12.93244],[45.15017,-12.93241],[45.15002,-12.93223],[45.15039,-12.93168],[45.15064,-12.93166],[45.15063,-12.93151],[45.15098,-12.93122],[45.15114,-12.93095],[45.15153,-12.93062],[45.15122,-12.92993],[45.15127,-12.92963],[45.15122,-12.92952],[45.15137,-12.9294],[45.15137,-12.92892],[45.15121,-12.92877],[45.15118,-12.92863],[45.15141,-12.92796],[45.15141,-12.92777],[45.15164,-12.92752],[45.15171,-12.92735],[45.15174,-12.92699],[45.15184,-12.92681],[45.15233,-12.92635],[45.15285,-12.92618],[45.15307,-12.926],[45.15317,-12.92577],[45.15352,-12.92555],[45.15362,-12.92543],[45.15397,-12.92531],[45.15441,-12.92501],[45.15437,-12.92491],[45.15415,-12.92474],[45.15406,-12.92453],[45.15439,-12.92419],[45.15451,-12.92383],[45.15446,-12.92355],[45.15463,-12.92348],[45.15488,-12.92362],[45.15497,-12.92356],[45.1548,-12.92314],[45.15485,-12.92298],[45.15499,-12.92285],[45.15504,-12.92257],[45.15502,-12.92237],[45.15493,-12.92221],[45.15455,-12.92193],[45.15406,-12.92118],[45.15363,-12.92076],[45.15355,-12.92059],[45.15365,-12.9203],[45.15371,-12.91985],[45.15388,-12.91949],[45.15382,-12.9192],[45.15366,-12.91895],[45.15373,-12.91847],[45.15369,-12.91805],[45.15358,-12.91778],[45.15343,-12.91721],[45.15351,-12.91695],[45.15331,-12.91671],[45.15303,-12.91653],[45.1527,-12.91639],[45.15269,-12.91628],[45.15252,-12.91606],[45.15234,-12.91597],[45.15201,-12.9157],[45.1515,-12.91551],[45.15158,-12.91543],[45.1514,-12.91526],[45.15115,-12.91509],[45.15128,-12.91496],[45.15112,-12.91486],[45.15095,-12.91485],[45.15098,-12.91452],[45.15089,-12.91436],[45.15065,-12.91451],[45.15055,-12.91426],[45.15024,-12.91394],[45.15023,-12.91375],[45.15008,-12.91357],[45.1502,-12.91341],[45.14996,-12.91301],[45.1499,-12.91262],[45.15004,-12.91255],[45.14985,-12.91231],[45.14982,-12.91184],[45.14968,-12.91188],[45.14954,-12.91212],[45.14942,-12.91203],[45.14934,-12.91184],[45.14906,-12.91176],[45.14914,-12.91163],[45.14876,-12.91138],[45.14884,-12.91117],[45.14877,-12.91093],[45.14852,-12.91065],[45.14857,-12.91028],[45.14847,-12.91003],[45.14865,-12.90989],[45.14887,-12.90956],[45.14899,-12.90911],[45.14886,-12.909],[45.14888,-12.90849],[45.14898,-12.90828],[45.14887,-12.90806],[45.14904,-12.9079],[45.14875,-12.90748],[45.14847,-12.90755],[45.14779,-12.90748],[45.14764,-12.90758],[45.14762,-12.9077],[45.14735,-12.90772],[45.14703,-12.90757],[45.14667,-12.90735],[45.14609,-12.90692],[45.14582,-12.90695],[45.14554,-12.9065],[45.14533,-12.906],[45.1453,-12.90564],[45.14522,-12.90555],[45.145,-12.90551],[45.14505,-12.90534],[45.14474,-12.90507],[45.14464,-12.90507],[45.14434,-12.90491],[45.14412,-12.90469],[45.14408,-12.90444],[45.14422,-12.90425],[45.14426,-12.90408],[45.14413,-12.90389],[45.14421,-12.90356],[45.14434,-12.90334],[45.14446,-12.90299],[45.14457,-12.90285],[45.1449,-12.90214],[45.14501,-12.90198],[45.14544,-12.90184],[45.14551,-12.90154],[45.14552,-12.90123],[45.14567,-12.90097],[45.1455,-12.90076],[45.14549,-12.90048],[45.14541,-12.90033],[45.14518,-12.90018],[45.14494,-12.90037],[45.14484,-12.90037],[45.14456,-12.89993],[45.14453,-12.89969],[45.14435,-12.89936],[45.14407,-12.89912],[45.14397,-12.89863],[45.1436,-12.89823],[45.14322,-12.89759],[45.14279,-12.89705],[45.14263,-12.89691],[45.14251,-12.89648],[45.1425,-12.89625],[45.14229,-12.89631],[45.14189,-12.89604],[45.14146,-12.89539],[45.14127,-12.89521],[45.14098,-12.89514],[45.14086,-12.89496],[45.14086,-12.89478],[45.14052,-12.89472],[45.14059,-12.89514],[45.14059,-12.89556],[45.14064,-12.89579],[45.14047,-12.89612],[45.14052,-12.89638],[45.14067,-12.89665],[45.14069,-12.89683],[45.14088,-12.89709],[45.14096,-12.89748],[45.14107,-12.89772],[45.14136,-12.89812],[45.14166,-12.89837],[45.14219,-12.89866],[45.14205,-12.89877],[45.1416,-12.89862],[45.14126,-12.89846],[45.14103,-12.89824],[45.14081,-12.89813],[45.14053,-12.89766],[45.14045,-12.89736],[45.14041,-12.89681],[45.14031,-12.89657],[45.14028,-12.89587],[45.14031,-12.89525],[45.14016,-12.89484],[45.1398,-12.89452],[45.13956,-12.89406],[45.13931,-12.89379],[45.13955,-12.89366],[45.13976,-12.89369],[45.14006,-12.89384],[45.14018,-12.89398],[45.14037,-12.89401],[45.14074,-12.89386],[45.14074,-12.89378],[45.14003,-12.89347],[45.13978,-12.89326],[45.13939,-12.89284],[45.13934,-12.89272],[45.13878,-12.89216],[45.1385,-12.892],[45.13827,-12.89137],[45.13802,-12.89109],[45.13806,-12.89099],[45.13836,-12.89091],[45.1385,-12.89077],[45.13811,-12.89073],[45.13794,-12.8906],[45.13765,-12.89059],[45.13744,-12.89032],[45.13717,-12.89031],[45.13697,-12.89024],[45.13679,-12.88985],[45.13652,-12.88964],[45.13623,-12.8896],[45.13615,-12.88965],[45.13585,-12.88965],[45.1356,-12.88952],[45.13529,-12.88927],[45.13493,-12.88917],[45.13427,-12.88919],[45.13408,-12.88909],[45.13385,-12.8891],[45.13359,-12.88892],[45.1333,-12.88878],[45.13288,-12.88866],[45.13265,-12.88885],[45.13241,-12.88891],[45.1321,-12.88882],[45.1318,-12.88804],[45.13171,-12.8879],[45.13152,-12.88728],[45.13135,-12.88704],[45.13115,-12.8865],[45.13079,-12.88596],[45.13029,-12.8851],[45.1303,-12.885],[45.13009,-12.88473],[45.13012,-12.88448],[45.13031,-12.88459],[45.1306,-12.88463],[45.13126,-12.88439],[45.1316,-12.88442],[45.13151,-12.88428],[45.13103,-12.88432],[45.13072,-12.88448],[45.13056,-12.88437],[45.1302,-12.88427],[45.1298,-12.88439],[45.12934,-12.88411],[45.12899,-12.88397],[45.12889,-12.88401],[45.12865,-12.88393],[45.12861,-12.88381],[45.12842,-12.88368],[45.12824,-12.88339],[45.1281,-12.88338],[45.12785,-12.88311],[45.12782,-12.88299],[45.12757,-12.88272],[45.12722,-12.88253],[45.12707,-12.88233],[45.12693,-12.88229],[45.12653,-12.88187],[45.12596,-12.88188],[45.12571,-12.88196],[45.12529,-12.88188],[45.12483,-12.88185],[45.12455,-12.88196],[45.12429,-12.882],[45.12405,-12.88185],[45.1237,-12.88181],[45.12363,-12.88168],[45.12341,-12.8815],[45.12329,-12.88114],[45.12325,-12.8809],[45.12308,-12.88055],[45.12281,-12.88027],[45.1224,-12.87997],[45.122,-12.87992],[45.12182,-12.87967],[45.12156,-12.87955],[45.12098,-12.87849],[45.12071,-12.87817],[45.12047,-12.87794],[45.12038,-12.87773],[45.12047,-12.87759],[45.12026,-12.87723],[45.1202,-12.87703],[45.11955,-12.87702],[45.1192,-12.87704],[45.11905,-12.87699],[45.11877,-12.87677],[45.11863,-12.87611],[45.11846,-12.87585],[45.11834,-12.87538],[45.11806,-12.87496],[45.11785,-12.87469],[45.1176,-12.87415],[45.11747,-12.87402],[45.11735,-12.87378],[45.11735,-12.87361],[45.11713,-12.87322],[45.11678,-12.8732],[45.1165,-12.8729],[45.11649,-12.87252],[45.11634,-12.87219],[45.11594,-12.87162],[45.11575,-12.87145],[45.11574,-12.87126],[45.11563,-12.87111],[45.11559,-12.87057],[45.11551,-12.87036],[45.11515,-12.86992],[45.11503,-12.86989],[45.11491,-12.86948],[45.11468,-12.86923],[45.11455,-12.86852],[45.1144,-12.86818],[45.11414,-12.8677],[45.11407,-12.8675],[45.1141,-12.86736],[45.11387,-12.86699],[45.11375,-12.86662],[45.11342,-12.86612],[45.11328,-12.86585],[45.11299,-12.86549],[45.11277,-12.86517],[45.11256,-12.865],[45.11232,-12.86471],[45.11184,-12.86421],[45.11121,-12.86364],[45.11072,-12.8636],[45.11028,-12.86368],[45.10974,-12.86381],[45.1094,-12.86379],[45.10907,-12.86368],[45.10836,-12.86325],[45.10819,-12.8631],[45.10789,-12.8631],[45.10759,-12.86318],[45.10717,-12.86335],[45.10693,-12.86329],[45.10623,-12.86333],[45.10589,-12.86315],[45.1052,-12.86325],[45.10479,-12.86314],[45.10466,-12.86318],[45.1043,-12.86316],[45.10427,-12.86291],[45.10417,-12.86277],[45.10388,-12.86247],[45.10376,-12.86226],[45.1031,-12.86137],[45.10275,-12.86116],[45.10248,-12.86107],[45.10208,-12.86105],[45.10159,-12.86093],[45.10098,-12.86073],[45.10063,-12.86075],[45.10042,-12.86059],[45.10022,-12.86013],[45.09997,-12.85987],[45.09996,-12.85959],[45.09987,-12.85929],[45.09952,-12.85865],[45.09938,-12.85848],[45.09922,-12.85817],[45.09895,-12.8578],[45.09877,-12.85765],[45.09853,-12.85761],[45.09781,-12.85664],[45.09756,-12.85614],[45.09724,-12.85568],[45.09663,-12.85535],[45.09656,-12.85523],[45.09607,-12.85498],[45.09573,-12.85458],[45.09505,-12.85369],[45.09463,-12.85354],[45.09389,-12.85353],[45.09347,-12.85342],[45.09322,-12.85329],[45.09314,-12.85317],[45.09294,-12.8531],[45.09277,-12.85252],[45.09262,-12.85229],[45.09253,-12.85159],[45.09279,-12.85143],[45.09321,-12.85143],[45.09339,-12.85129],[45.09383,-12.8507],[45.09394,-12.85047],[45.09443,-12.8509],[45.09482,-12.851],[45.09496,-12.85118],[45.09526,-12.85129],[45.09555,-12.85123],[45.09569,-12.8511],[45.096,-12.8513],[45.09618,-12.85137],[45.09634,-12.8513],[45.09736,-12.85063],[45.09811,-12.85003],[45.09851,-12.84956],[45.09873,-12.84951],[45.09907,-12.8491],[45.09963,-12.84847],[45.10002,-12.84797],[45.10024,-12.84782],[45.10047,-12.84744],[45.1008,-12.847],[45.10118,-12.84641],[45.10144,-12.8461],[45.10175,-12.84547],[45.10184,-12.84537],[45.1018,-12.84513],[45.10188,-12.8446],[45.10184,-12.84438],[45.10169,-12.84431],[45.10197,-12.84407],[45.10216,-12.84399],[45.10253,-12.84352],[45.10268,-12.84353],[45.10298,-12.84368],[45.10326,-12.84369],[45.10426,-12.84417],[45.10504,-12.84449],[45.10571,-12.84461],[45.10612,-12.84477],[45.10634,-12.84473],[45.10698,-12.84431],[45.10735,-12.84398],[45.1078,-12.84388],[45.10825,-12.84367],[45.10848,-12.84368],[45.10895,-12.84392],[45.10914,-12.84395],[45.10938,-12.84408],[45.10958,-12.84406],[45.1102,-12.84426],[45.11077,-12.84419],[45.11122,-12.84432],[45.11145,-12.84427],[45.11178,-12.84408],[45.11218,-12.84407],[45.11264,-12.84414],[45.113,-12.84424],[45.11347,-12.84405],[45.11371,-12.84401],[45.11467,-12.84403],[45.11527,-12.84394],[45.11519,-12.8443],[45.11536,-12.84435],[45.1154,-12.84413],[45.11572,-12.84399],[45.11601,-12.84375],[45.11635,-12.8437],[45.11659,-12.84324],[45.11667,-12.84291],[45.11664,-12.8427],[45.11671,-12.84248],[45.11694,-12.84211],[45.11726,-12.84176],[45.11746,-12.84165],[45.11783,-12.84155],[45.11817,-12.84121],[45.11843,-12.84106],[45.11898,-12.84097],[45.11912,-12.84085],[45.11922,-12.84066],[45.11923,-12.84043],[45.11948,-12.84001],[45.11969,-12.83995],[45.11968,-12.84014],[45.11989,-12.84018],[45.11998,-12.83997],[45.12014,-12.83989],[45.12039,-12.83993],[45.12054,-12.84005],[45.12061,-12.83981],[45.12073,-12.83967],[45.12126,-12.83966],[45.12086,-12.83951],[45.12042,-12.83955],[45.12021,-12.83952],[45.11995,-12.83937],[45.11959,-12.83933],[45.11923,-12.83947],[45.1191,-12.83944],[45.11908,-12.83929],[45.11873,-12.83924],[45.11842,-12.83914],[45.11803,-12.83917],[45.11795,-12.83913],[45.11754,-12.83915],[45.11746,-12.83909],[45.11696,-12.83904],[45.11649,-12.83895],[45.11575,-12.83874],[45.11555,-12.83861],[45.1152,-12.83822],[45.11488,-12.83808],[45.11434,-12.83808],[45.11394,-12.83799],[45.11312,-12.83734],[45.11273,-12.83721],[45.11256,-12.83702],[45.11251,-12.83675],[45.1121,-12.83659],[45.11186,-12.83664],[45.11154,-12.83663],[45.1112,-12.8367],[45.11061,-12.83662],[45.11026,-12.8367],[45.10982,-12.83659],[45.10925,-12.83657],[45.10884,-12.83646],[45.10827,-12.83615],[45.108,-12.83611],[45.10723,-12.83636],[45.10698,-12.83638],[45.10692,-12.83632],[45.1063,-12.83617],[45.10611,-12.8361],[45.10539,-12.83565],[45.10514,-12.83553],[45.10475,-12.83556],[45.10407,-12.8354],[45.10368,-12.83544],[45.10353,-12.83551],[45.10294,-12.83556],[45.10265,-12.8354],[45.1025,-12.83525],[45.10219,-12.83504],[45.10162,-12.83479],[45.10141,-12.83475],[45.10124,-12.83456],[45.10096,-12.83416],[45.10078,-12.83374],[45.10084,-12.83332],[45.10106,-12.83267],[45.10125,-12.8318],[45.10127,-12.83148],[45.10142,-12.83112],[45.10143,-12.83051],[45.10154,-12.83025],[45.10173,-12.83001],[45.10212,-12.82979],[45.10225,-12.82963],[45.10235,-12.82935],[45.10247,-12.82877],[45.10245,-12.82831],[45.10249,-12.82805],[45.10264,-12.82773],[45.10262,-12.82722],[45.10273,-12.82681],[45.10273,-12.82661],[45.10285,-12.82596],[45.10293,-12.82576],[45.10319,-12.82532],[45.10339,-12.82512],[45.10383,-12.82489],[45.10401,-12.82452],[45.10394,-12.82441],[45.10392,-12.82387],[45.10396,-12.82377],[45.10395,-12.82339],[45.10396,-12.82274],[45.10386,-12.8222],[45.10368,-12.82183],[45.10325,-12.82145],[45.10344,-12.82108],[45.10326,-12.82094],[45.10324,-12.82071],[45.10337,-12.82051],[45.1039,-12.82051],[45.10412,-12.82048],[45.10502,-12.81999],[45.10531,-12.8198],[45.10553,-12.81984],[45.10577,-12.8197],[45.10631,-12.81967],[45.10643,-12.81956],[45.10603,-12.81947],[45.10623,-12.81893],[45.10627,-12.81867],[45.10628,-12.81794],[45.10625,-12.81704],[45.1061,-12.81618],[45.10592,-12.81539],[45.10588,-12.81498],[45.10581,-12.81474],[45.10565,-12.81369],[45.10587,-12.81378],[45.10604,-12.81377],[45.10591,-12.81352],[45.10573,-12.81344],[45.1053,-12.81365],[45.10511,-12.81365],[45.10506,-12.81337],[45.1049,-12.8129],[45.10475,-12.81273],[45.1047,-12.81255],[45.10427,-12.81186],[45.104,-12.8116],[45.10384,-12.81128],[45.10319,-12.81066],[45.10301,-12.81055],[45.10266,-12.81056],[45.10248,-12.81064],[45.10235,-12.81077],[45.10202,-12.81075],[45.1019,-12.81069],[45.10154,-12.8109],[45.10143,-12.81076],[45.10161,-12.81063],[45.10146,-12.81001],[45.10136,-12.80924],[45.10107,-12.8089],[45.10076,-12.80867],[45.10078,-12.80838],[45.10073,-12.80822],[45.10047,-12.80792],[45.10024,-12.80786],[45.10015,-12.80771],[45.09994,-12.80755],[45.09963,-12.80742],[45.09959,-12.80708],[45.09974,-12.80699],[45.09997,-12.80706],[45.10016,-12.80679],[45.10026,-12.80645],[45.10037,-12.80578],[45.10022,-12.80529],[45.10021,-12.80498],[45.10001,-12.80456],[45.09964,-12.80441],[45.09956,-12.80431],[45.09956,-12.80395],[45.09951,-12.80372],[45.09936,-12.80371],[45.09926,-12.80354],[45.09925,-12.80338],[45.09946,-12.80299],[45.09953,-12.80266],[45.09963,-12.80266],[45.09977,-12.8024],[45.09984,-12.80194]]],[[[45.27135,-12.79331],[45.27126,-12.79317],[45.27095,-12.79294],[45.27061,-12.79275],[45.27033,-12.79264],[45.27021,-12.79249],[45.26976,-12.79229],[45.26938,-12.79217],[45.26863,-12.79165],[45.26833,-12.79139],[45.26804,-12.791],[45.26788,-12.79065],[45.26754,-12.79048],[45.26726,-12.79049],[45.26763,-12.79019],[45.2678,-12.78996],[45.26767,-12.78983],[45.2667,-12.78938],[45.26566,-12.78886],[45.26554,-12.78892],[45.26537,-12.78886],[45.26505,-12.78863],[45.26471,-12.78845],[45.2645,-12.78822],[45.26398,-12.78794],[45.26373,-12.78767],[45.2636,-12.78732],[45.26293,-12.78694],[45.26266,-12.78704],[45.2622,-12.78742],[45.26196,-12.78757],[45.26181,-12.78758],[45.26153,-12.78789],[45.26121,-12.78787],[45.2611,-12.78796],[45.26074,-12.78801],[45.26022,-12.78779],[45.26021,-12.78761],[45.2603,-12.78735],[45.26026,-12.78727],[45.26037,-12.78663],[45.26031,-12.78641],[45.26068,-12.78636],[45.26062,-12.78598],[45.26047,-12.78563],[45.25927,-12.78477],[45.25828,-12.78401],[45.25799,-12.78398],[45.25748,-12.78385],[45.25725,-12.78391],[45.25704,-12.78388],[45.25664,-12.78403],[45.25645,-12.78399],[45.25629,-12.7838],[45.25612,-12.7838],[45.25565,-12.7837],[45.25559,-12.78377],[45.25499,-12.78338],[45.25491,-12.78321],[45.25459,-12.78317],[45.25444,-12.783],[45.25426,-12.78333],[45.25418,-12.7833],[45.2543,-12.78304],[45.25422,-12.78293],[45.25389,-12.78303],[45.25385,-12.78291],[45.25425,-12.78278],[45.25436,-12.7819],[45.25469,-12.78193],[45.25475,-12.78181],[45.25443,-12.7814],[45.25451,-12.78111],[45.25496,-12.78075],[45.25498,-12.78063],[45.25577,-12.78036],[45.25607,-12.78034],[45.25652,-12.78039],[45.25665,-12.7806],[45.25686,-12.78081],[45.25704,-12.78084],[45.25732,-12.78138],[45.25753,-12.78152],[45.25762,-12.78171],[45.2579,-12.78199],[45.25808,-12.78206],[45.25824,-12.78261],[45.25845,-12.78367],[45.25857,-12.78406],[45.25947,-12.7847],[45.2595,-12.78439],[45.25985,-12.78432],[45.25995,-12.78458],[45.26024,-12.78484],[45.26079,-12.78513],[45.26083,-12.78504],[45.26113,-12.78521],[45.26086,-12.78563],[45.26127,-12.78587],[45.26181,-12.7861],[45.26243,-12.78644],[45.26277,-12.78667],[45.26339,-12.78702],[45.26384,-12.78735],[45.26403,-12.78744],[45.26438,-12.78728],[45.26466,-12.78731],[45.2651,-12.78764],[45.26522,-12.78801],[45.26522,-12.7882],[45.26549,-12.78847],[45.26601,-12.78887],[45.26723,-12.78946],[45.26743,-12.7895],[45.26771,-12.78939],[45.26789,-12.78937],[45.26808,-12.78945],[45.26815,-12.78928],[45.26815,-12.78822],[45.26808,-12.78727],[45.26809,-12.78698],[45.26829,-12.78667],[45.26864,-12.78651],[45.26879,-12.78638],[45.26947,-12.78624],[45.26994,-12.78621],[45.27027,-12.786],[45.27084,-12.78602],[45.27124,-12.78598],[45.27141,-12.78589],[45.2718,-12.78587],[45.27173,-12.78574],[45.27064,-12.7854],[45.27058,-12.78532],[45.27063,-12.78494],[45.27074,-12.78458],[45.27105,-12.78458],[45.27159,-12.78464],[45.27168,-12.78442],[45.27145,-12.78418],[45.27131,-12.78344],[45.27111,-12.78321],[45.27133,-12.78295],[45.27155,-12.78299],[45.2716,-12.78274],[45.27176,-12.7825],[45.27194,-12.78256],[45.27209,-12.78244],[45.27211,-12.7822],[45.27224,-12.78217],[45.27233,-12.78198],[45.27251,-12.78192],[45.27271,-12.78157],[45.27292,-12.78106],[45.27323,-12.78046],[45.27324,-12.78033],[45.27347,-12.7799],[45.27377,-12.77954],[45.27396,-12.77923],[45.27406,-12.77885],[45.27417,-12.77875],[45.27418,-12.77858],[45.27439,-12.77828],[45.27441,-12.77806],[45.2745,-12.77793],[45.27445,-12.7774],[45.27455,-12.77729],[45.27437,-12.77699],[45.27431,-12.77681],[45.27443,-12.77645],[45.27469,-12.77603],[45.27478,-12.77578],[45.27483,-12.77545],[45.27507,-12.77522],[45.27527,-12.77526],[45.27548,-12.77518],[45.27556,-12.77494],[45.27548,-12.77471],[45.27572,-12.77441],[45.27597,-12.77428],[45.27635,-12.77425],[45.27662,-12.77411],[45.27689,-12.77376],[45.27701,-12.77348],[45.27701,-12.77317],[45.27696,-12.77301],[45.27664,-12.77266],[45.27659,-12.77272],[45.27536,-12.77135],[45.27546,-12.77119],[45.27582,-12.77086],[45.27589,-12.77073],[45.27631,-12.77028],[45.277,-12.76962],[45.27743,-12.76928],[45.27784,-12.76875],[45.27807,-12.76852],[45.27832,-12.76813],[45.27869,-12.76767],[45.27878,-12.76745],[45.27907,-12.76705],[45.27946,-12.76658],[45.27998,-12.76613],[45.2803,-12.76583],[45.28061,-12.76535],[45.28102,-12.76489],[45.28156,-12.76393],[45.28186,-12.76347],[45.2825,-12.76241],[45.2826,-12.76216],[45.28285,-12.76178],[45.28308,-12.7616],[45.2834,-12.76122],[45.28356,-12.76086],[45.2838,-12.76066],[45.28403,-12.76024],[45.28419,-12.75958],[45.28419,-12.75931],[45.28407,-12.75908],[45.28433,-12.75885],[45.28464,-12.75883],[45.28525,-12.7593],[45.286,-12.75982],[45.286,-12.75996],[45.28615,-12.76031],[45.28646,-12.76086],[45.28647,-12.76101],[45.28662,-12.76161],[45.28684,-12.76217],[45.28713,-12.76266],[45.28731,-12.76304],[45.28762,-12.76339],[45.28831,-12.76381],[45.28879,-12.76424],[45.28918,-12.76446],[45.28923,-12.76508],[45.28947,-12.76554],[45.28967,-12.76566],[45.29001,-12.76574],[45.29023,-12.76575],[45.29034,-12.76599],[45.29061,-12.76628],[45.29098,-12.76647],[45.29109,-12.76665],[45.29168,-12.76713],[45.29203,-12.76733],[45.29203,-12.76743],[45.29226,-12.7675],[45.29248,-12.76772],[45.29287,-12.768],[45.29294,-12.76835],[45.29309,-12.76859],[45.29315,-12.76885],[45.2934,-12.76908],[45.29349,-12.76937],[45.29345,-12.76945],[45.29347,-12.76993],[45.2936,-12.77046],[45.29359,-12.77067],[45.29369,-12.77084],[45.29371,-12.77116],[45.29385,-12.77126],[45.29381,-12.77158],[45.29384,-12.77198],[45.29383,-12.77237],[45.29375,-12.77295],[45.29385,-12.77315],[45.29376,-12.77329],[45.29376,-12.7737],[45.29381,-12.77389],[45.29382,-12.77497],[45.29385,-12.77537],[45.29394,-12.77574],[45.29418,-12.77571],[45.29477,-12.77627],[45.29493,-12.77628],[45.29527,-12.77653],[45.29538,-12.77668],[45.29568,-12.7768],[45.2958,-12.7767],[45.29599,-12.77674],[45.29622,-12.7769],[45.29649,-12.77701],[45.29665,-12.77695],[45.29683,-12.77704],[45.29706,-12.77781],[45.29717,-12.77807],[45.29737,-12.77826],[45.29735,-12.77844],[45.29751,-12.77855],[45.29768,-12.77877],[45.29772,-12.77895],[45.29788,-12.77905],[45.29795,-12.77923],[45.29791,-12.77951],[45.29783,-12.77955],[45.29791,-12.78041],[45.29788,-12.78062],[45.29743,-12.78035],[45.2969,-12.78014],[45.29643,-12.78004],[45.29608,-12.78007],[45.29573,-12.78032],[45.29556,-12.78068],[45.29551,-12.78096],[45.29554,-12.78165],[45.29577,-12.78233],[45.29599,-12.78257],[45.29636,-12.78287],[45.29669,-12.78305],[45.29706,-12.78315],[45.29751,-12.78315],[45.29775,-12.78305],[45.29799,-12.78283],[45.29848,-12.78254],[45.29864,-12.78216],[45.29849,-12.78178],[45.29874,-12.78173],[45.29901,-12.78181],[45.29914,-12.78191],[45.29942,-12.78234],[45.29944,-12.78252],[45.29972,-12.78291],[45.29972,-12.78328],[45.2998,-12.78367],[45.29988,-12.78381],[45.29999,-12.78423],[45.29999,-12.78449],[45.29989,-12.78503],[45.29955,-12.78535],[45.29916,-12.7852],[45.29899,-12.78504],[45.29885,-12.78455],[45.29861,-12.78411],[45.29848,-12.784],[45.2983,-12.78357],[45.29804,-12.78342],[45.29765,-12.7834],[45.29734,-12.78346],[45.29704,-12.7836],[45.29641,-12.7841],[45.29597,-12.78456],[45.29586,-12.78481],[45.29554,-12.78538],[45.29546,-12.78565],[45.29548,-12.78593],[45.29571,-12.78607],[45.29592,-12.78633],[45.29624,-12.78638],[45.29619,-12.78652],[45.29595,-12.78653],[45.29542,-12.78645],[45.29478,-12.78709],[45.29443,-12.7873],[45.29418,-12.78765],[45.29428,-12.78785],[45.29431,-12.78806],[45.29413,-12.78827],[45.2942,-12.78871],[45.29446,-12.78935],[45.29468,-12.78952],[45.29461,-12.78966],[45.29463,-12.78986],[45.29477,-12.79],[45.29482,-12.79017],[45.29523,-12.79029],[45.29567,-12.79038],[45.29604,-12.79083],[45.29602,-12.79107],[45.29576,-12.79155],[45.29535,-12.79183],[45.29481,-12.79199],[45.29474,-12.79223],[45.29473,-12.79255],[45.29479,-12.79293],[45.29499,-12.79325],[45.29528,-12.79356],[45.29551,-12.79365],[45.29588,-12.79361],[45.29652,-12.79377],[45.29675,-12.7936],[45.29701,-12.79375],[45.29708,-12.79399],[45.2971,-12.79448],[45.29705,-12.79463],[45.29682,-12.79481],[45.29678,-12.79526],[45.29655,-12.79571],[45.29618,-12.79617],[45.29574,-12.79663],[45.2953,-12.79684],[45.29463,-12.79726],[45.29461,-12.7977],[45.29422,-12.79818],[45.29391,-12.79837],[45.2936,-12.79873],[45.2933,-12.79892],[45.29309,-12.79897],[45.29292,-12.79913],[45.29284,-12.79933],[45.29261,-12.79927],[45.29233,-12.79953],[45.29168,-12.7995],[45.29157,-12.79929],[45.29133,-12.79928],[45.29091,-12.79936],[45.29067,-12.79935],[45.29047,-12.79941],[45.2898,-12.79935],[45.28945,-12.79926],[45.28891,-12.79928],[45.28852,-12.79923],[45.28809,-12.79928],[45.28796,-12.79918],[45.28758,-12.79925],[45.28717,-12.79952],[45.28697,-12.79972],[45.2868,-12.79996],[45.28671,-12.80024],[45.28637,-12.80094],[45.28606,-12.80131],[45.28589,-12.80144],[45.28568,-12.80185],[45.28542,-12.80216],[45.2852,-12.80262],[45.28502,-12.80283],[45.28487,-12.80316],[45.28465,-12.80376],[45.28453,-12.80429],[45.28447,-12.80491],[45.28449,-12.80535],[45.28445,-12.80575],[45.2844,-12.80677],[45.28428,-12.80783],[45.28428,-12.80857],[45.28422,-12.80938],[45.28429,-12.81008],[45.28431,-12.8109],[45.28438,-12.81124],[45.28452,-12.81155],[45.28511,-12.81253],[45.28627,-12.81447],[45.28664,-12.81514],[45.28772,-12.81688],[45.2878,-12.81705],[45.28765,-12.81726],[45.28649,-12.81795],[45.28629,-12.81799],[45.28609,-12.81779],[45.28611,-12.81756],[45.28559,-12.81668],[45.28551,-12.81668],[45.28539,-12.81633],[45.28444,-12.81475],[45.28424,-12.81436],[45.28382,-12.81369],[45.28341,-12.81365],[45.28304,-12.81356],[45.28272,-12.81335],[45.28199,-12.81325],[45.28119,-12.81339],[45.28101,-12.81329],[45.28081,-12.81306],[45.28017,-12.81269],[45.27995,-12.81246],[45.27969,-12.81209],[45.27944,-12.81166],[45.27931,-12.81151],[45.27918,-12.8111],[45.27917,-12.81064],[45.27902,-12.8099],[45.27898,-12.80959],[45.27904,-12.80895],[45.2792,-12.80846],[45.27919,-12.80825],[45.27906,-12.8077],[45.27907,-12.80704],[45.27895,-12.80676],[45.27868,-12.80625],[45.27857,-12.80582],[45.27865,-12.80553],[45.27869,-12.80494],[45.27805,-12.80391],[45.27721,-12.80245],[45.27682,-12.80184],[45.27663,-12.80149],[45.27665,-12.80141],[45.27618,-12.80104],[45.27534,-12.80045],[45.27374,-12.79945],[45.27361,-12.79934],[45.27346,-12.79908],[45.2734,-12.7987],[45.27311,-12.79811],[45.27307,-12.79783],[45.27279,-12.7968],[45.27277,-12.79652],[45.27268,-12.79624],[45.27251,-12.79602],[45.27249,-12.79574],[45.27228,-12.79553],[45.27215,-12.79517],[45.27209,-12.7948],[45.27213,-12.79441],[45.27206,-12.79414],[45.2718,-12.79384],[45.27145,-12.79351],[45.27135,-12.79331]]],[[[45.23781,-12.80976],[45.23784,-12.81009],[45.23791,-12.8102],[45.23825,-12.81031],[45.23854,-12.81028],[45.23868,-12.81015],[45.23863,-12.8099],[45.2389,-12.80988],[45.239,-12.80993],[45.23925,-12.81034],[45.23935,-12.81042],[45.23992,-12.81065],[45.23994,-12.81108],[45.23986,-12.81121],[45.23988,-12.81136],[45.24012,-12.81163],[45.24027,-12.81203],[45.23989,-12.81246],[45.2398,-12.81264],[45.23986,-12.81292],[45.23976,-12.81333],[45.23969,-12.81343],[45.23951,-12.81346],[45.23939,-12.81365],[45.23943,-12.81394],[45.23939,-12.81416],[45.23921,-12.81434],[45.23887,-12.81423],[45.23864,-12.81402],[45.23843,-12.81399],[45.23815,-12.81414],[45.23788,-12.81449],[45.23802,-12.81484],[45.23791,-12.8149],[45.2378,-12.81474],[45.23751,-12.81483],[45.23727,-12.81519],[45.23704,-12.81531],[45.23705,-12.81541],[45.23668,-12.81561],[45.23659,-12.81572],[45.2365,-12.81632],[45.23621,-12.81623],[45.23611,-12.81601],[45.23593,-12.81579],[45.23553,-12.8157],[45.23536,-12.81582],[45.23519,-12.81578],[45.23471,-12.81607],[45.23453,-12.81622],[45.23429,-12.81653],[45.23422,-12.81668],[45.23408,-12.81676],[45.23373,-12.81681],[45.23358,-12.8167],[45.23311,-12.81676],[45.23293,-12.81684],[45.23282,-12.81675],[45.23293,-12.81653],[45.23301,-12.81614],[45.23297,-12.81579],[45.23268,-12.81523],[45.23266,-12.8148],[45.2326,-12.81469],[45.23264,-12.81446],[45.2325,-12.8142],[45.23228,-12.814],[45.23177,-12.81379],[45.23148,-12.81379],[45.23114,-12.81392],[45.23106,-12.814],[45.23078,-12.81393],[45.23064,-12.81359],[45.23066,-12.81329],[45.23092,-12.81313],[45.23125,-12.81254],[45.23125,-12.81241],[45.23154,-12.81203],[45.23179,-12.81183],[45.23205,-12.81148],[45.2321,-12.81133],[45.23208,-12.81057],[45.23201,-12.8104],[45.23175,-12.81001],[45.23165,-12.80994],[45.23181,-12.80971],[45.23176,-12.80945],[45.23178,-12.80919],[45.23165,-12.80904],[45.23164,-12.80881],[45.23143,-12.80857],[45.23113,-12.80847],[45.23105,-12.80819],[45.23107,-12.80808],[45.23097,-12.80771],[45.23102,-12.80753],[45.23115,-12.80743],[45.23124,-12.8071],[45.23138,-12.80698],[45.23168,-12.807],[45.23189,-12.80675],[45.23219,-12.80627],[45.2324,-12.80602],[45.23286,-12.80573],[45.23317,-12.8056],[45.23329,-12.80561],[45.23333,-12.80538],[45.2336,-12.80505],[45.23387,-12.80491],[45.23416,-12.80489],[45.23457,-12.80492],[45.23464,-12.80482],[45.23504,-12.80465],[45.23534,-12.80467],[45.23555,-12.80459],[45.23563,-12.80487],[45.23584,-12.80503],[45.23606,-12.80496],[45.23624,-12.80507],[45.2363,-12.80547],[45.2364,-12.80642],[45.23649,-12.80669],[45.23651,-12.80704],[45.23679,-12.80754],[45.23701,-12.80771],[45.23728,-12.80776],[45.23749,-12.80794],[45.23761,-12.80813],[45.23745,-12.80826],[45.23717,-12.80839],[45.23706,-12.8087],[45.23679,-12.80903],[45.23663,-12.80946],[45.23665,-12.80976],[45.23701,-12.80974],[45.23736,-12.80964],[45.23746,-12.80952],[45.23775,-12.80949],[45.23781,-12.80976]]],[[[45.26908,-12.78042],[45.26892,-12.78057],[45.26866,-12.7807],[45.26848,-12.78094],[45.26812,-12.7811],[45.26802,-12.78125],[45.26789,-12.78123],[45.26771,-12.78141],[45.26751,-12.78144],[45.2671,-12.7816],[45.26661,-12.78162],[45.26624,-12.78139],[45.26601,-12.78098],[45.26588,-12.7809],[45.26567,-12.78091],[45.26562,-12.78058],[45.26579,-12.78023],[45.26608,-12.77974],[45.26627,-12.7795],[45.26664,-12.77928],[45.26706,-12.77908],[45.26738,-12.77905],[45.26764,-12.7792],[45.26793,-12.77926],[45.26821,-12.77926],[45.26846,-12.77952],[45.26882,-12.77982],[45.26908,-12.77987],[45.26935,-12.78027],[45.26919,-12.78043],[45.26908,-12.78042]]],[[[45.20722,-12.80973],[45.20701,-12.81007],[45.206,-12.81088],[45.20586,-12.81108],[45.20559,-12.81189],[45.20547,-12.81204],[45.20541,-12.81171],[45.20514,-12.81159],[45.20493,-12.81134],[45.20479,-12.81103],[45.20448,-12.81052],[45.20461,-12.81012],[45.20447,-12.80977],[45.2048,-12.80992],[45.20497,-12.81013],[45.20514,-12.8102],[45.20543,-12.81017],[45.2053,-12.80978],[45.20517,-12.80964],[45.2049,-12.8096],[45.20502,-12.80942],[45.20527,-12.80938],[45.20583,-12.80938],[45.20605,-12.80929],[45.20651,-12.8089],[45.20682,-12.80884],[45.2074,-12.80891],[45.20763,-12.80886],[45.20818,-12.80861],[45.20858,-12.80831],[45.20921,-12.80773],[45.20934,-12.8075],[45.20941,-12.8072],[45.20942,-12.80695],[45.20977,-12.80686],[45.21006,-12.80702],[45.20985,-12.80751],[45.20965,-12.80775],[45.20912,-12.80809],[45.20767,-12.80929],[45.20744,-12.80946],[45.20722,-12.80973]]],[[[45.27071,-12.77751],[45.27083,-12.77776],[45.2708,-12.77804],[45.27041,-12.7783],[45.27011,-12.77835],[45.26982,-12.77829],[45.26958,-12.7783],[45.26936,-12.77823],[45.26941,-12.77805],[45.26958,-12.7779],[45.26981,-12.77746],[45.26994,-12.77711],[45.27009,-12.77698],[45.27027,-12.77698],[45.2705,-12.77709],[45.27071,-12.77751]]]]}},{type:"Feature",id:"MTQ",properties:{name:"Martinique"},geometry:{type:"MultiPolygon",coordinates:[[[[-60.86733,14.38867],[-60.86802,14.38922],[-60.86884,14.39063],[-60.86836,14.39257],[-60.86753,14.39265],[-60.86711,14.39206],[-60.86677,14.38903],[-60.86733,14.38867]]],[[[-61.03911,14.44191],[-61.0409,14.44324],[-61.04029,14.44441],[-61.03848,14.44453],[-61.03784,14.44344],[-61.03813,14.44236],[-61.03911,14.44191]]],[[[-60.82718,14.42792],[-60.82889,14.42861],[-60.83027,14.42975],[-60.8304,14.43061],[-60.82979,14.43188],[-60.82876,14.43223],[-60.82659,14.43199],[-60.82598,14.43289],[-60.82506,14.4313],[-60.82522,14.4299],[-60.82564,14.42895],[-60.82699,14.42837],[-60.82718,14.42792]]],[[[-60.83206,14.41609],[-60.83233,14.41713],[-60.83125,14.41834],[-60.83118,14.41667],[-60.83206,14.41609]]],[[[-60.83329,14.41022],[-60.83426,14.41086],[-60.83253,14.41149],[-60.83199,14.41049],[-60.83329,14.41022]]],[[[-60.97884,14.47404],[-60.97967,14.47436],[-60.98021,14.47631],[-60.97857,14.47747],[-60.97905,14.47557],[-60.97865,14.47467],[-60.97884,14.47404]]],[[[-60.8385,14.56636],[-60.83839,14.56767],[-60.83576,14.57037],[-60.83433,14.56972],[-60.83458,14.56774],[-60.83611,14.5673],[-60.8385,14.56636]]],[[[-60.98848,14.78623],[-60.98893,14.78755],[-60.9901,14.78714],[-60.99065,14.78792],[-60.98962,14.78873],[-60.98854,14.78908],[-60.98743,14.78898],[-60.98735,14.78785],[-60.98848,14.78623]]],[[[-60.87459,14.45045],[-60.87528,14.45105],[-60.87504,14.45208],[-60.87401,14.4518],[-60.87459,14.45045]]],[[[-60.86212,14.60803],[-60.86113,14.6097],[-60.85871,14.61031],[-60.85777,14.61116],[-60.8578,14.61238],[-60.8572,14.61278],[-60.85609,14.61255],[-60.85441,14.61343],[-60.85343,14.61366],[-60.85277,14.61438],[-60.85157,14.61414],[-60.85237,14.61239],[-60.85165,14.61093],[-60.84961,14.61051],[-60.85036,14.60956],[-60.85152,14.61006],[-60.85286,14.60994],[-60.85369,14.61085],[-60.85513,14.61082],[-60.85679,14.61111],[-60.85755,14.60944],[-60.8611,14.60874],[-60.86212,14.60803]]],[[[-60.84859,14.62338],[-60.85029,14.62516],[-60.84866,14.62582],[-60.84823,14.62699],[-60.84711,14.62698],[-60.84694,14.62585],[-60.84601,14.62521],[-60.84715,14.62405],[-60.84859,14.62338]]],[[[-60.86374,14.61813],[-60.8642,14.61917],[-60.86149,14.62019],[-60.86004,14.6209],[-60.85938,14.62171],[-60.85817,14.62202],[-60.8586,14.62071],[-60.85991,14.62008],[-60.86034,14.61882],[-60.86374,14.61813]]],[[[-60.85304,14.62934],[-60.85202,14.62888],[-60.85181,14.62685],[-60.85274,14.62609],[-60.8539,14.626],[-60.85446,14.6265],[-60.85374,14.62822],[-60.85304,14.62934]]],[[[-60.86461,14.60498],[-60.86502,14.60566],[-60.86413,14.60687],[-60.86301,14.607],[-60.86293,14.60582],[-60.8635,14.60511],[-60.86461,14.60498]]],[[[-61.02077,14.54663],[-61.02183,14.54732],[-61.02201,14.54827],[-61.02163,14.54899],[-61.0206,14.54966],[-61.01991,14.54961],[-61.01874,14.55009],[-61.01743,14.55031],[-61.01651,14.55017],[-61.01596,14.54894],[-61.0169,14.54773],[-61.01881,14.54766],[-61.01965,14.54685],[-61.02077,14.54663]]],[[[-61.07945,14.54328],[-61.0801,14.54391],[-61.07995,14.54487],[-61.07939,14.54531],[-61.07836,14.54472],[-61.07848,14.54359],[-61.07945,14.54328]]],[[[-60.96347,14.77143],[-60.96458,14.77261],[-60.96456,14.77442],[-60.96249,14.77287],[-60.9625,14.77165],[-60.96347,14.77143]]],[[[-60.87874,14.75458],[-60.87979,14.75599],[-60.88001,14.75744],[-60.87858,14.75693],[-60.87846,14.75476],[-60.87874,14.75458]]],[[[-60.93295,14.73016],[-60.93419,14.73121],[-60.93312,14.73152],[-60.93243,14.73097],[-60.93295,14.73016]]],[[[-60.87438,14.77566],[-60.87597,14.77576],[-60.87564,14.77689],[-60.87432,14.77706],[-60.87438,14.77566]]],[[[-61.11754,14.62759],[-61.11877,14.62815],[-61.11955,14.6297],[-61.12094,14.62984],[-61.12197,14.62894],[-61.12304,14.62886],[-61.12391,14.63017],[-61.12729,14.63192],[-61.12901,14.63143],[-61.13034,14.63303],[-61.13271,14.6335],[-61.13374,14.63206],[-61.13569,14.63289],[-61.13591,14.63411],[-61.13702,14.63557],[-61.13788,14.63724],[-61.13863,14.63725],[-61.13871,14.63824],[-61.13921,14.63933],[-61.13819,14.63978],[-61.13807,14.64104],[-61.13988,14.64295],[-61.14159,14.64315],[-61.14163,14.64464],[-61.14315,14.64506],[-61.14399,14.64556],[-61.14463,14.64652],[-61.14574,14.64643],[-61.14676,14.64699],[-61.14769,14.64681],[-61.14861,14.64723],[-61.14865,14.64786],[-61.14958,14.64859],[-61.1507,14.64827],[-61.15204,14.64964],[-61.15193,14.65091],[-61.15237,14.65372],[-61.15301,14.65526],[-61.15444,14.65635],[-61.15537,14.65609],[-61.15676,14.65651],[-61.15752,14.65936],[-61.15839,14.66122],[-61.15894,14.66163],[-61.15833,14.66235],[-61.15897,14.66425],[-61.16118,14.6663],[-61.16182,14.6678],[-61.16246,14.66839],[-61.16384,14.67053],[-61.16396,14.67193],[-61.16525,14.67311],[-61.1665,14.67362],[-61.16765,14.67517],[-61.16847,14.67689],[-61.16944,14.67789],[-61.1703,14.67993],[-61.17141,14.68112],[-61.17265,14.68293],[-61.17347,14.68371],[-61.17365,14.68475],[-61.17443,14.68584],[-61.17527,14.68652],[-61.1766,14.68852],[-61.17925,14.69379],[-61.18013,14.69439],[-61.17966,14.69502],[-61.17984,14.69583],[-61.18175,14.69973],[-61.18248,14.70173],[-61.18266,14.70281],[-61.18416,14.70594],[-61.18484,14.70852],[-61.18432,14.71336],[-61.18361,14.71557],[-61.18271,14.71764],[-61.18209,14.71949],[-61.18217,14.72108],[-61.18193,14.7218],[-61.18191,14.72352],[-61.18138,14.72519],[-61.17991,14.72906],[-61.1799,14.73106],[-61.17933,14.73219],[-61.17928,14.73322],[-61.17815,14.73453],[-61.17748,14.73574],[-61.17691,14.73781],[-61.17655,14.74121],[-61.17676,14.7446],[-61.17725,14.74619],[-61.17887,14.74764],[-61.17942,14.74873],[-61.17959,14.74991],[-61.18171,14.75237],[-61.18286,14.7531],[-61.18424,14.75492],[-61.18538,14.75728],[-61.18746,14.75892],[-61.19005,14.76061],[-61.19153,14.76193],[-61.19212,14.76307],[-61.19411,14.76399],[-61.19614,14.76567],[-61.19836,14.76673],[-61.199,14.768],[-61.19941,14.76941],[-61.20055,14.77136],[-61.20257,14.77422],[-61.20306,14.77657],[-61.20481,14.77934],[-61.20536,14.77989],[-61.2068,14.78053],[-61.2094,14.78105],[-61.21339,14.7814],[-61.21455,14.78185],[-61.21542,14.78285],[-61.21633,14.78495],[-61.21914,14.78885],[-61.22042,14.79157],[-61.22114,14.79488],[-61.22169,14.79579],[-61.22255,14.79801],[-61.22407,14.79965],[-61.22592,14.80088],[-61.22716,14.80256],[-61.22715,14.80414],[-61.22662,14.80617],[-61.22619,14.80698],[-61.22794,14.80881],[-61.22894,14.81176],[-61.22911,14.81438],[-61.22902,14.81777],[-61.22916,14.81845],[-61.22868,14.81948],[-61.22877,14.82075],[-61.22927,14.82211],[-61.2279,14.82482],[-61.2277,14.82613],[-61.22657,14.82806],[-61.22664,14.83014],[-61.22644,14.83127],[-61.22588,14.83209],[-61.22382,14.83365],[-61.22345,14.83428],[-61.22371,14.83555],[-61.22319,14.83677],[-61.22299,14.83839],[-61.22144,14.84024],[-61.22036,14.84105],[-61.21905,14.8428],[-61.21899,14.84406],[-61.2194,14.84461],[-61.21916,14.84565],[-61.21823,14.84568],[-61.21766,14.84713],[-61.21598,14.84735],[-61.21467,14.84788],[-61.21382,14.84968],[-61.21396,14.85018],[-61.21316,14.85175],[-61.21338,14.85243],[-61.21273,14.85333],[-61.21276,14.85446],[-61.21155,14.85518],[-61.2113,14.85654],[-61.21049,14.85793],[-61.20844,14.85932],[-61.20656,14.86166],[-61.20526,14.86206],[-61.20423,14.8616],[-61.2032,14.86231],[-61.20148,14.86248],[-61.19887,14.86373],[-61.197,14.86395],[-61.19528,14.86456],[-61.19382,14.86613],[-61.19335,14.8674],[-61.19261,14.86667],[-61.19172,14.86711],[-61.19051,14.86728],[-61.18896,14.86814],[-61.18766,14.86835],[-61.18658,14.86997],[-61.18519,14.87005],[-61.18346,14.87076],[-61.18242,14.87152],[-61.18166,14.87378],[-61.18054,14.87481],[-61.1797,14.87499],[-61.17701,14.87411],[-61.17412,14.87481],[-61.17211,14.87561],[-61.17052,14.87651],[-61.16787,14.87648],[-61.1654,14.87746],[-61.1633,14.87759],[-61.15977,14.8781],[-61.15906,14.87782],[-61.15767,14.87786],[-61.15442,14.87729],[-61.15289,14.8775],[-61.14818,14.87878],[-61.14753,14.87855],[-61.14642,14.87737],[-61.14545,14.87705],[-61.14392,14.87703],[-61.14079,14.87778],[-61.13884,14.87777],[-61.13722,14.87631],[-61.13487,14.8748],[-61.13361,14.8752],[-61.13263,14.87492],[-61.12928,14.87503],[-61.12696,14.87451],[-61.12493,14.87314],[-61.12276,14.87195],[-61.12149,14.87167],[-61.1203,14.87022],[-61.11766,14.86947],[-61.11551,14.8704],[-61.11398,14.87039],[-61.11297,14.8693],[-61.11203,14.86884],[-61.10908,14.86692],[-61.10722,14.86672],[-61.1062,14.8669],[-61.10509,14.86554],[-61.10389,14.86503],[-61.10315,14.86398],[-61.10004,14.86319],[-61.09786,14.86317],[-61.09754,14.86168],[-61.097,14.86045],[-61.09184,14.85508],[-61.08976,14.85366],[-61.08884,14.85329],[-61.08716,14.85305],[-61.08521,14.85326],[-61.08432,14.85312],[-61.08127,14.85161],[-61.0803,14.8507],[-61.07921,14.84821],[-61.07833,14.84775],[-61.07751,14.84652],[-61.07574,14.84578],[-61.07504,14.846],[-61.07342,14.84558],[-61.07329,14.84468],[-61.07102,14.84353],[-61.07028,14.84339],[-61.06916,14.84374],[-61.06572,14.84335],[-61.06446,14.84339],[-61.06364,14.84148],[-61.06329,14.83967],[-61.06265,14.83871],[-61.05988,14.83611],[-61.05831,14.83524],[-61.05725,14.83438],[-61.05563,14.83386],[-61.0542,14.83309],[-61.05206,14.83258],[-61.04968,14.83287],[-61.048,14.83399],[-61.04693,14.83434],[-61.0459,14.83574],[-61.04351,14.83703],[-61.04262,14.83698],[-61.04254,14.83585],[-61.04098,14.83417],[-61.0401,14.83402],[-61.03973,14.83325],[-61.04011,14.83267],[-61.03942,14.83144],[-61.03813,14.83053],[-61.03642,14.82988],[-61.03422,14.83081],[-61.03138,14.8311],[-61.02916,14.83036],[-61.02959,14.82914],[-61.02965,14.82729],[-61.03171,14.82505],[-61.03169,14.82333],[-61.02885,14.82281],[-61.02783,14.82307],[-61.02681,14.82293],[-61.02551,14.82328],[-61.02472,14.82269],[-61.02273,14.82208],[-61.02288,14.82145],[-61.02164,14.81972],[-61.02164,14.81904],[-61.02081,14.81827],[-61.02094,14.81443],[-61.02054,14.81257],[-61.01893,14.81048],[-61.01871,14.80944],[-61.01677,14.80807],[-61.01491,14.80728],[-61.01287,14.8069],[-61.01129,14.80707],[-61.00905,14.80845],[-61.00814,14.81076],[-61.00679,14.81142],[-61.00788,14.80963],[-61.007,14.80853],[-61.00538,14.80798],[-61.0037,14.80873],[-61.00355,14.80932],[-61.00193,14.80894],[-61.00115,14.80794],[-61.00279,14.80637],[-61.00284,14.80574],[-61.00364,14.80512],[-61.00375,14.80349],[-61.00263,14.80326],[-61.00366,14.80236],[-61.00493,14.80214],[-61.00523,14.80015],[-61.00431,14.79816],[-61.00349,14.79697],[-61.00228,14.79592],[-60.99956,14.79459],[-60.99849,14.79426],[-60.99842,14.79214],[-60.99885,14.79074],[-60.9972,14.78766],[-60.99665,14.78765],[-60.99462,14.78578],[-60.99333,14.78514],[-60.99231,14.78508],[-60.99081,14.78575],[-60.99124,14.78467],[-60.99102,14.78304],[-60.99025,14.78136],[-60.98933,14.78013],[-60.98772,14.77885],[-60.9874,14.77804],[-60.98652,14.77767],[-60.98548,14.77865],[-60.98349,14.77827],[-60.98256,14.7784],[-60.98116,14.77948],[-60.98019,14.77798],[-60.9796,14.77757],[-60.97988,14.77649],[-60.97943,14.77549],[-60.98226,14.77582],[-60.98305,14.77529],[-60.98278,14.77438],[-60.98127,14.77256],[-60.9803,14.77201],[-60.98022,14.77057],[-60.97874,14.76911],[-60.97795,14.76914],[-60.97703,14.76855],[-60.97596,14.76899],[-60.97485,14.76876],[-60.9743,14.76812],[-60.97408,14.76667],[-60.97478,14.76618],[-60.97437,14.76478],[-60.97327,14.76323],[-60.97212,14.76277],[-60.97049,14.76176],[-60.96948,14.76062],[-60.9679,14.76074],[-60.96759,14.75893],[-60.96627,14.75662],[-60.96627,14.75603],[-60.96721,14.75518],[-60.96765,14.75414],[-60.96743,14.75261],[-60.96618,14.75142],[-60.9662,14.75043],[-60.96509,14.74847],[-60.96338,14.74724],[-60.96171,14.74786],[-60.96181,14.74704],[-60.96293,14.74633],[-60.96349,14.74543],[-60.96341,14.74443],[-60.96259,14.74293],[-60.96247,14.74135],[-60.9629,14.73995],[-60.96259,14.73904],[-60.96181,14.73804],[-60.96093,14.73758],[-60.95986,14.73771],[-60.95906,14.73743],[-60.95805,14.73656],[-60.95675,14.73637],[-60.95503,14.73732],[-60.95443,14.73798],[-60.95362,14.73991],[-60.95332,14.74172],[-60.95271,14.74239],[-60.95274,14.74466],[-60.95249,14.74592],[-60.95266,14.74778],[-60.95242,14.7485],[-60.9512,14.74948],[-60.95082,14.75034],[-60.94955,14.75163],[-60.94802,14.75226],[-60.94791,14.75366],[-60.94717,14.75357],[-60.94525,14.75486],[-60.94485,14.75662],[-60.94424,14.75724],[-60.94211,14.75682],[-60.94085,14.75763],[-60.93988,14.75776],[-60.93927,14.75825],[-60.93548,14.75957],[-60.93511,14.76024],[-60.93547,14.76133],[-60.93463,14.76183],[-60.93436,14.76092],[-60.9332,14.761],[-60.93225,14.76271],[-60.93188,14.76239],[-60.93048,14.76243],[-60.92969,14.76292],[-60.92895,14.76223],[-60.92663,14.76221],[-60.92648,14.76293],[-60.92532,14.76346],[-60.925,14.76301],[-60.9251,14.76152],[-60.92387,14.75979],[-60.92276,14.7587],[-60.92049,14.75831],[-60.91936,14.75886],[-60.91716,14.76091],[-60.91627,14.76131],[-60.91344,14.76187],[-60.91217,14.76246],[-60.91118,14.76385],[-60.91126,14.76498],[-60.91186,14.76553],[-60.90976,14.76632],[-60.90965,14.76863],[-60.90918,14.76894],[-60.90878,14.7669],[-60.90777,14.76554],[-60.90657,14.76571],[-60.90525,14.76633],[-60.90409,14.76642],[-60.90241,14.76703],[-60.90171,14.76775],[-60.90169,14.76969],[-60.89964,14.77013],[-60.89745,14.77011],[-60.89721,14.77102],[-60.89646,14.77124],[-60.89576,14.77209],[-60.89352,14.77297],[-60.89333,14.77365],[-60.89203,14.77382],[-60.8922,14.77535],[-60.89186,14.7758],[-60.89033,14.77588],[-60.89069,14.77648],[-60.88971,14.77724],[-60.88952,14.77823],[-60.88895,14.77886],[-60.88843,14.78016],[-60.88718,14.78011],[-60.88615,14.78041],[-60.88501,14.77796],[-60.88604,14.77702],[-60.88512,14.77652],[-60.88419,14.77696],[-60.88274,14.77708],[-60.88042,14.77656],[-60.87917,14.77646],[-60.87913,14.77574],[-60.87811,14.7751],[-60.87583,14.77554],[-60.87463,14.77476],[-60.87525,14.77359],[-60.87594,14.77396],[-60.87683,14.77373],[-60.87535,14.77236],[-60.87284,14.77217],[-60.87347,14.77045],[-60.87473,14.76978],[-60.87451,14.76901],[-60.87303,14.76818],[-60.87424,14.76788],[-60.87574,14.76654],[-60.87607,14.76555],[-60.87563,14.76346],[-60.8742,14.7621],[-60.87342,14.76173],[-60.87333,14.76073],[-60.87204,14.76013],[-60.8726,14.7591],[-60.87271,14.7582],[-60.87424,14.75802],[-60.87576,14.75894],[-60.8781,14.75887],[-60.87769,14.75801],[-60.87866,14.75793],[-60.87935,14.75897],[-60.88023,14.7593],[-60.8816,14.76102],[-60.88278,14.76379],[-60.88229,14.76641],[-60.88322,14.76691],[-60.88367,14.76773],[-60.88447,14.76747],[-60.88541,14.76594],[-60.88611,14.76549],[-60.88746,14.76546],[-60.88917,14.76652],[-60.88992,14.76598],[-60.89154,14.76676],[-60.89206,14.76618],[-60.8935,14.76542],[-60.89331,14.76157],[-60.89534,14.76232],[-60.8968,14.76124],[-60.89699,14.76057],[-60.89692,14.75849],[-60.89577,14.75766],[-60.8941,14.75688],[-60.89321,14.75687],[-60.89201,14.75637],[-60.8908,14.7564],[-60.89007,14.75508],[-60.88967,14.75377],[-60.88847,14.75326],[-60.88857,14.75159],[-60.88955,14.75106],[-60.88948,14.74956],[-60.89019,14.74907],[-60.89094,14.74776],[-60.89297,14.74882],[-60.89362,14.74946],[-60.89469,14.74924],[-60.89553,14.74853],[-60.89583,14.74632],[-60.89731,14.74656],[-60.89812,14.74606],[-60.89935,14.74381],[-60.89885,14.74277],[-60.89806,14.74208],[-60.89681,14.74216],[-60.89589,14.74147],[-60.89466,14.7421],[-60.89374,14.74155],[-60.89152,14.74113],[-60.89069,14.73999],[-60.89186,14.73913],[-60.8922,14.73814],[-60.89133,14.73646],[-60.89185,14.73575],[-60.89304,14.73702],[-60.89403,14.73685],[-60.89495,14.73726],[-60.89583,14.73723],[-60.89635,14.7366],[-60.89632,14.73515],[-60.89544,14.73496],[-60.89555,14.73347],[-60.89693,14.7348],[-60.89822,14.73504],[-60.8999,14.73445],[-60.90101,14.73451],[-60.90178,14.73641],[-60.90299,14.7371],[-60.90495,14.73703],[-60.9069,14.73637],[-60.90817,14.73489],[-60.90942,14.73495],[-60.91044,14.73553],[-60.91094,14.73626],[-60.91124,14.73921],[-60.91099,14.74065],[-60.91122,14.74156],[-60.91186,14.74238],[-60.91189,14.74373],[-60.91332,14.74501],[-60.9141,14.74538],[-60.91583,14.74567],[-60.91619,14.74648],[-60.9174,14.74686],[-60.92004,14.74661],[-60.92124,14.74743],[-60.92216,14.74871],[-60.92411,14.74917],[-60.92525,14.75058],[-60.92586,14.75076],[-60.92726,14.75046],[-60.9294,14.75039],[-60.93094,14.74923],[-60.93159,14.74946],[-60.93344,14.74943],[-60.93609,14.75058],[-60.93749,14.74991],[-60.93824,14.74861],[-60.93821,14.74675],[-60.93869,14.74563],[-60.93963,14.74491],[-60.94048,14.7437],[-60.94067,14.74288],[-60.94201,14.74384],[-60.94313,14.74335],[-60.94375,14.74223],[-60.94456,14.73966],[-60.94467,14.73817],[-60.94439,14.73763],[-60.94342,14.73739],[-60.94302,14.7359],[-60.94103,14.73493],[-60.94001,14.7347],[-60.9388,14.73509],[-60.93755,14.73427],[-60.93845,14.73301],[-60.93946,14.73352],[-60.94025,14.73343],[-60.94151,14.73281],[-60.9429,14.73318],[-60.94364,14.73404],[-60.94443,14.73346],[-60.94463,14.73256],[-60.94417,14.73147],[-60.94558,14.73085],[-60.94621,14.72806],[-60.94618,14.72632],[-60.94564,14.72451],[-60.94473,14.72283],[-60.94344,14.72178],[-60.94181,14.72154],[-60.94135,14.72117],[-60.93986,14.72139],[-60.9394,14.72048],[-60.93987,14.71998],[-60.93988,14.71908],[-60.93896,14.71758],[-60.93712,14.71607],[-60.93448,14.71551],[-60.93276,14.71622],[-60.93292,14.71803],[-60.93268,14.71921],[-60.93118,14.72032],[-60.93121,14.72136],[-60.9306,14.72176],[-60.92838,14.72143],[-60.92782,14.72219],[-60.92647,14.72227],[-60.92541,14.72149],[-60.92532,14.72077],[-60.92635,14.71992],[-60.92792,14.72052],[-60.92863,14.71908],[-60.9291,14.71881],[-60.92963,14.71715],[-60.92856,14.71659],[-60.92867,14.71519],[-60.93008,14.71439],[-60.93083,14.71367],[-60.93213,14.71327],[-60.93391,14.71184],[-60.93412,14.70963],[-60.93311,14.70768],[-60.93233,14.70713],[-60.9295,14.70702],[-60.92787,14.70727],[-60.92456,14.70819],[-60.92339,14.70936],[-60.92348,14.70986],[-60.92254,14.7104],[-60.92162,14.70985],[-60.92092,14.70993],[-60.92044,14.71128],[-60.91932,14.71168],[-60.91846,14.71406],[-60.91868,14.71492],[-60.91821,14.71597],[-60.91724,14.71587],[-60.9165,14.715],[-60.9158,14.71495],[-60.91394,14.7162],[-60.91377,14.71381],[-60.91443,14.71318],[-60.91459,14.71069],[-60.91562,14.70966],[-60.91531,14.70857],[-60.91387,14.70801],[-60.91323,14.70729],[-60.91413,14.70598],[-60.91529,14.70568],[-60.91498,14.70414],[-60.9142,14.70287],[-60.91258,14.70222],[-60.9118,14.70126],[-60.91001,14.70003],[-60.90876,14.69952],[-60.90736,14.69996],[-60.90632,14.70067],[-60.90465,14.70103],[-60.90427,14.70139],[-60.9025,14.702],[-60.90256,14.70123],[-60.90336,14.69984],[-60.90072,14.69878],[-60.90236,14.69747],[-60.90144,14.69656],[-60.9014,14.69584],[-60.9022,14.69539],[-60.90388,14.69518],[-60.90466,14.6956],[-60.90582,14.69547],[-60.90684,14.69589],[-60.90839,14.69414],[-60.90812,14.69332],[-60.90887,14.69233],[-60.90856,14.69119],[-60.90889,14.69052],[-60.91,14.69035],[-60.91035,14.68904],[-60.91143,14.68792],[-60.91199,14.6877],[-60.91258,14.68848],[-60.91237,14.6915],[-60.91302,14.69173],[-60.91506,14.69143],[-60.91744,14.69087],[-60.91906,14.69084],[-60.91921,14.69015],[-60.92015,14.68957],[-60.92039,14.68899],[-60.92164,14.68846],[-60.92225,14.68864],[-60.92341,14.68825],[-60.92549,14.68894],[-60.9263,14.68886],[-60.92851,14.68739],[-60.92922,14.68595],[-60.9292,14.68314],[-60.92621,14.67999],[-60.92399,14.6793],[-60.92488,14.67854],[-60.92589,14.67931],[-60.92765,14.67919],[-60.92854,14.67875],[-60.92993,14.67867],[-60.9339,14.68277],[-60.93525,14.68242],[-60.9357,14.68311],[-60.93663,14.68357],[-60.93733,14.68244],[-60.93716,14.68167],[-60.93782,14.68032],[-60.93752,14.67747],[-60.93785,14.6772],[-60.93834,14.67494],[-60.93964,14.67468],[-60.94087,14.67266],[-60.94245,14.67276],[-60.9431,14.67236],[-60.94304,14.66928],[-60.94203,14.66724],[-60.94097,14.66691],[-60.93995,14.66713],[-60.94005,14.66596],[-60.93945,14.66509],[-60.93839,14.66522],[-60.9364,14.66462],[-60.93533,14.6647],[-60.93482,14.66392],[-60.9353,14.66302],[-60.93481,14.66063],[-60.93361,14.65944],[-60.93335,14.65772],[-60.93257,14.65676],[-60.93096,14.65576],[-60.93055,14.65413],[-60.92996,14.65335],[-60.92899,14.65294],[-60.92726,14.65292],[-60.92614,14.65336],[-60.9248,14.6534],[-60.92404,14.6548],[-60.92339,14.6552],[-60.9213,14.65514],[-60.92057,14.65414],[-60.91981,14.65454],[-60.92015,14.65793],[-60.91903,14.65846],[-60.9186,14.65995],[-60.91775,14.66108],[-60.91669,14.66089],[-60.91631,14.66192],[-60.91681,14.66288],[-60.91489,14.66408],[-60.91419,14.66407],[-60.91293,14.66515],[-60.91218,14.66519],[-60.91185,14.66596],[-60.91092,14.66613],[-60.91055,14.66563],[-60.91062,14.66391],[-60.90933,14.66273],[-60.90901,14.66181],[-60.90807,14.66349],[-60.9077,14.66362],[-60.90594,14.66243],[-60.90583,14.66342],[-60.90632,14.66609],[-60.90613,14.66659],[-60.90349,14.66625],[-60.90387,14.66435],[-60.90337,14.66358],[-60.90231,14.66276],[-60.90209,14.66208],[-60.90092,14.66234],[-60.90016,14.66505],[-60.89703,14.66525],[-60.89831,14.66336],[-60.89828,14.66236],[-60.89936,14.66119],[-60.8989,14.66051],[-60.89769,14.66118],[-60.89582,14.66108],[-60.89498,14.6613],[-60.89457,14.66039],[-60.89458,14.65935],[-60.89375,14.65894],[-60.89268,14.65961],[-60.89171,14.65901],[-60.89092,14.65954],[-60.89105,14.66054],[-60.89201,14.66177],[-60.89149,14.66271],[-60.89143,14.66443],[-60.89049,14.66564],[-60.88894,14.66613],[-60.88685,14.66643],[-60.88444,14.66627],[-60.88296,14.66549],[-60.88223,14.6639],[-60.88336,14.66224],[-60.88351,14.66152],[-60.88287,14.66034],[-60.88348,14.65994],[-60.88316,14.65881],[-60.88364,14.65808],[-60.88469,14.65926],[-60.88553,14.65895],[-60.88605,14.65805],[-60.88481,14.65678],[-60.88467,14.65632],[-60.88562,14.6548],[-60.88536,14.65308],[-60.88588,14.65263],[-60.88795,14.65387],[-60.88748,14.65445],[-60.8878,14.65536],[-60.88876,14.65659],[-60.8896,14.65637],[-60.89003,14.6547],[-60.88907,14.65379],[-60.88927,14.65203],[-60.89003,14.65067],[-60.89063,14.65054],[-60.89164,14.65141],[-60.89324,14.6502],[-60.89556,14.65023],[-60.89641,14.64856],[-60.89785,14.64884],[-60.89972,14.65189],[-60.90056,14.65162],[-60.90293,14.65277],[-60.9033,14.65209],[-60.90193,14.65068],[-60.90189,14.64964],[-60.903,14.64956],[-60.9032,14.64893],[-60.90413,14.64844],[-60.90524,14.64872],[-60.90603,14.64819],[-60.906,14.6467],[-60.90531,14.64601],[-60.90401,14.64586],[-60.90155,14.64589],[-60.89975,14.64537],[-60.89831,14.6445],[-60.89847,14.64337],[-60.89815,14.64292],[-60.89712,14.64309],[-60.89657,14.64196],[-60.89583,14.64118],[-60.89505,14.64127],[-60.89389,14.64089],[-60.89296,14.64107],[-60.89258,14.6417],[-60.89147,14.64191],[-60.89155,14.64246],[-60.89048,14.64272],[-60.88891,14.64212],[-60.88859,14.64131],[-60.89022,14.641],[-60.89166,14.6411],[-60.89366,14.64039],[-60.89404,14.63958],[-60.89511,14.63914],[-60.89493,14.63855],[-60.89392,14.63791],[-60.89374,14.63683],[-60.8945,14.63552],[-60.89367,14.63493],[-60.89189,14.63618],[-60.89092,14.63603],[-60.89111,14.63513],[-60.89219,14.63451],[-60.89201,14.63311],[-60.89109,14.63224],[-60.89087,14.63138],[-60.89162,14.63062],[-60.89269,14.63066],[-60.89328,14.63144],[-60.8939,14.63122],[-60.89505,14.63154],[-60.89516,14.63059],[-60.894,14.63004],[-60.89485,14.62815],[-60.89564,14.62811],[-60.89643,14.62871],[-60.89708,14.62844],[-60.89838,14.62859],[-60.89742,14.62718],[-60.89725,14.62515],[-60.8974,14.62397],[-60.899,14.62285],[-60.89906,14.62145],[-60.89828,14.62018],[-60.89777,14.62004],[-60.8965,14.62079],[-60.89562,14.62056],[-60.89443,14.61942],[-60.89364,14.61937],[-60.89284,14.62],[-60.88909,14.61929],[-60.88911,14.62096],[-60.88869,14.62195],[-60.88735,14.62149],[-60.88689,14.6204],[-60.88663,14.61841],[-60.8874,14.61688],[-60.88686,14.61547],[-60.88578,14.61569],[-60.88531,14.6165],[-60.88515,14.61826],[-60.88431,14.6192],[-60.88337,14.61969],[-60.88203,14.61928],[-60.88176,14.61805],[-60.88089,14.61782],[-60.88018,14.6185],[-60.88017,14.6194],[-60.8796,14.62007],[-60.87862,14.62029],[-60.87722,14.6215],[-60.87662,14.62154],[-60.87528,14.6203],[-60.87525,14.6194],[-60.8733,14.61879],[-60.87191,14.61878],[-60.87018,14.61953],[-60.86889,14.61794],[-60.86936,14.61727],[-60.87058,14.61764],[-60.87188,14.61747],[-60.87244,14.61657],[-60.87366,14.61586],[-60.87477,14.61574],[-60.87602,14.61602],[-60.87623,14.61412],[-60.87745,14.61363],[-60.87797,14.61232],[-60.87751,14.61191],[-60.87743,14.61055],[-60.87492,14.60976],[-60.8754,14.609],[-60.87541,14.60814],[-60.87471,14.60759],[-60.8729,14.60731],[-60.87143,14.60634],[-60.87004,14.60592],[-60.86922,14.60474],[-60.86914,14.60257],[-60.86892,14.60198],[-60.86795,14.6013],[-60.86843,14.60008],[-60.87079,14.60051],[-60.8721,14.60007],[-60.87258,14.59809],[-60.87246,14.59631],[-60.87085,14.5954],[-60.87039,14.59458],[-60.86928,14.59384],[-60.86808,14.59361],[-60.8686,14.59248],[-60.86856,14.59162],[-60.8676,14.5904],[-60.86518,14.59155],[-60.8629,14.59108],[-60.86101,14.59011],[-60.85856,14.58932],[-60.85711,14.5904],[-60.85644,14.59193],[-60.85472,14.59209],[-60.85378,14.59258],[-60.85302,14.5942],[-60.85186,14.59473],[-60.85173,14.59401],[-60.85243,14.59365],[-60.85239,14.59216],[-60.85142,14.59188],[-60.85129,14.59102],[-60.85186,14.59026],[-60.85075,14.58939],[-60.84973,14.58992],[-60.849,14.58829],[-60.84845,14.5877],[-60.84984,14.5874],[-60.85069,14.58664],[-60.85046,14.5855],[-60.84867,14.58431],[-60.84788,14.58412],[-60.84634,14.58456],[-60.84649,14.58371],[-60.84623,14.58257],[-60.84725,14.58227],[-60.85044,14.58297],[-60.85156,14.58275],[-60.85134,14.5818],[-60.85186,14.58153],[-60.85243,14.58009],[-60.85089,14.58008],[-60.84997,14.57939],[-60.84876,14.57971],[-60.84723,14.5791],[-60.84413,14.57858],[-60.84227,14.57901],[-60.84265,14.57793],[-60.84428,14.57731],[-60.84576,14.57746],[-60.84712,14.57634],[-60.84926,14.57622],[-60.84973,14.57654],[-60.85191,14.57625],[-60.85297,14.57635],[-60.85359,14.57545],[-60.8536,14.57369],[-60.85282,14.57278],[-60.85242,14.57164],[-60.85248,14.57028],[-60.85286,14.56951],[-60.85157,14.56846],[-60.84989,14.56945],[-60.84946,14.57012],[-60.84849,14.57052],[-60.84682,14.56956],[-60.84513,14.5709],[-60.84457,14.57166],[-60.8435,14.57161],[-60.84295,14.5711],[-60.84374,14.57048],[-60.8453,14.56801],[-60.84847,14.56731],[-60.84899,14.56663],[-60.84914,14.56546],[-60.84831,14.56468],[-60.84603,14.56499],[-60.84248,14.5669],[-60.8409,14.56688],[-60.84124,14.56567],[-60.8407,14.56431],[-60.84197,14.56242],[-60.84304,14.56139],[-60.84492,14.56018],[-60.8453,14.55941],[-60.84331,14.55935],[-60.84232,14.55912],[-60.8413,14.55961],[-60.8382,14.56302],[-60.83671,14.56422],[-60.83297,14.56619],[-60.83217,14.56695],[-60.83212,14.56808],[-60.83132,14.56838],[-60.83099,14.56919],[-60.83025,14.56959],[-60.82886,14.56927],[-60.82816,14.56872],[-60.82547,14.56838],[-60.82804,14.56704],[-60.82819,14.5661],[-60.82912,14.56588],[-60.82988,14.56476],[-60.8299,14.56254],[-60.83038,14.56088],[-60.8301,14.56029],[-60.83109,14.55916],[-60.83249,14.55858],[-60.83358,14.55656],[-60.83553,14.5568],[-60.83624,14.55545],[-60.83648,14.5541],[-60.83628,14.55111],[-60.83767,14.55108],[-60.83856,14.55],[-60.83755,14.54918],[-60.83752,14.54796],[-60.8361,14.54623],[-60.83379,14.54521],[-60.83336,14.54643],[-60.83188,14.54551],[-60.83148,14.5442],[-60.83056,14.54306],[-60.82949,14.54314],[-60.82844,14.54137],[-60.82822,14.54028],[-60.82716,14.53964],[-60.82763,14.53883],[-60.82746,14.53806],[-60.82663,14.53738],[-60.827,14.53675],[-60.82831,14.53644],[-60.82868,14.53572],[-60.82767,14.53508],[-60.82856,14.53455],[-60.8298,14.53555],[-60.83179,14.53575],[-60.83315,14.53539],[-60.8344,14.53563],[-60.83514,14.53541],[-60.83576,14.53438],[-60.83678,14.53416],[-60.83725,14.53349],[-60.83652,14.53262],[-60.8341,14.5331],[-60.83285,14.53245],[-60.83296,14.53137],[-60.83133,14.53185],[-60.829,14.5322],[-60.82829,14.53287],[-60.8268,14.53358],[-60.82496,14.53284],[-60.82447,14.5308],[-60.82489,14.53045],[-60.8242,14.52954],[-60.82425,14.52895],[-60.82547,14.52719],[-60.82572,14.5262],[-60.82561,14.52236],[-60.82613,14.52141],[-60.8273,14.52179],[-60.82822,14.52252],[-60.82913,14.52406],[-60.83015,14.52421],[-60.83229,14.52346],[-60.83303,14.52351],[-60.83471,14.52266],[-60.83514,14.52153],[-60.83469,14.52031],[-60.83354,14.51926],[-60.83328,14.51758],[-60.83389,14.51759],[-60.83626,14.51648],[-60.83526,14.51516],[-60.83587,14.51422],[-60.83699,14.51323],[-60.83687,14.51169],[-60.83585,14.51127],[-60.83471,14.50991],[-60.83373,14.51031],[-60.8327,14.51125],[-60.83292,14.51207],[-60.82997,14.51453],[-60.82848,14.51497],[-60.82491,14.51489],[-60.82418,14.51357],[-60.82353,14.51307],[-60.82327,14.51153],[-60.82268,14.51066],[-60.82247,14.50863],[-60.8236,14.50674],[-60.82404,14.5044],[-60.82358,14.50344],[-60.82233,14.50316],[-60.82338,14.50091],[-60.82368,14.49842],[-60.82342,14.49593],[-60.82279,14.49444],[-60.82118,14.49289],[-60.81998,14.49278],[-60.81895,14.49332],[-60.81867,14.49408],[-60.81903,14.49472],[-60.81768,14.49512],[-60.81807,14.49385],[-60.81789,14.49317],[-60.8171,14.4928],[-60.81617,14.49321],[-60.81421,14.48979],[-60.81483,14.48786],[-60.81475,14.4865],[-60.81416,14.48519],[-60.8127,14.48291],[-60.81064,14.48059],[-60.8106,14.47978],[-60.81125,14.47906],[-60.81145,14.47793],[-60.81202,14.47717],[-60.81276,14.4769],[-60.81343,14.47446],[-60.81405,14.47338],[-60.81666,14.47269],[-60.81764,14.47179],[-60.81885,14.47158],[-60.81944,14.47262],[-60.81914,14.4751],[-60.82006,14.47574],[-60.82019,14.47647],[-60.82168,14.47576],[-60.82202,14.47477],[-60.82162,14.47295],[-60.82372,14.47184],[-60.82224,14.47056],[-60.82034,14.47059],[-60.81873,14.46908],[-60.81842,14.46813],[-60.81893,14.46755],[-60.81844,14.46646],[-60.81696,14.46595],[-60.816,14.46404],[-60.81531,14.46331],[-60.81487,14.46168],[-60.81404,14.46045],[-60.81317,14.46013],[-60.81196,14.4603],[-60.80949,14.46019],[-60.80964,14.45965],[-60.81095,14.4592],[-60.81234,14.45949],[-60.81488,14.46033],[-60.81604,14.45993],[-60.81578,14.45866],[-60.8162,14.45812],[-60.8175,14.45872],[-60.81862,14.45837],[-60.81946,14.45742],[-60.82025,14.45702],[-60.82119,14.45581],[-60.82176,14.45446],[-60.82158,14.45351],[-60.82187,14.45266],[-60.82364,14.45245],[-60.82393,14.45164],[-60.82381,14.44995],[-60.82404,14.44941],[-60.82254,14.44637],[-60.82349,14.44494],[-60.82429,14.44314],[-60.82473,14.44097],[-60.82451,14.44007],[-60.82555,14.43794],[-60.82523,14.43744],[-60.82665,14.43547],[-60.82841,14.43512],[-60.82919,14.43572],[-60.82975,14.43554],[-60.8312,14.43438],[-60.83167,14.43344],[-60.83294,14.4329],[-60.83396,14.433],[-60.83434,14.43219],[-60.83361,14.43092],[-60.83269,14.43],[-60.83312,14.42829],[-60.83388,14.42699],[-60.83522,14.42686],[-60.83555,14.42628],[-60.83519,14.42542],[-60.83426,14.42523],[-60.83466,14.42287],[-60.83544,14.4232],[-60.83688,14.42289],[-60.83899,14.4221],[-60.84051,14.42234],[-60.84046,14.42324],[-60.84109,14.42555],[-60.84255,14.42715],[-60.84561,14.42785],[-60.84751,14.42755],[-60.84825,14.42779],[-60.84891,14.42711],[-60.84911,14.42607],[-60.84864,14.42495],[-60.84973,14.42239],[-60.84955,14.42166],[-60.84722,14.42259],[-60.84729,14.42074],[-60.8479,14.41993],[-60.84739,14.41948],[-60.8444,14.42112],[-60.8432,14.42052],[-60.84377,14.41917],[-60.84448,14.41854],[-60.84435,14.4176],[-60.84506,14.41661],[-60.84516,14.4158],[-60.84396,14.4152],[-60.84293,14.41555],[-60.84117,14.41535],[-60.83987,14.41543],[-60.83802,14.4146],[-60.83766,14.41383],[-60.83827,14.41302],[-60.83823,14.41225],[-60.83871,14.41063],[-60.84053,14.41047],[-60.84191,14.41134],[-60.84264,14.41256],[-60.84453,14.41353],[-60.84578,14.41345],[-60.84779,14.41233],[-60.84853,14.41162],[-60.84972,14.40982],[-60.85034,14.40784],[-60.85137,14.40721],[-60.85285,14.40682],[-60.85346,14.406],[-60.85343,14.40492],[-60.85473,14.40434],[-60.85522,14.40299],[-60.85467,14.40199],[-60.85593,14.40155],[-60.85557,14.40033],[-60.85581,14.39956],[-60.85516,14.39906],[-60.85573,14.39839],[-60.85564,14.39729],[-60.85662,14.39712],[-60.85749,14.39812],[-60.8594,14.39751],[-60.85968,14.3972],[-60.85913,14.39597],[-60.8596,14.39575],[-60.86053,14.39653],[-60.86313,14.39555],[-60.8641,14.3966],[-60.86562,14.39675],[-60.86665,14.39635],[-60.86796,14.39473],[-60.86881,14.39456],[-60.8712,14.3958],[-60.87282,14.39645],[-60.87491,14.39633],[-60.87652,14.39707],[-60.87805,14.39713],[-60.87814,14.39785],[-60.8766,14.3982],[-60.87626,14.40009],[-60.87672,14.40095],[-60.87892,14.40287],[-60.88115,14.40416],[-60.883,14.40476],[-60.88448,14.40459],[-60.88511,14.40641],[-60.88473,14.40767],[-60.88597,14.40912],[-60.88721,14.40977],[-60.88688,14.41058],[-60.88552,14.4108],[-60.88509,14.41184],[-60.88544,14.4136],[-60.88659,14.41492],[-60.88889,14.41657],[-60.89042,14.41722],[-60.89318,14.41918],[-60.89321,14.42063],[-60.89255,14.42157],[-60.89084,14.42169],[-60.89,14.42223],[-60.88919,14.42354],[-60.88727,14.42569],[-60.88629,14.4265],[-60.88586,14.42744],[-60.88556,14.42947],[-60.88467,14.4306],[-60.88443,14.43168],[-60.8833,14.43231],[-60.88292,14.43307],[-60.88185,14.43401],[-60.88056,14.43785],[-60.8799,14.43843],[-60.87994,14.43924],[-60.88061,14.44187],[-60.88121,14.44309],[-60.8835,14.44537],[-60.8845,14.44764],[-60.88397,14.4494],[-60.88346,14.44989],[-60.88424,14.45103],[-60.8838,14.45193],[-60.8825,14.45193],[-60.88145,14.45079],[-60.88022,14.44864],[-60.87972,14.44737],[-60.87884,14.44741],[-60.87783,14.44623],[-60.87675,14.44695],[-60.8766,14.44862],[-60.87613,14.44889],[-60.8746,14.44883],[-60.87321,14.448],[-60.87224,14.44826],[-60.87315,14.45003],[-60.87272,14.4508],[-60.87378,14.45153],[-60.874,14.4528],[-60.87283,14.45446],[-60.87323,14.45551],[-60.8728,14.45691],[-60.87197,14.45654],[-60.87142,14.45554],[-60.86989,14.45625],[-60.86882,14.45597],[-60.86768,14.45492],[-60.86623,14.45518],[-60.86442,14.45489],[-60.86418,14.45629],[-60.86533,14.45707],[-60.86713,14.45726],[-60.86745,14.45844],[-60.86693,14.4592],[-60.86558,14.45988],[-60.86483,14.46082],[-60.86297,14.46144],[-60.86221,14.46287],[-60.86322,14.46401],[-60.86373,14.46366],[-60.86447,14.46421],[-60.86446,14.46493],[-60.86362,14.46542],[-60.8643,14.4671],[-60.86419,14.46859],[-60.86535,14.46914],[-60.86608,14.47046],[-60.86705,14.47046],[-60.86845,14.47002],[-60.86938,14.47008],[-60.87013,14.46918],[-60.87207,14.46906],[-60.87352,14.46962],[-60.87406,14.47102],[-60.87512,14.47171],[-60.87655,14.47213],[-60.87647,14.47132],[-60.87801,14.46988],[-60.87695,14.46919],[-60.87803,14.46753],[-60.8803,14.46777],[-60.88068,14.4671],[-60.88167,14.46661],[-60.88196,14.46521],[-60.88297,14.46622],[-60.88409,14.465],[-60.88419,14.46428],[-60.8855,14.46356],[-60.88667,14.46249],[-60.88691,14.46172],[-60.88808,14.46083],[-60.88828,14.45952],[-60.88884,14.45912],[-60.89,14.4593],[-60.89065,14.45872],[-60.89127,14.4571],[-60.89282,14.45549],[-60.89228,14.45309],[-60.89262,14.45264],[-60.8943,14.4517],[-60.8951,14.45098],[-60.89682,14.44996],[-60.89828,14.44798],[-60.89902,14.44767],[-60.90054,14.44949],[-60.89978,14.45035],[-60.89991,14.45161],[-60.90111,14.45275],[-60.90273,14.45372],[-60.90375,14.45404],[-60.90573,14.45537],[-60.90683,14.45664],[-60.90737,14.45769],[-60.90958,14.4596],[-60.91143,14.46071],[-60.91156,14.4617],[-60.91206,14.46198],[-60.91131,14.46337],[-60.91125,14.46482],[-60.91086,14.46662],[-60.9101,14.46892],[-60.91177,14.46907],[-60.91307,14.46854],[-60.91492,14.46878],[-60.91604,14.46847],[-60.91661,14.47132],[-60.9174,14.47169],[-60.91748,14.46925],[-60.91855,14.46809],[-60.91884,14.46722],[-60.92046,14.46769],[-60.92278,14.46699],[-60.92372,14.46596],[-60.92586,14.46579],[-60.92666,14.46539],[-60.92792,14.46427],[-60.92959,14.46406],[-60.93085,14.46307],[-60.93192,14.46263],[-60.93332,14.46273],[-60.93416,14.46242],[-60.93504,14.46266],[-60.93618,14.46447],[-60.9378,14.46458],[-60.94138,14.46379],[-60.94164,14.46537],[-60.94308,14.46624],[-60.94475,14.46594],[-60.94581,14.46658],[-60.94809,14.46674],[-60.95022,14.4664],[-60.95181,14.46659],[-60.95292,14.46591],[-60.95511,14.46507],[-60.95627,14.46536],[-60.95667,14.46712],[-60.95787,14.46799],[-60.95977,14.46787],[-60.96139,14.46879],[-60.96211,14.47137],[-60.9628,14.47219],[-60.96451,14.47288],[-60.96632,14.47312],[-60.96948,14.4722],[-60.9699,14.47179],[-60.96926,14.4702],[-60.9703,14.46958],[-60.97272,14.4687],[-60.97365,14.46789],[-60.97449,14.46803],[-60.97508,14.46872],[-60.97643,14.46882],[-60.9784,14.47123],[-60.97662,14.47311],[-60.97585,14.47564],[-60.9782,14.47724],[-60.97819,14.479],[-60.97961,14.48096],[-60.97956,14.4815],[-60.98039,14.48205],[-60.98118,14.48183],[-60.98142,14.48097],[-60.9823,14.48129],[-60.98261,14.48229],[-60.98348,14.47981],[-60.98455,14.47924],[-60.9833,14.47868],[-60.98326,14.47764],[-60.98461,14.47734],[-60.98491,14.47552],[-60.9845,14.47462],[-60.98451,14.4734],[-60.98493,14.47277],[-60.98595,14.47255],[-60.98701,14.47346],[-60.98715,14.47405],[-60.98816,14.47478],[-60.98806,14.476],[-60.98967,14.47742],[-60.99127,14.47939],[-60.99179,14.47881],[-60.9919,14.47705],[-60.99102,14.47636],[-60.99066,14.47532],[-60.99002,14.47455],[-60.9899,14.47229],[-60.99102,14.47116],[-60.99024,14.47047],[-60.99025,14.46939],[-60.98961,14.46798],[-60.9906,14.46677],[-60.99157,14.46633],[-60.99268,14.46692],[-60.99295,14.46792],[-60.99458,14.46857],[-60.99736,14.46805],[-60.99921,14.46947],[-61.00036,14.4707],[-61.00024,14.47304],[-61.00074,14.47418],[-61.00221,14.47586],[-61.00294,14.47745],[-61.00293,14.47808],[-61.00385,14.47881],[-61.00502,14.47842],[-61.00595,14.47752],[-61.00634,14.47617],[-61.00732,14.4754],[-61.00794,14.47405],[-61.0079,14.47337],[-61.0063,14.47105],[-61.00787,14.47143],[-61.00948,14.47239],[-61.00985,14.47325],[-61.01086,14.47367],[-61.01173,14.47485],[-61.0128,14.47526],[-61.01312,14.47585],[-61.01525,14.47687],[-61.01667,14.47932],[-61.01736,14.48005],[-61.01883,14.48065],[-61.02092,14.48053],[-61.02563,14.47925],[-61.03251,14.47708],[-61.03601,14.47562],[-61.03964,14.47385],[-61.04156,14.47317],[-61.04334,14.47125],[-61.04408,14.47098],[-61.0446,14.47004],[-61.04544,14.46959],[-61.04658,14.46783],[-61.04696,14.46612],[-61.04674,14.46498],[-61.04619,14.46439],[-61.04633,14.46367],[-61.04727,14.46228],[-61.04728,14.46097],[-61.04856,14.45849],[-61.0501,14.45705],[-61.05197,14.45621],[-61.05323,14.45586],[-61.05472,14.45433],[-61.05612,14.45394],[-61.05863,14.45413],[-61.0602,14.45487],[-61.0615,14.45506],[-61.06316,14.45598],[-61.06523,14.45766],[-61.06601,14.45912],[-61.06698,14.45971],[-61.06729,14.46035],[-61.06727,14.46301],[-61.06767,14.4655],[-61.06844,14.46691],[-61.06923,14.46723],[-61.07042,14.46846],[-61.07209,14.46911],[-61.07377,14.46894],[-61.07516,14.46845],[-61.07675,14.46752],[-61.07989,14.46872],[-61.08197,14.4704],[-61.08296,14.4738],[-61.08188,14.47502],[-61.0827,14.47638],[-61.08223,14.47696],[-61.08107,14.47713],[-61.07958,14.47816],[-61.07924,14.47965],[-61.07932,14.48147],[-61.07982,14.4821],[-61.08017,14.48436],[-61.07969,14.4859],[-61.07953,14.4882],[-61.07989,14.48938],[-61.08072,14.49033],[-61.08275,14.49198],[-61.08396,14.49176],[-61.08429,14.49109],[-61.08573,14.49087],[-61.08665,14.49133],[-61.08818,14.49143],[-61.09077,14.49262],[-61.09062,14.49335],[-61.08978,14.49393],[-61.08945,14.49506],[-61.08989,14.49755],[-61.08831,14.49835],[-61.0872,14.4982],[-61.0866,14.4977],[-61.08464,14.49827],[-61.08421,14.49891],[-61.08406,14.50103],[-61.0845,14.50284],[-61.08541,14.50529],[-61.08656,14.50643],[-61.08758,14.50703],[-61.08916,14.50709],[-61.09013,14.50773],[-61.09161,14.50778],[-61.09269,14.50697],[-61.09552,14.5064],[-61.09654,14.50641],[-61.10044,14.50721],[-61.10117,14.50817],[-61.10098,14.50934],[-61.09953,14.511],[-61.09808,14.51158],[-61.09761,14.5123],[-61.0976,14.51315],[-61.09676,14.5137],[-61.09675,14.51465],[-61.09743,14.51669],[-61.09737,14.51858],[-61.09558,14.52105],[-61.09492,14.52123],[-61.0945,14.52205],[-61.09448,14.52462],[-61.09359,14.52548],[-61.09233,14.52551],[-61.09164,14.52519],[-61.09011,14.52549],[-61.08945,14.52653],[-61.09051,14.5278],[-61.08994,14.52834],[-61.08869,14.52724],[-61.08781,14.5271],[-61.08729,14.52819],[-61.08798,14.52869],[-61.0889,14.53024],[-61.08898,14.53141],[-61.08809,14.53281],[-61.08771,14.53411],[-61.08436,14.53472],[-61.08454,14.53567],[-61.08341,14.53621],[-61.0828,14.53697],[-61.08104,14.53687],[-61.08015,14.53786],[-61.07963,14.53898],[-61.07888,14.5397],[-61.07896,14.54092],[-61.0771,14.54118],[-61.07662,14.54217],[-61.07565,14.54203],[-61.07478,14.54112],[-61.07167,14.54069],[-61.07037,14.54072],[-61.06927,14.53999],[-61.06774,14.53984],[-61.06698,14.54015],[-61.06451,14.54195],[-61.06427,14.54253],[-61.06481,14.5443],[-61.06388,14.54533],[-61.0626,14.54758],[-61.0618,14.54807],[-61.06096,14.54934],[-61.06127,14.55065],[-61.06033,14.5515],[-61.05848,14.55167],[-61.05733,14.55048],[-61.05533,14.55092],[-61.05359,14.55235],[-61.05303,14.55335],[-61.05311,14.55448],[-61.0538,14.55525],[-61.05384,14.5562],[-61.05443,14.5567],[-61.05419,14.55765],[-61.05312,14.55818],[-61.05307,14.5589],[-61.05236,14.56057],[-61.0522,14.56242],[-61.05146,14.56205],[-61.0518,14.56066],[-61.05136,14.55862],[-61.05192,14.55804],[-61.05123,14.55717],[-61.05029,14.55789],[-61.05075,14.55893],[-61.04985,14.55987],[-61.04879,14.55959],[-61.04924,14.55698],[-61.05013,14.55576],[-61.05097,14.55536],[-61.05018,14.55463],[-61.05103,14.55378],[-61.05127,14.55234],[-61.05174,14.55144],[-61.05021,14.55138],[-61.04714,14.55235],[-61.04481,14.55233],[-61.04392,14.55323],[-61.04262,14.55371],[-61.04178,14.55448],[-61.0407,14.5561],[-61.03985,14.55677],[-61.0385,14.5568],[-61.03735,14.55548],[-61.03752,14.55305],[-61.03809,14.55169],[-61.03805,14.55093],[-61.03727,14.55002],[-61.03886,14.54866],[-61.04007,14.54791],[-61.04277,14.54752],[-61.04337,14.5478],[-61.04435,14.54659],[-61.04329,14.5464],[-61.04329,14.54586],[-61.04198,14.54282],[-61.04069,14.54145],[-61.03647,14.54169],[-61.03648,14.5401],[-61.03504,14.54032],[-61.03493,14.54163],[-61.034,14.54198],[-61.03326,14.54139],[-61.03164,14.54074],[-61.03006,14.54083],[-61.03068,14.53933],[-61.03219,14.53763],[-61.03192,14.53668],[-61.02778,14.53714],[-61.02747,14.53497],[-61.02677,14.53519],[-61.0249,14.53758],[-61.02475,14.53852],[-61.02301,14.53977],[-61.02199,14.5395],[-61.02149,14.53841],[-61.02103,14.53845],[-61.02041,14.53971],[-61.01921,14.53965],[-61.01764,14.53892],[-61.01714,14.53796],[-61.01775,14.53693],[-61.01771,14.53625],[-61.01655,14.53615],[-61.0168,14.53435],[-61.01503,14.53519],[-61.01382,14.53505],[-61.01269,14.53577],[-61.01249,14.53789],[-61.01175,14.53811],[-61.01114,14.53887],[-61.01094,14.53982],[-61.00935,14.54184],[-61.00842,14.54215],[-61.00669,14.54164],[-61.00573,14.54064],[-61.00546,14.5391],[-61.00595,14.53801],[-61.0073,14.53717],[-61.00731,14.53608],[-61.00538,14.53775],[-61.00351,14.53999],[-61.00285,14.5412],[-61.00224,14.54147],[-61.00097,14.54322],[-61.0005,14.54448],[-60.99946,14.54502],[-60.99756,14.54501],[-60.99639,14.54599],[-60.9937,14.5466],[-60.99364,14.54841],[-60.99423,14.54923],[-60.99544,14.54919],[-60.99576,14.54996],[-60.99747,14.55016],[-60.997,14.55137],[-60.99486,14.55191],[-60.99341,14.55176],[-60.99291,14.5509],[-60.99237,14.54899],[-60.99094,14.54808],[-60.99058,14.54726],[-60.98978,14.54816],[-60.98976,14.55024],[-60.99118,14.55197],[-60.99108,14.55305],[-60.99186,14.554],[-60.99343,14.55501],[-60.99557,14.55485],[-60.99648,14.55662],[-60.99503,14.5571],[-60.99488,14.55877],[-60.99759,14.56142],[-60.99858,14.56039],[-60.99965,14.56071],[-61.00035,14.56049],[-61.00114,14.55951],[-61.00248,14.56014],[-61.00285,14.5611],[-61.00386,14.56201],[-61.00585,14.56198],[-61.00678,14.56226],[-61.00828,14.56177],[-61.00866,14.56065],[-61.00973,14.56025],[-61.0113,14.56107],[-61.01083,14.56157],[-61.01041,14.56299],[-61.0103,14.56462],[-61.01121,14.56534],[-61.01083,14.56657],[-61.01087,14.56751],[-61.01156,14.56833],[-61.01267,14.56825],[-61.01378,14.56857],[-61.01414,14.57057],[-61.01278,14.57182],[-61.01207,14.57335],[-61.01029,14.57501],[-61.00982,14.57605],[-61.00993,14.57827],[-61.01049,14.57882],[-61.01249,14.57815],[-61.01429,14.57875],[-61.0141,14.57947],[-61.01478,14.58193],[-61.01579,14.58302],[-61.01686,14.58211],[-61.0175,14.58325],[-61.01907,14.58403],[-61.01985,14.58485],[-61.02186,14.58324],[-61.02326,14.58352],[-61.02427,14.5848],[-61.02417,14.58588],[-61.02346,14.58655],[-61.02354,14.58818],[-61.02398,14.58999],[-61.02361,14.5903],[-61.02355,14.59193],[-61.02239,14.59147],[-61.02127,14.59196],[-61.02021,14.592],[-61.01932,14.5924],[-61.01893,14.59348],[-61.01744,14.59401],[-61.01645,14.59572],[-61.01677,14.59681],[-61.01675,14.59843],[-61.01731,14.59894],[-61.01803,14.60043],[-61.01966,14.60004],[-61.01966,14.60081],[-61.01477,14.60177],[-61.0138,14.60172],[-61.01389,14.60262],[-61.01639,14.60251],[-61.01722,14.60351],[-61.01825,14.60275],[-61.01917,14.60266],[-61.02172,14.60331],[-61.02157,14.60421],[-61.02212,14.60535],[-61.02146,14.60616],[-61.02063,14.60638],[-61.01955,14.60728],[-61.01964,14.60787],[-61.02051,14.60851],[-61.02055,14.60986],[-61.01924,14.61039],[-61.01895,14.6117],[-61.02043,14.61244],[-61.02137,14.61177],[-61.02179,14.61087],[-61.02258,14.61128],[-61.02312,14.61246],[-61.02405,14.61305],[-61.02596,14.61181],[-61.02653,14.61091],[-61.0264,14.61032],[-61.0272,14.60887],[-61.02953,14.60839],[-61.03056,14.60736],[-61.03098,14.60624],[-61.03159,14.60588],[-61.03214,14.6067],[-61.03339,14.60698],[-61.0347,14.6063],[-61.03558,14.60681],[-61.03661,14.60569],[-61.03879,14.60599],[-61.03974,14.60647],[-61.04029,14.60582],[-61.0403,14.60392],[-61.03915,14.60283],[-61.03917,14.60079],[-61.03858,14.5992],[-61.03789,14.5982],[-61.03726,14.59625],[-61.03639,14.59516],[-61.03686,14.59403],[-61.03688,14.59263],[-61.03762,14.59255],[-61.03789,14.59354],[-61.0389,14.59446],[-61.0409,14.59519],[-61.04098,14.59619],[-61.0442,14.59486],[-61.04508,14.59491],[-61.04661,14.59433],[-61.04749,14.5952],[-61.04738,14.59651],[-61.04808,14.59701],[-61.04806,14.59833],[-61.04913,14.59846],[-61.04974,14.59788],[-61.05216,14.59795],[-61.05267,14.59831],[-61.05342,14.59737],[-61.05411,14.59728],[-61.05594,14.595],[-61.0586,14.59442],[-61.06022,14.59511],[-61.05993,14.59615],[-61.06095,14.59697],[-61.05801,14.60233],[-61.05749,14.60359],[-61.05916,14.60406],[-61.05972,14.60325],[-61.05894,14.6023],[-61.06129,14.60014],[-61.06184,14.60056],[-61.06146,14.60191],[-61.06337,14.60138],[-61.06453,14.60138],[-61.06507,14.60316],[-61.06609,14.60262],[-61.06556,14.60035],[-61.06487,14.59958],[-61.06549,14.59728],[-61.06614,14.59715],[-61.06655,14.59792],[-61.06695,14.6005],[-61.06754,14.60145],[-61.07079,14.60293],[-61.07242,14.60217],[-61.07293,14.60154],[-61.07475,14.60114],[-61.07558,14.60201],[-61.078,14.60121],[-61.07944,14.6015],[-61.0807,14.60079],[-61.08177,14.60079],[-61.08279,14.59994],[-61.08349,14.60004],[-61.08438,14.59895],[-61.08605,14.59983],[-61.08731,14.59961],[-61.0887,14.5998],[-61.09042,14.59864],[-61.09106,14.60054],[-61.09222,14.60001],[-61.09244,14.60123],[-61.09323,14.60205],[-61.09442,14.60396],[-61.09612,14.60515],[-61.09592,14.60705],[-61.09731,14.6071],[-61.09794,14.60941],[-61.09826,14.60982],[-61.09825,14.61149],[-61.09908,14.61231],[-61.10024,14.61268],[-61.10041,14.61427],[-61.10157,14.61536],[-61.10291,14.61542],[-61.1037,14.61597],[-61.1035,14.61718],[-61.10474,14.61909],[-61.1063,14.62073],[-61.10828,14.62219],[-61.11004,14.62298],[-61.11133,14.62416],[-61.11118,14.62556],[-61.11298,14.62652],[-61.1153,14.62718],[-61.11651,14.62719],[-61.11754,14.62759]]],[[[-60.88901,14.68959],[-60.89036,14.68965],[-60.89128,14.69024],[-60.89178,14.69102],[-60.89182,14.69251],[-60.89209,14.6931],[-60.89505,14.69376],[-60.89622,14.69444],[-60.89728,14.69545],[-60.89875,14.69637],[-60.89763,14.69726],[-60.89657,14.69616],[-60.89522,14.69566],[-60.89457,14.69579],[-60.89423,14.69705],[-60.89183,14.69558],[-60.89113,14.69634],[-60.89034,14.69615],[-60.88908,14.69687],[-60.8873,14.6974],[-60.88699,14.69609],[-60.88537,14.69567],[-60.88353,14.69447],[-60.88223,14.69464],[-60.88029,14.69345],[-60.87923,14.69258],[-60.87975,14.69128],[-60.8816,14.69206],[-60.88275,14.69284],[-60.88448,14.69195],[-60.88565,14.69187],[-60.88649,14.69119],[-60.88705,14.69129],[-60.88759,14.69238],[-60.88862,14.6918],[-60.88864,14.69026],[-60.88901,14.68959]]],[[[-60.88764,14.62972],[-60.88829,14.62995],[-60.88869,14.63095],[-60.88863,14.63258],[-60.88997,14.6334],[-60.88992,14.63399],[-60.88893,14.63488],[-60.88773,14.63474],[-60.88778,14.63388],[-60.88705,14.63274],[-60.8858,14.63296],[-60.88482,14.63254],[-60.88507,14.63169],[-60.88637,14.63102],[-60.88764,14.62972]]],[[[-60.88249,14.68596],[-60.88352,14.68633],[-60.88398,14.68733],[-60.884,14.68828],[-60.88464,14.69],[-60.88426,14.6905],[-60.88229,14.68763],[-60.88207,14.68655],[-60.88249,14.68596]]],[[[-60.91081,14.68435],[-60.91127,14.68526],[-60.91024,14.68656],[-60.9091,14.68736],[-60.90904,14.68573],[-60.90979,14.68447],[-60.91081,14.68435]]],[[[-60.89998,14.68489],[-60.90086,14.68576],[-60.90188,14.6859],[-60.90164,14.68698],[-60.90029,14.68661],[-60.89898,14.68692],[-60.89979,14.6857],[-60.89998,14.68489]]],[[[-60.88311,14.66942],[-60.88398,14.6702],[-60.88393,14.67101],[-60.88285,14.67137],[-60.88161,14.67005],[-60.88311,14.66942]]]]}},{type:"Feature",id:"MDA",properties:{name:"Moldova"},geometry:{type:"Polygon",coordinates:[[[26.619337,48.220726],[26.857824,48.368211],[27.522537,48.467119],[28.259547,48.155562],[28.670891,48.118149],[29.122698,47.849095],[29.050868,47.510227],[29.415135,47.346645],[29.559674,46.928583],[29.908852,46.674361],[29.83821,46.525326],[30.024659,46.423937],[29.759972,46.349988],[29.170654,46.379262],[29.072107,46.517678],[28.862972,46.437889],[28.933717,46.25883],[28.659987,45.939987],[28.485269,45.596907],[28.233554,45.488283],[28.054443,45.944586],[28.160018,46.371563],[28.12803,46.810476],[27.551166,47.405117],[27.233873,47.826771],[26.924176,48.123264],[26.619337,48.220726]]]}},{type:"Feature",id:"MDG",properties:{name:"Madagascar"},geometry:{type:"Polygon",coordinates:[[[49.543519,-12.469833],[49.808981,-12.895285],[50.056511,-13.555761],[50.217431,-14.758789],[50.476537,-15.226512],[50.377111,-15.706069],[50.200275,-16.000263],[49.860606,-15.414253],[49.672607,-15.710204],[49.863344,-16.451037],[49.774564,-16.875042],[49.498612,-17.106036],[49.435619,-17.953064],[49.041792,-19.118781],[48.548541,-20.496888],[47.930749,-22.391501],[47.547723,-23.781959],[47.095761,-24.94163],[46.282478,-25.178463],[45.409508,-25.601434],[44.833574,-25.346101],[44.03972,-24.988345],[43.763768,-24.460677],[43.697778,-23.574116],[43.345654,-22.776904],[43.254187,-22.057413],[43.433298,-21.336475],[43.893683,-21.163307],[43.89637,-20.830459],[44.374325,-20.072366],[44.464397,-19.435454],[44.232422,-18.961995],[44.042976,-18.331387],[43.963084,-17.409945],[44.312469,-16.850496],[44.446517,-16.216219],[44.944937,-16.179374],[45.502732,-15.974373],[45.872994,-15.793454],[46.312243,-15.780018],[46.882183,-15.210182],[47.70513,-14.594303],[48.005215,-14.091233],[47.869047,-13.663869],[48.293828,-13.784068],[48.84506,-13.089175],[48.863509,-12.487868],[49.194651,-12.040557],[49.543519,-12.469833]]]}},{type:"Feature",id:"MEX",properties:{name:"Mexico"},geometry:{type:"Polygon",coordinates:[[[-97.140008,25.869997],[-97.528072,24.992144],[-97.702946,24.272343],[-97.776042,22.93258],[-97.872367,22.444212],[-97.699044,21.898689],[-97.38896,21.411019],[-97.189333,20.635433],[-96.525576,19.890931],[-96.292127,19.320371],[-95.900885,18.828024],[-94.839063,18.562717],[-94.42573,18.144371],[-93.548651,18.423837],[-92.786114,18.524839],[-92.037348,18.704569],[-91.407903,18.876083],[-90.77187,19.28412],[-90.53359,19.867418],[-90.451476,20.707522],[-90.278618,20.999855],[-89.601321,21.261726],[-88.543866,21.493675],[-87.658417,21.458846],[-87.05189,21.543543],[-86.811982,21.331515],[-86.845908,20.849865],[-87.383291,20.255405],[-87.621054,19.646553],[-87.43675,19.472403],[-87.58656,19.04013],[-87.837191,18.259816],[-88.090664,18.516648],[-88.300031,18.499982],[-88.490123,18.486831],[-88.848344,17.883198],[-89.029857,18.001511],[-89.150909,17.955468],[-89.14308,17.808319],[-90.067934,17.819326],[-91.00152,17.817595],[-91.002269,17.254658],[-91.453921,17.252177],[-91.08167,16.918477],[-90.711822,16.687483],[-90.600847,16.470778],[-90.438867,16.41011],[-90.464473,16.069562],[-91.74796,16.066565],[-92.229249,15.251447],[-92.087216,15.064585],[-92.20323,14.830103],[-92.22775,14.538829],[-93.359464,15.61543],[-93.875169,15.940164],[-94.691656,16.200975],[-95.250227,16.128318],[-96.053382,15.752088],[-96.557434,15.653515],[-97.263592,15.917065],[-98.01303,16.107312],[-98.947676,16.566043],[-99.697397,16.706164],[-100.829499,17.171071],[-101.666089,17.649026],[-101.918528,17.91609],[-102.478132,17.975751],[-103.50099,18.292295],[-103.917527,18.748572],[-104.99201,19.316134],[-105.493038,19.946767],[-105.731396,20.434102],[-105.397773,20.531719],[-105.500661,20.816895],[-105.270752,21.076285],[-105.265817,21.422104],[-105.603161,21.871146],[-105.693414,22.26908],[-106.028716,22.773752],[-106.90998,23.767774],[-107.915449,24.548915],[-108.401905,25.172314],[-109.260199,25.580609],[-109.444089,25.824884],[-109.291644,26.442934],[-109.801458,26.676176],[-110.391732,27.162115],[-110.641019,27.859876],[-111.178919,27.941241],[-111.759607,28.467953],[-112.228235,28.954409],[-112.271824,29.266844],[-112.809594,30.021114],[-113.163811,30.786881],[-113.148669,31.170966],[-113.871881,31.567608],[-114.205737,31.524045],[-114.776451,31.799532],[-114.9367,31.393485],[-114.771232,30.913617],[-114.673899,30.162681],[-114.330974,29.750432],[-113.588875,29.061611],[-113.424053,28.826174],[-113.271969,28.754783],[-113.140039,28.411289],[-112.962298,28.42519],[-112.761587,27.780217],[-112.457911,27.525814],[-112.244952,27.171727],[-111.616489,26.662817],[-111.284675,25.73259],[-110.987819,25.294606],[-110.710007,24.826004],[-110.655049,24.298595],[-110.172856,24.265548],[-109.771847,23.811183],[-109.409104,23.364672],[-109.433392,23.185588],[-109.854219,22.818272],[-110.031392,22.823078],[-110.295071,23.430973],[-110.949501,24.000964],[-111.670568,24.484423],[-112.182036,24.738413],[-112.148989,25.470125],[-112.300711,26.012004],[-112.777297,26.32196],[-113.464671,26.768186],[-113.59673,26.63946],[-113.848937,26.900064],[-114.465747,27.14209],[-115.055142,27.722727],[-114.982253,27.7982],[-114.570366,27.741485],[-114.199329,28.115003],[-114.162018,28.566112],[-114.931842,29.279479],[-115.518654,29.556362],[-115.887365,30.180794],[-116.25835,30.836464],[-116.721526,31.635744],[-117.12776,32.53534],[-115.99135,32.61239],[-114.72139,32.72083],[-114.815,32.52528],[-113.30498,32.03914],[-111.02361,31.33472],[-109.035,31.34194],[-108.24194,31.34222],[-108.24,31.754854],[-106.50759,31.75452],[-106.1429,31.39995],[-105.63159,31.08383],[-105.03737,30.64402],[-104.70575,30.12173],[-104.45697,29.57196],[-103.94,29.27],[-103.11,28.97],[-102.48,29.76],[-101.6624,29.7793],[-100.9576,29.38071],[-100.45584,28.69612],[-100.11,28.11],[-99.52,27.54],[-99.3,26.84],[-99.02,26.37],[-98.24,26.06],[-97.53,25.84],[-97.140008,25.869997]]]}},{type:"Feature",id:"MKD",properties:{name:"Macedonia"},geometry:{type:"Polygon",coordinates:[[[20.59023,41.85541],[20.71731,41.84711],[20.76216,42.05186],[21.3527,42.2068],[21.576636,42.245224],[21.91708,42.30364],[22.380526,42.32026],[22.881374,41.999297],[22.952377,41.337994],[22.76177,41.3048],[22.597308,41.130487],[22.055378,41.149866],[21.674161,40.931275],[21.02004,40.842727],[20.60518,41.08622],[20.46315,41.51509],[20.59023,41.85541]]]}},{type:"Feature",id:"MLI",properties:{name:"Mali"},geometry:{type:"Polygon",coordinates:[[[-12.17075,14.616834],[-11.834208,14.799097],[-11.666078,15.388208],[-11.349095,15.411256],[-10.650791,15.132746],[-10.086846,15.330486],[-9.700255,15.264107],[-9.550238,15.486497],[-5.537744,15.50169],[-5.315277,16.201854],[-5.488523,16.325102],[-5.971129,20.640833],[-6.453787,24.956591],[-4.923337,24.974574],[-1.550055,22.792666],[1.823228,20.610809],[2.060991,20.142233],[2.683588,19.85623],[3.146661,19.693579],[3.158133,19.057364],[4.267419,19.155265],[4.27021,16.852227],[3.723422,16.184284],[3.638259,15.56812],[2.749993,15.409525],[1.385528,15.323561],[1.015783,14.968182],[.374892,14.928908],[-.266257,14.924309],[-.515854,15.116158],[-1.066363,14.973815],[-2.001035,14.559008],[-2.191825,14.246418],[-2.967694,13.79815],[-3.103707,13.541267],[-3.522803,13.337662],[-4.006391,13.472485],[-4.280405,13.228444],[-4.427166,12.542646],[-5.220942,11.713859],[-5.197843,11.375146],[-5.470565,10.95127],[-5.404342,10.370737],[-5.816926,10.222555],[-6.050452,10.096361],[-6.205223,10.524061],[-6.493965,10.411303],[-6.666461,10.430811],[-6.850507,10.138994],[-7.622759,10.147236],[-7.89959,10.297382],[-8.029944,10.206535],[-8.335377,10.494812],[-8.282357,10.792597],[-8.407311,10.909257],[-8.620321,10.810891],[-8.581305,11.136246],[-8.376305,11.393646],[-8.786099,11.812561],[-8.905265,12.088358],[-9.127474,12.30806],[-9.327616,12.334286],[-9.567912,12.194243],[-9.890993,12.060479],[-10.165214,11.844084],[-10.593224,11.923975],[-10.87083,12.177887],[-11.036556,12.211245],[-11.297574,12.077971],[-11.456169,12.076834],[-11.513943,12.442988],[-11.467899,12.754519],[-11.553398,13.141214],[-11.927716,13.422075],[-12.124887,13.994727],[-12.17075,14.616834]]]}},{type:"Feature",id:"MLT",properties:{name:"Malta"},geometry:{type:"MultiPolygon",coordinates:[[[[14.566171,35.852721],[14.532684,35.820191],[14.436463,35.821664],[14.352334,35.872281],[14.3513,35.978399],[14.448348,35.957444],[14.537025,35.886285],[14.566171,35.852721]]],[[[14.313473,36.027569],[14.253632,36.012143],[14.194204,36.042245],[14.180354,36.060383],[14.263243,36.075809],[14.303758,36.062295],[14.320914,36.03625],[14.313473,36.027569]]]]}},{type:"Feature",id:"UMI",properties:{name:"United States Minor Outlying Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-160.0124405589999,-.382094007999925],[-160.02476966099994,-.388767184999892],[-160.02997799399992,-.376153252999913],[-160.02993730399987,-.376153252999913],[-160.0089005199999,-.372491143999866],[-160.0124405589999,-.382094007999925]]],[[[-176.4752904939999,.193101304000052],[-176.47931881399995,.190334377000099],[-176.4812719389999,.191473700000131],[-176.48289954299992,.194322007000068],[-176.48582923099985,.196519273000149],[-176.48212643099993,.196682033000116],[-176.4791153639999,.197902736000131],[-176.47687740799992,.197455145000134],[-176.4752904939999,.193101304000052]]],[[[-176.45954342399995,.225897528000161],[-176.45917721299992,.219224351000193],[-176.46393795499992,.221869208000101],[-176.45954342399995,.225897528000161]]],[[[-176.63609778599988,.803412177000027],[-176.63617916599986,.790187893000081],[-176.64049231699988,.801988023000135],[-176.64004472599987,.803534247000172],[-176.63963782499985,.804958401000064],[-176.6390274729999,.806952216000099],[-176.63609778599988,.803412177000027]]],[[[-162.06086178299995,5.887193101000193],[-162.0576065749999,5.882473049000183],[-162.0611059239999,5.873439846000267],[-162.0730688139999,5.869370835000041],[-162.0911352199999,5.871649481000105],[-162.09434973899988,5.875352281000048],[-162.09076900899993,5.874823309000163],[-162.08706620999988,5.878241278000076],[-162.07506262899994,5.885524807000181],[-162.07819576699993,5.885402736000202],[-162.0827123689999,5.884182033000187],[-162.08731035099993,5.883856512000165],[-162.0938614569999,5.885809637000207],[-162.10029049399992,5.886419989000089],[-162.10362708199995,5.888576565000264],[-162.10171464799987,5.890244859000276],[-162.0713598299999,5.890163479000293],[-162.06086178299995,5.887193101000193]]],[[[-162.38528398299985,6.430243231000134],[-162.4001765619999,6.430243231000134],[-162.4001765619999,6.445135809000178],[-162.38528398299985,6.445135809000178],[-162.38528398299985,6.430243231000134]]],[[[-169.5416967439999,16.72190989800019],[-169.5473526679999,16.721014716000113],[-169.5495092439999,16.72345612200003],[-169.5476781889999,16.72736237200003],[-169.53233801999988,16.733058986000017],[-169.52240963399996,16.73216380400011],[-169.5416967439999,16.72190989800019]]],[[[-169.5127660799999,16.744330145],[-169.51366126199989,16.743963934000092],[-169.51366126199989,16.745591539000102],[-169.5127660799999,16.744330145]]],[[[-169.53327389199995,16.7547875020001],[-169.5391739569999,16.754461981000148],[-169.53722083199995,16.756496486000103],[-169.5325821609999,16.758490302000112],[-169.53026282499994,16.760199286000116],[-169.5208227199999,16.76260000200007],[-169.51740475199992,16.762437242000104],[-169.5235082669999,16.758490302000112],[-169.5283910799999,16.756048895],[-169.53327389199995,16.7547875020001]]],[[[-75.02432206899996,18.41726308800004],[-75.02106686099992,18.41563548400002],[-75.01073157499991,18.41563548400002],[-75.01024329299992,18.41514720300013],[-75.00698808499988,18.41514720300013],[-75.00373287699992,18.41079336100013],[-75.00263424399989,18.410223700000174],[-75.00263424399989,18.406439520000063],[-75.00263424399989,18.40477122600005],[-75.00316321499986,18.403713283000073],[-75.00316321499986,18.397731838000155],[-75.00531979099986,18.396104234000134],[-75.00698808499988,18.396104234000134],[-75.00804602799994,18.395005601000022],[-75.01073157499991,18.395005601000022],[-75.01183020699995,18.396104234000134],[-75.01508541599992,18.396104234000134],[-75.01618404899995,18.396673895000035],[-75.01781165299988,18.396673895000035],[-75.01891028599991,18.397731838000155],[-75.01891028599991,18.39883047100001],[-75.02049719999985,18.40041738500004],[-75.02049719999985,18.402614651000036],[-75.0237524079999,18.406439520000063],[-75.0237524079999,18.406968492000132],[-75.02594967399989,18.408026434000092],[-75.03083248599995,18.413478908000044],[-75.03026282499991,18.41726308800004],[-75.02432206899996,18.41726308800004]]],[[[166.65235436300011,19.284247137000094],[166.64421634200008,19.275580145000035],[166.619395379,19.28164297100001],[166.62973066500004,19.282416083000115],[166.63819420700005,19.28644440300009],[166.64087975400005,19.294012762000065],[166.63477623800017,19.305731512000037],[166.64812259200008,19.29775625200007],[166.65235436300011,19.284247137000094]]],[[[-177.32489986899986,28.204982815000122],[-177.33527584499987,28.204291083],[-177.32892818899995,28.21108633000013],[-177.32286536399994,28.207668361000017],[-177.32115637899994,28.20587799700003],[-177.32489986899986,28.204982815000122]]],[[[-177.38072669199985,28.198919989000146],[-177.3895971339999,28.197658596000124],[-177.38524329299992,28.206976630000085],[-177.3780004549999,28.212836005000113],[-177.36864173099985,28.21531810100005],[-177.3576554029999,28.214422919000143],[-177.3644506499999,28.207586981000034],[-177.3721817699999,28.202337958000058],[-177.38072669199985,28.198919989000146]]]]}},{type:"Feature",id:"NIU",properties:{name:"Niue"},geometry:{type:"MultiPolygon",coordinates:[[[[-169.8511449859999,-18.965101820999934],[-169.82530676999988,-18.967950127999885],[-169.82262122299989,-18.972588799999897],[-169.79426022,-19.047133070999863],[-169.78290768099987,-19.0689429669999],[-169.79686438699994,-19.073907158999944],[-169.8059789699999,-19.081963799999897],[-169.82384192599991,-19.10230885199988],[-169.8654272129999,-19.129652601999865],[-169.87299557199992,-19.12590911299992],[-169.8809708319999,-19.129082940999893],[-169.89891516799992,-19.142754815999922],[-169.9020483059999,-19.13298919099988],[-169.9099828769999,-19.1285946589999],[-169.9210912749999,-19.12802499799993],[-169.9337052069999,-19.129652601999865],[-169.93053137899992,-19.12639739399991],[-169.9279679029999,-19.12281666499993],[-169.92479407499994,-19.119317315999936],[-169.91942298099988,-19.115980726999922],[-169.9240616529999,-19.09937916499996],[-169.92625891799992,-19.0949032529999],[-169.9504288399999,-19.087334893999937],[-169.94770260299993,-19.069431247999887],[-169.92625891799992,-19.03753020599987],[-169.9279679029999,-19.0318335919999],[-169.93158932199987,-19.026543877999913],[-169.93439693899992,-19.02092864399991],[-169.9337052069999,-19.01360442499991],[-169.9302465489999,-19.008396091999913],[-169.92638098899988,-19.007419528999932],[-169.92182369699992,-19.007012627999927],[-169.91600501199989,-19.00310637799994],[-169.89582272,-18.965101820999934],[-169.86371822799987,-18.964043877999885],[-169.8511449859999,-18.965101820999934]]]]}},{type:"Feature",id:"MDV",properties:{name:"Maldives"},geometry:{type:"MultiPolygon",coordinates:[[[[73.16309655000012,-.681817315999879],[73.17253665500007,-.688571872999901],[73.1658634770001,-.688409112999935],[73.16358483200011,-.686618747999859],[73.16309655000012,-.681817315999879]]],[[[73.19646243600019,-.681329033999887],[73.19141686300006,-.682793877999856],[73.1922306650001,-.677178643999852],[73.1951603520001,-.674493096999953],[73.20411217500006,-.671156507999839],[73.20118248800011,-.675062757999925],[73.19922936300006,-.678643487999906],[73.19646243600019,-.681329033999887]]],[[[73.124278191,-.656182549999897],[73.12696373800011,-.666273695999877],[73.1238712900001,-.664727471999839],[73.12330162900011,-.662530205999843],[73.1238712900001,-.659763278999961],[73.124278191,-.656182549999897]]],[[[73.24000084700006,-.62558359199997],[73.22730553500017,-.642836195999976],[73.22681725400017,-.632582289999874],[73.22999108200023,-.623304945999905],[73.23487389400012,-.619398695999919],[73.24000084700006,-.62558359199997]]],[[[73.11866295700011,-.641289971999939],[73.11117597700016,-.641289971999939],[73.09489993600013,-.604668877999828],[73.0911564460001,-.586032809999935],[73.10499108200005,-.579196873],[73.10499108200005,-.58660247199991],[73.09880618600019,-.587172132999882],[73.09782962300002,-.590020440999908],[73.09864342500006,-.594333592],[73.09864342500006,-.594414971999981],[73.0975041020001,-.599704684999878],[73.10499108200005,-.606540622999887],[73.11158287900017,-.617120049999855],[73.11638431100002,-.629571221999868],[73.11866295700011,-.641289971999939]]],[[[73.24675540500007,-.588636976999837],[73.24463951900006,-.607191664999931],[73.23829186300006,-.600355726999837],[73.23633873800006,-.592380466999956],[73.23902428500017,-.584405205999914],[73.24732506600006,-.57789479],[73.2483830090001,-.580824476999851],[73.247813347,-.583184502999899],[73.24683678500017,-.585544528999861],[73.24675540500007,-.588636976999837]]],[[[73.44507897200018,-.297539971999896],[73.44450931100019,-.304294528999847],[73.43799889400012,-.298597914999945],[73.43523196700008,-.29363372199991],[73.43458092500012,-.288750908999845],[73.43506920700011,-.283623955999914],[73.44304446700002,-.292738539999917],[73.44507897200018,-.297539971999896]]],[[[73.10295657600014,.213527736000117],[73.10287519600016,.213446356000134],[73.09888756600017,.216376044000157],[73.09782962300002,.218776760000026],[73.09742272200006,.219712632000011],[73.09734134200008,.22024160400008],[73.09669030000012,.223700262000079],[73.09546959700018,.228013414000159],[73.09888756600017,.224920966000084],[73.10254967500006,.222805080000086],[73.1043400400001,.219671942000019],[73.1043400400001,.219631252000028],[73.10295657600014,.213527736000117]]],[[[73.21737714900004,.237697658000045],[73.21265709700006,.232082424000126],[73.21094811300006,.232163804000109],[73.2102970710001,.235663153000019],[73.20899498800011,.239976304000109],[73.21745853000007,.237738348000036],[73.21737714900004,.237697658000045]]],[[[73.0403751960001,.259466864000089],[73.0403751960001,.259344794000114],[73.03614342500012,.260931708000058],[73.03581790500019,.26207103100009],[73.03541100400017,.263169664000131],[73.03581790500019,.264675197000173],[73.03630618600008,.266180731000134],[73.03630618600008,.266506252000156],[73.03679446700008,.269924221000082],[73.03679446700008,.269680080000043],[73.0403751960001,.259466864000089]]],[[[73.37907962300002,.285183010000054],[73.36963951900006,.280015367000132],[73.37110436300011,.285956122000073],[73.37370853000019,.28693268400005],[73.37639407600008,.286078192000048],[73.37916100400011,.285223700000046],[73.37907962300002,.285183010000054]]],[[[72.98601321700019,.299627997000016],[72.98601321700019,.299546617000033],[72.98121178500011,.302069403000047],[72.98096764400006,.303615627000084],[72.98365319100006,.305243231000105],[72.98487389400006,.303412177000126],[72.98707116000017,.302801825000074],[72.98772220100014,.302232164000102],[72.9881291020001,.301906643000081],[72.98601321700019,.299627997000016]]],[[[73.51335696700008,.387681382000125],[73.50863691500015,.380682684000135],[73.50855553500017,.38056061399999],[73.5064396490001,.385036526000135],[73.50586998800011,.386135158000087],[73.50586998800011,.386175848000079],[73.50660241000011,.387762762000108],[73.50977623800011,.387437242000175],[73.51343834700006,.387762762000108],[73.51335696700008,.387681382000125]]],[[[72.96111087300008,.394273179000095],[72.96119225400017,.394029039000145],[72.95777428500011,.396795966000028],[72.95720462300008,.399155992000075],[72.95801842500006,.401353257000068],[72.9583439460001,.40330638200011],[72.95842532600008,.403143622000144],[72.96111087300008,.394273179000095]]],[[[72.94092858200023,.49628327],[72.94060306100002,.487290757000068],[72.93702233200023,.491441148000106],[72.93702233200023,.493638414000188],[72.94092858200023,.49632396],[72.94092858200023,.49628327]]],[[[73.4920353520001,.507798570000119],[73.49463951900012,.498968817000076],[73.49040774800008,.50067780200007],[73.48975670700023,.502590236000131],[73.49097741000017,.504950262000179],[73.491953972,.508002020000077],[73.4920353520001,.507798570000119]]],[[[73.38672936300006,.635402736000088],[73.3865666020001,.635402736000088],[73.38477623800006,.635565497000144],[73.38355553500011,.638902085000083],[73.38428795700023,.640326239000146],[73.38640384200008,.640814520000134],[73.38786868600013,.641750393000038],[73.38721764400006,.63910553600013],[73.38721764400006,.636786200000159],[73.38672936300006,.635402736000088]]],[[[73.3724064460001,.758124091000099],[73.37183678500011,.756577867000061],[73.3709416020001,.756822007000011],[73.36996504000015,.757025458000058],[73.36882571700014,.760443427000055],[73.36980228000019,.761664130000071],[73.36988366000017,.761704820000162],[73.37077884200008,.761948960000112],[73.37159264400006,.762152411000059],[73.37305748800006,.763088283000144],[73.3724064460001,.760443427000055],[73.3724064460001,.758124091000099]]],[[[73.35116621200021,.840684312000093],[73.35108483200023,.840643622000101],[73.34978274800002,.844061591000099],[73.3504337900001,.845689195000119],[73.35230553500011,.846625067000105],[73.3538517590001,.847723700000145],[73.3538517590001,.847560940000093],[73.353282097,.845607815000136],[73.35320071700002,.845282294000114],[73.35320071700002,.843207098000107],[73.35303795700005,.842393296000097],[73.3528751960001,.841538804000095],[73.35206139400012,.84113190300009],[73.35116621200021,.840684312000093]]],[[[73.3758244150001,1.788560289000117],[73.37045332100016,1.782538153000033],[73.36825605600004,1.782945054000038],[73.36817467500006,1.782945054000038],[73.36695397200006,1.786688544000157],[73.365000847,1.791083075000131],[73.36516360800007,1.791042385000139],[73.3758244150001,1.788560289000117]]],[[[73.40056399800008,1.795436916000128],[73.3943791020001,1.794745184000092],[73.39478600400011,1.798651434000178],[73.39478600400011,1.798773505000071],[73.39519290500002,1.799343166000043],[73.39665774800008,1.80141836100006],[73.39893639400006,1.803534247000158],[73.40023847700016,1.806341864000103],[73.40031985800013,1.806138414000145],[73.4012150400001,1.80170319200009],[73.40308678500011,1.798000393000052],[73.402110222,1.795599677000013],[73.40056399800008,1.795436916000128]]],[[[73.46363366000017,1.826320705000086],[73.45671634200008,1.820379950000159],[73.45411217500006,1.820542710000126],[73.45337975400017,1.823716539000174],[73.45264733200023,1.826808986000074],[73.46363366000017,1.826320705000086]]],[[[73.49919681100008,1.82778554900014],[73.49919681100008,1.827704169000157],[73.49878991000011,1.828111070000162],[73.49854576900012,1.828436591000013],[73.49805748800011,1.828802802000027],[73.49781334700018,1.829250393000024],[73.50009199300015,1.832058010000068],[73.50228925900015,1.834906317000105],[73.50733483200005,1.838364976000193],[73.5179142590001,1.842678127000099],[73.51807701900006,1.84271881700009],[73.51083418100004,1.83694082200013],[73.49919681100008,1.82778554900014]]],[[[73.53296959700006,1.861639716000028],[73.53239993600008,1.860093492000161],[73.53150475400017,1.86347077],[73.53150475400017,1.86351146],[73.53239993600008,1.865668036000088],[73.5330509770001,1.866359768000123],[73.53435306100013,1.867580471000139],[73.5364689460001,1.870103257000054],[73.53630618600008,1.86973704600014],[73.53296959700006,1.861639716000028]]],[[[73.251719597,1.892401434000092],[73.24366295700011,1.888739325000131],[73.2439884770001,1.894110419000015],[73.24561608200023,1.894842841000042],[73.2474064460001,1.893988348000121],[73.24830162900011,1.893540757000125],[73.251719597,1.892401434000092]]],[[[73.54118899800002,1.89288971600017],[73.5408634770001,1.892401434000092],[73.54981530000006,1.924994208000143],[73.5530705090001,1.93244049700013],[73.54883873800006,1.911363023000192],[73.54566491000011,1.901556708000072],[73.54118899800002,1.89288971600017]]],[[[73.54981530000006,1.965684312000136],[73.54981530000006,1.96552155200007],[73.5476994150001,1.968329169000114],[73.54786217500006,1.970607815000093],[73.55005944100017,1.976385809000149],[73.54981530000006,1.965684312000136]]],[[[73.32325280000006,1.986476955000114],[73.31836998800011,1.983099677000098],[73.31544030000006,1.985052802000055],[73.3157658210001,1.986802476000136],[73.31714928500017,1.988836981000162],[73.31723066500015,1.991400458],[73.31983483200017,1.98920319200009],[73.3226017590001,1.987982489000075],[73.32325280000006,1.986476955000114]]],[[[73.54420006600006,2.02659739800005],[73.54297936300011,2.022162176999984],[73.5403751960001,2.022528387000165],[73.54029381600006,2.022528387000165],[73.54224694100017,2.024562893000024],[73.54420006600006,2.02659739800005]]],[[[73.38697350400011,2.033026434000149],[73.38697350400011,2.028631903000076],[73.38624108200011,2.030340887000079],[73.38697350400011,2.033026434000149]]],[[[73.55144290500007,2.072577216000013],[73.55144290500007,2.072414455000128],[73.55046634200019,2.075873114000046],[73.55128014400012,2.078070380000128],[73.55323326900006,2.079901434000107],[73.55567467500006,2.082505601000193],[73.55144290500007,2.072577216000013]]],[[[73.567637566,2.109930731000063],[73.58537845100008,2.109605210000041],[73.58545983200011,2.109605210000041],[73.58350670700023,2.108140367000075],[73.58041425900015,2.105780341000028],[73.5677189460001,2.097805080000157],[73.56177819100017,2.094712632000082],[73.56177819100017,2.098781643000123],[73.56299889400006,2.102362372000101],[73.567637566,2.109930731000063]]],[[[73.03980553500017,2.164618231000091],[73.03825931100002,2.164536851000108],[73.0384220710001,2.164618231000091],[73.04371178500017,2.166449286000074],[73.0413517590001,2.164699611000074],[73.03980553500017,2.164618231000091]]],[[[73.10287519600016,2.182114976000136],[73.10230553500011,2.180975653000104],[73.09945722700016,2.181952216000084],[73.09888756600017,2.184597072000159],[73.09888756600017,2.184637762000151],[73.09978274800008,2.185532945000148],[73.10173587300002,2.185695705000114],[73.10385175900015,2.186590887000108],[73.10385175900015,2.186509507000125],[73.10287519600016,2.184393622000115],[73.10287519600016,2.182114976000136]]],[[[73.120860222,2.19179922100011],[73.11500084700006,2.19179922100011],[73.11394290500019,2.193467515000123],[73.11394290500019,2.193508205000114],[73.11491946700008,2.196437893000123],[73.11548912900017,2.199693101000165],[73.11687259200002,2.197658596000139],[73.120860222,2.19179922100011]]],[[[72.94638105600009,2.272406317000062],[72.94629967500012,2.27236562700007],[72.94312584700006,2.273016669000114],[72.94841556100013,2.274888414000174],[72.94638105600009,2.272406317000062]]],[[[72.9261173840001,2.327460028000104],[72.92701256600017,2.31606679900014],[72.92253665500019,2.31956614800005],[72.92237389400006,2.322088934000064],[72.92432701900006,2.324448960000112],[72.9261173840001,2.327460028000104]]],[[[73.34229576900006,2.342393296000154],[73.34205162900011,2.342108466000113],[73.34400475400017,2.348049221000139],[73.34392337300008,2.347438869000172],[73.34359785200016,2.34418366100013],[73.34229576900006,2.342393296000154]]],[[[73.36264082100016,2.385117906000076],[73.36255944100017,2.384914455000029],[73.3538517590001,2.429022528000104],[73.35425866000011,2.437201239000117],[73.36133873800006,2.424709377000099],[73.36532636800021,2.413885809000107],[73.36622155000012,2.411525783000144],[73.3670353520001,2.398016669000171],[73.36264082100016,2.385117906000076]]],[[[73.31519616000011,2.494126695000134],[73.31519616000011,2.49404531500015],[73.31373131600017,2.495184637000094],[73.311778191,2.496771552000041],[73.311778191,2.496893622000016],[73.31153405000006,2.499253648000064],[73.31324303500017,2.5021019550001],[73.3147892590001,2.505804755000128],[73.31519616000011,2.494126695000134]]],[[[73.14112389400012,2.550360419000128],[73.14096113400015,2.550360419000128],[73.14551842500012,2.553290106000148],[73.14380944100012,2.550360419000128],[73.14112389400012,2.550360419000128]]],[[[72.90642337300002,2.679673570000105],[72.90447024800008,2.675726630000028],[72.90113366000017,2.676174221000025],[72.9005639980002,2.677557684000178],[72.90072675900015,2.679754950000088],[72.90007571700019,2.682196356000119],[72.90259850400011,2.680975653000104],[72.90528405000012,2.680812893000137],[72.90642337300002,2.679673570000105]]],[[[72.87370853000019,2.683661200000174],[72.87370853000019,2.68357982000019],[72.86736087300008,2.686672268000081],[72.86695397200018,2.688950914000145],[72.86980228000019,2.691229559000121],[72.87256920700005,2.694159247000059],[72.87370853000019,2.683661200000174]]],[[[73.02800540500019,2.738226630000142],[73.02540123800011,2.73761627800009],[73.02239017000008,2.74164459800015],[73.0223087900001,2.74168528900006],[73.03223717500012,2.745103257000068],[73.03223717500012,2.745021877000085],[73.02800540500019,2.738226630000142]]],[[[73.35149173300013,2.770738023000121],[73.35141035200016,2.770697333000129],[73.3484806650001,2.775376695000063],[73.34929446700002,2.77716705900005],[73.35157311300011,2.777533270000063],[73.35352623800006,2.77826569200009],[73.35271243600008,2.775702216000084],[73.35352623800006,2.773627020000149],[73.35352623800006,2.771918036000145],[73.35149173300013,2.770738023000121]]],[[[73.3992619150001,2.785711981000148],[73.39063561300006,2.775376695000063],[73.39185631600017,2.78148021000014],[73.3943791020001,2.784328518000081],[73.39747155000006,2.785305080000143],[73.3992619150001,2.785711981000148]]],[[[73.55103600400017,2.890611070000091],[73.54908287900011,2.88812897300015],[73.54908287900011,2.888739325000032],[73.548594597,2.8927269550001],[73.54875735800007,2.892604885000125],[73.55014082100016,2.891343492000118],[73.55103600400017,2.890611070000091]]],[[[73.36085045700005,2.897569078000075],[73.3606876960001,2.897528387000179],[73.3572697270001,2.899807033000144],[73.3572697270001,2.90119049700013],[73.35914147200006,2.90228913],[73.36036217500006,2.903876044000029],[73.36101321700002,2.901516018000152],[73.36231530000012,2.899725653000161],[73.36280358200011,2.898382880000085],[73.36085045700005,2.897569078000075]]],[[[73.01490319100006,2.947414455000128],[73.01042728000007,2.945257880000128],[73.00993899800008,2.945705471000125],[73.00904381600017,2.946437893000066],[73.00904381600017,2.949448960000069],[73.00904381600017,2.949530341000141],[73.00847415500013,2.95331452],[73.01490319100006,2.947414455000128]]],[[[73.56421959700012,2.95461660400008],[73.56202233200011,2.94611237200013],[73.56128991000017,2.948472398000178],[73.56177819100017,2.950384833000143],[73.56421959700012,2.954738674000055],[73.56421959700012,2.95461660400008]]],[[[73.58586673300007,2.961533921000168],[73.5774845710001,2.951157945000162],[73.5784611340001,2.957342841000141],[73.58130944100006,2.960150458000086],[73.5841577480002,2.961249091000127],[73.58594811300006,2.961615302000055],[73.58586673300007,2.961533921000168]]],[[[72.86768639400012,2.960882880000114],[72.8650822270001,2.958156643000152],[72.86491946700002,2.960882880000114],[72.87012780000012,2.969183661000017],[72.87012780000012,2.969061591000042],[72.86768639400012,2.960882880000114]]],[[[72.90447024800008,3.077378648000149],[72.89991295700023,3.076849677000084],[72.89942467500006,3.078192450000159],[72.90072675900015,3.080633856000105],[72.90162194100006,3.083807684000163],[72.90284264400006,3.081854559000121],[72.90414472700016,3.081488348000107],[72.90479576900012,3.081284898000149],[72.906016472,3.080389716000155],[72.90447024800008,3.077378648000149]]],[[[73.612559441,3.10297272300005],[73.60840905000006,3.100409247000044],[73.61304772200012,3.106756903000161],[73.612559441,3.10297272300005]]],[[[72.9817814460001,3.105047919000157],[72.97820071700014,3.102728583000101],[72.97510826900006,3.104193427000055],[72.97535241000017,3.105698960000112],[72.9768986340001,3.107652085000055],[72.9778751960001,3.110174872000158],[72.97803795700017,3.110052802000098],[72.97917728000019,3.10805898600016],[72.9812931650001,3.106634833000086],[72.9817814460001,3.105047919000157]]],[[[73.04509524800002,3.198919989000046],[73.04070071700008,3.19847239800005],[73.04021243600008,3.199733791000057],[73.04021243600008,3.199774481000048],[73.0413517590001,3.202297268000152],[73.04224694100012,3.20547109600011],[73.04346764400012,3.203517971000068],[73.0435490240001,3.203477281000076],[73.04566491000011,3.202866929000123],[73.04688561300011,3.202053127000113],[73.04509524800002,3.198919989000046]]],[[[73.03565514400012,3.247788804000038],[73.03199303500017,3.245550848000136],[73.03174889400012,3.245672919000029],[73.02898196700008,3.246893622000044],[73.02930748800011,3.248439846000082],[73.03077233200017,3.250474351000108],[73.03174889400012,3.252997137000122],[73.03183027400021,3.252875067000147],[73.03321373800011,3.250881252000113],[73.03516686300006,3.249335028000076],[73.03565514400012,3.247788804000038]]],[[[72.83155358200017,3.305609442000133],[72.8313908210001,3.305609442000133],[72.83122806100002,3.306830145000063],[72.8323673840001,3.309312242000175],[72.83326256600017,3.312486070000063],[72.83448326900006,3.31053294500019],[72.83668053500017,3.310003973000121],[72.83708743600008,3.309637762000108],[72.83765709700006,3.309068101000136],[72.8361108730002,3.305975653000147],[72.83155358200017,3.305609442000133]]],[[[73.51913496200015,3.356594143000137],[73.51921634200014,3.35639069200009],[73.51636803500017,3.361232815000079],[73.51653079500014,3.361070054000024],[73.5174259770001,3.360296942],[73.518809441,3.359116928999981],[73.5188908210001,3.358872789000031],[73.51913496200015,3.356594143000137]]],[[[73.75310306100019,3.446437893000152],[73.75318444100017,3.446356512000079],[73.751231316,3.447129624000098],[73.74854576900006,3.448187567000147],[73.7483830090001,3.448635158000144],[73.74756920700005,3.451117255000071],[73.74773196700002,3.450995184000092],[73.75310306100019,3.446437893000152]]],[[[73.50847415500019,3.49656810100015],[73.50855553500017,3.496486721000068],[73.50619550900015,3.4976260440001],[73.50611412900017,3.497707424000083],[73.50586998800011,3.501206773000163],[73.50847415500019,3.49656810100015]]],[[[72.83505293100004,3.505438544000015],[72.83106530000006,3.503566799000126],[72.82805423300007,3.505438544000015],[72.8279728520001,3.505438544000015],[72.82862389400006,3.506781317],[72.8304142590001,3.508246161000059],[72.8313908210001,3.510565497000115],[72.83155358200017,3.51040273600006],[72.83269290500019,3.508246161000059],[72.83472741000011,3.506781317],[72.83513431100002,3.505438544000015],[72.83505293100004,3.505438544000015]]],[[[72.79639733200011,3.510891018000137],[72.7911889980002,3.510891018000137],[72.79078209700018,3.51203034100017],[72.79078209700018,3.512111721000153],[72.79273522200006,3.514227606000162],[72.79371178500011,3.516913153000132],[72.7937931650001,3.516750393000081],[72.79476972700016,3.515326239000103],[72.79517662900017,3.514634507000068],[72.79761803500011,3.513128973000121],[72.79883873800006,3.511948960000098],[72.79639733200011,3.510891018000137]]],[[[72.91179446700019,3.541734117000104],[72.91163170700023,3.541652736000032],[72.91570071700019,3.548976955000114],[72.91993248800011,3.552150783000087],[72.92432701900006,3.552476304000109],[72.92839603000007,3.551906643000137],[72.91179446700019,3.541734117000104]]],[[[72.94556725400017,3.61371491100013],[72.9415796230002,3.611883856000162],[72.93848717500012,3.61371491100013],[72.93897545700011,3.615139065000108],[72.940684441,3.616644598000065],[72.94190514400012,3.618841864000146],[72.94312584700006,3.616644598000065],[72.94442793100015,3.615708726000165],[72.94516035200016,3.615139065000108],[72.94556725400017,3.61371491100013]]],[[[72.69735761800021,3.718817450000032],[72.69459069100006,3.7149925800001],[72.69247480600004,3.716294664000188],[72.68970787900017,3.71796295800003],[72.68970787900017,3.720851955000057],[72.69157962300008,3.723578192000119],[72.69255618600002,3.726955471000125],[72.69255618600002,3.726752020000077],[72.69402103000019,3.72333405200007],[72.69646243600002,3.721014716000113],[72.6974389980002,3.718817450000032],[72.69735761800021,3.718817450000032]]],[[[72.95582116000011,3.72870514500012],[72.9519962900001,3.726874091000141],[72.94898522200018,3.728583075000145],[72.9493921230002,3.730047919000114],[72.95118248800006,3.731512762000165],[72.95240319100017,3.733832098000136],[72.95378665500007,3.731634833000143],[72.95582116000011,3.730129299000097],[72.95582116000011,3.72870514500012]]],[[[72.9493921230002,3.766994533000158],[72.94532311300006,3.765204169000171],[72.94491621200021,3.765448309000121],[72.94239342500012,3.766953843000167],[72.94239342500012,3.766994533000158],[72.94288170700011,3.768377997000059],[72.9446720710001,3.769842841000113],[72.94581139400012,3.772121486000089],[72.9471134770001,3.769842841000113],[72.9485783210001,3.768784898000064],[72.94906660200016,3.768377997000059],[72.9493921230002,3.766994533000158]]],[[[72.9480900400001,3.831691799000097],[72.94410241000011,3.829901434000107],[72.94117272200018,3.831691799000097],[72.94166100400017,3.833075262000165],[72.94336998800006,3.834662177000112],[72.94459069100012,3.836859442000105],[72.94581139400012,3.834662177000112],[72.9466251960001,3.834011135000154],[72.94776451900006,3.833075262000165],[72.9480900400001,3.831691799000097]]],[[[73.43230228000002,3.841742255000071],[73.43230228000002,3.841701565000079],[73.4314884770001,3.843695380000114],[73.4324650400001,3.846828518000095],[73.43392988400015,3.847398179000066],[73.43572024800002,3.846828518000095],[73.43726647200018,3.846625067000133],[73.43523196700008,3.844916083000129],[73.43344160200016,3.842718817000147],[73.43230228000002,3.841742255000071]]],[[[73.43848717500012,3.91661204600014],[73.43816165500007,3.916449286000088],[73.44353274800002,3.920558986000131],[73.44345136800004,3.920477606000148],[73.44304446700002,3.918768622000144],[73.43848717500012,3.91661204600014]]],[[[73.469981316,3.935126044000157],[73.46753991000017,3.933661200000103],[73.46924889400006,3.936957098000136],[73.47152754000015,3.938706773000135],[73.47730553500011,3.942124742000132],[73.47714277400004,3.942002671000168],[73.469981316,3.935126044000157]]],[[[73.34489993600008,3.944566148000163],[73.34148196700008,3.94204336100016],[73.34148196700008,3.943101304000109],[73.3450626960001,3.94472890800013],[73.34489993600008,3.944566148000163]]],[[[72.7066349620001,3.997910874000127],[72.70460045700023,3.99640534100017],[72.69947350400011,3.998114325000174],[72.69939212300002,3.998195705000157],[72.69914798300007,3.999335028000104],[72.6990666020001,3.999457098000079],[72.6990666020001,3.999497789000159],[72.70118248800006,4.000921942000133],[72.70313561300006,4.003322658000087],[72.70362389400006,4.000921942000133],[72.70476321700019,3.999904690000079],[72.70557701900012,3.999212958000129],[72.70622806100008,3.99843984600011],[72.70671634200008,3.997951565000122],[72.7066349620001,3.997910874000127]]],[[[73.50831139400006,4.093410549000126],[73.50831139400006,4.093329169000143],[73.50456790500019,4.096584377000099],[73.50245201900012,4.098537502000141],[73.50228925900015,4.100775458000129],[73.50521894600016,4.101996161000145],[73.5081486340001,4.103583075000174],[73.50831139400006,4.093410549000126]]],[[[73.41911868600019,4.115749416000156],[73.41895592500012,4.115708726000165],[73.42261803500017,4.118353583000058],[73.42253665500019,4.118190822000187],[73.42139733200017,4.116359768000123],[73.41911868600019,4.115749416000156]]],[[[73.54931724081806,4.212284133960466],[73.53817420541165,4.183312241903849],[73.52658544858897,4.171277763664932],[73.51089134292752,4.162087459716233],[73.48691624254226,4.164146221004884],[73.4766646499684,4.168603435167441],[73.4312010655103,4.184649406152602],[73.43209250834283,4.189998063147684],[73.51201489529225,4.186300883534827],[73.52053323825223,4.191122568286119],[73.52613972717276,4.20782691979791],[73.53327126983291,4.231004433443232],[73.54619719090434,4.243038911682149],[73.5528830121481,4.236798811854527],[73.55199156931556,4.228330104945641],[73.54931724081806,4.212284133960466]]],[[[72.97575931100019,4.260402736000089],[72.97250410200016,4.260402736000089],[72.97152754000015,4.261623440000108],[72.97144616000017,4.26357656500015],[72.970469597,4.265936591000099],[72.97063235800007,4.265814520000134],[72.97250410200016,4.264146226000122],[72.974375847,4.263251044000128],[72.97559655000012,4.262355861000131],[72.97575931100019,4.260402736000089]]],[[[72.9544376960001,4.261501369000129],[72.95435631600006,4.261460679000138],[72.95118248800006,4.262355861000131],[72.94516035200016,4.266302802000112],[72.95866946700002,4.262518622000101],[72.95858808700004,4.262518622000101],[72.9544376960001,4.261501369000129]]],[[[73.59571373800011,4.342189846000153],[73.59245853000007,4.340155341000127],[73.58936608200005,4.340562242000132],[73.58912194100006,4.340562242000132],[73.59587649800008,4.342271226000136],[73.59571373800011,4.342189846000153]]],[[[73.61182701900006,4.356512762000136],[73.6095483730002,4.355617580000143],[73.60767662900011,4.358058986000089],[73.60767662900011,4.358099677000084],[73.6082462900001,4.359442450000159],[73.60987389400006,4.360825914000145],[73.61150149800008,4.363104559000121],[73.61150149800008,4.362941799000154],[73.61133873800011,4.360296942000076],[73.61198978000007,4.358099677000084],[73.61198978000007,4.358058986000089],[73.61182701900006,4.356512762000136]]],[[[73.63705488400015,4.363999742000104],[73.63705488400015,4.363959052000112],[73.63575280000006,4.364243882000054],[73.63379967500012,4.364650783000158],[73.63363691500015,4.36469147300015],[73.6316837900001,4.368475653000161],[73.6329858730002,4.369533596000125],[73.63542728000002,4.369574286000116],[73.63795006600006,4.370550848000093],[73.63786868600008,4.370428778000118],[73.63705488400015,4.368068752000156],[73.63746178500017,4.365627346000125],[73.63746178500017,4.365464585000069],[73.63705488400015,4.363999742000104]]],[[[73.6683048840001,4.386867580000114],[73.6661889980002,4.385931708000129],[73.66431725400011,4.388332424000083],[73.6648869150001,4.389797268000137],[73.66651451900012,4.391302802000098],[73.66797936300011,4.39350006700009],[73.66797936300011,4.393459377000099],[73.6678166020001,4.390692450000131],[73.66846764400006,4.388495184000135],[73.6683048840001,4.386867580000114]]],[[[73.69760175900015,4.431463934000092],[73.69743899800008,4.431382554000109],[73.70281009200002,4.434719143000137],[73.70085696700008,4.432277736000103],[73.69760175900015,4.431463934000092]]],[[[72.95704186300011,4.438299872000115],[72.95606530000006,4.422105210000069],[72.94890384200019,4.422919012000165],[72.9471134770001,4.423081773000135],[72.94336998800006,4.431586005000071],[72.95704186300011,4.438299872000115]]],[[[73.70264733200005,4.452907619000129],[73.69988040500019,4.449164130000099],[73.69996178500017,4.451646226000122],[73.70281009200002,4.453029690000108],[73.70264733200005,4.452907619000129]]],[[[73.37671959700018,4.474432684000149],[73.37728925900015,4.465277411000074],[73.37387129000015,4.466986395000077],[73.37387129000015,4.468817450000145],[73.37387129000015,4.468898830000128],[73.37525475400011,4.471177476000193],[73.37671959700018,4.474432684000149]]],[[[73.55388431100019,4.61391836100016],[73.5516056650001,4.612982489000089],[73.55095462300008,4.613836981000176],[73.54981530000006,4.615383205000128],[73.55046634200019,4.616848049000097],[73.55201256600006,4.618231512000165],[73.55355879000015,4.620510158000144],[73.55355879000015,4.620266018000109],[73.55347741000017,4.617661851000193],[73.55404707100016,4.615464585000112],[73.55388431100019,4.61391836100016]]],[[[73.40528405000006,4.628404039000117],[73.40300540500013,4.627427476000136],[73.4012150400001,4.62982819200009],[73.40186608200005,4.631333726000136],[73.40357506600017,4.632757880000114],[73.40495853000007,4.634995835000098],[73.40495853000007,4.634751695000148],[73.40495853000007,4.63222890800013],[73.40552819100006,4.629950262000151],[73.40528405000006,4.628404039000117]]],[[[73.49073326900012,4.716742255000085],[73.48845462300002,4.715969143000152],[73.48796634200008,4.716538804000123],[73.48666425900015,4.718207098000136],[73.48731530000012,4.719794012000165],[73.48902428500011,4.72117747600015],[73.49048912900017,4.723374742000132],[73.49048912900017,4.723334052000141],[73.49040774800008,4.720607815000079],[73.49040774800008,4.720567124000098],[73.49097741000017,4.718329169000114],[73.49097741000017,4.718288479000123],[73.49073326900012,4.716742255000085]]],[[[72.96965579500008,4.880723374000127],[72.96949303500011,4.880519924000083],[72.9700626960001,4.890366929000095],[72.97266686300011,4.894354559000163],[72.97608483200011,4.895168361000089],[72.97934004000015,4.895453192000119],[72.97934004000015,4.895371812000136],[72.96965579500008,4.880723374000127]]],[[[72.92269941500015,4.898993231000105],[72.92090905000006,4.897853908000158],[72.91765384200002,4.898504950000117],[72.91749108200005,4.8985863300001],[72.92286217500012,4.899074611000089],[72.92269941500015,4.898993231000105]]],[[[73.44727623800006,4.971340236000145],[73.43653405000006,4.969875393000095],[73.43897545700011,4.974554755000114],[73.44117272200018,4.974920966000127],[73.44385826900006,4.973049221000153],[73.44727623800006,4.971340236000145]]],[[[72.90943444100006,5.030788479000094],[72.90919030000006,5.030585028000147],[72.91016686300006,5.032700914000145],[72.91285241000011,5.034084377000127],[72.90943444100006,5.030788479000094]]],[[[72.92440839900004,5.033067124000169],[72.92432701900006,5.033026434000178],[72.92774498800011,5.036525783000158],[72.92766360800013,5.036281643000123],[72.92717532600014,5.034247137000094],[72.92709394600016,5.033921617000161],[72.92571048300007,5.033474026000164],[72.92440839900004,5.033067124000169]]],[[[73.04346764400012,5.118841864000117],[73.04127037900011,5.118394273000121],[73.0447697270001,5.121812242000132],[73.0447697270001,5.121649481000162],[73.04346764400012,5.118841864000117]]],[[[73.05144290500007,5.126654364000117],[73.04761803500017,5.126369533000087],[73.0452580090001,5.12889232000019],[73.04607181100013,5.130275783000073],[73.04786217500012,5.13129303600013],[73.04908287900011,5.133286851000165],[73.0491642590001,5.133164781000104],[73.04997806100019,5.130357164000145],[73.05144290500007,5.128078518000081],[73.05144290500007,5.126654364000117]]],[[[73.08790123800006,5.157985744000158],[73.08773847700016,5.157945054000081],[73.09131920700023,5.161363023000178],[73.09099368600013,5.158514716000141],[73.08790123800006,5.157985744000158]]],[[[73.10694420700023,5.171779690000079],[73.11052493600019,5.17031484600011],[73.1101994150001,5.170355536000102],[73.10710696700019,5.170965887000151],[73.10385175900015,5.173041083000086],[73.10417728000007,5.172919012000108],[73.10694420700023,5.171779690000079]]],[[[72.85686282600008,5.234564520000134],[72.85661868600008,5.234442450000159],[72.86011803500011,5.237941799000154],[72.86003665500007,5.237819729000179],[72.85922285200016,5.235500393000123],[72.85686282600008,5.234564520000134]]],[[[73.13184655000006,5.242499091000099],[73.12842858200017,5.241156317000119],[73.13184655000006,5.244574286000116],[73.13184655000006,5.242499091000099]]],[[[73.49732506600017,5.245062567000105],[73.49724368600019,5.245021877000113],[73.49382571700019,5.245998440000093],[73.499766472,5.246893622000172],[73.49968509200002,5.246812242000189],[73.49732506600017,5.245062567000105]]],[[[73.5828556650001,5.275580145000149],[73.57764733200011,5.274562893000081],[73.5701603520001,5.27667877800009],[73.56999759200008,5.276760158000073],[73.57593834700018,5.279933986000131],[73.58204186300006,5.281805731000105],[73.58790123800011,5.282619533000116],[73.5935978520001,5.282700914000188],[73.5828556650001,5.275580145000149]]],[[[73.1126408210001,5.298447984000148],[73.1092228520001,5.295152085000112],[73.1092228520001,5.296698309000149],[73.11280358200005,5.298570054000123],[73.1126408210001,5.298447984000148]]],[[[73.46436608200011,5.306870835000112],[73.46420332100016,5.30683014500012],[73.46705162900011,5.308335679000066],[73.4671330090001,5.308335679000066],[73.46843509200008,5.308091539000117],[73.47022545700017,5.307766018000095],[73.47014407600008,5.307725328000103],[73.46436608200011,5.306870835000112]]],[[[73.62940514400012,5.332749742000118],[73.62720787900011,5.331122137000179],[73.62330162900011,5.331854559000121],[73.62956790500019,5.332831122000101],[73.62940514400012,5.332749742000118]]],[[[73.64006595100014,5.342189846000125],[73.63990319100017,5.342189846000125],[73.6434025400001,5.34393952000012],[73.64665774800014,5.343247789000174],[73.64649498800006,5.343247789000174],[73.64006595100014,5.342189846000125]]],[[[72.95240319100017,5.350083726000193],[72.94955488400015,5.349310614000089],[72.95313561300011,5.352769273000178],[72.95240319100017,5.350083726000193]]],[[[73.4012150400001,5.356146552000098],[73.39942467500006,5.355454820000162],[73.39616946700019,5.357123114000075],[73.39600670700023,5.358465887000165],[73.39714603000007,5.360174872000158],[73.39747155000006,5.362209377000099],[73.39755293100009,5.362005927000141],[73.39869225400011,5.359605210000098],[73.40064537900017,5.357652085000055],[73.4012150400001,5.356146552000098]]],[[[73.32325280000006,5.368231512000108],[73.32488040500019,5.366766669000143],[73.32496178500017,5.366766669000143],[73.32789147200018,5.367010809000178],[73.32797285200016,5.367010809000178],[73.32821699300021,5.367010809000178],[73.33008873800006,5.366888739000117],[73.33008873800006,5.366848049000126],[73.32886803500017,5.364243882000125],[73.31934655000006,5.362941799000126],[73.3191837900001,5.362941799000126],[73.31771894600016,5.365790106000162],[73.3191837900001,5.366644598000079],[73.32203209700006,5.366888739000117],[73.32325280000006,5.368231512000108]]],[[[73.63249759200019,5.386257229000137],[73.63249759200019,5.386053778000175],[73.6277775400001,5.413275458000086],[73.62956790500019,5.418524481000162],[73.63453209700006,5.410956122000115],[73.63672936300011,5.402899481000176],[73.63672936300011,5.402858791000185],[73.63591556100019,5.394476630000128],[73.63249759200019,5.386257229000137]]],[[[73.34489993600008,5.426825262000136],[73.34457441500015,5.426743882000068],[73.34750410200016,5.428778387000179],[73.35075931100019,5.427679755000142],[73.34489993600008,5.426825262000136]]],[[[73.5374455090001,5.451402085000069],[73.53492272200018,5.449855861000117],[73.53126061300006,5.450425523000178],[73.5374455090001,5.451402085000069]]],[[[73.36093183700004,5.457953192000133],[73.3606876960001,5.457831122000158],[73.36296634200008,5.463080145000149],[73.36296634200008,5.462795315000122],[73.36312910200016,5.45937734600011],[73.36093183700004,5.457953192000133]]],[[[73.00261478000007,5.457586981000119],[73.00098717500006,5.456244208000129],[72.99903405000012,5.461004950000131],[72.99903405000012,5.461086330000114],[73.00001061300006,5.4624697940001],[73.00277754000015,5.4624697940001],[73.00562584700018,5.463202216000127],[73.00554446700019,5.46312083500014],[73.00416100400011,5.461411851000136],[73.00261478000007,5.457586981000119]]],[[[72.9402775400001,5.462144273000163],[72.93824303500017,5.461493231000119],[72.93702233200023,5.465521552000098],[72.93702233200023,5.465562242000175],[72.93816165500019,5.466701565000122],[72.94060306100002,5.46678294500019],[72.94312584700006,5.467596747000115],[72.94304446700008,5.467474677000141],[72.9415796230002,5.465562242000175],[72.94109134200019,5.463568427000141],[72.9402775400001,5.462144273000163]]],[[[73.0110783210001,5.486843166000156],[73.01099694100006,5.486802476000165],[73.00993899800008,5.490220445000162],[73.00977623800011,5.490871486000117],[73.00977623800011,5.490912177000112],[73.01091556100008,5.492132880000128],[73.01319420700023,5.492132880000128],[73.01587975400011,5.49286530200007],[73.01433353000007,5.490912177000112],[73.01384524800008,5.488918361000074],[73.01303144600016,5.487453518000109],[73.0110783210001,5.486843166000156]]],[[[72.88111412900011,5.488470770000077],[72.87916100400011,5.487860419000114],[72.87769616000017,5.492092190000136],[72.87769616000017,5.492132880000128],[72.8787541020001,5.493150132000096],[72.8811955090001,5.493231512000165],[72.88396243600002,5.494086005000085],[72.88249759200008,5.492010809000149],[72.88184655000012,5.490057684000107],[72.88111412900011,5.488470770000077]]],[[[73.46241295700005,5.543605861000117],[73.4593205090001,5.541734117000146],[73.45647220100014,5.54262929900014],[73.45630944100017,5.542669989000132],[73.46241295700005,5.543605861000117]]],[[[73.01417076900012,5.611599026000178],[73.01400800900015,5.611558335000098],[73.01286868600019,5.615708726000136],[73.01392662900017,5.616888739000061],[73.01644941500015,5.616888739000061],[73.01905358200005,5.617824611000145],[73.01897220100008,5.617661851000179],[73.01734459700006,5.615708726000136],[73.01685631600017,5.613755601000179],[73.01612389400006,5.612250067000133],[73.01417076900012,5.611599026000178]]],[[[73.01189212300014,5.671535549000112],[73.00977623800011,5.670843817000076],[73.00855553500011,5.674994208000115],[73.00855553500011,5.675034898000192],[73.00977623800011,5.676092841000155],[73.0120548840001,5.676255601000122],[73.01465905000006,5.676988023000149],[73.01465905000006,5.676947333000072],[73.01319420700023,5.675034898000192],[73.01246178500011,5.673000393000081],[73.01189212300014,5.671535549000112]]],[[[73.00562584700018,5.713324286000145],[73.0037541020001,5.711127020000149],[73.00318444100006,5.708726304000109],[73.00228925900015,5.707098700000174],[72.99976647200006,5.706976630000114],[72.99878991000017,5.711940822000159],[72.99878991000017,5.711981512000151],[73.00017337300002,5.71320221600017],[73.00025475400011,5.71320221600017],[73.0008244150001,5.713120835000098],[73.00277754000015,5.712836005000057],[73.00562584700018,5.713324286000145]]],[[[73.39242597700016,5.736802476000193],[73.38070722700016,5.714585679000052],[73.38062584700018,5.714748440000108],[73.37989342500006,5.715033270000149],[73.37981204500008,5.71507396000014],[73.37956790500002,5.715155341000113],[73.38257897200006,5.722113348000107],[73.39283287900017,5.737697658000101],[73.39242597700016,5.736802476000193]]],[[[72.98283938900013,5.76255931200015],[72.98275800900015,5.762518622000158],[72.98682701900012,5.770738023000149],[72.98585045700023,5.765570380000142],[72.98283938900013,5.76255931200015]]],[[[73.38453209700018,5.786932684000107],[73.38070722700016,5.784125067000147],[73.37680097700016,5.787339585000112],[73.37769616000017,5.789536851000193],[73.3802189460001,5.791693427000112],[73.38233483200011,5.794989325000145],[73.38233483200011,5.794745184000107],[73.3826603520001,5.791693427000112],[73.38428795700023,5.789252020000077],[73.38453209700018,5.787014065000093],[73.38453209700018,5.786932684000107]]],[[[72.97510826900006,5.804551499000127],[72.97510826900006,5.804429429000066],[72.97242272200006,5.807033596000153],[72.97095787900011,5.808417059000135],[72.9710392590001,5.810451565000065],[72.97380618600002,5.811712958000072],[72.97657311300011,5.813625393000123],[72.97657311300011,5.813544012000151],[72.97510826900006,5.804551499000127]]],[[[73.4337671230002,5.83087799700013],[73.43344160200016,5.830715236000074],[73.43897545700011,5.838283596000125],[73.443125847,5.841253973000136],[73.44654381600006,5.841498114000089],[73.44988040500007,5.840765692000147],[73.4497990240001,5.840725002000156],[73.4337671230002,5.83087799700013]]],[[[72.96648196700002,5.850287177000141],[72.96648196700002,5.850246486000145],[72.962657097,5.853461005000114],[72.96192467500006,5.856675523000163],[72.96363366000011,5.864325262000094],[72.9637150400001,5.864040432000152],[72.96648196700002,5.850287177000141]]],[[[73.42847741000011,5.904445705000114],[73.42628014400012,5.90326569200009],[73.42318769600016,5.906887111000145],[73.42408287900011,5.908433335000098],[73.42660566500015,5.909491278000147],[73.4290470710001,5.911363023000106],[73.4290470710001,5.911200262000151],[73.42847741000011,5.908596096000153],[73.42847741000011,5.90851471600017],[73.42847741000011,5.906195380000114],[73.42847741000011,5.904445705000114]]],[[[72.93165123800011,5.969061591000155],[72.93018639400006,5.956935940000065],[72.92579186300006,5.963242906000104],[72.92579186300006,5.963283596000096],[72.92644290500019,5.966294664000188],[72.93165123800011,5.969061591000155]]],[[[73.38982181100008,5.970282294000171],[73.39533279100007,5.957801545000109],[73.38672936300006,5.961981512000094],[73.38453209700018,5.96474844000015],[73.38982181100008,5.970282294000171]]],[[[72.9134220710001,5.97736237200013],[72.91285241000011,5.976304429000081],[72.91138756600017,5.977077541000099],[72.90984134200002,5.977932033000101],[72.90967858200005,5.982123114000132],[72.91089928500011,5.982733466000099],[72.91309655000006,5.981634833000143],[72.91570071700019,5.981350002000113],[72.91561933700021,5.98126862200013],[72.913828972,5.979641018000109],[72.9134220710001,5.97736237200013]]],[[[73.25066165500007,6.083278713000127],[73.24903405000006,6.079535223000093],[73.24545332100016,6.079779364000132],[73.25074303500011,6.083400783000101],[73.25066165500007,6.083278713000127]]],[[[73.24724368600008,6.107977606000105],[73.24683678500017,6.107733466000155],[73.2488712900001,6.110174872000101],[73.25212649800002,6.11123281500015],[73.25196373800006,6.111151434000163],[73.24724368600008,6.107977606000105]]],[[[73.21900475400011,6.129299221000082],[73.2151798840001,6.12856679900014],[73.22046959700006,6.132066148000135],[73.22038821700008,6.131984768000152],[73.21900475400011,6.129299221000082]]],[[[73.26531009200008,6.150661526000135],[73.26514733200011,6.15062083500014],[73.26539147200006,6.153550523000163],[73.26661217500006,6.154852606000162],[73.26823978000019,6.15558502800009],[73.27027428500011,6.156927802000084],[73.27019290500007,6.156805731000105],[73.26880944100017,6.154486395000149],[73.26807701900006,6.152411200000131],[73.26726321700002,6.150946356000162],[73.26531009200008,6.150661526000135]]],[[[73.2189233730002,6.172267971000125],[73.21404056100002,6.168768622000144],[73.21583092500012,6.171210028000175],[73.2190861340001,6.172349351000108],[73.2189233730002,6.172267971000125]]],[[[73.2708439460001,6.189357815000079],[73.26807701900006,6.178697007000139],[73.26539147200006,6.182766018000109],[73.2659611340001,6.185003973000093],[73.26840254000015,6.186835028000161],[73.2708439460001,6.189439195000148],[73.2708439460001,6.189357815000079]]],[[[73.0291447270001,6.218980210000126],[73.02898196700008,6.218817450000159],[73.03044681100002,6.221014716000141],[73.03419030000006,6.222357489000132],[73.0340275400001,6.222235419000157],[73.0291447270001,6.218980210000126]]],[[[73.24390709700006,6.231634833000101],[73.24024498800006,6.228949286000116],[73.23633873800006,6.232123114000089],[73.23707116000011,6.234279690000079],[73.23975670700011,6.236476955000072],[73.24170983200023,6.239691473000121],[73.24219811300011,6.236476955000072],[73.24366295700011,6.23403554900014],[73.24390709700006,6.231634833000101]]],[[[73.12305748800011,6.283351955000128],[73.1228947270001,6.283351955000128],[73.12842858200017,6.286851304000109],[73.12614993600019,6.284002997000172],[73.12305748800011,6.283351955000128]]],[[[73.20915774800008,6.286688544000143],[73.20875084700018,6.286444403000104],[73.20932050900015,6.286851304000109],[73.2151798840001,6.294826565000079],[73.2151798840001,6.294663804000109],[73.21306399800008,6.289211330000157],[73.20915774800008,6.286688544000143]]],[[[73.0784611340001,6.305121161000088],[73.07813561300011,6.305080471000096],[73.0833439460001,6.308579820000176],[73.083262566,6.308457749000112],[73.08139082100016,6.305609442000076],[73.0784611340001,6.305121161000088]]],[[[73.20191491000011,6.322170315000136],[73.20101972700016,6.318264065000136],[73.19507897200006,6.319647528000118],[73.19499759200008,6.319932359000148],[73.19418379000015,6.321600653000161],[73.19597415500002,6.324286200000145],[73.19703209700018,6.327460028000118],[73.19711347700016,6.327297268000152],[73.19825280000012,6.32469310100015],[73.19931074300004,6.324204820000162],[73.20036868600019,6.323716539000174],[73.20191491000011,6.322170315000136]]],[[[73.11963951900006,6.329169012000122],[73.11931399800008,6.328924872000172],[73.1209416020001,6.331040757000096],[73.12452233200017,6.33250560100015],[73.12419681100002,6.332261460000112],[73.11963951900006,6.329169012000122]]],[[[72.95394941500015,6.345607815000122],[72.95313561300011,6.343491929000109],[72.94849694100012,6.344427802000098],[72.94776451900006,6.34593333500014],[72.94898522200018,6.348049221000153],[72.9493921230002,6.349798895000149],[72.9493921230002,6.349676825000174],[72.95093834700006,6.347723700000131],[72.95118248800006,6.347601630000057],[72.95297285200016,6.34662506700009],[72.95337975400017,6.346258856000162],[72.95394941500015,6.345607815000122]]],[[[73.18726647200006,6.350775458000115],[73.1849064460001,6.349066473000121],[73.18360436300006,6.347316799000126],[73.18213951900012,6.346340236000145],[73.18018639400006,6.347113348000079],[73.1810001960001,6.34983958500014],[73.18262780000012,6.350490627000085],[73.184825066,6.350327867000118],[73.18726647200006,6.350775458000115]]],[[[73.02491295700011,6.364813544000171],[73.02418053500017,6.362697658000158],[73.019297722,6.363592841000155],[73.01872806100002,6.365220445000176],[73.0198673840001,6.367173570000119],[73.02051842500012,6.368963934000107],[73.0218205090001,6.366766669000114],[73.02393639400006,6.365871486000131],[73.02491295700011,6.364813544000171]]],[[[72.68751061300011,6.4122582050001],[72.68913821700014,6.411607164000145],[72.69092858200011,6.411607164000145],[72.69084720100014,6.41156647300015],[72.6888126960001,6.409735419000171],[72.68718509200008,6.407416083000115],[72.6858830090001,6.406480210000126],[72.684825066,6.408392645000092],[72.6858830090001,6.411607164000145],[72.68751061300011,6.4122582050001]]],[[[72.90748131600017,6.435858466000127],[72.9065861340001,6.433823960000098],[72.90202884200008,6.434759833000086],[72.90186608200011,6.435044664000117],[72.90113366000017,6.436346747000115],[72.9021916020001,6.438299872000158],[72.90284264400006,6.440171617000132],[72.90447024800008,6.437974351000136],[72.90642337300002,6.436916408000087],[72.90691165500002,6.436428127000099],[72.90748131600017,6.43593984600011],[72.90748131600017,6.435858466000127]]],[[[73.04330488400015,6.433864651000178],[73.0431421230002,6.433701890000123],[73.0488132780001,6.441342196000079],[73.0462345710001,6.436265367000132],[73.04330488400015,6.433864651000178]]],[[[72.89722741000017,6.447821356000162],[72.89633222700016,6.445786851000136],[72.89177493600002,6.446722723000121],[72.89161217500006,6.447007554000052],[72.89087975400011,6.448228257000068],[72.89210045700023,6.450262762000094],[72.89258873800006,6.452093817000076],[72.89421634200008,6.449937242000161],[72.89616946700019,6.448879299000112],[72.89690188900013,6.448187567000076],[72.89722741000017,6.447902736000145],[72.89722741000017,6.447821356000162]]],[[[72.95899498800006,6.555487372000144],[72.95801842500006,6.554348049000112],[72.95582116000011,6.555324611000089],[72.95679772200018,6.560003973000107],[72.9583439460001,6.560695705000143],[72.95842532600008,6.560655015000151],[72.96021569100017,6.559515692000119],[72.96208743600008,6.55902741100013],[72.95997155000006,6.557521877000085],[72.95899498800006,6.555487372000144]]],[[[72.92774498800011,6.558946031000147],[72.92774498800011,6.558905341000155],[72.92310631600017,6.559881903000132],[72.92253665500019,6.561509507000054],[72.92351321700008,6.563381252000113],[72.92400149800008,6.565252997000172],[72.925547722,6.563055731000091],[72.92750084700006,6.562079169000114],[72.92872155000006,6.561102606000148],[72.92774498800011,6.558946031000147]]],[[[73.03044681100002,6.576076565000079],[73.02816816500015,6.575181382000096],[73.02735436300006,6.576483466000084],[73.02556399800008,6.579250393000137],[73.02613366000011,6.580796617000175],[73.02833092500012,6.581366278000147],[73.02995853000007,6.582342841000127],[73.02987714900004,6.582180080000157],[73.02947024800008,6.579657294000143],[73.0301212900001,6.577541408000144],[73.03036543100004,6.576117255000071],[73.03044681100002,6.576076565000079]]],[[[73.04151451900006,6.618353583000101],[73.04070071700008,6.617173570000162],[73.0384220710001,6.618150132000139],[73.03939863400015,6.622870184000149],[73.04102623800006,6.623602606000176],[73.04110761800004,6.623561916000185],[73.04297936300006,6.622503973000136],[73.0447697270001,6.621893622000172],[73.04265384200019,6.620347398000135],[73.04151451900006,6.618353583000101]]],[[[73.06950931100019,6.667954820000119],[73.06177819100017,6.66095612200013],[73.06226647200018,6.666896877000156],[73.06413821700002,6.668402411000116],[73.06666100400017,6.668117580000086],[73.06950931100019,6.667954820000119]]],[[[73.09595787900017,6.698472398000149],[73.0958764980002,6.698431708000072],[73.09669030000012,6.706122137000179],[73.09929446700019,6.708929755000128],[73.10596764400006,6.709947007000096],[73.10596764400006,6.709906317000105],[73.10352623800011,6.705877997000144],[73.10230553500011,6.702337958000072],[73.10043379000015,6.699774481000148],[73.09595787900017,6.698472398000149]]],[[[73.03687584700006,6.753485419000128],[73.03467858200023,6.752590236000131],[73.03386478000002,6.753851630000142],[73.03199303500017,6.756577867000104],[73.03288821700008,6.758246161000116],[73.03484134200019,6.758734442000105],[73.03663170700011,6.759711005000085],[73.03663170700011,6.759629624000098],[73.03614342500012,6.757147528000175],[73.03614342500012,6.757106838000183],[73.03622480600009,6.756781317000062],[73.03679446700008,6.755072333000058],[73.03687584700006,6.753485419000128]]],[[[72.91537519600016,6.760443427000112],[72.91431725400011,6.759222723000093],[72.91236412900017,6.760077216000099],[72.91228274800008,6.760158596000082],[72.91325931100008,6.764878648000178],[72.9148869150001,6.765570380000128],[72.91675866000011,6.764471747000172],[72.91846764400006,6.763983466000099],[72.91651451900012,6.762437242000146],[72.91537519600016,6.760443427000112]]],[[[73.13184655000006,6.725165106000176],[73.1316837900001,6.725043036000102],[73.135996941,6.741197007000068],[73.15251712300008,6.768215236000117],[73.15951582100016,6.786525783000087],[73.16423587300008,6.787054755000057],[73.16553795700005,6.785711981000162],[73.16553795700005,6.785630601000179],[73.16553795700005,6.783148505000071],[73.16651451900006,6.780340887000108],[73.15284264400012,6.749212958000115],[73.14478600400017,6.735541083000086],[73.13184655000006,6.725165106000176]]],[[[73.18376712300002,6.821153062000164],[73.18376712300002,6.821112372000172],[73.18083743600002,6.823431708000129],[73.18165123800006,6.830511786000102],[73.19727623800011,6.828111070000148],[73.18946373800006,6.822821356000176],[73.18376712300002,6.821153062000164]]],[[[72.99244225400011,6.83787669500019],[72.9915470710001,6.836737372000158],[72.989512566,6.837591864000061],[72.98943118600002,6.837632554000052],[72.99024498800006,6.842433986000131],[72.9920353520001,6.843003648000192],[72.99390709700018,6.841986395000134],[72.99577884200008,6.841498114000146],[72.9956974620001,6.841457424000154],[72.99366295700023,6.839911200000117],[72.99244225400011,6.83787669500019]]],[[[73.14128665500019,6.839911200000117],[73.14031009200019,6.838690497000101],[73.1380314460001,6.839667059000178],[73.1390080090001,6.844427802000084],[73.14063561300006,6.845038153000132],[73.14063561300006,6.844997463000141],[73.14258873800006,6.843939520000092],[73.14437910200016,6.843410549000112],[73.14226321700008,6.841864325000159],[73.14128665500019,6.839911200000117]]],[[[72.97421308700004,6.845851955000143],[72.97413170700005,6.845851955000143],[72.97152754000015,6.849758205000143],[72.97234134200008,6.851385809000163],[72.974375847,6.85199616100013],[72.97608483200011,6.852850653000132],[72.97559655000012,6.850287177000126],[72.97624759200008,6.848130601000122],[72.97624759200008,6.848049221000139],[72.97632897200006,6.846665757000068],[72.97421308700004,6.845851955000143]]],[[[73.0950626960001,6.848700262000179],[73.09400475400011,6.84756094000015],[73.09278405000012,6.847967841000155],[73.09180748800006,6.848334052000084],[73.09294681100008,6.853094794000171],[73.09449303500011,6.853827216000099],[73.09636478000007,6.852769273000149],[73.09644616000017,6.852728583000058],[73.09815514400006,6.852199611000089],[73.09807376400008,6.852118231000105],[73.09603925900015,6.850572007000068],[73.0950626960001,6.848700262000179]]],[[[72.96062259200019,6.856065171000083],[72.96062259200019,6.856024481000091],[72.958750847,6.856838283000101],[72.95850670700005,6.856960354000165],[72.9583439460001,6.857001044000157],[72.95923912900011,6.861639716000099],[72.96111087300008,6.862453518000109],[72.96290123800006,6.861314195000162],[72.96469160200016,6.860663153000118],[72.962657097,6.859198309000149],[72.96143639400012,6.857326565000093],[72.96062259200019,6.856065171000083]]],[[[73.10661868600019,6.890448309000121],[73.1043400400001,6.889553127000127],[73.10173587300002,6.89354075700011],[73.10230553500011,6.895209052000126],[73.10450280000006,6.895738023000192],[73.10621178500011,6.896714585000083],[73.10621178500011,6.896673895000092],[73.10572350400011,6.894029039000188],[73.1062931650001,6.891913153000175],[73.1065373060002,6.890529690000108],[73.10661868600019,6.890448309000121]]],[[[73.20875084700018,6.891099351000165],[73.2039494150001,6.884955145000106],[73.20101972700016,6.893133856000105],[73.20191491000011,6.902248440000093],[73.20492597700016,6.911769924000097],[73.20915774800008,6.918280341000084],[73.21404056100002,6.918605861000117],[73.21404056100002,6.918524481000134],[73.21306399800008,6.904608466000141],[73.20875084700018,6.891099351000165]]],[[[72.92628014400006,6.95380280200007],[72.9245850080001,6.951704061000143],[72.9259546230002,6.957424221000125],[72.9259546230002,6.957017320000119],[72.92628014400006,6.95380280200007]]],[[[73.19336998800011,6.950995184000121],[73.19320722700016,6.950995184000121],[73.19304446700019,6.951076565000093],[73.19255618600013,6.951239325000159],[73.19190514400006,6.951646226000165],[73.19117272200006,6.961330471000125],[73.19190514400006,6.967596747000172],[73.19410241000017,6.970892645000106],[73.19849694100006,6.971340236000103],[73.1946720710001,6.951239325000159],[73.19385826900012,6.950995184000121],[73.19336998800011,6.950995184000121]]],[[[72.89055423300007,6.985459703000132],[72.8904728520001,6.985419012000151],[72.8919376960001,6.991034247000144],[72.8919376960001,6.987697658000116],[72.89055423300007,6.985459703000132]]],[[[72.97974694100017,7.027533270000106],[72.98145592500006,7.013983466000141],[72.97730553500011,7.019029039000159],[72.97722415500007,7.022609768000137],[72.97722415500007,7.022650458000129],[72.97722415500007,7.022691148000121],[72.97974694100017,7.027736721000153],[72.97974694100017,7.027533270000106]]],[[[72.94996178500017,7.056423244000115],[72.94849694100012,7.050848700000103],[72.94776451900006,7.053900458000101],[72.94996178500017,7.056545315000093],[72.94996178500017,7.056423244000115]]],[[[72.91285241000011,7.092596747000144],[72.91187584700018,7.083197333000115],[72.90642337300002,7.089016018000081],[72.9065861340001,7.091009833000115],[72.90967858200005,7.091620184000163],[72.91285241000011,7.092718817000119],[72.91285241000011,7.092596747000144]]],[[[72.88453209700012,7.103705145000077],[72.88249759200008,7.101629950000145],[72.88379967500006,7.107245184000149],[72.88453209700012,7.105698960000112],[72.88453209700012,7.10565827000012],[72.88453209700012,7.103705145000077]]]]}},{type:"Feature",id:"MMR",properties:{name:"Myanmar"},geometry:{type:"Polygon",coordinates:[[[99.543309,20.186598],[98.959676,19.752981],[98.253724,19.708203],[97.797783,18.62708],[97.375896,18.445438],[97.859123,17.567946],[98.493761,16.837836],[98.903348,16.177824],[98.537376,15.308497],[98.192074,15.123703],[98.430819,14.622028],[99.097755,13.827503],[99.212012,13.269294],[99.196354,12.804748],[99.587286,11.892763],[99.038121,10.960546],[98.553551,9.93296],[98.457174,10.675266],[98.764546,11.441292],[98.428339,12.032987],[98.509574,13.122378],[98.103604,13.64046],[97.777732,14.837286],[97.597072,16.100568],[97.16454,16.928734],[96.505769,16.427241],[95.369352,15.71439],[94.808405,15.803454],[94.188804,16.037936],[94.533486,17.27724],[94.324817,18.213514],[93.540988,19.366493],[93.663255,19.726962],[93.078278,19.855145],[92.368554,20.670883],[92.303234,21.475485],[92.652257,21.324048],[92.672721,22.041239],[93.166128,22.27846],[93.060294,22.703111],[93.286327,23.043658],[93.325188,24.078556],[94.106742,23.850741],[94.552658,24.675238],[94.603249,25.162495],[95.155153,26.001307],[95.124768,26.573572],[96.419366,27.264589],[97.133999,27.083774],[97.051989,27.699059],[97.402561,27.882536],[97.327114,28.261583],[97.911988,28.335945],[98.246231,27.747221],[98.68269,27.508812],[98.712094,26.743536],[98.671838,25.918703],[97.724609,25.083637],[97.60472,23.897405],[98.660262,24.063286],[98.898749,23.142722],[99.531992,22.949039],[99.240899,22.118314],[99.983489,21.742937],[100.416538,21.558839],[101.150033,21.849984],[101.180005,21.436573],[100.329101,20.786122],[100.115988,20.41785],[99.543309,20.186598]]]}},{type:"Feature",id:"MNE",properties:{name:"Montenegro"},geometry:{type:"Polygon",coordinates:[[[19.801613,42.500093],[19.738051,42.688247],[19.30449,42.19574],[19.37177,41.87755],[19.16246,41.95502],[18.88214,42.28151],[18.45,42.48],[18.56,42.65],[18.70648,43.20011],[19.03165,43.43253],[19.21852,43.52384],[19.48389,43.35229],[19.63,43.21378],[19.95857,43.10604],[20.3398,42.89852],[20.25758,42.81275],[20.0707,42.58863],[19.801613,42.500093]]]}},{type:"Feature",id:"MNG",properties:{name:"Mongolia"},geometry:{type:"Polygon",coordinates:[[[87.751264,49.297198],[88.805567,49.470521],[90.713667,50.331812],[92.234712,50.802171],[93.104219,50.49529],[94.147566,50.480537],[94.815949,50.013433],[95.814028,49.977467],[97.259728,49.726061],[98.231762,50.422401],[97.82574,51.010995],[98.861491,52.047366],[99.981732,51.634006],[100.88948,51.516856],[102.065223,51.259921],[102.255909,50.510561],[103.676545,50.089966],[104.621552,50.275329],[105.886591,50.406019],[106.888804,50.274296],[107.868176,49.793705],[108.475167,49.282548],[109.402449,49.292961],[110.662011,49.130128],[111.581231,49.377968],[112.89774,49.543565],[114.362456,50.248303],[114.96211,50.140247],[115.485695,49.805177],[116.678801,49.888531],[116.191802,49.134598],[115.485282,48.135383],[115.742837,47.726545],[116.308953,47.85341],[117.295507,47.697709],[118.064143,48.06673],[118.866574,47.74706],[119.772824,47.048059],[119.66327,46.69268],[118.874326,46.805412],[117.421701,46.672733],[116.717868,46.388202],[115.985096,45.727235],[114.460332,45.339817],[113.463907,44.808893],[112.436062,45.011646],[111.873306,45.102079],[111.348377,44.457442],[111.667737,44.073176],[111.829588,43.743118],[111.129682,43.406834],[110.412103,42.871234],[109.243596,42.519446],[107.744773,42.481516],[106.129316,42.134328],[104.964994,41.59741],[104.522282,41.908347],[103.312278,41.907468],[101.83304,42.514873],[100.845866,42.663804],[99.515817,42.524691],[97.451757,42.74889],[96.349396,42.725635],[95.762455,43.319449],[95.306875,44.241331],[94.688929,44.352332],[93.480734,44.975472],[92.133891,45.115076],[90.94554,45.286073],[90.585768,45.719716],[90.970809,46.888146],[90.280826,47.693549],[88.854298,48.069082],[88.013832,48.599463],[87.751264,49.297198]]]}},{type:"Feature",id:"MOZ",properties:{name:"Mozambique"},geometry:{type:"Polygon",coordinates:[[[34.559989,-11.52002],[35.312398,-11.439146],[36.514082,-11.720938],[36.775151,-11.594537],[37.471284,-11.568751],[37.827645,-11.268769],[38.427557,-11.285202],[39.52103,-10.896854],[40.316589,-10.317096],[40.478387,-10.765441],[40.437253,-11.761711],[40.560811,-12.639177],[40.59962,-14.201975],[40.775475,-14.691764],[40.477251,-15.406294],[40.089264,-16.100774],[39.452559,-16.720891],[38.538351,-17.101023],[37.411133,-17.586368],[36.281279,-18.659688],[35.896497,-18.84226],[35.1984,-19.552811],[34.786383,-19.784012],[34.701893,-20.497043],[35.176127,-21.254361],[35.373428,-21.840837],[35.385848,-22.14],[35.562546,-22.09],[35.533935,-23.070788],[35.371774,-23.535359],[35.60747,-23.706563],[35.458746,-24.12261],[35.040735,-24.478351],[34.215824,-24.816314],[33.01321,-25.357573],[32.574632,-25.727318],[32.660363,-26.148584],[32.915955,-26.215867],[32.83012,-26.742192],[32.071665,-26.73382],[31.985779,-26.29178],[31.837778,-25.843332],[31.752408,-25.484284],[31.930589,-24.369417],[31.670398,-23.658969],[31.191409,-22.25151],[32.244988,-21.116489],[32.508693,-20.395292],[32.659743,-20.30429],[32.772708,-19.715592],[32.611994,-19.419383],[32.654886,-18.67209],[32.849861,-17.979057],[32.847639,-16.713398],[32.328239,-16.392074],[31.852041,-16.319417],[31.636498,-16.07199],[31.173064,-15.860944],[30.338955,-15.880839],[30.274256,-15.507787],[30.179481,-14.796099],[33.214025,-13.97186],[33.7897,-14.451831],[34.064825,-14.35995],[34.459633,-14.61301],[34.517666,-15.013709],[34.307291,-15.478641],[34.381292,-16.18356],[35.03381,-16.8013],[35.339063,-16.10744],[35.771905,-15.896859],[35.686845,-14.611046],[35.267956,-13.887834],[34.907151,-13.565425],[34.559989,-13.579998],[34.280006,-12.280025],[34.559989,-11.52002]]]}},{type:"Feature",id:"MRT",properties:{name:"Mauritania"},geometry:{type:"Polygon",coordinates:[[[-12.17075,14.616834],[-12.830658,15.303692],[-13.435738,16.039383],[-14.099521,16.304302],[-14.577348,16.598264],[-15.135737,16.587282],[-15.623666,16.369337],[-16.12069,16.455663],[-16.463098,16.135036],[-16.549708,16.673892],[-16.270552,17.166963],[-16.146347,18.108482],[-16.256883,19.096716],[-16.377651,19.593817],[-16.277838,20.092521],[-16.536324,20.567866],[-17.063423,20.999752],[-16.845194,21.333323],[-12.929102,21.327071],[-13.118754,22.77122],[-12.874222,23.284832],[-11.937224,23.374594],[-11.969419,25.933353],[-8.687294,25.881056],[-8.6844,27.395744],[-4.923337,24.974574],[-6.453787,24.956591],[-5.971129,20.640833],[-5.488523,16.325102],[-5.315277,16.201854],[-5.537744,15.50169],[-9.550238,15.486497],[-9.700255,15.264107],[-10.086846,15.330486],[-10.650791,15.132746],[-11.349095,15.411256],[-11.666078,15.388208],[-11.834208,14.799097],[-12.17075,14.616834]]]}},{type:"Feature",id:"MUS",properties:{name:"Mauritius"},geometry:{type:"MultiPolygon",coordinates:[[[[57.71387780000006,-20.09612395599993],[57.71794681100019,-20.09693775799994],[57.72974694100017,-20.09514739399995],[57.73365319100017,-20.09612395599993],[57.74480228000019,-20.105075778999876],[57.74773196700019,-20.111504815999965],[57.74447675900015,-20.143812757999896],[57.75220787900017,-20.154229424999897],[57.762543165000096,-20.16204192499997],[57.77214603000007,-20.190524997999987],[57.791351759000094,-20.212172132999967],[57.795746290000096,-20.222751559999935],[57.79395592500012,-20.246758721999882],[57.7889103520001,-20.274183851999922],[57.77816816500015,-20.30478280999995],[57.77588951900012,-20.320407809999935],[57.78150475400011,-20.335707289999988],[57.757090691000116,-20.343357029],[57.72925866000017,-20.363946221999868],[57.7122501960001,-20.387465101999908],[57.719981316000116,-20.403985283999987],[57.72071373800006,-20.411065362999864],[57.726084832000225,-20.419610283999972],[57.72681725400017,-20.425062757999825],[57.72331790500007,-20.43425872199998],[57.717621290000096,-20.43613046699994],[57.71127363400015,-20.43580494599992],[57.70582116000011,-20.43873463299994],[57.69239342500012,-20.461521091999884],[57.68474368600019,-20.47161223799985],[57.672211134000094,-20.479668877999885],[57.58838951900012,-20.504815362999864],[57.50359134200019,-20.517347914999945],[57.47364342500006,-20.51506926899998],[57.426931186000076,-20.50090911299995],[57.39926191500015,-20.49797942499994],[57.378103061000076,-20.507012627999856],[57.32056725400017,-20.458184502999856],[57.307871941000116,-20.444268487999878],[57.30347741000011,-20.430922132999868],[57.31934655000006,-20.425062757999825],[57.34408613400015,-20.429864190999908],[57.35775800900015,-20.427422783999873],[57.36378014400006,-20.41448333099987],[57.36898847700016,-20.38640715899996],[57.367849155000016,-20.376153252999842],[57.356944207000225,-20.370375257999967],[57.365000847000175,-20.345961195999834],[57.36597741000017,-20.290785414999974],[57.37061608200011,-20.26051197699998],[57.37745201900012,-20.243096612999835],[57.40015709700006,-20.200616143999866],[57.40845787900011,-20.192315362999963],[57.41049238400015,-20.189222914999988],[57.43262780000006,-20.171807549999926],[57.442230665000096,-20.167413018999852],[57.46387780000012,-20.16155364399998],[57.47364342500006,-20.15748463299994],[57.49073326900012,-20.14080169099999],[57.49382571700008,-20.122328382999882],[57.494476759000094,-20.103692315999893],[57.5096134770001,-20.077406507999967],[57.52198326900006,-20.041599216999956],[57.52808678500011,-20.030857028999932],[57.532481316000116,-20.024834893999937],[57.560069207000225,-20.003838799999897],[57.56690514400006,-20.000909112999878],[57.58033287900017,-19.999932549999983],[57.586110873000194,-19.996758721999925],[57.59050540500019,-19.98967864399988],[57.596527540000096,-19.98259856599999],[57.60710696700008,-19.979424737999935],[57.6228947270001,-19.98170338299991],[57.66773522200006,-19.994073174999954],[57.67969811300017,-19.999932549999983],[57.68482506600017,-20.01100025799994],[57.679209832000055,-20.028252862999935],[57.683116082000055,-20.037774346999853],[57.69019616000011,-20.04729583099993],[57.69776451900006,-20.064060153999947],[57.70622806100013,-20.078383070999934],[57.7088322270001,-20.089939059999878],[57.71387780000006,-20.09612395599993]]],[[[63.385590040000096,-19.75603606599985],[63.36638431100002,-19.76718515399996],[63.33773847700016,-19.73845794099999],[63.33228600400011,-19.736423434999978],[63.33521569100006,-19.717868747999972],[63.343272332000055,-19.709730726999865],[63.35523522200012,-19.704685154000018],[63.38917076900006,-19.68474700299994],[63.42115319100006,-19.674411717000012],[63.45427493600019,-19.669854424999983],[63.47624759200019,-19.67782968500002],[63.493907097,-19.681898695999905],[63.4895939460001,-19.701429945999976],[63.46941165500019,-19.72291432099982],[63.43873131600017,-19.73300546699997],[63.41651451900012,-19.736423434999978],[63.40064537900011,-19.744886976999837],[63.385590040000096,-19.75603606599985]]],[[[56.56861412900011,-10.386407158999901],[56.56934655000012,-10.406508070999848],[56.54851321700002,-10.382012627999828],[56.52979576900006,-10.352959893999838],[56.52458743600019,-10.340020440999837],[56.52418053500017,-10.330010674999855],[56.52556399800008,-10.32732512799987],[56.52767988400015,-10.325372002999828],[56.531016472000175,-10.324151299999897],[56.53565514400012,-10.323907158999859],[56.54281660200016,-10.346449476999851],[56.56861412900011,-10.386407158999901]]]]}},{type:"Feature",id:"MWI",properties:{name:"Malawi"},geometry:{type:"Polygon",coordinates:[[[34.559989,-11.52002],[34.280006,-12.280025],[34.559989,-13.579998],[34.907151,-13.565425],[35.267956,-13.887834],[35.686845,-14.611046],[35.771905,-15.896859],[35.339063,-16.10744],[35.03381,-16.8013],[34.381292,-16.18356],[34.307291,-15.478641],[34.517666,-15.013709],[34.459633,-14.61301],[34.064825,-14.35995],[33.7897,-14.451831],[33.214025,-13.97186],[32.688165,-13.712858],[32.991764,-12.783871],[33.306422,-12.435778],[33.114289,-11.607198],[33.31531,-10.79655],[33.485688,-10.525559],[33.231388,-9.676722],[32.759375,-9.230599],[33.739729,-9.417151],[33.940838,-9.693674],[34.280006,-10.16],[34.559989,-11.52002]]]}},{type:"Feature",id:"MYS",properties:{name:"Malaysia"},geometry:{type:"MultiPolygon",coordinates:[[[[101.075516,6.204867],[101.154219,5.691384],[101.814282,5.810808],[102.141187,6.221636],[102.371147,6.128205],[102.961705,5.524495],[103.381215,4.855001],[103.438575,4.181606],[103.332122,3.726698],[103.429429,3.382869],[103.502448,2.791019],[103.854674,2.515454],[104.247932,1.631141],[104.228811,1.293048],[103.519707,1.226334],[102.573615,1.967115],[101.390638,2.760814],[101.27354,3.270292],[100.695435,3.93914],[100.557408,4.76728],[100.196706,5.312493],[100.30626,6.040562],[100.085757,6.464489],[100.259596,6.642825],[101.075516,6.204867]]],[[[118.618321,4.478202],[117.882035,4.137551],[117.015214,4.306094],[115.865517,4.306559],[115.519078,3.169238],[115.134037,2.821482],[114.621355,1.430688],[113.80585,1.217549],[112.859809,1.49779],[112.380252,1.410121],[111.797548,.904441],[111.159138,.976478],[110.514061,.773131],[109.830227,1.338136],[109.66326,2.006467],[110.396135,1.663775],[111.168853,1.850637],[111.370081,2.697303],[111.796928,2.885897],[112.995615,3.102395],[113.712935,3.893509],[114.204017,4.525874],[114.659596,4.007637],[114.869557,4.348314],[115.347461,4.316636],[115.4057,4.955228],[115.45071,5.44773],[116.220741,6.143191],[116.725103,6.924771],[117.129626,6.928053],[117.643393,6.422166],[117.689075,5.98749],[118.347691,5.708696],[119.181904,5.407836],[119.110694,5.016128],[118.439727,4.966519],[118.618321,4.478202]]]]}},{type:"Feature",id:"NAM",properties:{name:"Namibia"},geometry:{type:"Polygon",coordinates:[[[16.344977,-28.576705],[15.601818,-27.821247],[15.210472,-27.090956],[14.989711,-26.117372],[14.743214,-25.39292],[14.408144,-23.853014],[14.385717,-22.656653],[14.257714,-22.111208],[13.868642,-21.699037],[13.352498,-20.872834],[12.826845,-19.673166],[12.608564,-19.045349],[11.794919,-18.069129],[11.734199,-17.301889],[12.215461,-17.111668],[12.814081,-16.941343],[13.462362,-16.971212],[14.058501,-17.423381],[14.209707,-17.353101],[18.263309,-17.309951],[18.956187,-17.789095],[21.377176,-17.930636],[23.215048,-17.523116],[24.033862,-17.295843],[24.682349,-17.353411],[25.07695,-17.578823],[25.084443,-17.661816],[24.520705,-17.887125],[24.217365,-17.889347],[23.579006,-18.281261],[23.196858,-17.869038],[21.65504,-18.219146],[20.910641,-18.252219],[20.881134,-21.814327],[19.895458,-21.849157],[19.895768,-24.76779],[19.894734,-28.461105],[19.002127,-28.972443],[18.464899,-29.045462],[17.836152,-28.856378],[17.387497,-28.783514],[17.218929,-28.355943],[16.824017,-28.082162],[16.344977,-28.576705]]]}},{type:"Feature",id:"NCL",properties:{name:"New Caledonia"},geometry:{type:"Polygon",coordinates:[[[165.77999,-21.080005],[166.599991,-21.700019],[167.120011,-22.159991],[166.740035,-22.399976],[166.189732,-22.129708],[165.474375,-21.679607],[164.829815,-21.14982],[164.167995,-20.444747],[164.029606,-20.105646],[164.459967,-20.120012],[165.020036,-20.459991],[165.460009,-20.800022],[165.77999,-21.080005]]]}},{type:"Feature",id:"NER",properties:{name:"Niger"},geometry:{type:"Polygon",coordinates:[[[2.154474,11.94015],[2.177108,12.625018],[1.024103,12.851826],[.993046,13.33575],[.429928,13.988733],[.295646,14.444235],[.374892,14.928908],[1.015783,14.968182],[1.385528,15.323561],[2.749993,15.409525],[3.638259,15.56812],[3.723422,16.184284],[4.27021,16.852227],[4.267419,19.155265],[5.677566,19.601207],[8.572893,21.565661],[11.999506,23.471668],[13.581425,23.040506],[14.143871,22.491289],[14.8513,22.86295],[15.096888,21.308519],[15.471077,21.048457],[15.487148,20.730415],[15.903247,20.387619],[15.685741,19.95718],[15.300441,17.92795],[15.247731,16.627306],[13.972202,15.684366],[13.540394,14.367134],[13.956699,13.996691],[13.954477,13.353449],[14.595781,13.330427],[14.495787,12.859396],[14.213531,12.802035],[14.181336,12.483657],[13.995353,12.461565],[13.318702,13.556356],[13.083987,13.596147],[12.302071,13.037189],[11.527803,13.32898],[10.989593,13.387323],[10.701032,13.246918],[10.114814,13.277252],[9.524928,12.851102],[9.014933,12.826659],[7.804671,13.343527],[7.330747,13.098038],[6.820442,13.115091],[6.445426,13.492768],[5.443058,13.865924],[4.368344,13.747482],[4.107946,13.531216],[3.967283,12.956109],[3.680634,12.552903],[3.61118,11.660167],[2.848643,12.235636],[2.490164,12.233052],[2.154474,11.94015]]]}},{type:"Feature",id:"NGA",properties:{name:"Nigeria"},geometry:{type:"Polygon",coordinates:[[[8.500288,4.771983],[7.462108,4.412108],[7.082596,4.464689],[6.698072,4.240594],[5.898173,4.262453],[5.362805,4.887971],[5.033574,5.611802],[4.325607,6.270651],[3.57418,6.2583],[2.691702,6.258817],[2.749063,7.870734],[2.723793,8.506845],[2.912308,9.137608],[3.220352,9.444153],[3.705438,10.06321],[3.60007,10.332186],[3.797112,10.734746],[3.572216,11.327939],[3.61118,11.660167],[3.680634,12.552903],[3.967283,12.956109],[4.107946,13.531216],[4.368344,13.747482],[5.443058,13.865924],[6.445426,13.492768],[6.820442,13.115091],[7.330747,13.098038],[7.804671,13.343527],[9.014933,12.826659],[9.524928,12.851102],[10.114814,13.277252],[10.701032,13.246918],[10.989593,13.387323],[11.527803,13.32898],[12.302071,13.037189],[13.083987,13.596147],[13.318702,13.556356],[13.995353,12.461565],[14.181336,12.483657],[14.577178,12.085361],[14.468192,11.904752],[14.415379,11.572369],[13.57295,10.798566],[13.308676,10.160362],[13.1676,9.640626],[12.955468,9.417772],[12.753672,8.717763],[12.218872,8.305824],[12.063946,7.799808],[11.839309,7.397042],[11.745774,6.981383],[11.058788,6.644427],[10.497375,7.055358],[10.118277,7.03877],[9.522706,6.453482],[9.233163,6.444491],[8.757533,5.479666],[8.500288,4.771983]]]}},{type:"Feature",id:"GLP",properties:{name:"Guadeloupe"},geometry:{type:"MultiPolygon",coordinates:[[[[-61.79038,16.16682],[-61.79164,16.1671],[-61.79197,16.16791],[-61.79056,16.16935],[-61.78957,16.16975],[-61.78817,16.16911],[-61.78771,16.16843],[-61.78809,16.16735],[-61.78958,16.16763],[-61.79038,16.16682]]],[[[-61.60694,15.8344],[-61.6076,15.83441],[-61.60992,15.83591],[-61.61047,15.83691],[-61.61205,15.83841],[-61.61134,15.83954],[-61.61037,15.83872],[-61.60963,15.83713],[-61.60843,15.83581],[-61.60712,15.83535],[-61.60694,15.8344]]],[[[-61.63356,15.83977],[-61.63593,15.8415],[-61.63682,15.84142],[-61.6398,15.84333],[-61.64319,15.84485],[-61.6465,15.84676],[-61.64915,15.8475],[-61.6505,15.84756],[-61.65092,15.84865],[-61.65016,15.84963],[-61.64899,15.85017],[-61.64838,15.85107],[-61.64898,15.85198],[-61.64883,15.85311],[-61.64715,15.85423],[-61.64699,15.85707],[-61.64665,15.85928],[-61.64673,15.86105],[-61.64607,15.86177],[-61.64477,15.86049],[-61.64346,15.86094],[-61.642,15.86224],[-61.6398,15.86335],[-61.6374,15.86709],[-61.63654,15.86912],[-61.63639,15.87043],[-61.63513,15.87096],[-61.63496,15.86847],[-61.63445,15.86802],[-61.63193,15.86805],[-61.62913,15.86695],[-61.62563,15.86652],[-61.62312,15.86555],[-61.62294,15.86447],[-61.62506,15.86186],[-61.62498,15.86014],[-61.62414,15.85878],[-61.62045,15.85912],[-61.6192,15.85848],[-61.61696,15.85851],[-61.61533,15.85719],[-61.61436,15.85533],[-61.6147,15.85398],[-61.61656,15.85448],[-61.61657,15.85304],[-61.61812,15.85151],[-61.61984,15.85288],[-61.61965,15.85423],[-61.62034,15.85541],[-61.62231,15.85371],[-61.62209,15.85163],[-61.62327,15.84938],[-61.62576,15.84776],[-61.62633,15.84695],[-61.62676,15.8451],[-61.62855,15.84231],[-61.62954,15.84137],[-61.63126,15.84143],[-61.63347,15.84018],[-61.63356,15.83977]]],[[[-61.11993,16.16716],[-61.12157,16.16731],[-61.12366,16.16827],[-61.12721,16.16876],[-61.12889,16.16945],[-61.13124,16.17236],[-61.1288,16.17347],[-61.12633,16.17277],[-61.12455,16.1733],[-61.12091,16.17295],[-61.11637,16.17282],[-61.11436,16.17334],[-61.11262,16.17455],[-61.10982,16.17384],[-61.10992,16.17244],[-61.10913,16.17221],[-61.10791,16.17274],[-61.10722,16.17219],[-61.1069,16.17093],[-61.10879,16.16859],[-61.11005,16.16883],[-61.1122,16.16862],[-61.11548,16.16802],[-61.11679,16.16817],[-61.1188,16.16778],[-61.11993,16.16716]]],[[[-61.00982,16.34998],[-61.00778,16.34847],[-61.00849,16.34726],[-61.00705,16.34657],[-61.00721,16.34476],[-61.00585,16.34448],[-61.00672,16.3416],[-61.00631,16.34069],[-61.00538,16.34032],[-61.00451,16.33878],[-61.00456,16.33814],[-61.00346,16.33633],[-61.00248,16.33573],[-61.00208,16.33396],[-61.00334,16.33361],[-61.0041,16.33245],[-61.00528,16.33151],[-61.00678,16.33148],[-61.00857,16.33028],[-61.00928,16.32924],[-61.01017,16.32948],[-61.01205,16.3285],[-61.01251,16.32923],[-61.01359,16.32933],[-61.01323,16.32734],[-61.01464,16.32699],[-61.01524,16.32776],[-61.01767,16.32783],[-61.01912,16.32757],[-61.02012,16.3265],[-61.02219,16.32548],[-61.02472,16.32451],[-61.02736,16.323],[-61.03155,16.32037],[-61.03334,16.31899],[-61.03546,16.31792],[-61.03843,16.31488],[-61.03993,16.31458],[-61.04249,16.31184],[-61.04357,16.31118],[-61.04579,16.30921],[-61.04852,16.30761],[-61.04964,16.30739],[-61.05115,16.30655],[-61.05222,16.30656],[-61.05949,16.30486],[-61.06103,16.30492],[-61.06263,16.30408],[-61.06629,16.30316],[-61.06886,16.30332],[-61.07083,16.30302],[-61.07149,16.30213],[-61.07267,16.30187],[-61.07359,16.30291],[-61.07505,16.30216],[-61.07732,16.29978],[-61.07928,16.29989],[-61.08017,16.29954],[-61.08103,16.29797],[-61.08385,16.29655],[-61.08727,16.29585],[-61.09003,16.29601],[-61.09144,16.29562],[-61.09375,16.29379],[-61.09536,16.29182],[-61.09579,16.29046],[-61.09724,16.29052],[-61.09775,16.29139],[-61.09805,16.2936],[-61.09885,16.29383],[-61.0979,16.29527],[-61.09794,16.29609],[-61.09637,16.29842],[-61.09645,16.30014],[-61.0976,16.30164],[-61.09805,16.30345],[-61.09696,16.30484],[-61.09607,16.30538],[-61.09359,16.30531],[-61.09263,16.30765],[-61.09059,16.31052],[-61.09063,16.31183],[-61.08922,16.31232],[-61.08792,16.31158],[-61.08637,16.31157],[-61.07864,16.31245],[-61.07746,16.31348],[-61.07697,16.31614],[-61.0753,16.3191],[-61.07333,16.32008],[-61.07203,16.31925],[-61.06955,16.31873],[-61.06838,16.31931],[-61.06566,16.32019],[-61.06463,16.32009],[-61.06349,16.32148],[-61.06199,16.32151],[-61.05974,16.32253],[-61.05968,16.32366],[-61.05747,16.32468],[-61.05633,16.3267],[-61.05493,16.32637],[-61.05351,16.32753],[-61.05127,16.3276],[-61.05046,16.32845],[-61.05017,16.32953],[-61.04894,16.33061],[-61.04888,16.33219],[-61.04761,16.33258],[-61.04762,16.33154],[-61.04614,16.33058],[-61.04396,16.33336],[-61.04193,16.33447],[-61.04146,16.33524],[-61.04015,16.3355],[-61.03917,16.33458],[-61.03761,16.33687],[-61.03658,16.33682],[-61.03545,16.33767],[-61.03553,16.33834],[-61.03399,16.33846],[-61.03245,16.33741],[-61.03161,16.33795],[-61.0313,16.3407],[-61.03064,16.34123],[-61.0299,16.34023],[-61.02844,16.34058],[-61.02745,16.34193],[-61.02622,16.34264],[-61.02482,16.34272],[-61.02387,16.34456],[-61.02251,16.34491],[-61.02088,16.34354],[-61.01971,16.3438],[-61.01914,16.34483],[-61.0181,16.34573],[-61.01666,16.34892],[-61.01526,16.34936],[-61.01428,16.34876],[-61.01066,16.34999],[-61.00982,16.34998]]],[[[-61.77767,16.36397],[-61.77851,16.36402],[-61.78033,16.36485],[-61.78163,16.36689],[-61.78125,16.36824],[-61.78138,16.36942],[-61.78063,16.37041],[-61.78007,16.36909],[-61.77792,16.36822],[-61.77775,16.36696],[-61.77822,16.3652],[-61.77767,16.36397]]],[[[-61.58577,15.8321],[-61.58609,15.83282],[-61.58837,15.83306],[-61.58977,15.83352],[-61.5914,15.83489],[-61.59256,15.83526],[-61.59401,15.83477],[-61.59606,15.83483],[-61.59713,15.83542],[-61.59694,15.83606],[-61.59567,15.83727],[-61.5952,15.83894],[-61.5937,15.83965],[-61.59285,15.84046],[-61.59261,15.84159],[-61.59171,15.84289],[-61.59,15.84134],[-61.5867,15.83884],[-61.58541,15.83648],[-61.58462,15.83629],[-61.58463,15.83476],[-61.5851,15.8334],[-61.58502,15.83223],[-61.58577,15.8321]]],[[[-61.59328,15.85253],[-61.59393,15.85303],[-61.59738,15.85314],[-61.59822,15.854],[-61.60027,15.85474],[-61.60152,15.85601],[-61.60221,15.85756],[-61.60366,15.85761],[-61.60539,15.85672],[-61.60665,15.85713],[-61.60523,15.85947],[-61.60392,15.85987],[-61.60079,15.85967],[-61.60018,15.86016],[-61.59985,15.86174],[-61.5989,15.86336],[-61.59974,15.86396],[-61.59982,15.86486],[-61.59866,15.8649],[-61.59773,15.86354],[-61.59511,15.86411],[-61.59129,15.8639],[-61.5904,15.86417],[-61.59011,15.8653],[-61.58853,15.8642],[-61.58746,15.86437],[-61.58573,15.86364],[-61.58433,15.86435],[-61.58465,15.86549],[-61.58291,15.86701],[-61.58299,15.86796],[-61.58205,15.86926],[-61.58237,15.87026],[-61.58344,15.87117],[-61.58329,15.87221],[-61.58403,15.87334],[-61.58505,15.87389],[-61.58476,15.87606],[-61.5826,15.87713],[-61.58208,15.8783],[-61.58221,15.87948],[-61.58155,15.88092],[-61.5809,15.8811],[-61.58012,15.87888],[-61.57919,15.8781],[-61.5799,15.87698],[-61.57897,15.87584],[-61.57851,15.87466],[-61.57917,15.87349],[-61.5782,15.87299],[-61.57557,15.87496],[-61.57498,15.87884],[-61.57413,15.88096],[-61.57373,15.88363],[-61.57262,15.88258],[-61.57159,15.88257],[-61.57132,15.88112],[-61.57016,15.88017],[-61.56966,15.87912],[-61.56876,15.87975],[-61.56812,15.87866],[-61.56972,15.87691],[-61.56884,15.87623],[-61.56997,15.87452],[-61.57142,15.8734],[-61.57129,15.87222],[-61.5699,15.87135],[-61.56835,15.87166],[-61.567,15.87228],[-61.56611,15.87187],[-61.56645,15.87097],[-61.56874,15.86967],[-61.57089,15.86919],[-61.57052,15.86869],[-61.57109,15.86729],[-61.57422,15.86713],[-61.57534,15.86741],[-61.57656,15.86656],[-61.5787,15.86179],[-61.57876,15.85957],[-61.57629,15.85825],[-61.577,15.85739],[-61.57738,15.85613],[-61.57841,15.85532],[-61.57967,15.85592],[-61.57933,15.85781],[-61.58022,15.858],[-61.58074,15.85714],[-61.58246,15.85711],[-61.58283,15.8577],[-61.58424,15.85708],[-61.58667,15.85718],[-61.58787,15.85918],[-61.58899,15.85896],[-61.58961,15.85621],[-61.59008,15.85621],[-61.59061,15.85445],[-61.59328,15.85253]]],[[[-61.59371,15.87178],[-61.59487,15.87201],[-61.59579,15.87378],[-61.59681,15.87487],[-61.59914,15.87588],[-61.60054,15.87594],[-61.6017,15.87744],[-61.59922,15.87819],[-61.59839,15.8771],[-61.59694,15.87704],[-61.59628,15.87767],[-61.594,15.87693],[-61.59306,15.87824],[-61.59119,15.87737],[-61.59088,15.87565],[-61.59238,15.87435],[-61.59248,15.87308],[-61.59371,15.87178]]],[[[-61.56671,15.87251],[-61.56755,15.87283],[-61.56642,15.87481],[-61.5652,15.87512],[-61.56573,15.87345],[-61.56671,15.87251]]],[[[-61.10635,16.17598],[-61.10975,16.17583],[-61.11064,16.17557],[-61.114,16.17646],[-61.11385,16.17763],[-61.11268,16.17762],[-61.11089,16.17873],[-61.10724,16.17893],[-61.10607,16.17987],[-61.10578,16.18086],[-61.10451,16.18045],[-61.10392,16.18107],[-61.10311,16.18042],[-61.1036,16.17919],[-61.10458,16.17859],[-61.10592,16.17589],[-61.10635,16.17598]]],[[[-61.32312,15.94961],[-61.32025,15.95202],[-61.3193,15.95364],[-61.31909,15.95649],[-61.31845,15.96041],[-61.31858,15.96173],[-61.31819,15.9643],[-61.31821,15.96751],[-61.31881,15.96783],[-61.31833,15.96972],[-61.31851,15.97076],[-61.31816,15.9727],[-61.31838,15.97469],[-61.31902,15.97592],[-61.31813,15.97627],[-61.31425,15.97647],[-61.31247,15.97691],[-61.31037,15.97712],[-61.30854,15.97769],[-61.30671,15.97885],[-61.30624,15.9797],[-61.30674,15.9807],[-61.30595,15.98128],[-61.30542,15.98313],[-61.30628,15.98603],[-61.30552,15.98711],[-61.30389,15.987],[-61.30159,15.98789],[-61.30041,15.98937],[-61.3005,15.99041],[-61.29894,15.99225],[-61.29893,15.99338],[-61.29827,15.99396],[-61.29708,15.9968],[-61.29637,15.99788],[-61.29458,15.99958],[-61.29364,16.00016],[-61.29123,16.00317],[-61.28973,16.00415],[-61.28889,16.00338],[-61.28763,16.00391],[-61.28674,16.00354],[-61.28604,16.00408],[-61.28333,16.00406],[-61.28184,16.00314],[-61.2808,16.0044],[-61.27776,16.00492],[-61.27686,16.00658],[-61.27569,16.00729],[-61.27585,16.00517],[-61.27389,16.00498],[-61.27357,16.00389],[-61.27225,16.0046],[-61.27119,16.00387],[-61.27077,16.00296],[-61.26829,16.00321],[-61.2669,16.00257],[-61.2663,16.00184],[-61.2648,16.00169],[-61.26071,15.99949],[-61.26081,15.99872],[-61.25932,15.99849],[-61.25831,15.99663],[-61.25747,15.99639],[-61.25715,15.99535],[-61.25607,15.9957],[-61.25599,15.99466],[-61.25403,15.99442],[-61.25296,15.99342],[-61.25274,15.99215],[-61.25073,15.99277],[-61.25027,15.99191],[-61.24938,15.9919],[-61.24806,15.99338],[-61.24761,15.9913],[-61.24429,15.99181],[-61.24397,15.99136],[-61.24172,15.99152],[-61.24267,15.99022],[-61.24352,15.98846],[-61.2433,15.98733],[-61.24161,15.98872],[-61.24002,15.98893],[-61.23932,15.98847],[-61.23967,15.98568],[-61.2384,15.98639],[-61.23607,15.9861],[-61.23528,15.98528],[-61.23309,15.98571],[-61.23188,15.9843],[-61.23278,15.98363],[-61.23306,15.98273],[-61.23256,15.982],[-61.23046,15.98113],[-61.23033,15.98022],[-61.23146,15.97919],[-61.23203,15.97784],[-61.23111,15.97666],[-61.22999,15.9766],[-61.23034,15.97444],[-61.23114,15.97354],[-61.2298,15.97105],[-61.22883,15.97004],[-61.22762,15.96981],[-61.22772,15.96859],[-61.22722,15.96786],[-61.22567,15.96825],[-61.22348,15.96833],[-61.2233,15.96674],[-61.22434,15.9654],[-61.22449,15.96436],[-61.22259,15.96335],[-61.22128,15.96334],[-61.21914,15.96215],[-61.21799,15.96019],[-61.21763,15.95897],[-61.21778,15.95753],[-61.21709,15.95675],[-61.21485,15.95664],[-61.21368,15.95632],[-61.21234,15.95536],[-61.21099,15.95489],[-61.20825,15.95302],[-61.20649,15.95142],[-61.2056,15.9511],[-61.2045,15.94919],[-61.20061,15.94509],[-61.19833,15.93929],[-61.19734,15.93499],[-61.19679,15.93354],[-61.1961,15.93295],[-61.19602,15.93082],[-61.19523,15.93064],[-61.1951,15.9295],[-61.1961,15.92743],[-61.19699,15.92699],[-61.197,15.92541],[-61.19608,15.92414],[-61.19587,15.92129],[-61.19653,15.92066],[-61.19736,15.91683],[-61.19723,15.91601],[-61.19894,15.91237],[-61.19994,15.91079],[-61.20127,15.90805],[-61.20128,15.90724],[-61.20256,15.90467],[-61.20317,15.904],[-61.20271,15.90318],[-61.20398,15.90193],[-61.20455,15.90094],[-61.20886,15.89939],[-61.21026,15.89927],[-61.2114,15.89806],[-61.21289,15.89744],[-61.21426,15.89596],[-61.21539,15.89551],[-61.21782,15.89517],[-61.22103,15.89122],[-61.22171,15.88789],[-61.22325,15.88767],[-61.22593,15.88607],[-61.22706,15.88463],[-61.22833,15.8836],[-61.2303,15.88262],[-61.23222,15.88205],[-61.23312,15.88025],[-61.23449,15.87904],[-61.23575,15.87905],[-61.23655,15.87834],[-61.238,15.87794],[-61.23908,15.87678],[-61.24053,15.8762],[-61.24251,15.87446],[-61.24452,15.87456],[-61.24724,15.87296],[-61.24859,15.87288],[-61.25056,15.87194],[-61.25121,15.87213],[-61.25406,15.87193],[-61.25477,15.87135],[-61.25589,15.87145],[-61.25879,15.87075],[-61.25878,15.87115],[-61.26331,15.87092],[-61.26483,15.86881],[-61.26614,15.86827],[-61.2673,15.86833],[-61.26871,15.8673],[-61.27011,15.86772],[-61.27123,15.86723],[-61.27221,15.86746],[-61.2739,15.86685],[-61.27469,15.86757],[-61.27586,15.86713],[-61.27711,15.8675],[-61.27847,15.8672],[-61.27918,15.86653],[-61.28085,15.86713],[-61.28284,15.87003],[-61.2833,15.86977],[-61.28545,15.87046],[-61.28727,15.86998],[-61.2882,15.87012],[-61.28885,15.87099],[-61.29118,15.87146],[-61.29145,15.87227],[-61.29401,15.87301],[-61.29569,15.87307],[-61.2983,15.87404],[-61.30087,15.87447],[-61.30231,15.87435],[-61.30315,15.87471],[-61.30491,15.87617],[-61.30625,15.87767],[-61.30774,15.87864],[-61.30979,15.87946],[-61.31119,15.87929],[-61.31357,15.8799],[-61.31501,15.88054],[-61.31923,15.88347],[-61.32262,15.88607],[-61.32484,15.88889],[-61.3258,15.89129],[-61.32649,15.89211],[-61.32694,15.89433],[-61.3274,15.89515],[-61.32995,15.89684],[-61.33102,15.89811],[-61.33092,15.89888],[-61.33184,15.9006],[-61.32995,15.90298],[-61.32943,15.90415],[-61.33023,15.90859],[-61.33192,15.91253],[-61.33256,15.91489],[-61.33259,15.91642],[-61.33333,15.91815],[-61.33363,15.92054],[-61.33472,15.9248],[-61.33489,15.92692],[-61.33555,15.93122],[-61.33696,15.93661],[-61.33722,15.93842],[-61.33706,15.94149],[-61.33452,15.94364],[-61.32908,15.94644],[-61.32828,15.94703],[-61.32537,15.94831],[-61.32312,15.94961]]],[[[-61.58724,16.34494],[-61.58935,16.34495],[-61.59112,16.34627],[-61.59191,16.34627],[-61.59375,16.34457],[-61.59443,16.34195],[-61.597,16.34233],[-61.59662,16.34319],[-61.59407,16.34575],[-61.59369,16.3466],[-61.59261,16.34759],[-61.59147,16.34912],[-61.5914,16.35255],[-61.59027,16.35349],[-61.5891,16.35362],[-61.58616,16.35301],[-61.58499,16.35246],[-61.5827,16.35209],[-61.58056,16.35053],[-61.57893,16.34903],[-61.57928,16.3465],[-61.58074,16.34525],[-61.58303,16.34468],[-61.58448,16.34464],[-61.58565,16.34501],[-61.58724,16.34494]]],[[[-61.52521,16.34835],[-61.52731,16.34927],[-61.52992,16.34996],[-61.52987,16.35082],[-61.52636,16.35061],[-61.52502,16.34875],[-61.52521,16.34835]]],[[[-61.54392,16.29235],[-61.54494,16.29299],[-61.54507,16.29444],[-61.54292,16.29515],[-61.54204,16.29406],[-61.54284,16.29271],[-61.54392,16.29235]]],[[[-61.55009,16.28038],[-61.55275,16.28121],[-61.55171,16.28233],[-61.55022,16.28218],[-61.54971,16.2815],[-61.55009,16.28038]]],[[[-61.50735,16.34916],[-61.50948,16.34883],[-61.51013,16.34973],[-61.50821,16.3499],[-61.50735,16.34916]]],[[[-61.55217,16.28405],[-61.55529,16.28606],[-61.55407,16.28641],[-61.55188,16.28464],[-61.55217,16.28405]]],[[[-61.55552,16.28638],[-61.55645,16.28702],[-61.55518,16.288],[-61.55425,16.28673],[-61.55552,16.28638]]],[[[-61.80606,16.268],[-61.80629,16.26855],[-61.8083,16.26901],[-61.8082,16.27036],[-61.80958,16.27286],[-61.80499,16.27486],[-61.80404,16.27599],[-61.80418,16.27698],[-61.80333,16.27743],[-61.80248,16.2791],[-61.80271,16.28055],[-61.80341,16.28051],[-61.80415,16.2815],[-61.80321,16.28276],[-61.80315,16.28462],[-61.80216,16.28542],[-61.80164,16.28673],[-61.80234,16.28764],[-61.80232,16.28949],[-61.80278,16.29189],[-61.80263,16.29334],[-61.80308,16.29537],[-61.80215,16.29528],[-61.80181,16.29785],[-61.80222,16.29898],[-61.80211,16.30124],[-61.80018,16.30382],[-61.7991,16.30376],[-61.79807,16.30426],[-61.79568,16.3046],[-61.79459,16.30677],[-61.79482,16.30844],[-61.79635,16.3094],[-61.79785,16.30959],[-61.80023,16.31077],[-61.80088,16.31182],[-61.80181,16.31191],[-61.80156,16.31435],[-61.80001,16.3166],[-61.79686,16.31794],[-61.79227,16.31932],[-61.78982,16.32097],[-61.78869,16.3221],[-61.7868,16.32516],[-61.78679,16.32769],[-61.78701,16.32954],[-61.78887,16.33177],[-61.78877,16.3334],[-61.78744,16.33574],[-61.78551,16.33722],[-61.78509,16.33812],[-61.78359,16.3382],[-61.77927,16.3408],[-61.7778,16.34251],[-61.77834,16.34617],[-61.77764,16.34653],[-61.77571,16.34846],[-61.77612,16.35004],[-61.77467,16.34945],[-61.772,16.34961],[-61.77106,16.35006],[-61.76956,16.35141],[-61.76862,16.35127],[-61.76707,16.35175],[-61.76627,16.35333],[-61.76416,16.35436],[-61.76308,16.35404],[-61.76097,16.35466],[-61.75947,16.35569],[-61.75699,16.35445],[-61.75424,16.35385],[-61.75035,16.35428],[-61.74861,16.35494],[-61.74823,16.3563],[-61.7463,16.35742],[-61.74574,16.35827],[-61.74596,16.36044],[-61.74431,16.36111],[-61.74328,16.36201],[-61.74198,16.36064],[-61.74001,16.35995],[-61.73884,16.36031],[-61.73731,16.35827],[-61.73507,16.35699],[-61.73246,16.35629],[-61.73063,16.35673],[-61.72936,16.35781],[-61.72904,16.35677],[-61.72829,16.35654],[-61.72806,16.3555],[-61.72648,16.3544],[-61.72446,16.35399],[-61.72461,16.35254],[-61.72083,16.35035],[-61.72206,16.34855],[-61.72113,16.34737],[-61.71982,16.34763],[-61.71889,16.34618],[-61.71796,16.34595],[-61.71679,16.34486],[-61.71572,16.34449],[-61.71704,16.34309],[-61.71649,16.34146],[-61.71551,16.34065],[-61.71613,16.33975],[-61.7151,16.33856],[-61.71426,16.33833],[-61.7138,16.33734],[-61.71141,16.33723],[-61.70875,16.33608],[-61.70749,16.33617],[-61.70655,16.33688],[-61.70318,16.3365],[-61.70128,16.33446],[-61.70001,16.33535],[-61.69912,16.3353],[-61.69767,16.33421],[-61.69627,16.33416],[-61.69524,16.33474],[-61.69397,16.33464],[-61.69216,16.33323],[-61.69198,16.33246],[-61.69091,16.33105],[-61.68904,16.33113],[-61.68858,16.33],[-61.68671,16.32985],[-61.68596,16.32894],[-61.68579,16.32632],[-61.68626,16.32587],[-61.68534,16.32464],[-61.68388,16.32513],[-61.68145,16.32475],[-61.68017,16.32687],[-61.6812,16.32746],[-61.68026,16.32836],[-61.67862,16.32822],[-61.67839,16.32718],[-61.67737,16.32645],[-61.67517,16.32593],[-61.67401,16.32507],[-61.67261,16.32461],[-61.67327,16.32321],[-61.67238,16.32298],[-61.67197,16.32167],[-61.67104,16.32121],[-61.67039,16.31989],[-61.6712,16.31787],[-61.67017,16.31786],[-61.66901,16.31708],[-61.66741,16.3187],[-61.6667,16.32005],[-61.66596,16.31788],[-61.66493,16.3176],[-61.66338,16.31845],[-61.66084,16.32024],[-61.65963,16.31969],[-61.65818,16.31982],[-61.65505,16.31957],[-61.6541,16.32056],[-61.65218,16.32132],[-61.65036,16.32103],[-61.64855,16.31894],[-61.64737,16.31912],[-61.64644,16.31843],[-61.64411,16.31796],[-61.64117,16.31632],[-61.64094,16.31578],[-61.64207,16.31497],[-61.6432,16.31344],[-61.64461,16.31286],[-61.64476,16.31119],[-61.64347,16.30879],[-61.64057,16.30868],[-61.63827,16.30948],[-61.63715,16.3092],[-61.63673,16.30852],[-61.63454,16.30783],[-61.63389,16.30687],[-61.6339,16.30561],[-61.63315,16.30479],[-61.62913,16.30463],[-61.62768,16.30439],[-61.62699,16.30303],[-61.62574,16.30158],[-61.62438,16.30125],[-61.62279,16.30133],[-61.61829,16.30216],[-61.61688,16.30274],[-61.61412,16.30326],[-61.61253,16.30303],[-61.61201,16.30352],[-61.60882,16.3044],[-61.60499,16.30433],[-61.60373,16.30351],[-61.60233,16.30341],[-61.60172,16.30291],[-61.60141,16.30097],[-61.60226,16.29925],[-61.60353,16.29813],[-61.60616,16.29752],[-61.60715,16.29644],[-61.60926,16.29519],[-61.61063,16.29375],[-61.61116,16.2924],[-61.61099,16.28996],[-61.61213,16.28739],[-61.61242,16.28509],[-61.61445,16.28316],[-61.616,16.28249],[-61.61768,16.2825],[-61.61997,16.28288],[-61.62067,16.28333],[-61.61931,16.2845],[-61.61823,16.28476],[-61.61666,16.28755],[-61.6168,16.28841],[-61.61773,16.28928],[-61.61767,16.29018],[-61.61967,16.29218],[-61.62079,16.29224],[-61.62067,16.29061],[-61.61904,16.28902],[-61.61896,16.28716],[-61.62071,16.28496],[-61.62207,16.28434],[-61.62385,16.28304],[-61.62596,16.28255],[-61.62691,16.28053],[-61.62651,16.27831],[-61.62577,16.27672],[-61.62428,16.2754],[-61.62259,16.27616],[-61.61987,16.27687],[-61.61575,16.27833],[-61.61303,16.27876],[-61.61185,16.27948],[-61.61144,16.27875],[-61.61136,16.27636],[-61.61217,16.27392],[-61.61492,16.27001],[-61.61455,16.26879],[-61.61353,16.26765],[-61.61194,16.26719],[-61.61072,16.26827],[-61.60992,16.26844],[-61.60758,16.2682],[-61.60603,16.26964],[-61.60498,16.27202],[-61.60292,16.27273],[-61.60207,16.27368],[-61.6022,16.27494],[-61.5996,16.27962],[-61.59921,16.28111],[-61.59864,16.2817],[-61.59738,16.28146],[-61.59847,16.28043],[-61.599,16.27759],[-61.59714,16.27595],[-61.59696,16.27482],[-61.59782,16.27283],[-61.59848,16.27261],[-61.60069,16.271],[-61.60065,16.26888],[-61.59857,16.26647],[-61.5974,16.26605],[-61.59497,16.26604],[-61.59229,16.26683],[-61.59089,16.26687],[-61.58934,16.26785],[-61.58924,16.26848],[-61.58502,16.26963],[-61.58422,16.27012],[-61.58347,16.27152],[-61.58335,16.27432],[-61.58279,16.27445],[-61.58222,16.27585],[-61.57916,16.27886],[-61.57918,16.2817],[-61.57978,16.28238],[-61.57963,16.28378],[-61.57706,16.28404],[-61.57612,16.28512],[-61.57458,16.28334],[-61.57454,16.28244],[-61.5731,16.28166],[-61.57244,16.28224],[-61.57025,16.28155],[-61.56934,16.28417],[-61.56643,16.28559],[-61.56483,16.28662],[-61.56319,16.28643],[-61.56301,16.2853],[-61.56199,16.28457],[-61.5619,16.28344],[-61.56022,16.28392],[-61.56002,16.2855],[-61.55865,16.2864],[-61.55511,16.28475],[-61.55498,16.28389],[-61.554,16.28262],[-61.55298,16.28243],[-61.5528,16.28053],[-61.55319,16.27859],[-61.55564,16.27653],[-61.55609,16.27888],[-61.55959,16.28026],[-61.55978,16.27909],[-61.56064,16.27747],[-61.56065,16.27606],[-61.55901,16.27583],[-61.55793,16.27623],[-61.55716,16.27383],[-61.55609,16.27296],[-61.55529,16.273],[-61.5549,16.27539],[-61.55536,16.27653],[-61.55315,16.27823],[-61.55277,16.27795],[-61.55095,16.27826],[-61.5495,16.27757],[-61.54928,16.27612],[-61.54952,16.27499],[-61.5494,16.27215],[-61.5482,16.27042],[-61.54862,16.26988],[-61.54869,16.26785],[-61.54794,16.26694],[-61.54832,16.26617],[-61.54764,16.26355],[-61.54789,16.2612],[-61.54846,16.26039],[-61.54725,16.25894],[-61.54723,16.25614],[-61.54911,16.25407],[-61.55016,16.25227],[-61.55137,16.2521],[-61.55279,16.25089],[-61.55308,16.24958],[-61.55173,16.24826],[-61.55104,16.24626],[-61.54979,16.24544],[-61.54845,16.24227],[-61.54883,16.24191],[-61.55058,16.23849],[-61.55075,16.23555],[-61.54974,16.23274],[-61.54895,16.23193],[-61.54693,16.23236],[-61.54679,16.23277],[-61.54296,16.233],[-61.5417,16.23139],[-61.5458,16.22815],[-61.54692,16.22825],[-61.54544,16.22616],[-61.54455,16.22534],[-61.54601,16.22382],[-61.54771,16.22329],[-61.55169,16.22418],[-61.5527,16.22524],[-61.55331,16.22646],[-61.55444,16.23007],[-61.55591,16.23265],[-61.55768,16.23343],[-61.55814,16.2347],[-61.55893,16.23525],[-61.56076,16.2353],[-61.56245,16.23405],[-61.56283,16.23324],[-61.56219,16.23202],[-61.56415,16.23216],[-61.56666,16.23358],[-61.56656,16.23543],[-61.56721,16.23598],[-61.57067,16.23591],[-61.57254,16.23557],[-61.57391,16.23444],[-61.57494,16.23436],[-61.57741,16.23497],[-61.57834,16.23597],[-61.57857,16.23683],[-61.57992,16.23688],[-61.58317,16.23442],[-61.58435,16.23298],[-61.58413,16.23149],[-61.5846,16.23031],[-61.58571,16.2263],[-61.58751,16.22279],[-61.58822,16.22041],[-61.58833,16.21796],[-61.58713,16.21691],[-61.58462,16.21418],[-61.5858,16.21356],[-61.5874,16.21185],[-61.58755,16.21004],[-61.58616,16.20854],[-61.58626,16.20764],[-61.58523,16.20727],[-61.58315,16.20477],[-61.58495,16.2013],[-61.58753,16.19956],[-61.58843,16.19848],[-61.58995,16.19515],[-61.59043,16.19325],[-61.59002,16.19185],[-61.58995,16.18918],[-61.58898,16.18755],[-61.58913,16.18624],[-61.58862,16.18511],[-61.58639,16.18306],[-61.58594,16.18056],[-61.58445,16.17987],[-61.58104,16.17967],[-61.5802,16.17899],[-61.5805,16.1761],[-61.57967,16.17473],[-61.57959,16.17324],[-61.58108,16.1728],[-61.5817,16.17181],[-61.58339,16.17101],[-61.58476,16.16948],[-61.58496,16.16754],[-61.58378,16.16252],[-61.58201,16.16074],[-61.5816,16.15916],[-61.58189,16.15758],[-61.58167,16.15568],[-61.58089,16.15463],[-61.57832,16.1538],[-61.57547,16.1536],[-61.57534,16.15207],[-61.57395,16.15038],[-61.57569,16.14976],[-61.57603,16.14723],[-61.57595,16.14543],[-61.57801,16.14467],[-61.5777,16.14286],[-61.57616,16.14235],[-61.57551,16.14149],[-61.57575,16.14041],[-61.57412,16.13936],[-61.57413,16.13778],[-61.57293,16.13664],[-61.57083,16.13635],[-61.57055,16.13595],[-61.56761,16.1352],[-61.56579,16.13397],[-61.56462,16.1346],[-61.56308,16.13431],[-61.5622,16.1334],[-61.56086,16.13114],[-61.56059,16.12955],[-61.56111,16.12829],[-61.5629,16.12735],[-61.56361,16.12587],[-61.5659,16.12525],[-61.56816,16.1235],[-61.56995,16.12107],[-61.57045,16.11728],[-61.57038,16.11394],[-61.56919,16.11081],[-61.56719,16.10849],[-61.56561,16.10789],[-61.56318,16.10765],[-61.56272,16.1058],[-61.56348,16.10508],[-61.56363,16.10345],[-61.56326,16.10268],[-61.56214,16.10263],[-61.56093,16.10163],[-61.56109,16.09919],[-61.56157,16.09788],[-61.5613,16.09634],[-61.56051,16.09516],[-61.55948,16.09488],[-61.5588,16.09276],[-61.55965,16.09077],[-61.55953,16.08906],[-61.56019,16.08816],[-61.56057,16.08671],[-61.56097,16.08346],[-61.56085,16.0807],[-61.55997,16.07912],[-61.55914,16.07834],[-61.56076,16.07402],[-61.56096,16.07212],[-61.5607,16.06841],[-61.56083,16.06317],[-61.56006,16.06054],[-61.55913,16.05936],[-61.55787,16.05877],[-61.55588,16.0564],[-61.55533,16.05486],[-61.55534,16.05324],[-61.55586,16.05301],[-61.55763,16.05416],[-61.5575,16.05221],[-61.55643,16.05117],[-61.55733,16.05031],[-61.55911,16.04974],[-61.56052,16.04807],[-61.56091,16.04573],[-61.56288,16.04434],[-61.56397,16.04322],[-61.56444,16.04209],[-61.56476,16.03762],[-61.56504,16.03658],[-61.56492,16.03373],[-61.56756,16.03068],[-61.56897,16.02965],[-61.56977,16.02834],[-61.56928,16.02599],[-61.57036,16.02496],[-61.57176,16.02474],[-61.57196,16.02316],[-61.57272,16.02195],[-61.57403,16.02114],[-61.57726,16.02026],[-61.57787,16.01977],[-61.57965,16.01928],[-61.58182,16.01699],[-61.58178,16.01577],[-61.58272,16.01456],[-61.58427,16.01326],[-61.58442,16.01226],[-61.58639,16.01178],[-61.5876,16.01188],[-61.5891,16.01058],[-61.58841,16.00958],[-61.58884,16.00899],[-61.59023,16.00932],[-61.59117,16.00874],[-61.59156,16.00702],[-61.59249,16.00689],[-61.59424,16.00519],[-61.59602,16.0043],[-61.59719,16.00417],[-61.59841,16.00273],[-61.59847,16.0011],[-61.60057,16.0008],[-61.60259,16.00004],[-61.60315,15.9991],[-61.60331,15.99747],[-61.60377,15.99725],[-61.6043,15.99549],[-61.60613,15.99474],[-61.60721,15.99384],[-61.60811,15.99217],[-61.61054,15.99196],[-61.61241,15.9913],[-61.6142,15.989],[-61.61422,15.98697],[-61.61455,15.98607],[-61.61461,15.98394],[-61.61439,15.98214],[-61.61637,15.97993],[-61.61782,15.9794],[-61.61956,15.97824],[-61.62012,15.97711],[-61.62013,15.97598],[-61.61869,15.97484],[-61.61828,15.97308],[-61.61918,15.97173],[-61.6203,15.97169],[-61.621,15.97251],[-61.62217,15.97152],[-61.62484,15.97104],[-61.62567,15.97227],[-61.62717,15.972],[-61.62853,15.97048],[-61.62975,15.97048],[-61.62991,15.96741],[-61.63113,15.96701],[-61.63276,15.9677],[-61.63337,15.96658],[-61.63459,15.96622],[-61.63622,15.967],[-61.63696,15.96786],[-61.63957,15.96788],[-61.64097,15.96821],[-61.64215,15.96731],[-61.64355,15.96736],[-61.64435,15.96687],[-61.64462,15.96832],[-61.64732,15.96865],[-61.64853,15.96974],[-61.65059,15.96867],[-61.65182,15.96737],[-61.65163,15.96678],[-61.6536,15.9667],[-61.6551,15.96545],[-61.6575,15.9628],[-61.65807,15.96099],[-61.65934,15.96023],[-61.66041,15.96114],[-61.66156,15.96291],[-61.66179,15.96404],[-61.66272,15.96436],[-61.66515,15.96388],[-61.66909,15.96201],[-61.67177,15.9594],[-61.67352,15.95675],[-61.67343,15.95575],[-61.67507,15.95432],[-61.67588,15.95256],[-61.67878,15.95195],[-61.6799,15.95132],[-61.68033,15.95055],[-61.68206,15.95052],[-61.68519,15.94973],[-61.68842,15.94934],[-61.69103,15.94935],[-61.69296,15.94837],[-61.69337,15.94855],[-61.69571,15.94812],[-61.69656,15.94704],[-61.69997,15.94661],[-61.70156,15.94743],[-61.70393,15.94925],[-61.70537,15.94949],[-61.70697,15.94837],[-61.70767,15.94891],[-61.70798,15.95072],[-61.70741,15.95198],[-61.70801,15.95334],[-61.70987,15.95457],[-61.70911,15.95624],[-61.70892,15.95782],[-61.70914,15.95936],[-61.70806,15.96103],[-61.708,15.96238],[-61.7085,15.96496],[-61.70941,15.96754],[-61.71019,15.97053],[-61.71,15.97134],[-61.71119,15.97438],[-61.71249,15.97619],[-61.71323,15.97778],[-61.71508,15.98018],[-61.71576,15.98159],[-61.71514,15.98258],[-61.71666,15.98437],[-61.71772,15.98359],[-61.72061,15.9851],[-61.7228,15.98538],[-61.72578,15.98789],[-61.73009,15.99211],[-61.73227,15.99552],[-61.73292,15.99529],[-61.73422,15.99697],[-61.73352,15.99733],[-61.73616,16.00019],[-61.73863,16.00256],[-61.7404,16.00352],[-61.74253,16.00507],[-61.74374,16.00657],[-61.74439,16.00793],[-61.74578,16.00942],[-61.7467,16.01106],[-61.74693,16.01282],[-61.7469,16.01739],[-61.74717,16.01847],[-61.7471,16.02168],[-61.74807,16.02349],[-61.74843,16.0258],[-61.74815,16.02688],[-61.74906,16.03028],[-61.75049,16.03241],[-61.75104,16.03449],[-61.75369,16.03654],[-61.75387,16.0388],[-61.75456,16.04034],[-61.75568,16.04062],[-61.75716,16.04212],[-61.75814,16.04362],[-61.76102,16.04571],[-61.76083,16.04648],[-61.76204,16.04784],[-61.76371,16.04885],[-61.76474,16.04912],[-61.76492,16.05048],[-61.76593,16.05279],[-61.76732,16.05411],[-61.76815,16.05588],[-61.76866,16.05773],[-61.76954,16.05873],[-61.77035,16.06303],[-61.76958,16.06714],[-61.76896,16.06899],[-61.76819,16.07377],[-61.76849,16.07748],[-61.76895,16.07938],[-61.76777,16.08082],[-61.76733,16.08412],[-61.76872,16.08553],[-61.76909,16.08643],[-61.76857,16.08729],[-61.76659,16.08922],[-61.76682,16.09071],[-61.76855,16.09059],[-61.76996,16.08965],[-61.7714,16.08984],[-61.77149,16.09069],[-61.77285,16.09115],[-61.77256,16.09255],[-61.77297,16.09341],[-61.77161,16.09404],[-61.77039,16.09539],[-61.77187,16.0972],[-61.77355,16.09798],[-61.77167,16.09973],[-61.77189,16.10168],[-61.77254,16.10213],[-61.77395,16.10196],[-61.77464,16.10355],[-61.77435,16.10454],[-61.77299,16.10507],[-61.77271,16.10575],[-61.77311,16.10901],[-61.77432,16.11051],[-61.77431,16.11141],[-61.77337,16.11231],[-61.77401,16.11398],[-61.77414,16.11697],[-61.77366,16.11782],[-61.77318,16.12058],[-61.77336,16.1218],[-61.77429,16.12235],[-61.77405,16.12352],[-61.77302,16.12406],[-61.77385,16.12496],[-61.77286,16.12677],[-61.77038,16.1277],[-61.76986,16.12824],[-61.7698,16.13091],[-61.77067,16.13263],[-61.77062,16.13376],[-61.7715,16.13575],[-61.7728,16.13608],[-61.77383,16.13699],[-61.77494,16.13884],[-61.77592,16.1389],[-61.77769,16.13958],[-61.77952,16.13932],[-61.77998,16.14023],[-61.7789,16.1409],[-61.77898,16.14321],[-61.77701,16.14455],[-61.77793,16.14582],[-61.77629,16.14626],[-61.77535,16.14784],[-61.77511,16.14892],[-61.77594,16.1501],[-61.77557,16.15055],[-61.7755,16.15322],[-61.77624,16.15557],[-61.77617,16.15887],[-61.77648,16.16172],[-61.77586,16.16316],[-61.77566,16.16569],[-61.77657,16.16909],[-61.77727,16.16991],[-61.77591,16.17094],[-61.77781,16.17325],[-61.77925,16.17439],[-61.78155,16.17409],[-61.78263,16.17364],[-61.78411,16.17618],[-61.7841,16.17709],[-61.78321,16.1778],[-61.78386,16.17889],[-61.78338,16.1797],[-61.78416,16.18246],[-61.78355,16.18382],[-61.78349,16.18549],[-61.78386,16.18617],[-61.78231,16.1877],[-61.78286,16.18869],[-61.7844,16.18965],[-61.78435,16.1906],[-61.78606,16.19305],[-61.78746,16.19441],[-61.78773,16.19518],[-61.78655,16.19658],[-61.78687,16.19902],[-61.78565,16.19978],[-61.78582,16.20209],[-61.78491,16.20484],[-61.7838,16.20574],[-61.78289,16.20763],[-61.783,16.21133],[-61.78233,16.2144],[-61.78298,16.215],[-61.78339,16.21631],[-61.78488,16.21785],[-61.7845,16.2197],[-61.78495,16.22179],[-61.78494,16.22382],[-61.78637,16.22722],[-61.78771,16.22912],[-61.78902,16.23003],[-61.79027,16.23185],[-61.79221,16.23579],[-61.79357,16.23571],[-61.79492,16.2363],[-61.79618,16.23744],[-61.79678,16.23979],[-61.79818,16.24025],[-61.7998,16.24207],[-61.80153,16.24298],[-61.80129,16.24384],[-61.80211,16.24737],[-61.80285,16.24823],[-61.80233,16.24954],[-61.80256,16.25113],[-61.80339,16.25203],[-61.80325,16.25276],[-61.80483,16.25426],[-61.80519,16.25652],[-61.80593,16.25747],[-61.80602,16.25914],[-61.8052,16.26312],[-61.80533,16.26402],[-61.80691,16.26624],[-61.80606,16.268]]],[[[-61.53048,16.21784],[-61.53064,16.21851],[-61.53283,16.22127],[-61.53223,16.22156],[-61.52942,16.21801],[-61.52739,16.21827],[-61.5255,16.21706],[-61.52336,16.21747],[-61.52296,16.2189],[-61.52329,16.22117],[-61.52476,16.22105],[-61.52537,16.21965],[-61.52604,16.21904],[-61.52785,16.21967],[-61.52879,16.2195],[-61.52995,16.22086],[-61.52747,16.22102],[-61.52727,16.22292],[-61.52988,16.22298],[-61.53044,16.22394],[-61.53202,16.2249],[-61.53272,16.22472],[-61.53276,16.22626],[-61.53037,16.22628],[-61.52981,16.22705],[-61.53116,16.22737],[-61.53186,16.22806],[-61.53162,16.22891],[-61.53358,16.22924],[-61.53455,16.23142],[-61.53463,16.23273],[-61.53313,16.23304],[-61.53331,16.23421],[-61.53438,16.23481],[-61.53484,16.23612],[-61.53583,16.23464],[-61.53663,16.23433],[-61.53803,16.23533],[-61.53965,16.23697],[-61.53918,16.23787],[-61.53879,16.23981],[-61.54159,16.24046],[-61.54125,16.2419],[-61.54124,16.24385],[-61.54784,16.24968],[-61.54741,16.25067],[-61.54876,16.25081],[-61.54969,16.25168],[-61.54846,16.25334],[-61.54687,16.2536],[-61.54654,16.25414],[-61.54684,16.25812],[-61.54674,16.25943],[-61.54743,16.26029],[-61.54751,16.26219],[-61.54717,16.26327],[-61.54748,16.2659],[-61.54645,16.26661],[-61.54798,16.26762],[-61.54816,16.26875],[-61.54736,16.27028],[-61.5474,16.271],[-61.54875,16.27192],[-61.54887,16.2749],[-61.54811,16.27553],[-61.5488,16.27743],[-61.548,16.27824],[-61.54738,16.27995],[-61.54761,16.28081],[-61.54906,16.28064],[-61.54984,16.28272],[-61.54932,16.2838],[-61.55053,16.28449],[-61.55042,16.28594],[-61.55126,16.28739],[-61.55214,16.28785],[-61.55416,16.28723],[-61.55448,16.28813],[-61.55283,16.28898],[-61.55194,16.28906],[-61.55065,16.28698],[-61.54998,16.28883],[-61.54833,16.29134],[-61.5456,16.29241],[-61.5442,16.2919],[-61.5436,16.29077],[-61.54385,16.28969],[-61.54282,16.28963],[-61.54231,16.28895],[-61.54113,16.28962],[-61.54166,16.29387],[-61.54226,16.29582],[-61.54423,16.29516],[-61.54557,16.2963],[-61.5464,16.29834],[-61.54724,16.29893],[-61.54699,16.30137],[-61.54642,16.30263],[-61.54524,16.30407],[-61.54416,16.30352],[-61.54562,16.30262],[-61.54535,16.30127],[-61.54372,16.3008],[-61.543,16.3026],[-61.54127,16.30246],[-61.53938,16.30511],[-61.53811,16.30619],[-61.53726,16.30641],[-61.53748,16.30862],[-61.53691,16.30966],[-61.53695,16.31092],[-61.53582,16.31132],[-61.53572,16.31213],[-61.53446,16.31262],[-61.53501,16.31448],[-61.53354,16.31628],[-61.53555,16.31719],[-61.53586,16.31882],[-61.53377,16.32292],[-61.53442,16.32464],[-61.53338,16.32595],[-61.53356,16.32685],[-61.53532,16.32872],[-61.53484,16.32998],[-61.53554,16.33111],[-61.53463,16.33332],[-61.53336,16.33471],[-61.53011,16.33668],[-61.52954,16.33771],[-61.52819,16.33734],[-61.5279,16.33852],[-61.52916,16.33848],[-61.52963,16.33921],[-61.5261,16.3409],[-61.52469,16.34197],[-61.5243,16.34378],[-61.52327,16.34427],[-61.52275,16.34548],[-61.52079,16.34389],[-61.51944,16.34334],[-61.51602,16.34331],[-61.51481,16.34276],[-61.51317,16.34298],[-61.50808,16.34208],[-61.50684,16.34438],[-61.50726,16.34528],[-61.50664,16.34582],[-61.50445,16.34526],[-61.50696,16.34808],[-61.50652,16.34944],[-61.50577,16.35033],[-61.50498,16.34902],[-61.50395,16.34906],[-61.50412,16.35109],[-61.50295,16.35104],[-61.50229,16.35176],[-61.49939,16.35192],[-61.49836,16.35245],[-61.49714,16.35226],[-61.49536,16.35243],[-61.49377,16.3531],[-61.49371,16.35409],[-61.49521,16.35401],[-61.49731,16.35488],[-61.49955,16.35513],[-61.49982,16.35648],[-61.49823,16.35643],[-61.49757,16.3571],[-61.49709,16.35899],[-61.496,16.36097],[-61.49805,16.36212],[-61.49889,16.36208],[-61.49959,16.36294],[-61.50136,16.36418],[-61.50074,16.36485],[-61.49934,16.36493],[-61.49769,16.36654],[-61.49713,16.36663],[-61.49702,16.36821],[-61.49612,16.36961],[-61.49708,16.37223],[-61.49586,16.37308],[-61.49636,16.37431],[-61.49622,16.37525],[-61.49504,16.37674],[-61.49629,16.37747],[-61.49633,16.37837],[-61.49722,16.37928],[-61.49809,16.38182],[-61.50017,16.38414],[-61.5026,16.3847],[-61.50344,16.38624],[-61.5046,16.38742],[-61.50516,16.38747],[-61.5058,16.38888],[-61.50678,16.38898],[-61.50727,16.38677],[-61.5092,16.3856],[-61.50998,16.38674],[-61.51092,16.3872],[-61.51226,16.38951],[-61.51413,16.38939],[-61.51693,16.39072],[-61.51829,16.39078],[-61.51996,16.39201],[-61.52286,16.39325],[-61.52351,16.39294],[-61.525,16.39444],[-61.52575,16.39467],[-61.527,16.39639],[-61.52703,16.3978],[-61.52773,16.39911],[-61.52866,16.39966],[-61.52907,16.40066],[-61.52869,16.40156],[-61.52881,16.40459],[-61.52982,16.40712],[-61.52995,16.40916],[-61.53078,16.41035],[-61.531,16.41172],[-61.53232,16.4127],[-61.53235,16.41374],[-61.53318,16.41469],[-61.53339,16.41763],[-61.53423,16.41859],[-61.53459,16.42094],[-61.53383,16.42238],[-61.53344,16.42437],[-61.53501,16.42704],[-61.53645,16.42872],[-61.53737,16.43067],[-61.53733,16.43569],[-61.53807,16.43741],[-61.53947,16.43751],[-61.54102,16.43712],[-61.54148,16.43762],[-61.54115,16.43888],[-61.54025,16.43996],[-61.5393,16.44176],[-61.53769,16.44401],[-61.5373,16.44586],[-61.5363,16.4477],[-61.5362,16.44942],[-61.53582,16.45027],[-61.53565,16.45402],[-61.53545,16.45497],[-61.53154,16.4582],[-61.52965,16.46062],[-61.52852,16.46134],[-61.52562,16.46177],[-61.52326,16.46343],[-61.52203,16.46495],[-61.52174,16.46699],[-61.52074,16.4682],[-61.51815,16.47071],[-61.51458,16.47186],[-61.51238,16.4718],[-61.5098,16.47273],[-61.50909,16.47372],[-61.50806,16.47398],[-61.50653,16.47732],[-61.50563,16.47848],[-61.50524,16.48074],[-61.50434,16.48245],[-61.50409,16.48417],[-61.50058,16.48437],[-61.49851,16.48521],[-61.49742,16.48615],[-61.49625,16.48642],[-61.49413,16.48762],[-61.49314,16.48906],[-61.49168,16.48986],[-61.4899,16.49035],[-61.48854,16.49038],[-61.48614,16.49149],[-61.48543,16.49262],[-61.48509,16.49411],[-61.48287,16.49621],[-61.48194,16.4958],[-61.48113,16.49747],[-61.4801,16.4975],[-61.47958,16.49868],[-61.48009,16.49927],[-61.4788,16.50152],[-61.47827,16.50364],[-61.47756,16.5049],[-61.47644,16.50475],[-61.47544,16.50592],[-61.47477,16.50894],[-61.47378,16.50975],[-61.47349,16.51092],[-61.47208,16.51046],[-61.47096,16.5105],[-61.47086,16.51126],[-61.46969,16.51162],[-61.46866,16.5108],[-61.46693,16.51047],[-61.46475,16.51429],[-61.46405,16.51307],[-61.46506,16.50978],[-61.46668,16.50685],[-61.46603,16.50626],[-61.46485,16.50679],[-61.46421,16.50557],[-61.46332,16.50484],[-61.46145,16.50519],[-61.46192,16.50397],[-61.46296,16.50357],[-61.46335,16.5019],[-61.4614,16.49949],[-61.45942,16.50061],[-61.45742,16.49883],[-61.45568,16.49986],[-61.45395,16.49953],[-61.45247,16.49757],[-61.45091,16.49847],[-61.44777,16.49957],[-61.44706,16.50024],[-61.44579,16.50037],[-61.44458,16.49937],[-61.44355,16.50017],[-61.44371,16.49737],[-61.44289,16.49479],[-61.44274,16.49005],[-61.44144,16.48859],[-61.44129,16.49017],[-61.44011,16.4907],[-61.43889,16.49065],[-61.43867,16.48934],[-61.43732,16.48856],[-61.43573,16.48805],[-61.43461,16.48732],[-61.43367,16.48754],[-61.43406,16.48587],[-61.43294,16.48541],[-61.43323,16.48401],[-61.43081,16.4825],[-61.42982,16.48276],[-61.42847,16.48244],[-61.42848,16.48149],[-61.42755,16.47986],[-61.42648,16.47931],[-61.42672,16.47813],[-61.42584,16.47785],[-61.42463,16.47608],[-61.42351,16.4763],[-61.42244,16.47494],[-61.42108,16.47524],[-61.42075,16.47614],[-61.41995,16.47641],[-61.41973,16.47478],[-61.41902,16.47473],[-61.41723,16.47137],[-61.41609,16.47222],[-61.41474,16.47135],[-61.4147,16.47063],[-61.41378,16.46945],[-61.41245,16.4707],[-61.41111,16.46898],[-61.41112,16.46812],[-61.41005,16.46739],[-61.40992,16.46603],[-61.40941,16.4653],[-61.41021,16.46459],[-61.41003,16.46359],[-61.41085,16.46125],[-61.41039,16.46025],[-61.40945,16.46006],[-61.40894,16.45929],[-61.40867,16.4578],[-61.40779,16.45648],[-61.4074,16.45313],[-61.4076,16.45178],[-61.40657,16.45186],[-61.4063,16.45019],[-61.4073,16.44803],[-61.40642,16.44635],[-61.40488,16.44589],[-61.40455,16.44656],[-61.40301,16.44542],[-61.40321,16.44443],[-61.40289,16.44289],[-61.40163,16.44256],[-61.40124,16.43962],[-61.4005,16.4379],[-61.39992,16.43433],[-61.4004,16.43324],[-61.39909,16.43292],[-61.39901,16.43156],[-61.39831,16.43047],[-61.39819,16.42817],[-61.39919,16.42691],[-61.39855,16.42478],[-61.3979,16.42401],[-61.39839,16.42121],[-61.39842,16.41782],[-61.40029,16.41788],[-61.4004,16.41639],[-61.40213,16.41591],[-61.40186,16.4145],[-61.40093,16.41427],[-61.40044,16.41147],[-61.40162,16.40926],[-61.40145,16.4079],[-61.40295,16.40728],[-61.40543,16.40698],[-61.40559,16.40531],[-61.40471,16.40373],[-61.4036,16.40245],[-61.40445,16.40183],[-61.40438,16.39911],[-61.40402,16.39739],[-61.40553,16.3956],[-61.4054,16.39365],[-61.40425,16.39179],[-61.4051,16.39108],[-61.40583,16.38778],[-61.40538,16.38453],[-61.40492,16.38434],[-61.40334,16.38248],[-61.40274,16.38094],[-61.40262,16.37945],[-61.40295,16.37859],[-61.40179,16.37691],[-61.40181,16.37501],[-61.39848,16.37015],[-61.39798,16.36866],[-61.397,16.36743],[-61.39593,16.36692],[-61.39585,16.36602],[-61.3938,16.36469],[-61.3931,16.36365],[-61.39271,16.36021],[-61.39174,16.35935],[-61.39066,16.3592],[-61.38946,16.35698],[-61.38788,16.3557],[-61.38747,16.35385],[-61.3864,16.35334],[-61.38576,16.35162],[-61.38381,16.34989],[-61.38293,16.34875],[-61.38158,16.34824],[-61.38177,16.34707],[-61.3803,16.34457],[-61.37951,16.34371],[-61.37834,16.34352],[-61.37788,16.34261],[-61.37671,16.3421],[-61.37588,16.34083],[-61.37261,16.34009],[-61.37051,16.3393],[-61.36934,16.33965],[-61.36762,16.33878],[-61.36842,16.33761],[-61.36853,16.33549],[-61.36746,16.33535],[-61.36669,16.33751],[-61.36524,16.33781],[-61.36388,16.33762],[-61.36211,16.3368],[-61.36165,16.33616],[-61.35992,16.33624],[-61.3573,16.33572],[-61.35567,16.33489],[-61.35222,16.33365],[-61.35114,16.33377],[-61.35019,16.33508],[-61.34888,16.33507],[-61.34738,16.33605],[-61.34542,16.3354],[-61.34529,16.33386],[-61.34469,16.33282],[-61.34315,16.33267],[-61.34297,16.33091],[-61.34167,16.32972],[-61.34087,16.3308],[-61.34038,16.33328],[-61.33939,16.33368],[-61.33443,16.33409],[-61.33214,16.33399],[-61.33004,16.33338],[-61.32924,16.33374],[-61.32597,16.33285],[-61.32439,16.33189],[-61.32145,16.33065],[-61.31841,16.33062],[-61.31762,16.3303],[-61.31523,16.33042],[-61.31311,16.33194],[-61.3098,16.33078],[-61.30925,16.32892],[-61.30651,16.32736],[-61.30521,16.32532],[-61.30386,16.32522],[-61.30231,16.32561],[-61.3008,16.32736],[-61.29864,16.32821],[-61.29705,16.32779],[-61.29703,16.32507],[-61.29779,16.3235],[-61.29695,16.32291],[-61.29568,16.32384],[-61.29406,16.32216],[-61.29167,16.32187],[-61.29079,16.32109],[-61.28822,16.32112],[-61.28699,16.32219],[-61.28597,16.32169],[-61.28448,16.32023],[-61.28285,16.31958],[-61.28216,16.31827],[-61.2818,16.31659],[-61.28095,16.31722],[-61.27884,16.31743],[-61.27731,16.31678],[-61.2756,16.31446],[-61.27551,16.31302],[-61.27397,16.31314],[-61.27284,16.31372],[-61.27234,16.31186],[-61.26931,16.31134],[-61.26875,16.31057],[-61.26619,16.3091],[-61.26639,16.30793],[-61.26724,16.30653],[-61.26637,16.30513],[-61.26514,16.30584],[-61.2636,16.30605],[-61.26234,16.30577],[-61.2595,16.3043],[-61.25848,16.30303],[-61.25849,16.30217],[-61.25714,16.30053],[-61.25632,16.29831],[-61.25653,16.29565],[-61.25449,16.29355],[-61.25333,16.29295],[-61.25324,16.29196],[-61.24978,16.28682],[-61.24817,16.2832],[-61.24708,16.28012],[-61.24704,16.27917],[-61.24602,16.27853],[-61.24575,16.27667],[-61.24483,16.27585],[-61.2431,16.27502],[-61.24326,16.27317],[-61.24232,16.27307],[-61.24023,16.27197],[-61.2381,16.26992],[-61.23605,16.26846],[-61.23358,16.26722],[-61.23204,16.26666],[-61.22999,16.26642],[-61.22509,16.26516],[-61.22369,16.26415],[-61.22042,16.26408],[-61.22005,16.26358],[-61.21832,16.26298],[-61.21824,16.26203],[-61.2169,16.26034],[-61.21573,16.25997],[-61.21462,16.25915],[-61.21237,16.25895],[-61.2093,16.25752],[-61.20679,16.25542],[-61.20409,16.25481],[-61.2025,16.25421],[-61.20133,16.25425],[-61.19941,16.25477],[-61.19874,16.2559],[-61.19943,16.25807],[-61.19774,16.25779],[-61.1977,16.25729],[-61.19604,16.25524],[-61.1945,16.25433],[-61.19254,16.25381],[-61.19066,16.25506],[-61.18912,16.255],[-61.18632,16.25399],[-61.18414,16.2518],[-61.18312,16.2512],[-61.18029,16.24838],[-61.17927,16.24769],[-61.17735,16.24803],[-61.17622,16.24879],[-61.17642,16.2469],[-61.17596,16.2464],[-61.17437,16.24598],[-61.17373,16.2448],[-61.17457,16.24449],[-61.1752,16.24259],[-61.1767,16.2422],[-61.17823,16.2433],[-61.17929,16.24498],[-61.18326,16.24569],[-61.18372,16.24646],[-61.1874,16.24817],[-61.18856,16.2489],[-61.1902,16.24936],[-61.19117,16.25005],[-61.19258,16.24984],[-61.19346,16.25043],[-61.19478,16.24986],[-61.19913,16.2498],[-61.19997,16.25013],[-61.201,16.24955],[-61.20259,16.24988],[-61.2038,16.24971],[-61.20651,16.25005],[-61.20763,16.25078],[-61.20843,16.25069],[-61.21039,16.25125],[-61.21417,16.25115],[-61.21851,16.25299],[-61.22099,16.25315],[-61.22393,16.25358],[-61.22505,16.25336],[-61.22927,16.25304],[-61.23324,16.25348],[-61.23534,16.25408],[-61.23763,16.25397],[-61.24104,16.25481],[-61.24365,16.25524],[-61.24899,16.2551],[-61.25324,16.25577],[-61.25426,16.25614],[-61.25567,16.25601],[-61.25886,16.25482],[-61.26093,16.25339],[-61.26445,16.2513],[-61.26578,16.25239],[-61.2681,16.25321],[-61.26849,16.25214],[-61.26569,16.25157],[-61.26577,16.25022],[-61.26703,16.25041],[-61.26947,16.25016],[-61.27068,16.25049],[-61.2733,16.25028],[-61.27433,16.25088],[-61.27582,16.25103],[-61.27859,16.2506],[-61.28084,16.25003],[-61.28145,16.24913],[-61.28436,16.24834],[-61.28517,16.24681],[-61.28677,16.24565],[-61.28864,16.24494],[-61.29211,16.24429],[-61.29356,16.24471],[-61.29446,16.24323],[-61.29656,16.24379],[-61.29796,16.24348],[-61.30128,16.24355],[-61.30256,16.24261],[-61.30546,16.24196],[-61.3085,16.24248],[-61.30953,16.24195],[-61.31107,16.24214],[-61.31351,16.24157],[-61.31519,16.24158],[-61.31562,16.24091],[-61.31707,16.24101],[-61.31745,16.24029],[-61.31895,16.2403],[-61.32058,16.24118],[-61.32326,16.24391],[-61.32476,16.24401],[-61.32505,16.24356],[-61.32436,16.24206],[-61.32441,16.24107],[-61.32829,16.2416],[-61.32974,16.24107],[-61.33254,16.2419],[-61.33689,16.24189],[-61.33858,16.24204],[-61.33928,16.24155],[-61.33882,16.24055],[-61.34107,16.2398],[-61.34308,16.23977],[-61.34511,16.23821],[-61.34765,16.23673],[-61.35008,16.23612],[-61.35303,16.2356],[-61.35411,16.2352],[-61.35823,16.23505],[-61.35968,16.23516],[-61.3631,16.23441],[-61.36389,16.2346],[-61.36488,16.2337],[-61.36662,16.23313],[-61.36741,16.23336],[-61.37046,16.23217],[-61.37203,16.2296],[-61.37204,16.2282],[-61.37462,16.2265],[-61.37627,16.22566],[-61.37801,16.22436],[-61.37844,16.22301],[-61.37943,16.22216],[-61.38191,16.22204],[-61.38554,16.2237],[-61.38831,16.22345],[-61.39032,16.22364],[-61.39267,16.22149],[-61.39372,16.21951],[-61.39402,16.21721],[-61.3956,16.21736],[-61.39709,16.21904],[-61.39793,16.21954],[-61.40055,16.21888],[-61.40154,16.21817],[-61.40327,16.21805],[-61.40403,16.21706],[-61.40567,16.21657],[-61.40511,16.21557],[-61.40605,16.21495],[-61.40677,16.21324],[-61.40859,16.21298],[-61.40855,16.21239],[-61.40982,16.21186],[-61.41394,16.21139],[-61.41605,16.211],[-61.41698,16.21155],[-61.4181,16.21124],[-61.41886,16.21012],[-61.41989,16.20968],[-61.42153,16.20978],[-61.42154,16.20842],[-61.42271,16.20866],[-61.42289,16.20952],[-61.42448,16.20903],[-61.42454,16.20781],[-61.42566,16.208],[-61.42556,16.2089],[-61.42611,16.21004],[-61.42681,16.2104],[-61.43182,16.20972],[-61.43229,16.20918],[-61.43477,16.20893],[-61.43828,16.20891],[-61.43968,16.20847],[-61.44246,16.20695],[-61.44257,16.20374],[-61.44403,16.20262],[-61.44506,16.20281],[-61.44933,16.20081],[-61.45074,16.20041],[-61.45144,16.20083],[-61.45261,16.20034],[-61.45513,16.20036],[-61.45568,16.20176],[-61.4584,16.20115],[-61.46028,16.20044],[-61.46089,16.19981],[-61.46113,16.19837],[-61.46259,16.19779],[-61.46419,16.19676],[-61.4655,16.19672],[-61.46754,16.19895],[-61.47001,16.1992],[-61.47095,16.19853],[-61.47258,16.19967],[-61.47454,16.20068],[-61.47523,16.20154],[-61.4764,16.20186],[-61.47855,16.20165],[-61.48122,16.20199],[-61.48322,16.20327],[-61.48564,16.20419],[-61.48564,16.20496],[-61.48708,16.20515],[-61.48896,16.20471],[-61.49069,16.20504],[-61.49298,16.20451],[-61.49929,16.20555],[-61.50097,16.20516],[-61.50284,16.20612],[-61.50471,16.20568],[-61.50676,16.20664],[-61.50737,16.20611],[-61.5083,16.20715],[-61.50768,16.20882],[-61.508,16.20973],[-61.50743,16.21171],[-61.50848,16.21493],[-61.51006,16.21593],[-61.51202,16.2164],[-61.51418,16.21478],[-61.51549,16.21511],[-61.51704,16.21444],[-61.5176,16.21517],[-61.51862,16.21513],[-61.52041,16.21447],[-61.52079,16.21348],[-61.52229,16.21267],[-61.52345,16.21426],[-61.52559,16.21495],[-61.52838,16.21728],[-61.52998,16.21648],[-61.53048,16.21784]]],[[[-61.53721,16.21314],[-61.53959,16.21333],[-61.54281,16.21394],[-61.54342,16.21463],[-61.54387,16.21639],[-61.54273,16.21842],[-61.54199,16.21841],[-61.54028,16.21537],[-61.53733,16.21549],[-61.5364,16.21512],[-61.53468,16.21339],[-61.53721,16.21314]]],[[[-61.49116,16.19804],[-61.49209,16.19868],[-61.49175,16.20008],[-61.49064,16.19916],[-61.49116,16.19804]]]]},properties:{code:"971",nom:"Guadeloupe"}},{type:"Feature",id:"NIC",properties:{name:"Nicaragua"},geometry:{type:"Polygon",coordinates:[[[-85.71254,11.088445],[-86.058488,11.403439],[-86.52585,11.806877],[-86.745992,12.143962],[-87.167516,12.458258],[-87.668493,12.90991],[-87.557467,13.064552],[-87.392386,12.914018],[-87.316654,12.984686],[-87.005769,13.025794],[-86.880557,13.254204],[-86.733822,13.263093],[-86.755087,13.754845],[-86.520708,13.778487],[-86.312142,13.771356],[-86.096264,14.038187],[-85.801295,13.836055],[-85.698665,13.960078],[-85.514413,14.079012],[-85.165365,14.35437],[-85.148751,14.560197],[-85.052787,14.551541],[-84.924501,14.790493],[-84.820037,14.819587],[-84.649582,14.666805],[-84.449336,14.621614],[-84.228342,14.748764],[-83.975721,14.749436],[-83.628585,14.880074],[-83.489989,15.016267],[-83.147219,14.995829],[-83.233234,14.899866],[-83.284162,14.676624],[-83.182126,14.310703],[-83.4125,13.970078],[-83.519832,13.567699],[-83.552207,13.127054],[-83.498515,12.869292],[-83.473323,12.419087],[-83.626104,12.32085],[-83.719613,11.893124],[-83.650858,11.629032],[-83.85547,11.373311],[-83.808936,11.103044],[-83.655612,10.938764],[-83.895054,10.726839],[-84.190179,10.79345],[-84.355931,10.999226],[-84.673069,11.082657],[-84.903003,10.952303],[-85.561852,11.217119],[-85.71254,11.088445]]]}},{type:"Feature",id:"NLD",properties:{name:"Netherlands"},geometry:{type:"Polygon",coordinates:[[[6.074183,53.510403],[6.90514,53.482162],[7.092053,53.144043],[6.84287,52.22844],[6.589397,51.852029],[5.988658,51.851616],[6.156658,50.803721],[5.606976,51.037298],[4.973991,51.475024],[4.047071,51.267259],[3.314971,51.345755],[3.830289,51.620545],[4.705997,53.091798],[6.074183,53.510403]]]}},{type:"Feature",id:"NOR",properties:{name:"Norway"},geometry:{type:"MultiPolygon",coordinates:[[[[28.165547,71.185474],[31.293418,70.453788],[30.005435,70.186259],[31.101079,69.55808],[29.399581,69.156916],[28.59193,69.064777],[29.015573,69.766491],[27.732292,70.164193],[26.179622,69.825299],[25.689213,69.092114],[24.735679,68.649557],[23.66205,68.891247],[22.356238,68.841741],[21.244936,69.370443],[20.645593,69.106247],[20.025269,69.065139],[19.87856,68.407194],[17.993868,68.567391],[17.729182,68.010552],[16.768879,68.013937],[16.108712,67.302456],[15.108411,66.193867],[13.55569,64.787028],[13.919905,64.445421],[13.571916,64.049114],[12.579935,64.066219],[11.930569,63.128318],[11.992064,61.800362],[12.631147,61.293572],[12.300366,60.117933],[11.468272,59.432393],[11.027369,58.856149],[10.356557,59.469807],[8.382,58.313288],[7.048748,58.078884],[5.665835,58.588155],[5.308234,59.663232],[4.992078,61.970998],[5.9129,62.614473],[8.553411,63.454008],[10.527709,64.486038],[12.358347,65.879726],[14.761146,67.810642],[16.435927,68.563205],[19.184028,69.817444],[21.378416,70.255169],[23.023742,70.202072],[24.546543,71.030497],[26.37005,70.986262],[28.165547,71.185474]]],[[[24.72412,77.85385],[22.49032,77.44493],[20.72601,77.67704],[21.41611,77.93504],[20.8119,78.25463],[22.88426,78.45494],[23.28134,78.07954],[24.72412,77.85385]]],[[[18.25183,79.70175],[21.54383,78.95611],[19.02737,78.5626],[18.47172,77.82669],[17.59441,77.63796],[17.1182,76.80941],[15.91315,76.77045],[13.76259,77.38035],[14.66956,77.73565],[13.1706,78.02493],[11.22231,78.8693],[10.44453,79.65239],[13.17077,80.01046],[13.71852,79.66039],[15.14282,79.67431],[15.52255,80.01608],[16.99085,80.05086],[18.25183,79.70175]]],[[[25.447625,80.40734],[27.407506,80.056406],[25.924651,79.517834],[23.024466,79.400012],[20.075188,79.566823],[19.897266,79.842362],[18.462264,79.85988],[17.368015,80.318896],[20.455992,80.598156],[21.907945,80.357679],[22.919253,80.657144],[25.447625,80.40734]]]]}},{type:"Feature",id:"NPL",properties:{name:"Nepal"},geometry:{type:"Polygon",coordinates:[[[88.120441,27.876542],[88.043133,27.445819],[88.174804,26.810405],[88.060238,26.414615],[87.227472,26.397898],[86.024393,26.630985],[85.251779,26.726198],[84.675018,27.234901],[83.304249,27.364506],[81.999987,27.925479],[81.057203,28.416095],[80.088425,28.79447],[80.476721,29.729865],[81.111256,30.183481],[81.525804,30.422717],[82.327513,30.115268],[83.337115,29.463732],[83.898993,29.320226],[84.23458,28.839894],[85.011638,28.642774],[85.82332,28.203576],[86.954517,27.974262],[88.120441,27.876542]]]}},{type:"Feature",id:"NZL",properties:{name:"New Zealand"},geometry:{type:"MultiPolygon",coordinates:[[[[173.020375,-40.919052],[173.247234,-41.331999],[173.958405,-40.926701],[174.247587,-41.349155],[174.248517,-41.770008],[173.876447,-42.233184],[173.22274,-42.970038],[172.711246,-43.372288],[173.080113,-43.853344],[172.308584,-43.865694],[171.452925,-44.242519],[171.185138,-44.897104],[170.616697,-45.908929],[169.831422,-46.355775],[169.332331,-46.641235],[168.411354,-46.619945],[167.763745,-46.290197],[166.676886,-46.219917],[166.509144,-45.852705],[167.046424,-45.110941],[168.303763,-44.123973],[168.949409,-43.935819],[169.667815,-43.555326],[170.52492,-43.031688],[171.12509,-42.512754],[171.569714,-41.767424],[171.948709,-41.514417],[172.097227,-40.956104],[172.79858,-40.493962],[173.020375,-40.919052]]],[[[174.612009,-36.156397],[175.336616,-37.209098],[175.357596,-36.526194],[175.808887,-36.798942],[175.95849,-37.555382],[176.763195,-37.881253],[177.438813,-37.961248],[178.010354,-37.579825],[178.517094,-37.695373],[178.274731,-38.582813],[177.97046,-39.166343],[177.206993,-39.145776],[176.939981,-39.449736],[177.032946,-39.879943],[176.885824,-40.065978],[176.508017,-40.604808],[176.01244,-41.289624],[175.239567,-41.688308],[175.067898,-41.425895],[174.650973,-41.281821],[175.22763,-40.459236],[174.900157,-39.908933],[173.824047,-39.508854],[173.852262,-39.146602],[174.574802,-38.797683],[174.743474,-38.027808],[174.697017,-37.381129],[174.292028,-36.711092],[174.319004,-36.534824],[173.840997,-36.121981],[173.054171,-35.237125],[172.636005,-34.529107],[173.007042,-34.450662],[173.551298,-35.006183],[174.32939,-35.265496],[174.612009,-36.156397]]]]}},{type:"Feature",id:"OMN",properties:{name:"Oman"},geometry:{type:"MultiPolygon",coordinates:[[[[58.861141,21.114035],[58.487986,20.428986],[58.034318,20.481437],[57.826373,20.243002],[57.665762,19.736005],[57.7887,19.06757],[57.694391,18.94471],[57.234264,18.947991],[56.609651,18.574267],[56.512189,18.087113],[56.283521,17.876067],[55.661492,17.884128],[55.269939,17.632309],[55.2749,17.228354],[54.791002,16.950697],[54.239253,17.044981],[53.570508,16.707663],[53.108573,16.651051],[52.782184,17.349742],[52.00001,19.000003],[54.999982,19.999994],[55.666659,22.000001],[55.208341,22.70833],[55.234489,23.110993],[55.525841,23.524869],[55.528632,23.933604],[55.981214,24.130543],[55.804119,24.269604],[55.886233,24.920831],[56.396847,24.924732],[56.84514,24.241673],[57.403453,23.878594],[58.136948,23.747931],[58.729211,23.565668],[59.180502,22.992395],[59.450098,22.660271],[59.80806,22.533612],[59.806148,22.310525],[59.442191,21.714541],[59.282408,21.433886],[58.861141,21.114035]]],[[[56.391421,25.895991],[56.261042,25.714606],[56.070821,26.055464],[56.362017,26.395934],[56.485679,26.309118],[56.391421,25.895991]]]]}},{type:"Feature",id:"PAK",properties:{name:"Pakistan"},geometry:{type:"Polygon",coordinates:[[[75.158028,37.133031],[75.896897,36.666806],[76.192848,35.898403],[77.837451,35.49401],[76.871722,34.653544],[75.757061,34.504923],[74.240203,34.748887],[73.749948,34.317699],[74.104294,33.441473],[74.451559,32.7649],[75.258642,32.271105],[74.405929,31.692639],[74.42138,30.979815],[73.450638,29.976413],[72.823752,28.961592],[71.777666,27.91318],[70.616496,27.989196],[69.514393,26.940966],[70.168927,26.491872],[70.282873,25.722229],[70.844699,25.215102],[71.04324,24.356524],[68.842599,24.359134],[68.176645,23.691965],[67.443667,23.944844],[67.145442,24.663611],[66.372828,25.425141],[64.530408,25.237039],[62.905701,25.218409],[61.497363,25.078237],[61.874187,26.239975],[63.316632,26.756532],[63.233898,27.217047],[62.755426,27.378923],[62.72783,28.259645],[61.771868,28.699334],[61.369309,29.303276],[60.874248,29.829239],[62.549857,29.318572],[63.550261,29.468331],[64.148002,29.340819],[64.350419,29.560031],[65.046862,29.472181],[66.346473,29.887943],[66.381458,30.738899],[66.938891,31.304911],[67.683394,31.303154],[67.792689,31.58293],[68.556932,31.71331],[68.926677,31.620189],[69.317764,31.901412],[69.262522,32.501944],[69.687147,33.105499],[70.323594,33.358533],[69.930543,34.02012],[70.881803,33.988856],[71.156773,34.348911],[71.115019,34.733126],[71.613076,35.153203],[71.498768,35.650563],[71.262348,36.074388],[71.846292,36.509942],[72.920025,36.720007],[74.067552,36.836176],[74.575893,37.020841],[75.158028,37.133031]]]}},{type:"Feature",id:"PLW",properties:{name:"Palau"},geometry:{type:"MultiPolygon",coordinates:[[[[131.81299889400023,2.960435289000117],[131.79517662900017,2.949042059000149],[131.77881920700017,2.952826239],[131.77540123800023,2.964056708000086],[131.78500410200004,2.974066473000079],[131.79151451900012,2.977728583000115],[131.80640709700018,2.974269924000126],[131.81299889400023,2.960435289000117]]],[[[131.16049238400015,3.022772528000104],[131.13843834700006,3.018947658],[131.13111412900005,3.029486395000134],[131.1421004570001,3.047308661000116],[131.16089928500017,3.058783270000063],[131.18360436300011,3.060288804000109],[131.19206790500007,3.048814195000162],[131.18043053500006,3.033270575000159],[131.16049238400015,3.022772528000104]]],[[[132.2267358730002,5.304348049000097],[132.22038821700008,5.292222398000192],[132.21387780000006,5.30711497600015],[132.2202254570001,5.310248114000117],[132.2267358730002,5.304348049000097]]],[[[134.1733504570001,6.893744208000072],[134.15967858200005,6.884466864000117],[134.145274285,6.899155992000118],[134.13672936300006,6.919094143000095],[134.13965905000012,6.934271552000084],[134.15984134200002,6.935003973000121],[134.17318769600016,6.924872137000151],[134.17774498800011,6.909165757000096],[134.1733504570001,6.893744208000072]]],[[[134.2433374360002,6.992824611000131],[134.23438561300006,6.984320380000099],[134.23047936300006,6.989203192000076],[134.2356876960001,7.008490302000112],[134.27149498800011,7.074530341000127],[134.27930748800006,7.072739976000136],[134.28321373800006,7.068752346000153],[134.28443444100012,7.062648830000086],[134.28500410200016,7.054632880000128],[134.2809350920002,7.049627997000087],[134.27149498800011,7.033596096000096],[134.27995853000002,7.020493882000125],[134.27605228000002,7.016913153000161],[134.26644941500015,7.016424872000172],[134.25782311300023,7.013088283000144],[134.2433374360002,6.992824611000131]]],[[[134.41651451900023,7.247951565000093],[134.39291425899998,7.224514065000122],[134.37794030000023,7.219142971000153],[134.36491946700008,7.221502997000115],[134.355235222,7.228013414000102],[134.34913170700023,7.237779039000145],[134.34717858200005,7.249904690000136],[134.347911004,7.267808335000098],[134.35084069100006,7.271185614000117],[134.38257897200018,7.237941799000112],[134.38900800899998,7.238918361000089],[134.40170332100016,7.246486721000125],[134.43685957100004,7.277899481000162],[134.44385826900012,7.287420966000155],[134.44459069100006,7.299221096000125],[134.44141686300006,7.310248114000075],[134.44109134200002,7.31671784100017],[134.449473504,7.314764716000127],[134.45484459700006,7.311590887000165],[134.45899498800011,7.307684637000165],[134.46216881600017,7.302150783000144],[134.46387780000018,7.294256903000175],[134.44922936300017,7.290025132000068],[134.45093834700018,7.281642971000096],[134.45899498800011,7.271877346000153],[134.46387780000018,7.263576565000079],[134.45834394600016,7.256740627000156],[134.4461369150001,7.253810940000136],[134.42595462300002,7.253322658000144],[134.41651451900023,7.247951565000093]]],[[[134.51189212300008,7.347316799000097],[134.52735436300006,7.331529039000145],[134.52222741000017,7.311346747000115],[134.51189212300008,7.308579820000162],[134.50326582100016,7.319322007000082],[134.49659264400012,7.333807684000121],[134.49122155000023,7.34267812700007],[134.47779381600006,7.346869208000101],[134.468028191,7.343817450000103],[134.449473504,7.328355210000083],[134.44776451900012,7.34320709800015],[134.44955488399998,7.355414130000128],[134.456879102,7.36269765800013],[134.47136478000002,7.362494208000086],[134.48861738400015,7.357855536000059],[134.51189212300008,7.347316799000097]]],[[[134.65821373800011,7.591050523000178],[134.64535566500015,7.557440497000158],[134.625743035,7.530503648000192],[134.62484785200004,7.523911851000122],[134.63599694100006,7.509466864000075],[134.63599694100006,7.503159898000135],[134.63135826900012,7.49868398600016],[134.62289472700016,7.472805080000157],[134.59961998800023,7.442572333000143],[134.59424889400012,7.421128648000121],[134.6010848320001,7.383612372000101],[134.59620201900023,7.369940497000158],[134.591644727,7.366888739000075],[134.58668053500006,7.368597723000079],[134.57496178500017,7.369574286000145],[134.56560306100002,7.375311591000113],[134.55933678500017,7.376166083000115],[134.55469811300023,7.372544664000159],[134.54420006600017,7.358547268000095],[134.538828972,7.355698960000069],[134.52800540500002,7.357570705000128],[134.52377363400004,7.361029364000117],[134.52230879000015,7.367010809000135],[134.51343834700012,7.391791083000101],[134.50586998800023,7.424017645000149],[134.49927819100017,7.438218492000161],[134.49122155000023,7.444566148000178],[134.48552493600008,7.444159247000172],[134.48292076900017,7.445786851000193],[134.48438561300023,7.458726304000109],[134.48755944100017,7.469916083000129],[134.49333743600008,7.480129299000154],[134.50131269600004,7.488348700000159],[134.51156660200004,7.493475653000161],[134.51547285200004,7.480536200000159],[134.52442467500023,7.478827216000155],[134.53386478000007,7.485988674000112],[134.538828972,7.499701239000132],[134.53614342500023,7.507961330000114],[134.52833092500023,7.516099351000136],[134.51156660200004,7.527655341000155],[134.51929772200006,7.534857489000103],[134.53272545700023,7.553697007000139],[134.54476972700016,7.561835028000147],[134.54639733200005,7.561183986000103],[134.54721113399998,7.566717841000127],[134.547129754,7.580389716000155],[134.54639733200005,7.581610419000171],[134.55697675900004,7.601141669000157],[134.56910241,7.613714911000145],[134.58611087300008,7.620550848000065],[134.6111759770001,7.622544664000188],[134.63502037900017,7.62933991100013],[134.64096113399998,7.645982164000174],[134.63298587300002,7.698187567000105],[134.6237085300002,7.717962958000115],[134.62142988400004,7.729681708000115],[134.62533613400004,7.734076239000089],[134.63428795700023,7.732163804000138],[134.64332116000006,7.72646719000015],[134.648203972,7.719427802000084],[134.66016686300023,7.686021226000108],[134.663340691,7.638576565000093],[134.65821373800011,7.591050523000178]]],[[[134.7181078552421,8.058676434273835],[134.70124501330545,8.050245013305414],[134.6925254682392,8.060799453942082],[134.6928135923371,8.075539276210506],[134.70967643427375,8.096617828631437],[134.72224774359532,8.09646618436939],[134.7273429907992,8.08287885849235],[134.7181078552421,8.058676434273835]]]]}},{type:"Feature",id:"PAN",properties:{name:"Panama"},geometry:{type:"Polygon",coordinates:[[[-77.881571,7.223771],[-78.214936,7.512255],[-78.429161,8.052041],[-78.182096,8.319182],[-78.435465,8.387705],[-78.622121,8.718124],[-79.120307,8.996092],[-79.557877,8.932375],[-79.760578,8.584515],[-80.164481,8.333316],[-80.382659,8.298409],[-80.480689,8.090308],[-80.00369,7.547524],[-80.276671,7.419754],[-80.421158,7.271572],[-80.886401,7.220541],[-81.059543,7.817921],[-81.189716,7.647906],[-81.519515,7.70661],[-81.721311,8.108963],[-82.131441,8.175393],[-82.390934,8.292362],[-82.820081,8.290864],[-82.850958,8.073823],[-82.965783,8.225028],[-82.913176,8.423517],[-82.829771,8.626295],[-82.868657,8.807266],[-82.719183,8.925709],[-82.927155,9.07433],[-82.932891,9.476812],[-82.546196,9.566135],[-82.187123,9.207449],[-82.207586,8.995575],[-81.808567,8.950617],[-81.714154,9.031955],[-81.439287,8.786234],[-80.947302,8.858504],[-80.521901,9.111072],[-79.9146,9.312765],[-79.573303,9.61161],[-79.021192,9.552931],[-79.05845,9.454565],[-78.500888,9.420459],[-78.055928,9.24773],[-77.729514,8.946844],[-77.353361,8.670505],[-77.474723,8.524286],[-77.242566,7.935278],[-77.431108,7.638061],[-77.753414,7.70984],[-77.881571,7.223771]]]}},{type:"Feature",id:"PER",properties:{name:"Peru"},geometry:{type:"Polygon",coordinates:[[[-69.590424,-17.580012],[-69.858444,-18.092694],[-70.372572,-18.347975],[-71.37525,-17.773799],[-71.462041,-17.363488],[-73.44453,-16.359363],[-75.237883,-15.265683],[-76.009205,-14.649286],[-76.423469,-13.823187],[-76.259242,-13.535039],[-77.106192,-12.222716],[-78.092153,-10.377712],[-79.036953,-8.386568],[-79.44592,-7.930833],[-79.760578,-7.194341],[-80.537482,-6.541668],[-81.249996,-6.136834],[-80.926347,-5.690557],[-81.410943,-4.736765],[-81.09967,-4.036394],[-80.302561,-3.404856],[-80.184015,-3.821162],[-80.469295,-4.059287],[-80.442242,-4.425724],[-80.028908,-4.346091],[-79.624979,-4.454198],[-79.205289,-4.959129],[-78.639897,-4.547784],[-78.450684,-3.873097],[-77.837905,-3.003021],[-76.635394,-2.608678],[-75.544996,-1.56161],[-75.233723,-.911417],[-75.373223,-.152032],[-75.106625,-.057205],[-74.441601,-.53082],[-74.122395,-1.002833],[-73.659504,-1.260491],[-73.070392,-2.308954],[-72.325787,-2.434218],[-71.774761,-2.16979],[-71.413646,-2.342802],[-70.813476,-2.256865],[-70.047709,-2.725156],[-70.692682,-3.742872],[-70.394044,-3.766591],[-69.893635,-4.298187],[-70.794769,-4.251265],[-70.928843,-4.401591],[-71.748406,-4.593983],[-72.891928,-5.274561],[-72.964507,-5.741251],[-73.219711,-6.089189],[-73.120027,-6.629931],[-73.724487,-6.918595],[-73.723401,-7.340999],[-73.987235,-7.52383],[-73.571059,-8.424447],[-73.015383,-9.032833],[-73.226713,-9.462213],[-72.563033,-9.520194],[-72.184891,-10.053598],[-71.302412,-10.079436],[-70.481894,-9.490118],[-70.548686,-11.009147],[-70.093752,-11.123972],[-69.529678,-10.951734],[-68.66508,-12.5613],[-68.88008,-12.899729],[-68.929224,-13.602684],[-68.948887,-14.453639],[-69.339535,-14.953195],[-69.160347,-15.323974],[-69.389764,-15.660129],[-68.959635,-16.500698],[-69.590424,-17.580012]]]}},{type:"Feature",id:"PHL",properties:{name:"Philippines"},geometry:{type:"MultiPolygon",coordinates:[[[[126.376814,8.414706],[126.478513,7.750354],[126.537424,7.189381],[126.196773,6.274294],[125.831421,7.293715],[125.363852,6.786485],[125.683161,6.049657],[125.396512,5.581003],[124.219788,6.161355],[123.93872,6.885136],[124.243662,7.36061],[123.610212,7.833527],[123.296071,7.418876],[122.825506,7.457375],[122.085499,6.899424],[121.919928,7.192119],[122.312359,8.034962],[122.942398,8.316237],[123.487688,8.69301],[123.841154,8.240324],[124.60147,8.514158],[124.764612,8.960409],[125.471391,8.986997],[125.412118,9.760335],[126.222714,9.286074],[126.306637,8.782487],[126.376814,8.414706]]],[[[123.982438,10.278779],[123.623183,9.950091],[123.309921,9.318269],[122.995883,9.022189],[122.380055,9.713361],[122.586089,9.981045],[122.837081,10.261157],[122.947411,10.881868],[123.49885,10.940624],[123.337774,10.267384],[124.077936,11.232726],[123.982438,10.278779]]],[[[118.504581,9.316383],[117.174275,8.3675],[117.664477,9.066889],[118.386914,9.6845],[118.987342,10.376292],[119.511496,11.369668],[119.689677,10.554291],[119.029458,10.003653],[118.504581,9.316383]]],[[[121.883548,11.891755],[122.483821,11.582187],[123.120217,11.58366],[123.100838,11.165934],[122.637714,10.741308],[122.00261,10.441017],[121.967367,10.905691],[122.03837,11.415841],[121.883548,11.891755]]],[[[125.502552,12.162695],[125.783465,11.046122],[125.011884,11.311455],[125.032761,10.975816],[125.277449,10.358722],[124.801819,10.134679],[124.760168,10.837995],[124.459101,10.88993],[124.302522,11.495371],[124.891013,11.415583],[124.87799,11.79419],[124.266762,12.557761],[125.227116,12.535721],[125.502552,12.162695]]],[[[121.527394,13.06959],[121.26219,12.20556],[120.833896,12.704496],[120.323436,13.466413],[121.180128,13.429697],[121.527394,13.06959]]],[[[121.321308,18.504065],[121.937601,18.218552],[122.246006,18.47895],[122.336957,18.224883],[122.174279,17.810283],[122.515654,17.093505],[122.252311,16.262444],[121.662786,15.931018],[121.50507,15.124814],[121.728829,14.328376],[122.258925,14.218202],[122.701276,14.336541],[123.950295,13.782131],[123.855107,13.237771],[124.181289,12.997527],[124.077419,12.536677],[123.298035,13.027526],[122.928652,13.55292],[122.671355,13.185836],[122.03465,13.784482],[121.126385,13.636687],[120.628637,13.857656],[120.679384,14.271016],[120.991819,14.525393],[120.693336,14.756671],[120.564145,14.396279],[120.070429,14.970869],[119.920929,15.406347],[119.883773,16.363704],[120.286488,16.034629],[120.390047,17.599081],[120.715867,18.505227],[121.321308,18.504065]]]]}},{type:"Feature",id:"PCN",properties:{name:"Pitcairn Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-130.08625240799992,-25.075127862999963],[-130.09593665299988,-25.077080987999835],[-130.1053360669999,-25.076755466999984],[-130.11367753799988,-25.073825778999975],[-130.12035071499992,-25.06829192499987],[-130.1104630199999,-25.06438567499987],[-130.1011449859999,-25.06438567499987],[-130.09300696499986,-25.067966403999932],[-130.08625240799992,-25.075127862999963]]],[[[-124.78551184799994,-24.663995049999926],[-124.78058834499988,-24.66464609199997],[-124.77892005099996,-24.667413018999923],[-124.77806555899987,-24.672539971999853],[-124.7787979809999,-24.668715101999922],[-124.78058834499988,-24.666599217000012],[-124.78538977799988,-24.664483330999914],[-124.7861628899999,-24.664564710999898],[-124.79710852799987,-24.667087498],[-124.78652910099991,-24.663995049999926],[-124.78551184799994,-24.663995049999926]]],[[[-128.29015051999988,-24.398370049999897],[-128.3001195949999,-24.41366952899986],[-128.32066809799994,-24.400648695999877],[-128.34219316299993,-24.371758721999953],[-128.35024980399987,-24.34124114399991],[-128.33018958199992,-24.324314059999935],[-128.30370032499985,-24.334649346999853],[-128.29084225199992,-24.36565520599987],[-128.29015051999988,-24.398370049999897]]],[[[-130.74136308499993,-23.924411716999884],[-130.74209550699993,-23.927829684999892],[-130.74697831899994,-23.93279387799994],[-130.75084387899992,-23.934665623],[-130.7530818349999,-23.929620049999883],[-130.75084387899992,-23.927178643999852],[-130.74803626199986,-23.927341403999904],[-130.74526933499993,-23.924411716999884],[-130.74136308499993,-23.924411716999884]]]]}},{type:"Feature",id:"PNG",properties:{name:"Papua New Guinea"},geometry:{type:"MultiPolygon",coordinates:[[[[155.880026,-6.819997],[155.599991,-6.919991],[155.166994,-6.535931],[154.729192,-5.900828],[154.514114,-5.139118],[154.652504,-5.042431],[154.759991,-5.339984],[155.062918,-5.566792],[155.547746,-6.200655],[156.019965,-6.540014],[155.880026,-6.819997]]],[[[151.982796,-5.478063],[151.459107,-5.56028],[151.30139,-5.840728],[150.754447,-6.083763],[150.241197,-6.317754],[149.709963,-6.316513],[148.890065,-6.02604],[148.318937,-5.747142],[148.401826,-5.437756],[149.298412,-5.583742],[149.845562,-5.505503],[149.99625,-5.026101],[150.139756,-5.001348],[150.236908,-5.53222],[150.807467,-5.455842],[151.089672,-5.113693],[151.647881,-4.757074],[151.537862,-4.167807],[152.136792,-4.14879],[152.338743,-4.312966],[152.318693,-4.867661],[151.982796,-5.478063]]],[[[147.191874,-7.388024],[148.084636,-8.044108],[148.734105,-9.104664],[149.306835,-9.071436],[149.266631,-9.514406],[150.038728,-9.684318],[149.738798,-9.872937],[150.801628,-10.293687],[150.690575,-10.582713],[150.028393,-10.652476],[149.78231,-10.393267],[148.923138,-10.280923],[147.913018,-10.130441],[147.135443,-9.492444],[146.567881,-8.942555],[146.048481,-8.067414],[144.744168,-7.630128],[143.897088,-7.91533],[143.286376,-8.245491],[143.413913,-8.983069],[142.628431,-9.326821],[142.068259,-9.159596],[141.033852,-9.117893],[141.017057,-5.859022],[141.00021,-2.600151],[142.735247,-3.289153],[144.583971,-3.861418],[145.27318,-4.373738],[145.829786,-4.876498],[145.981922,-5.465609],[147.648073,-6.083659],[147.891108,-6.614015],[146.970905,-6.721657],[147.191874,-7.388024]]],[[[153.140038,-4.499983],[152.827292,-4.766427],[152.638673,-4.176127],[152.406026,-3.789743],[151.953237,-3.462062],[151.384279,-3.035422],[150.66205,-2.741486],[150.939965,-2.500002],[151.479984,-2.779985],[151.820015,-2.999972],[152.239989,-3.240009],[152.640017,-3.659983],[153.019994,-3.980015],[153.140038,-4.499983]]]]}},{type:"Feature",id:"POL",properties:{name:"Poland"},geometry:{type:"Polygon",coordinates:[[[15.016996,51.106674],[14.607098,51.745188],[14.685026,52.089947],[14.4376,52.62485],[14.074521,52.981263],[14.353315,53.248171],[14.119686,53.757029],[14.8029,54.050706],[16.363477,54.513159],[17.622832,54.851536],[18.620859,54.682606],[18.696255,54.438719],[19.66064,54.426084],[20.892245,54.312525],[22.731099,54.327537],[23.243987,54.220567],[23.484128,53.912498],[23.527536,53.470122],[23.804935,53.089731],[23.799199,52.691099],[23.199494,52.486977],[23.508002,52.023647],[23.527071,51.578454],[24.029986,50.705407],[23.922757,50.424881],[23.426508,50.308506],[22.51845,49.476774],[22.776419,49.027395],[22.558138,49.085738],[21.607808,49.470107],[20.887955,49.328772],[20.415839,49.431453],[19.825023,49.217125],[19.320713,49.571574],[18.909575,49.435846],[18.853144,49.49623],[18.392914,49.988629],[17.649445,50.049038],[17.554567,50.362146],[16.868769,50.473974],[16.719476,50.215747],[16.176253,50.422607],[16.238627,50.697733],[15.490972,50.78473],[15.016996,51.106674]]]}},{type:"Feature",id:"PYF",properties:{name:"French Polynesia"},geometry:{type:"MultiPolygon",coordinates:[[[[-144.31273352799988,-27.640069268999895],[-144.32363847599996,-27.641208591999927],[-144.33836829299995,-27.633721612999864],[-144.34658769399994,-27.615329685],[-144.34797115799992,-27.58554452899999],[-144.3394262359999,-27.559258721999896],[-144.3178604809999,-27.551202080999943],[-144.29816647,-27.562920830999943],[-144.28994706899988,-27.57008228999989],[-144.2837621739999,-27.579196872999972],[-144.28823808499988,-27.58424244599982],[-144.30134029899992,-27.59539153399993],[-144.30418860599985,-27.59970468500002],[-144.3035375639999,-27.60051848799985],[-144.30028235599985,-27.620049737999835],[-144.29743404899992,-27.62078215899986],[-144.30443274599992,-27.632419528999947],[-144.31273352799988,-27.640069268999895]]],[[[-147.66893469999988,-23.871758721999953],[-147.69896399599992,-23.878024997999916],[-147.71263587099986,-23.87721119599982],[-147.7242325509999,-23.871758721999953],[-147.7242325509999,-23.86492278399986],[-147.70588131399992,-23.858575128],[-147.68797766799986,-23.85458749799993],[-147.64785722599993,-23.851820570999976],[-147.6512345039999,-23.858575128],[-147.6558731759999,-23.8638648419999],[-147.66177324099993,-23.868096612999906],[-147.66893469999988,-23.871758721999953]]],[[[-149.46324622299994,-23.395765882999925],[-149.5078018869999,-23.40048593500002],[-149.51874752499987,-23.394952080999914],[-149.52476966099988,-23.38396575299994],[-149.52672278599994,-23.368096612999835],[-149.52143307199995,-23.362725518999966],[-149.50890051999988,-23.359551690999908],[-149.48167883999986,-23.3578427059999],[-149.4564916659999,-23.365329684999963],[-149.4509171209999,-23.381117445999905],[-149.46324622299994,-23.395765882999925]]],[[[-134.9505509109999,-23.096937757999882],[-134.98452714799993,-23.13876718499999],[-134.99522864499997,-23.13713958099997],[-135.00454667899993,-23.13388437299993],[-135.0193578769999,-23.12509530999995],[-135.0193578769999,-23.1176083309999],[-134.99795488199993,-23.1163062479999],[-134.96548417899996,-23.090508721999953],[-134.94298255099994,-23.083591403999876],[-134.9505509109999,-23.096937757999882]]],[[[-151.36872311099995,-22.513116143999895],[-151.37177486899995,-22.514418226999894],[-151.37633216099988,-22.51433684699991],[-151.38044186099995,-22.48870208099993],[-151.39110266799986,-22.464532158999845],[-151.3970434239999,-22.442152601999823],[-151.38687089799996,-22.422458591999956],[-151.37767493399988,-22.423272393999966],[-151.36750240799995,-22.434177341999956],[-151.35924231699994,-22.447523695999877],[-151.35590572799993,-22.456638278999947],[-151.35749264199995,-22.481703382999868],[-151.36274166599992,-22.508070570999863],[-151.36872311099995,-22.513116143999895]]],[[[-136.17568925699987,-22.029880467000012],[-136.18586178299984,-22.034437757999953],[-136.1635636059999,-22.013604424999983],[-136.16388912699992,-22.016371351999936],[-136.1657608709999,-22.024346612999906],[-136.17568925699987,-22.029880467000012]]],[[[-138.84959876199989,-21.871270440999837],[-138.9321996739999,-21.871270440999837],[-138.91185462099986,-21.863946221999925],[-138.89159094999985,-21.865899346999967],[-138.87096106699994,-21.870375257999925],[-138.84959876199989,-21.871270440999837]]],[[[-140.60366777299993,-21.706801039999974],[-140.63052324099993,-21.72161223799995],[-140.6582738919999,-21.71266041499993],[-140.67577063699986,-21.688897393999923],[-140.67194576699984,-21.65894947699995],[-140.65318762899997,-21.647067966999913],[-140.63418535099987,-21.66082122199984],[-140.60366777299993,-21.706801039999974]]],[[[-135.46934973899994,-21.50945403399996],[-135.4575089179999,-21.528008721999953],[-135.52578691299988,-21.48707447699985],[-135.50377356699988,-21.489515882999882],[-135.48493404899983,-21.496840101999965],[-135.46934973899994,-21.50945403399996]]],[[[-136.3798722,-21.45907968499992],[-136.37718665299985,-21.468357028999876],[-136.38634192599994,-21.46363697699995],[-136.39582271999984,-21.46282317499994],[-136.4050186839999,-21.465427341999856],[-136.4134008449999,-21.471368096999882],[-136.40493730399993,-21.460219007999953],[-136.39146887899994,-21.4561499979999],[-136.3798722,-21.45907968499992]]],[[[-136.52944902299993,-21.349867445999976],[-136.54312089799996,-21.3597958309999],[-136.5342504549999,-21.34889088299991],[-136.5357152989999,-21.342380466999927],[-136.54238847599993,-21.338799737999864],[-136.5493871739999,-21.336846612999906],[-136.53221594999988,-21.33131275799998],[-136.5257055329999,-21.338067315999837],[-136.52944902299993,-21.349867445999976]]],[[[-136.6379288399999,-21.333103122999958],[-136.6362198559999,-21.341566664999917],[-136.64679928299986,-21.32724374799993],[-136.65160071499994,-21.32293059699984],[-136.64391028599994,-21.322849216999856],[-136.63988196499986,-21.32642994599992],[-136.6379288399999,-21.333103122999958]]],[[[-136.74022376199994,-21.320000908999987],[-136.74233964799993,-21.32008228999989],[-136.74693762899997,-21.316176039999974],[-136.74478105399987,-21.31585051899995],[-136.74095618399986,-21.316989841999984],[-136.7387589179999,-21.31715260199995],[-136.74022376199994,-21.320000908999987]]],[[[-136.7386368479999,-21.29949309699994],[-136.73232988199996,-21.30624765399989],[-136.7291153639999,-21.318047783999944],[-136.7312719389999,-21.317315362999835],[-136.73216712099992,-21.315687757999896],[-136.73281816299993,-21.31389739399991],[-136.7343643869999,-21.312107028999932],[-136.73916581899988,-21.30852629999987],[-136.74225826699987,-21.304457289999903],[-136.74575761599993,-21.303399346999853],[-136.75218665299988,-21.30852629999987],[-136.7459610669999,-21.29949309699994],[-136.7386368479999,-21.29949309699994]]],[[[-139.1445206369999,-20.804375908999845],[-139.14785722599996,-20.804945570999905],[-139.13581295499984,-20.799737237999906],[-139.13536536399994,-20.799737237999906],[-139.14146887899994,-20.803155205999914],[-139.1445206369999,-20.804375908999845]]],[[[-138.54263261599993,-20.780368747999972],[-138.5197647779999,-20.814548434999963],[-138.5128474599999,-20.85767994599989],[-138.53490149599992,-20.87688567499994],[-138.51943925699987,-20.860935153999932],[-138.51732337099986,-20.84921640399986],[-138.54072018099995,-20.789727471999925],[-138.54466712099995,-20.784681898999892],[-138.5501195949999,-20.782566013999883],[-138.56843014199984,-20.788181247999887],[-138.5642797519999,-20.78484465899986],[-138.5543513659999,-20.780938408999944],[-138.54889889199987,-20.779961846999967],[-138.54263261599993,-20.780368747999972]]],[[[-140.39928137899994,-19.661716403999876],[-140.4124242829999,-19.66383228999989],[-140.3968399729999,-19.65105559699994],[-140.38662675699987,-19.640313408999916],[-140.38980058499993,-19.628838799999883],[-140.41397050699993,-19.614190362999878],[-140.40737871,-19.610121351999823],[-140.3951716789999,-19.615411065999893],[-140.38316809799997,-19.625420830999957],[-140.3770238919999,-19.636325778999947],[-140.37905839799993,-19.648614190999908],[-140.3873591789999,-19.65699635199995],[-140.39928137899994,-19.661716403999876]]],[[[-139.19591223899994,-19.349786065999865],[-139.2051895819999,-19.359144789999974],[-139.20225989499994,-19.35068124799986],[-139.2040909499999,-19.346123955999985],[-139.2050675119999,-19.341485283999873],[-139.20767167899993,-19.337334893999838],[-139.21483313699986,-19.334567966999884],[-139.2029516269999,-19.334893487999906],[-139.19591223899994,-19.3409156229999],[-139.19591223899994,-19.349786065999865]]],[[[-138.79173743399986,-19.28386809699991],[-138.7967423169999,-19.290297132999825],[-138.8059789699999,-19.28883228999986],[-138.8093969389999,-19.287286065999822],[-138.81212317599994,-19.283786716999927],[-138.8023982409999,-19.28199635199985],[-138.7945857409999,-19.28167083099983],[-138.79173743399986,-19.28386809699991]]],[[[-141.23717200399994,-19.19361744599989],[-141.22752844999988,-19.208428643999866],[-141.23037675699993,-19.227146091999927],[-141.23371334499984,-19.211683851999908],[-141.24278723899994,-19.2022437479999],[-141.25475012899994,-19.199395440999865],[-141.26618404899992,-19.2035458309999],[-141.25234941299993,-19.189711195999806],[-141.23717200399994,-19.19361744599989]]],[[[-140.69619706899994,-19.119317315999893],[-140.67015540299985,-19.13176848799982],[-140.6608780589999,-19.15243906],[-140.68586178299992,-19.16155364399991],[-140.6700333319999,-19.142754815999865],[-140.68138587099986,-19.13225676899998],[-140.70396887899994,-19.12932708099987],[-140.7218318349999,-19.133721612999864],[-140.69619706899994,-19.119317315999893]]],[[[-138.79332434799989,-18.774021091999984],[-138.7932022779999,-18.778903903999876],[-138.82974199099996,-18.759942315999865],[-138.82286536399997,-18.76034921699987],[-138.8157445949999,-18.76140715899983],[-138.8015844389999,-18.765232028999932],[-138.79523678299986,-18.77092864399991],[-138.79332434799989,-18.774021091999984]]],[[[-136.4587296209999,-18.464288018999966],[-136.42613684799994,-18.475355726999823],[-136.39582271999984,-18.49423593499985],[-136.38239498599984,-18.509942315999908],[-136.33043372299997,-18.52760182099992],[-136.3047582669999,-18.545668226999936],[-136.31407630099994,-18.56731536299985],[-136.3135473299999,-18.565606377999842],[-136.31273352799988,-18.5609677059999],[-136.31309973899988,-18.55429452899986],[-136.3160701159999,-18.54631926899998],[-136.32213294199988,-18.53875090899986],[-136.3312882149999,-18.532647393999866],[-136.34365800699993,-18.527439059999864],[-136.37389075399992,-18.5186499979999],[-136.38296464799993,-18.514743747999987],[-136.3890274729999,-18.510186455999857],[-136.39427649599992,-18.50408294099988],[-136.40265865799986,-18.49667734199997],[-136.44888261599996,-18.471856377999842],[-136.4612524079999,-18.46868254999987],[-136.46544348899994,-18.474297783999873],[-136.46519934799989,-18.482110283999944],[-136.4642634759999,-18.48601653399986],[-136.4677628249999,-18.481866143999824],[-136.4699600899999,-18.477797132999854],[-136.4728897779999,-18.474297783999873],[-136.4785863919999,-18.471856377999842],[-136.4587296209999,-18.464288018999966]]],[[[-140.6786189439999,-18.403008721999868],[-140.67194576699984,-18.41716887799997],[-140.6748347649999,-18.413750908999873],[-140.68097896999984,-18.40227629999984],[-140.6951391269999,-18.39039478999989],[-140.7520645819999,-18.363946221999896],[-140.77009029899983,-18.350274346999953],[-140.7792862619999,-18.33953215899986],[-140.78180904899992,-18.33521900799994],[-140.75617428299986,-18.35369231599988],[-140.68708248599984,-18.390557549999855],[-140.6786189439999,-18.403008721999868]]],[[[-136.9827774729999,-18.335870049999983],[-136.9714249339999,-18.36191171699987],[-137.06761633999986,-18.266289971999896],[-137.04234778599994,-18.27760182099989],[-137.01024329299995,-18.304375908999972],[-136.9827774729999,-18.335870049999983]]],[[[-140.82994544199997,-18.190362237999878],[-140.82274329299995,-18.217950127999885],[-140.8483780589999,-18.182549737999878],[-140.8954972,-18.149021091999842],[-140.9180395169999,-18.10816822699981],[-140.93028723899994,-18.095635674999897],[-140.9736222,-18.060235283999972],[-140.96446692599994,-18.066582940999822],[-140.92516028599994,-18.084730726999823],[-140.8985082669999,-18.129082940999865],[-140.8773087229999,-18.15056731599988],[-140.85130774599992,-18.16952890399989],[-140.82994544199997,-18.190362237999878]]],[[[-143.07225501199986,-17.840427341999956],[-143.0598852199999,-17.865817966999884],[-143.06029212099992,-17.867771091999927],[-143.06484941299996,-17.863702080999957],[-143.07022050699993,-17.85515715899986],[-143.07282467399992,-17.84433359199994],[-143.0776261059999,-17.85222747199984],[-143.0823868479999,-17.857517184999907],[-143.0871475899999,-17.858493747999972],[-143.09211178299986,-17.85328541499989],[-143.08088131399987,-17.837579033999916],[-143.07225501199986,-17.840427341999956]]],[[[-140.79596920499984,-17.86272551899998],[-140.8121231759999,-17.86305104],[-140.82778886599988,-17.860121351999894],[-140.8370255199999,-17.854750257999854],[-140.83869381399987,-17.84343840899996],[-140.8342992829999,-17.830010674999954],[-140.82274329299995,-17.807061455999886],[-140.8023168609999,-17.786553643999838],[-140.78246008999986,-17.751641533999987],[-140.74583899599995,-17.729587498],[-140.67194576699984,-17.69784921699994],[-140.65208899599992,-17.684177342],[-140.62466386599988,-17.687269789999903],[-140.6198624339999,-17.7067196589999],[-140.6284887359999,-17.72844817499997],[-140.6483048169999,-17.743910414999988],[-140.67878170499986,-17.780368747999944],[-140.72716223899997,-17.807061455999886],[-140.7580460279999,-17.831638278999975],[-140.78522701699993,-17.858575127999956],[-140.79596920499984,-17.86272551899998]]],[[[-150.64032955599993,-17.66611093499999],[-150.64496822799993,-17.677992445999948],[-150.65526282499985,-17.66871510199998],[-150.64317786399988,-17.65545012799987],[-150.64032955599993,-17.66611093499999]]],[[[-142.55817623599992,-17.599216403999975],[-142.57746334499987,-17.621351820999863],[-142.5651749339999,-17.60165781],[-142.6395157539999,-17.53264739399998],[-142.61245683499996,-17.546970309999878],[-142.5776261059999,-17.571709893999852],[-142.55817623599992,-17.599216403999975]]],[[[-149.30394446499992,-17.712090752999956],[-149.2632950509999,-17.72283294099988],[-149.18346106699988,-17.731215101999922],[-149.16063391799986,-17.756931247999887],[-149.14911861899992,-17.802015882999854],[-149.15644283799992,-17.846286716999984],[-149.1902970039999,-17.86907317499984],[-149.20641028599988,-17.866631768999895],[-149.26085364499988,-17.85173919099985],[-149.2759496739999,-17.844903252999913],[-149.3086645169999,-17.803643487999878],[-149.3342992829999,-17.75920989399995],[-149.34345455599993,-17.724867445999905],[-149.3479711579999,-17.718194268999852],[-149.3575333319999,-17.717868748],[-149.36253821499992,-17.72527434699991],[-149.3662003249999,-17.73430755],[-149.37181555899988,-17.7387020809999],[-149.3919164699999,-17.741387627999885],[-149.4503881499999,-17.75920989399995],[-149.47203528599988,-17.76051197699995],[-149.48786373599992,-17.757989190999936],[-149.51923580599987,-17.746189059999963],[-149.57612057199992,-17.737562757999868],[-149.5875138009999,-17.731215101999922],[-149.6050512359999,-17.671807549999883],[-149.61176510299995,-17.663018487999906],[-149.6212052069999,-17.656182549999897],[-149.63097083199992,-17.639336846999896],[-149.6386612619999,-17.618910415],[-149.64216061099992,-17.600844007999896],[-149.6327611969999,-17.553399346999967],[-149.6043188139999,-17.52581145599987],[-149.5640763009999,-17.510023695999834],[-149.51923580599987,-17.4984677059999],[-149.4749649729999,-17.49407317499991],[-149.42951412699995,-17.501560153999975],[-149.38764400899993,-17.51799895599997],[-149.35411536399988,-17.54013437299986],[-149.3440649079999,-17.5507138],[-149.3355606759999,-17.564060153999918],[-149.32966061099995,-17.57984791499996],[-149.32746334499996,-17.59783294099999],[-149.33027096299992,-17.663750908999944],[-149.32746334499996,-17.684177342],[-149.30394446499992,-17.712090752999956]]],[[[-149.78563391799992,-17.479180596999868],[-149.8047582669999,-17.52337004999984],[-149.82245846299992,-17.54973723799992],[-149.8427628249999,-17.567559503],[-149.8618871739999,-17.56682708099997],[-149.88520260299987,-17.55535247199984],[-149.9140518869999,-17.53533294099995],[-149.93748938699989,-17.512465101999865],[-149.9444067049999,-17.492364190999908],[-149.93407141799986,-17.481540622999916],[-149.91551673099985,-17.473565362999864],[-149.89777584499996,-17.472263278999947],[-149.88984127499992,-17.481540622999916],[-149.88585364499994,-17.491794529000018],[-149.87763424399992,-17.491957289999903],[-149.8699845039999,-17.487725518999966],[-149.86811275899993,-17.484958592000012],[-149.86021887899986,-17.483168226999936],[-149.8536270819999,-17.479180596999868],[-149.8458145819999,-17.477959893999852],[-149.83458411399988,-17.484958592000012],[-149.8316544259999,-17.472751559999935],[-149.82310950399994,-17.466566664999974],[-149.8108617829999,-17.46461353999993],[-149.79670162699995,-17.464450778999876],[-149.7861222,-17.468926690999922],[-149.78563391799992,-17.479180596999868]]],[[[-143.42202714799993,-17.442152601999837],[-143.41356360599985,-17.456963799999983],[-143.43785559799994,-17.438897393999966],[-143.47496497299994,-17.430271091999884],[-143.4566137359999,-17.429294528999904],[-143.4376521479999,-17.433200778999904],[-143.42202714799993,-17.442152601999837]]],[[[-145.40558834499996,-17.442966404000018],[-145.3804825509999,-17.484958592000012],[-145.43512936099992,-17.417168877999913],[-145.41942298099985,-17.426934502999856],[-145.40558834499996,-17.442966404000018]]],[[[-141.4353328119999,-17.383558851999894],[-141.43496660099996,-17.38933684699994],[-141.43683834499993,-17.385837497999958],[-141.43683834499993,-17.382745049999883],[-141.43854732999984,-17.368096612999963],[-141.4424942699999,-17.360121351999823],[-141.4538468089999,-17.352308851999922],[-141.46743730399993,-17.348809502999842],[-141.48184160099993,-17.348565362999892],[-141.4607641269999,-17.34482187299986],[-141.44517981699988,-17.35173919099995],[-141.43626868399986,-17.367364190999936],[-141.4360652329999,-17.37070077899996],[-141.4353328119999,-17.383558851999894]]],[[[-138.4477432929999,-17.361586195999877],[-138.4417211579999,-17.36638762799987],[-138.46141516799992,-17.365655205999843],[-138.46349036399994,-17.359958591999856],[-138.46373450399997,-17.356947523999935],[-138.4609268869999,-17.35035572699988],[-138.44692949099996,-17.332696221999868],[-138.42613684799997,-17.324883721999953],[-138.45490475199992,-17.349786065999908],[-138.45881100199992,-17.35686614399995],[-138.45783443899984,-17.35881926899999],[-138.4536840489999,-17.35955169099985],[-138.4477432929999,-17.361586195999877]]],[[[-145.59288489499994,-17.32480234199997],[-145.57848059799986,-17.383070570999905],[-145.5864965489999,-17.37037525799994],[-145.5913793609999,-17.357679945999962],[-145.5934138659999,-17.343031507999953],[-145.59288489499994,-17.32480234199997]]],[[[-143.0620011059999,-17.008965752999885],[-143.0675349599999,-17.010023695999934],[-143.07315019399994,-17.00937265399989],[-143.0789281889999,-17.007419528999932],[-143.08482825399994,-17.004571221999896],[-143.09382076699987,-16.99797942499991],[-143.09772701699987,-16.994317315999965],[-143.10122636599993,-16.99016692499984],[-143.09040279899986,-16.989515882999882],[-143.07982337099992,-16.9933407529999],[-143.07017981699994,-17.00017669099999],[-143.0620011059999,-17.008965752999885]]],[[[-149.5723363919999,-16.987399997999873],[-149.58686275899993,-17.000420830999943],[-149.5869848299999,-16.996677342000012],[-149.5861303379999,-16.993584893999937],[-149.5836075509999,-16.98707447699985],[-149.57591712099995,-16.983656507999925],[-149.57209225199995,-16.982598565999965],[-149.56822669199994,-16.98219166499996],[-149.5723363919999,-16.987399997999873]]],[[[-153.9201554029999,-16.8317196589999],[-153.92426510299993,-16.831801039999974],[-153.9332169259999,-16.819105726999908],[-153.94322669199985,-16.787530205999914],[-153.9506729809999,-16.77385833099997],[-153.94298255099991,-16.774590753],[-153.9377335279999,-16.779473565999893],[-153.9347631499999,-16.787367445999948],[-153.93399003799988,-16.79753997199991],[-153.92853756399995,-16.80689869599985],[-153.92280025899987,-16.820896091999984],[-153.9201554029999,-16.8317196589999]]],[[[-150.97956295499992,-16.800388278999947],[-150.9838761059999,-16.809258721999896],[-150.99278723899988,-16.807061455999985],[-150.9948217439999,-16.8135718729999],[-150.99889075399994,-16.817966403999975],[-151.0049942699999,-16.82040781],[-151.01325436099992,-16.82073333099993],[-151.03136145699995,-16.80632903399996],[-151.0375870429999,-16.799574476999936],[-151.03990637899994,-16.789971612999864],[-151.03461666599986,-16.77703215899986],[-151.0228979159999,-16.77288176899999],[-151.01109778599994,-16.772149346999967],[-151.00580807199992,-16.76921965899996],[-151.00239010299993,-16.7608374979999],[-150.99433346299992,-16.761895440999865],[-150.98534094999988,-16.76921965899996],[-150.97911536399994,-16.779717705999843],[-150.97838294199988,-16.78801848799999],[-150.97956295499992,-16.800388278999947]]],[[[-151.36408443899992,-16.866469007999953],[-151.40086829299992,-16.88534921699997],[-151.41392981699988,-16.888929945999863],[-151.4242651029999,-16.881931247999972],[-151.42939205599993,-16.881931247999972],[-151.43158932199992,-16.892185153999904],[-151.43415279899992,-16.89763762799994],[-151.44054114499994,-16.901136976999922],[-151.44916744699992,-16.902927342],[-151.4582413399999,-16.902601820999976],[-151.47789466099988,-16.889580987999906],[-151.48810787699992,-16.856377862999892],[-151.49474036399988,-16.764580987999935],[-151.4912003249999,-16.750258070999948],[-151.4787491529999,-16.738213799999926],[-151.46467037699995,-16.73642343499995],[-151.4465225899999,-16.74049244599982],[-151.43077551999988,-16.747816664999917],[-151.42414303299992,-16.755303643999966],[-151.41279049399995,-16.779717705999843],[-151.35248775899993,-16.858575127999885],[-151.36408443899992,-16.866469007999953]]],[[[-144.0800675119999,-16.7172177059999],[-144.06309973899985,-16.730726820999877],[-144.05406653599994,-16.749688408999887],[-144.0508927069999,-16.759454034],[-144.06281490799992,-16.748630466999927],[-144.07567298099994,-16.730401299999855],[-144.09113522,-16.721856377999913],[-144.11070716099994,-16.73967864399998],[-144.1113988919999,-16.735284112999906],[-144.11050370999988,-16.731703382999854],[-144.10684160099993,-16.72389088299994],[-144.0800675119999,-16.7172177059999]]],[[[-151.03416907499988,-16.762627862999892],[-151.0474340489999,-16.7660458309999],[-151.05321204299986,-16.753594658999972],[-151.0540258449999,-16.74179452899999],[-151.05150305899986,-16.730075778999918],[-151.04222571499992,-16.705498956],[-151.03514563699994,-16.694268487999906],[-151.02900143099987,-16.692478123],[-151.0262751939999,-16.708103122999987],[-151.00755774599992,-16.74049244599982],[-151.0095108709999,-16.745700778999904],[-151.0163468089999,-16.74871184699991],[-151.0241593089999,-16.755629164999988],[-151.03416907499988,-16.762627862999892]]],[[[-144.17666581899988,-16.655368748],[-144.1695857409999,-16.667250257999868],[-144.1778458319999,-16.663750908999873],[-144.18590247299994,-16.65935637799997],[-144.2006729809999,-16.64837004999984],[-144.1981095039999,-16.642185153999947],[-144.18814042899993,-16.645684502999856],[-144.17666581899988,-16.655368748]]],[[[-143.44058183499993,-16.620782158999916],[-143.4202774729999,-16.635674737999963],[-143.3862198559999,-16.669854424999954],[-143.4540095689999,-16.624607029000018],[-143.50617428299984,-16.62712981599985],[-143.55068925699993,-16.622165622999987],[-143.46475175699993,-16.614678643999838],[-143.44058183499993,-16.620782158999916]]],[[[-143.60952714799993,-16.629978122999887],[-143.5711563789999,-16.63583749799993],[-143.62035071499992,-16.632012627999913],[-143.66006425699993,-16.60222747199991],[-143.70152747299994,-16.580498955999843],[-143.6662491529999,-16.588474216999984],[-143.60952714799993,-16.629978122999887]]],[[[-151.4765518869999,-16.59050872199991],[-151.4787491529999,-16.594170830999957],[-151.45958411399994,-16.59343840899993],[-151.44957434799994,-16.594659112999864],[-151.44526119699992,-16.597588799999883],[-151.44395911399994,-16.60222747199991],[-151.43871008999986,-16.609307549999954],[-151.43781490799986,-16.614678643999838],[-151.4411514959999,-16.61980559699994],[-151.44819088399996,-16.624200127999913],[-151.4582413399999,-16.62900156],[-151.4598282539999,-16.661065362999892],[-151.46324622299989,-16.674086195999962],[-151.47260494699992,-16.669854424999954],[-151.4805395169999,-16.664971612999892],[-151.53465735599985,-16.641696872999958],[-151.54039466099994,-16.636488539999974],[-151.5408829419999,-16.63103606599985],[-151.5361222,-16.594903252999984],[-151.5237524079999,-16.582940362999878],[-151.50267493399986,-16.58017343499999],[-151.47260494699992,-16.580498955999843],[-151.4765518869999,-16.59050872199991]]],[[[-151.7483617829999,-16.50432708099987],[-151.74693762899994,-16.52597421699994],[-151.7626440089999,-16.525811455999985],[-151.7768448559999,-16.51181406000002],[-151.78449459499993,-16.492933851999894],[-151.78042558499988,-16.478122654000018],[-151.76378333199995,-16.472344658999873],[-151.75361080599987,-16.48381926899991],[-151.7483617829999,-16.50432708099987]]],[[[-143.8229874339999,-16.51637135199988],[-143.81761633999986,-16.539646091999984],[-143.82144120999988,-16.53769296699994],[-143.8487442699999,-16.492933851999894],[-143.87979081899996,-16.469414971999853],[-143.91397050699996,-16.45737070099993],[-143.93423417899987,-16.450290622999873],[-143.93032792899987,-16.44996510199985],[-143.91034908799992,-16.455336195999905],[-143.8775121739999,-16.45973072699998],[-143.8619685539999,-16.467217705999857],[-143.83275305899986,-16.498467706],[-143.8229874339999,-16.51637135199988]]],[[[-152.24469967399995,-16.44378020599997],[-152.25629635299993,-16.45126718500002],[-152.26362057199995,-16.44719817499997],[-152.26146399599995,-16.441501559999907],[-152.24469967399995,-16.44378020599997]]],[[[-144.25133216099988,-16.461358331],[-144.2564591139999,-16.478122654000018],[-144.2586563789999,-16.457696221999953],[-144.26085364499988,-16.450860283999845],[-144.29116777299987,-16.416110934999963],[-144.27570553299995,-16.425551039999988],[-144.26012122299986,-16.442315362999906],[-144.25133216099988,-16.461358331]]],[[[-144.4271541009999,-16.322442315999865],[-144.42772376199986,-16.3265927059999],[-144.41222083199995,-16.32122161299985],[-144.39614824099988,-16.32447682099989],[-144.38231360599988,-16.332289320999962],[-144.3731176419999,-16.3404273419999],[-144.40611731699988,-16.329196872999987],[-144.42601477799985,-16.33277760199995],[-144.4345597,-16.319919529000018],[-144.42833411399994,-16.32057057099989],[-144.4271541009999,-16.322442315999865]]],[[[-146.32876542899993,-16.137627862999835],[-146.3388565749999,-16.16277434699991],[-146.36709550699987,-16.158786716999927],[-146.39175370999985,-16.147230726999908],[-146.40208899599995,-16.1299781229999],[-146.3872777989999,-16.10816822699985],[-146.35936438699994,-16.100192966999984],[-146.33771725199995,-16.113376559999935],[-146.32876542899993,-16.137627862999835]]],[[[-145.49396725199992,-16.33521900799998],[-145.4822891919999,-16.347832940999965],[-145.5022680329999,-16.336602471999882],[-145.52961178299986,-16.27947356599999],[-145.55313066299993,-16.252129815999837],[-145.57677161399985,-16.20256926899998],[-145.5904027989999,-16.15162525799998],[-145.60655676999988,-16.129327080999857],[-145.61388098899988,-16.080254815999908],[-145.61095130099994,-16.09734465899986],[-145.60358639199995,-16.120293877999927],[-145.59337317599991,-16.14039478999989],[-145.5821833979999,-16.149102471999967],[-145.57713782499985,-16.160821221999868],[-145.56826738199993,-16.212579033999887],[-145.56208248599995,-16.224297783999873],[-145.55919348899994,-16.23300546699994],[-145.51707923099985,-16.278903903999932],[-145.49396725199992,-16.33521900799998]]],[[[-145.61388098899988,-16.052911065999922],[-145.70885169199988,-16.060479424999883],[-145.65758216099985,-16.042575779],[-145.63125566299993,-16.038344007999896],[-145.61388098899988,-16.052911065999922]]],[[[-142.48127193899992,-16.018812757999925],[-142.52965247299994,-16.10816822699985],[-142.52208411399997,-16.08416106599999],[-142.5097550119999,-16.059014581],[-142.49526933499988,-16.03630950299997],[-142.48127193899992,-16.018812757999925]]],[[[-140.12547766799992,-15.953301690999979],[-140.10708574099996,-15.960625908999972],[-140.11021887899994,-15.977227471999853],[-140.1171768869999,-15.961683851999851],[-140.1432185539999,-15.96054452899999],[-140.17227128799988,-15.977227471999853],[-140.15168209499984,-15.957696221999953],[-140.12547766799992,-15.953301690999979]]],[[[-145.2199600899999,-15.898370049999897],[-145.16759192599994,-15.950453382999854],[-145.23591061099995,-15.888441664999988],[-145.2199600899999,-15.898370049999897]]],[[[-145.89858964799987,-15.878350518999838],[-145.89891516799992,-15.888116143999966],[-145.95051022,-15.839613539999988],[-145.91429602799994,-15.863539320999863],[-145.89858964799987,-15.878350518999838]]],[[[-140.85985266799986,-15.819919528999861],[-140.87970943899987,-15.8383114559999],[-140.8890274729999,-15.837334893999923],[-140.89500891799992,-15.83294036299985],[-140.89561927,-15.826836846999939],[-140.88898678299992,-15.819756768999895],[-140.8614395819999,-15.815524997999873],[-140.8523656889999,-15.815524997999873],[-140.85985266799986,-15.819919528999861]]],[[[-148.23871822799993,-15.863946221999868],[-148.2508438789999,-15.867445570999863],[-148.27171790299988,-15.853204033999859],[-148.2793676419999,-15.830498955999985],[-148.2755834629999,-15.809991143999937],[-148.2620743479999,-15.802422783999901],[-148.25763912699995,-15.807875257999939],[-148.2461645169999,-15.831638279000018],[-148.23900305899994,-15.839613539999988],[-148.22992916599995,-15.848077080999843],[-148.23078365799995,-15.85686614399999],[-148.23871822799993,-15.863946221999868]]],[[[-146.4816788399999,-15.820570570999905],[-146.48192298099988,-15.826918226999922],[-146.49058997299989,-15.808282158999944],[-146.4961645169999,-15.799493096999882],[-146.50304114499988,-15.791680596999981],[-146.49885006399995,-15.79404062299993],[-146.4866430329999,-15.803399346999882],[-146.4826554029999,-15.814873956],[-146.4816788399999,-15.820570570999905]]],[[[-154.51923580599993,-15.823418877999941],[-154.5254613919999,-15.827732028999932],[-154.52879798099994,-15.827243747999944],[-154.52318274599992,-15.819431247999873],[-154.5206192699999,-15.808526299999983],[-154.52208411399988,-15.800469658999859],[-154.52753658799992,-15.79485442499994],[-154.53697669199994,-15.792250257999953],[-154.52476966099988,-15.789320570999934],[-154.5191137359999,-15.795586846999967],[-154.5172826809999,-15.806410414999974],[-154.5163468089999,-15.817315362999864],[-154.51923580599993,-15.823418877999941]]],[[[-145.05870520699995,-15.875909112999977],[-145.05772864499988,-15.902113539999931],[-145.07648678299992,-15.858656507999981],[-145.12987219999988,-15.778008721999939],[-145.16075598899994,-15.758070570999962],[-145.1336156889999,-15.76311614399998],[-145.11754309799994,-15.780694268999838],[-145.0925186839999,-15.82634856599995],[-145.06700598899994,-15.856377862999906],[-145.05870520699995,-15.875909112999977]]],[[[-144.62043209499987,-15.747002862999835],[-144.63133704299995,-15.755303643999909],[-144.6419164699999,-15.755140882999854],[-144.6489151679999,-15.749281507999981],[-144.65172278599994,-15.740166924999912],[-144.64981035099987,-15.730157158999916],[-144.6328018869999,-15.728448174999912],[-144.62193762899992,-15.736016533999873],[-144.62043209499987,-15.747002862999835]]],[[[-145.4326879549999,-15.488539320999848],[-145.43785559799989,-15.496351820999934],[-145.4573461579999,-15.481703382999925],[-145.5239151679999,-15.470472915],[-145.54963131399992,-15.452080987999963],[-145.4815160799999,-15.474786065999837],[-145.45588131399992,-15.479587497999916],[-145.44395911399988,-15.479668877999899],[-145.43541419199988,-15.483005467000012],[-145.4326879549999,-15.488539320999848]]],[[[-146.1941625639999,-15.35947031],[-146.20299231699994,-15.38884856599999],[-146.19863847599993,-15.36980559699991],[-146.19615637899992,-15.347588799999869],[-146.1983129549999,-15.338718357],[-146.2036026679999,-15.331475518999895],[-146.2074275379999,-15.328627210999855],[-146.21719316299993,-15.32366301899998],[-146.21397864499988,-15.323093357000019],[-146.20498613199987,-15.327732028999861],[-146.20055091099988,-15.329685153999904],[-146.19668535099987,-15.33562590899993],[-146.1927791009999,-15.34628671699987],[-146.1941625639999,-15.35947031]]],[[[-146.60293535099987,-15.25693124799993],[-146.5977677069999,-15.27157968499995],[-146.6100968089999,-15.256442966999941],[-146.62083899599992,-15.23984140399999],[-146.6390274729999,-15.23259856599988],[-146.62385006399992,-15.23503997199991],[-146.61172441299993,-15.24391041500003],[-146.60293535099987,-15.25693124799993]]],[[[-147.23851477799988,-15.235284112999949],[-147.23741614499994,-15.244235934999963],[-147.24181067599991,-15.239027601999979],[-147.2462052069999,-15.236748955999914],[-147.25088456899994,-15.23503997199991],[-147.25625566299988,-15.232517184999892],[-147.2422582669999,-15.23235442499984],[-147.23851477799988,-15.235284112999949]]],[[[-147.7499893869999,-15.22869231599988],[-147.7371313139999,-15.235284112999949],[-147.7789607409999,-15.216403903999918],[-147.77407792899993,-15.213474216999899],[-147.76341712099992,-15.219414971999925],[-147.7499893869999,-15.22869231599988]]],[[[-147.4925024079999,-15.091078382999925],[-147.45897376199986,-15.12135182099992],[-147.5120336579999,-15.080010674999969],[-147.53087317599994,-15.06902434699984],[-147.51085364499988,-15.07789478999996],[-147.4925024079999,-15.091078382999925]]],[[[-147.93659420499995,-15.066338799999855],[-147.9319555329999,-15.080824476999979],[-147.93431555899986,-15.076918226999894],[-147.93667558499993,-15.073907158999901],[-147.93781490799995,-15.070896091999899],[-147.93659420499995,-15.066338799999855]]],[[[-148.05500240799992,-14.959893487999977],[-148.0457657539999,-14.997735283999916],[-148.0543106759999,-14.984633070999863],[-148.06627356699994,-14.971123955999886],[-148.08433997299994,-14.955010674999912],[-148.11070716099994,-14.940362237999906],[-148.1760961579999,-14.92205169099985],[-148.1341039699999,-14.925225518999909],[-148.08906002499992,-14.93678150799984],[-148.05500240799992,-14.959893487999977]]],[[[-148.62275143099993,-14.877862237999963],[-148.62800045499992,-14.894707940999965],[-148.6479386059999,-14.871758721999882],[-148.69066321499992,-14.853773695999848],[-148.66771399599992,-14.856622002999885],[-148.64057369699992,-14.864922783999958],[-148.62275143099993,-14.877862237999963]]],[[[-145.24982662699992,-14.670668226999908],[-145.25479081899988,-14.693291924999883],[-145.23350989499988,-14.688246351999936],[-145.19493567599991,-14.662041924999912],[-145.20543372299989,-14.675225518999866],[-145.22297115799992,-14.68840911299999],[-145.24278723899994,-14.698418877999899],[-145.26040605399996,-14.702325127999984],[-145.26390540299985,-14.690118097],[-145.25324459499993,-14.663181247999859],[-145.22964433499988,-14.620375257999953],[-145.24982662699992,-14.670668226999908]]],[[[-146.2363175119999,-14.47918059699984],[-146.25690670499995,-14.497491143999895],[-146.24575761599993,-14.476006768999952],[-146.2394913399999,-14.455824476999936],[-146.27114824099988,-14.435479424999855],[-146.2432755199999,-14.439222914999974],[-146.23176021999987,-14.45680104],[-146.2363175119999,-14.47918059699984]]],[[[-145.94371497299994,-14.441827080999971],[-145.95490475199995,-14.443536065999965],[-145.96617591099994,-14.44312916499996],[-145.9332169259999,-14.437595309999864],[-145.92243404899995,-14.43377044099985],[-145.93276933499988,-14.438409112999963],[-145.94371497299994,-14.441827080999971]]],[[[-144.87962805899988,-14.411797783999916],[-144.88060462099986,-14.422133070999934],[-144.88329016799992,-14.427422784],[-144.90274003799993,-14.442152601999894],[-144.93496660099987,-14.459730726999922],[-144.94473222599993,-14.463311455999985],[-144.95466061099992,-14.469821872999901],[-144.9858292309999,-14.500583591999884],[-145.00308183499993,-14.511163018999838],[-144.95466061099992,-14.46347421699987],[-144.9107152989999,-14.439548434999907],[-144.88805091099994,-14.418145440999865],[-144.9131973949999,-14.428155205999929],[-144.95588131399995,-14.432061455999843],[-145.00308183499993,-14.442966404],[-144.98509680899988,-14.432305596999882],[-144.96231035099993,-14.426202080999985],[-144.91779537699995,-14.422458591999956],[-144.89736894399988,-14.41228606599999],[-144.88508053299992,-14.407972915],[-144.87962805899988,-14.411797783999916]]],[[[-145.8354386059999,-14.342705987999906],[-145.8465876939999,-14.367120049999869],[-145.84260006399992,-14.34661223799999],[-145.86017818899995,-14.344170830999971],[-145.91429602799994,-14.34661223799999],[-145.85838782499988,-14.337334893999866],[-145.8354386059999,-14.342705987999906]]],[[[-141.1745499339999,-14.18962981599985],[-141.1795141269999,-14.196465752999956],[-141.18927975199992,-14.190199476999823],[-141.21279863199987,-14.164971612999935],[-141.2027481759999,-14.170179945999848],[-141.1745499339999,-14.18962981599985]]],[[[-138.6369522779999,-10.542168877999856],[-138.6714981759999,-10.55046965899983],[-138.68561764199993,-10.542087497999873],[-138.69343014199993,-10.526136976999865],[-138.69444739499988,-10.507907809999878],[-138.67959550699993,-10.473565362999835],[-138.68163001199994,-10.458265882999868],[-138.6988012359999,-10.42644622199984],[-138.6651912099999,-10.427341403999918],[-138.65046139199987,-10.431410414999888],[-138.63670813699994,-10.440606377999856],[-138.6204320949999,-10.471856377999828],[-138.62022864499994,-10.510837497999901],[-138.6369522779999,-10.542168877999856]]],[[[-139.11847896999984,-10.00017669099988],[-139.13076738199993,-10.014906507999868],[-139.1438695949999,-9.997816664999917],[-139.14268958199986,-9.9789364559999],[-139.1389867829999,-9.959405205999829],[-139.14443925699993,-9.940362237999835],[-139.1338598299999,-9.928317966999913],[-139.12067623599984,-9.90439218499985],[-139.10383053299984,-9.888278903999876],[-139.0823868479999,-9.899509372999873],[-139.06916256399987,-9.903903903999861],[-139.0556534499999,-9.913181247999916],[-139.04775956899994,-9.922539971999853],[-139.0513402989999,-9.926690362999892],[-139.05500240799984,-9.928399346999896],[-139.05760657499994,-9.932386976999865],[-139.0597224599999,-9.937107028999876],[-139.06187903599994,-9.940362237999835],[-139.06663977799985,-9.943291924999855],[-139.07664954299992,-9.944594007999854],[-139.0823868479999,-9.94719817499984],[-139.0958552729999,-9.961683851999894],[-139.11847896999984,-10.00017669099988]]],[[[-138.87694251199994,-9.754327080999872],[-138.8666886059999,-9.755466403999904],[-138.8554581369999,-9.753513278999861],[-138.84801184799994,-9.748955987999821],[-138.84235592399986,-9.744235934999907],[-138.8365779289999,-9.741143487999835],[-138.8140356109999,-9.739515882999811],[-138.81847083199997,-9.748711846999882],[-138.86925208199995,-9.791599216999856],[-138.89207923099994,-9.80071379999984],[-138.91661536399997,-9.806573174999883],[-138.95567786399994,-9.809991143999895],[-139.00942949099988,-9.809014580999829],[-139.02090410099993,-9.806329033999845],[-139.0262345039999,-9.803399346999825],[-139.03799394399988,-9.802422783999845],[-139.04971269399996,-9.803480726999808],[-139.05504309799994,-9.806329033999845],[-139.05504309799994,-9.837334893999866],[-139.06191972599993,-9.853936455999829],[-139.07135982999986,-9.85475025799984],[-139.0855199859999,-9.848809502999913],[-139.12629146999984,-9.840101820999834],[-139.14346269399996,-9.828871351999837],[-139.15689042899996,-9.815199476999894],[-139.16490637899992,-9.803317966999842],[-139.17031816299993,-9.790134372999887],[-139.17324785099987,-9.77418385199988],[-139.16942298099985,-9.76100025799984],[-139.13841712099992,-9.750909112999864],[-139.05138098899988,-9.70142994599982],[-139.01537024599992,-9.694431247999844],[-138.98452714799996,-9.699476820999877],[-138.97252356699994,-9.720635674999869],[-138.96129309799994,-9.733819268999824],[-138.94273841099994,-9.74236419099985],[-138.9212133449999,-9.747165622999844],[-138.90078691299993,-9.748630466999899],[-138.87694251199994,-9.754327080999872]]],[[[-140.05386308499988,-9.346286716999899],[-140.04141191299996,-9.351006768999824],[-140.02769934799994,-9.34392669099985],[-140.04063880099994,-9.374118747999873],[-140.04893958199992,-9.408135674999897],[-140.06289628799988,-9.435967705999857],[-140.09284420499986,-9.447523695999877],[-140.11139889199987,-9.437758070999848],[-140.15859941299993,-9.371840101999808],[-140.1394750639999,-9.357842705999843],[-140.12144934799994,-9.3402645809999],[-140.10163326699993,-9.32626718499985],[-140.0767309239999,-9.323418877999899],[-140.05386308499988,-9.346286716999899]]],[[[-139.5823461579999,-8.868910414999888],[-139.5744522779999,-8.870212497999887],[-139.55842037699983,-8.864678643999866],[-139.5469864569999,-8.867120049999897],[-139.5143936839999,-8.883965752999899],[-139.50316321499992,-8.899021091999913],[-139.5084122389999,-8.912041924999897],[-139.52342688699994,-8.921563408999901],[-139.54165605399993,-8.926202080999829],[-139.58560136599993,-8.929457289999874],[-139.6030981109999,-8.936944268999838],[-139.61676998599984,-8.954196872999844],[-139.61270097599987,-8.939222914999903],[-139.61803137899994,-8.924981377999899],[-139.6262100899999,-8.910821221999882],[-139.6304418609999,-8.89544036299985],[-139.59691321499992,-8.858005466999899],[-139.58946692599994,-8.858005466999899],[-139.5823461579999,-8.868910414999888]]],[[[-140.2167048819999,-8.781019789999917],[-140.08971106699988,-8.802015882999868],[-140.0589900379999,-8.802015882999868],[-140.05142167899993,-8.80046965899983],[-140.0374242829999,-8.792250257999825],[-140.02769934799994,-8.788995049999883],[-140.02774003799993,-8.79371510199988],[-140.0295304029999,-8.796482028999847],[-140.0322159499999,-8.798760674999826],[-140.03941809799994,-8.8070614559999],[-140.0494278639999,-8.823174737999864],[-140.0222875639999,-8.846774997999901],[-140.01598059799994,-8.859307549999897],[-140.01402747299989,-8.881117445999863],[-140.01915442599991,-8.896416924999826],[-140.0313207669999,-8.894463799999869],[-140.05557206899988,-8.878513278999861],[-140.06053626199994,-8.89999765399989],[-140.07664954299992,-8.91521575299987],[-140.09601803299992,-8.919040622999887],[-140.11021887899994,-8.905694268999866],[-140.11766516799992,-8.905694268999866],[-140.1299942699999,-8.916436455999886],[-140.1699112619999,-8.929457289999874],[-140.17853756399992,-8.936781507999882],[-140.18321692599994,-8.953708591999856],[-140.19432532499988,-8.950372002999842],[-140.20702063699994,-8.939385674999869],[-140.2276912099999,-8.92701588299984],[-140.23477128799993,-8.912855726999823],[-140.2451879549999,-8.866875908999859],[-140.24742591099988,-8.847344658999873],[-140.2495824859999,-8.838636976999894],[-140.2589412099999,-8.830498955999872],[-140.26105709499993,-8.823174737999864],[-140.24779212099992,-8.786879164999874],[-140.2167048819999,-8.781019789999917]]],[[[-140.70783443899984,-8.039727471999882],[-140.71776282499994,-8.04127369599982],[-140.72716223899997,-8.028090101999865],[-140.7277725899999,-7.991469007999854],[-140.7063695949999,-7.963067315999822],[-140.67316646999987,-7.950127862999821],[-140.63841712099992,-7.959730726999894],[-140.6530655589999,-7.970798434999921],[-140.6583145819999,-7.973402601999837],[-140.67564856699988,-7.976739190999851],[-140.6839086579999,-7.985284112999878],[-140.6924535799999,-8.01506926899988],[-140.6988826159999,-8.028985283999859],[-140.70783443899984,-8.039727471999882]]]]}},{type:"Feature",id:"PRI",properties:{name:"Puerto Rico"},geometry:{type:"Polygon",coordinates:[[[-66.282434,18.514762],[-65.771303,18.426679],[-65.591004,18.228035],[-65.847164,17.975906],[-66.599934,17.981823],[-67.184162,17.946553],[-67.242428,18.37446],[-67.100679,18.520601],[-66.282434,18.514762]]]}},{type:"Feature",id:"PRK",properties:{name:"North Korea"},geometry:{type:"Polygon",coordinates:[[[130.640016,42.395009],[130.780007,42.220007],[130.400031,42.280004],[129.965949,41.941368],[129.667362,41.601104],[129.705189,40.882828],[129.188115,40.661808],[129.0104,40.485436],[128.633368,40.189847],[127.967414,40.025413],[127.533436,39.75685],[127.50212,39.323931],[127.385434,39.213472],[127.783343,39.050898],[128.349716,38.612243],[128.205746,38.370397],[127.780035,38.304536],[127.073309,38.256115],[126.68372,37.804773],[126.237339,37.840378],[126.174759,37.749686],[125.689104,37.94001],[125.568439,37.752089],[125.27533,37.669071],[125.240087,37.857224],[124.981033,37.948821],[124.712161,38.108346],[124.985994,38.548474],[125.221949,38.665857],[125.132859,38.848559],[125.38659,39.387958],[125.321116,39.551385],[124.737482,39.660344],[124.265625,39.928493],[125.079942,40.569824],[126.182045,41.107336],[126.869083,41.816569],[127.343783,41.503152],[128.208433,41.466772],[128.052215,41.994285],[129.596669,42.424982],[129.994267,42.985387],[130.640016,42.395009]]]}},{type:"Feature",id:"PRT",properties:{name:"Portugal"},geometry:{type:"Polygon",coordinates:[[[-9.034818,41.880571],[-8.671946,42.134689],[-8.263857,42.280469],[-8.013175,41.790886],[-7.422513,41.792075],[-7.251309,41.918346],[-6.668606,41.883387],[-6.389088,41.381815],[-6.851127,41.111083],[-6.86402,40.330872],[-7.026413,40.184524],[-7.066592,39.711892],[-7.498632,39.629571],[-7.098037,39.030073],[-7.374092,38.373059],[-7.029281,38.075764],[-7.166508,37.803894],[-7.537105,37.428904],[-7.453726,37.097788],[-7.855613,36.838269],[-8.382816,36.97888],[-8.898857,36.868809],[-8.746101,37.651346],[-8.839998,38.266243],[-9.287464,38.358486],[-9.526571,38.737429],[-9.446989,39.392066],[-9.048305,39.755093],[-8.977353,40.159306],[-8.768684,40.760639],[-8.790853,41.184334],[-8.990789,41.543459],[-9.034818,41.880571]]]}},{type:"Feature",id:"PRY",properties:{name:"Paraguay"},geometry:{type:"Polygon",coordinates:[[[-62.685057,-22.249029],[-62.291179,-21.051635],[-62.265961,-20.513735],[-61.786326,-19.633737],[-60.043565,-19.342747],[-59.115042,-19.356906],[-58.183471,-19.868399],[-58.166392,-20.176701],[-57.870674,-20.732688],[-57.937156,-22.090176],[-56.88151,-22.282154],[-56.473317,-22.0863],[-55.797958,-22.35693],[-55.610683,-22.655619],[-55.517639,-23.571998],[-55.400747,-23.956935],[-55.027902,-24.001274],[-54.652834,-23.839578],[-54.29296,-24.021014],[-54.293476,-24.5708],[-54.428946,-25.162185],[-54.625291,-25.739255],[-54.788795,-26.621786],[-55.695846,-27.387837],[-56.486702,-27.548499],[-57.60976,-27.395899],[-58.618174,-27.123719],[-57.63366,-25.603657],[-57.777217,-25.16234],[-58.807128,-24.771459],[-60.028966,-24.032796],[-60.846565,-23.880713],[-62.685057,-22.249029]]]}},{type:"Feature",id:"QAT",properties:{name:"Qatar"},geometry:{type:"Polygon",coordinates:[[[50.810108,24.754743],[50.743911,25.482424],[51.013352,26.006992],[51.286462,26.114582],[51.589079,25.801113],[51.6067,25.21567],[51.389608,24.627386],[51.112415,24.556331],[50.810108,24.754743]]]}},{type:"Feature",id:"REU",geometry:{type:"Polygon",coordinates:[[[55.25415375561,-21.109737804325],[55.230936180403,-21.090934707251],[55.221239445979,-21.078095020713],[55.222672586796,-21.055647530992],[55.217135411092,-21.036469853464],[55.233691556437,-21.019279719696],[55.244908004365,-21.019876366239],[55.256552904916,-21.0162341043],[55.274828812396,-21.003236502391],[55.279329074841,-20.99580668298],[55.282766218872,-20.978605336065],[55.278748340251,-20.963381843067],[55.27823084148,-20.952052399071],[55.288112554157,-20.937199184538],[55.289292404055,-20.923219361848],[55.30433191919,-20.929152184371],[55.325052994639,-20.929558227374],[55.343016813716,-20.922804444906],[55.355139561644,-20.910079541906],[55.386296665128,-20.889371260808],[55.394036917298,-20.882986388174],[55.421141873335,-20.874440484522],[55.437381127014,-20.876567897466],[55.456649591996,-20.876526962726],[55.471366123992,-20.88456241524],[55.485094324598,-20.885877009892],[55.502874187823,-20.882269385646],[55.541560144133,-20.89467347041],[55.551075265405,-20.895347906424],[55.55717638151,-20.891552105997],[55.587309965415,-20.896549201032],[55.592451795185,-20.895958362667],[55.61789051779,-20.909357098243],[55.640381167177,-20.91326314248],[55.664378168675,-20.925161312912],[55.680839253857,-20.942754586943],[55.694615577906,-20.963060447375],[55.700683666125,-20.978611757202],[55.700686665069,-21.005727085591],[55.702240950638,-21.016337520335],[55.707788812226,-21.028026265196],[55.713564045606,-21.029915684479],[55.728090424356,-21.046588707299],[55.732198197765,-21.061971681397],[55.7387344493,-21.071505992956],[55.752531093226,-21.085300722523],[55.762611492449,-21.100604921751],[55.77143403156,-21.106971183666],[55.780072832563,-21.121889982217],[55.800058131227,-21.127272443592],[55.808258463549,-21.136108721779],[55.826736952168,-21.145764202904],[55.834386208899,-21.160249915052],[55.832909277473,-21.166581656933],[55.836628265464,-21.183406142411],[55.825382333317,-21.187945665989],[55.824708367899,-21.203251849261],[55.814058919803,-21.214293733919],[55.808520861285,-21.227530149164],[55.804226212501,-21.252892346481],[55.802020994801,-21.257819143119],[55.803216924008,-21.276421214981],[55.808280901341,-21.287305928884],[55.805403930158,-21.296578694611],[55.804504092923,-21.312482750854],[55.807295563557,-21.336761171791],[55.799849509215,-21.346518885481],[55.779848640249,-21.362096247769],[55.7736071095,-21.365231547113],[55.760772415062,-21.363569944646],[55.741310273026,-21.369204880066],[55.727080508255,-21.369853677725],[55.719399086761,-21.37393894895],[55.702544549396,-21.376892628476],[55.681553265314,-21.374733505191],[55.670862413982,-21.383821728156],[55.65919329063,-21.382840878435],[55.652833154059,-21.385827852775],[55.638028256227,-21.382997384189],[55.625637295877,-21.382826767847],[55.609006957416,-21.386904617465],[55.584504867382,-21.372380188377],[55.571433456659,-21.375964895307],[55.547526506413,-21.369146515459],[55.536725030294,-21.363098987553],[55.527168599735,-21.361948612279],[55.501002992462,-21.350598321595],[55.488681490983,-21.350477057178],[55.459522850383,-21.341144046726],[55.454781045738,-21.331585289694],[55.448947363585,-21.328377283821],[55.429383738704,-21.326204793365],[55.417433869019,-21.320149166717],[55.407899030618,-21.306824395359],[55.390688251147,-21.292159550605],[55.367871676711,-21.284874530064],[55.340820614137,-21.280814644564],[55.332230039939,-21.273040398418],[55.330559136553,-21.25867839743],[55.309819984342,-21.239376141429],[55.294129138863,-21.23037270561],[55.283073606482,-21.202892371557],[55.286772824609,-21.185049323512],[55.286733275629,-21.160641411697],[55.274414197865,-21.150557030134],[55.271388344634,-21.135424821028],[55.256062863898,-21.116709703933],[55.254153755612,-21.109737804325]]]}},{type:"Feature",id:"ROU",properties:{name:"Romania"},geometry:{type:"Polygon",coordinates:[[[22.710531,47.882194],[23.142236,48.096341],[23.760958,47.985598],[24.402056,47.981878],[24.866317,47.737526],[25.207743,47.891056],[25.945941,47.987149],[26.19745,48.220881],[26.619337,48.220726],[26.924176,48.123264],[27.233873,47.826771],[27.551166,47.405117],[28.12803,46.810476],[28.160018,46.371563],[28.054443,45.944586],[28.233554,45.488283],[28.679779,45.304031],[29.149725,45.464925],[29.603289,45.293308],[29.626543,45.035391],[29.141612,44.82021],[28.837858,44.913874],[28.558081,43.707462],[27.970107,43.812468],[27.2424,44.175986],[26.065159,43.943494],[25.569272,43.688445],[24.100679,43.741051],[23.332302,43.897011],[22.944832,43.823785],[22.65715,44.234923],[22.474008,44.409228],[22.705726,44.578003],[22.459022,44.702517],[22.145088,44.478422],[21.562023,44.768947],[21.483526,45.18117],[20.874313,45.416375],[20.762175,45.734573],[20.220192,46.127469],[21.021952,46.316088],[21.626515,46.994238],[22.099768,47.672439],[22.710531,47.882194]]]}},{type:"Feature",id:"RUS",properties:{name:"Russia"},geometry:{type:"MultiPolygon",coordinates:[[[[143.648007,50.7476],[144.654148,48.976391],[143.173928,49.306551],[142.558668,47.861575],[143.533492,46.836728],[143.505277,46.137908],[142.747701,46.740765],[142.09203,45.966755],[141.906925,46.805929],[142.018443,47.780133],[141.904445,48.859189],[142.1358,49.615163],[142.179983,50.952342],[141.594076,51.935435],[141.682546,53.301966],[142.606934,53.762145],[142.209749,54.225476],[142.654786,54.365881],[142.914616,53.704578],[143.260848,52.74076],[143.235268,51.75666],[143.648007,50.7476]]],[[[22.731099,54.327537],[20.892245,54.312525],[19.66064,54.426084],[19.888481,54.86616],[21.268449,55.190482],[22.315724,55.015299],[22.757764,54.856574],[22.651052,54.582741],[22.731099,54.327537]]],[[[-175.01425,66.58435],[-174.33983,66.33556],[-174.57182,67.06219],[-171.85731,66.91308],[-169.89958,65.97724],[-170.89107,65.54139],[-172.53025,65.43791],[-172.555,64.46079],[-172.95533,64.25269],[-173.89184,64.2826],[-174.65392,64.63125],[-175.98353,64.92288],[-176.20716,65.35667],[-177.22266,65.52024],[-178.35993,65.39052],[-178.90332,65.74044],[-178.68611,66.11211],[-179.88377,65.87456],[-179.43268,65.40411],[-180,64.979709],[-180,68.963636],[-177.55,68.2],[-174.92825,67.20589],[-175.01425,66.58435]]],[[[180,70.832199],[178.903425,70.78114],[178.7253,71.0988],[180,71.515714],[180,70.832199]]],[[[-178.69378,70.89302],[-180,70.832199],[-180,71.515714],[-179.871875,71.55762],[-179.02433,71.55553],[-177.577945,71.26948],[-177.663575,71.13277],[-178.69378,70.89302]]],[[[143.60385,73.21244],[142.08763,73.20544],[140.038155,73.31692],[139.86312,73.36983],[140.81171,73.76506],[142.06207,73.85758],[143.48283,73.47525],[143.60385,73.21244]]],[[[150.73167,75.08406],[149.575925,74.68892],[147.977465,74.778355],[146.11919,75.17298],[146.358485,75.49682],[148.22223,75.345845],[150.73167,75.08406]]],[[[145.086285,75.562625],[144.3,74.82],[140.61381,74.84768],[138.95544,74.61148],[136.97439,75.26167],[137.51176,75.94917],[138.831075,76.13676],[141.471615,76.09289],[145.086285,75.562625]]],[[[57.535693,70.720464],[56.944979,70.632743],[53.677375,70.762658],[53.412017,71.206662],[51.601895,71.474759],[51.455754,72.014881],[52.478275,72.229442],[52.444169,72.774731],[54.427614,73.627548],[53.50829,73.749814],[55.902459,74.627486],[55.631933,75.081412],[57.868644,75.60939],[61.170044,76.251883],[64.498368,76.439055],[66.210977,76.809782],[68.15706,76.939697],[68.852211,76.544811],[68.180573,76.233642],[64.637326,75.737755],[61.583508,75.260885],[58.477082,74.309056],[56.986786,73.333044],[55.419336,72.371268],[55.622838,71.540595],[57.535693,70.720464]]],[[[106.97013,76.97419],[107.24,76.48],[108.1538,76.72335],[111.07726,76.71],[113.33151,76.22224],[114.13417,75.84764],[113.88539,75.32779],[112.77918,75.03186],[110.15125,74.47673],[109.4,74.18],[110.64,74.04],[112.11919,73.78774],[113.01954,73.97693],[113.52958,73.33505],[113.96881,73.59488],[115.56782,73.75285],[118.77633,73.58772],[119.02,73.12],[123.20066,72.97122],[123.25777,73.73503],[125.38,73.56],[126.97644,73.56549],[128.59126,73.03871],[129.05157,72.39872],[128.46,71.98],[129.71599,71.19304],[131.28858,70.78699],[132.2535,71.8363],[133.85766,71.38642],[135.56193,71.65525],[137.49755,71.34763],[138.23409,71.62803],[139.86983,71.48783],[139.14791,72.41619],[140.46817,72.84941],[149.5,72.2],[150.35118,71.60643],[152.9689,70.84222],[157.00688,71.03141],[158.99779,70.86672],[159.83031,70.45324],[159.70866,69.72198],[160.94053,69.43728],[162.27907,69.64204],[164.05248,69.66823],[165.94037,69.47199],[167.83567,69.58269],[169.57763,68.6938],[170.81688,69.01363],[170.0082,69.65276],[170.45345,70.09703],[173.64391,69.81743],[175.72403,69.87725],[178.6,69.4],[180,68.963636],[180,64.979709],[179.99281,64.97433],[178.7072,64.53493],[177.41128,64.60821],[178.313,64.07593],[178.90825,63.25197],[179.37034,62.98262],[179.48636,62.56894],[179.22825,62.3041],[177.3643,62.5219],[174.56929,61.76915],[173.68013,61.65261],[172.15,60.95],[170.6985,60.33618],[170.33085,59.88177],[168.90046,60.57355],[166.29498,59.78855],[165.84,60.16],[164.87674,59.7316],[163.53929,59.86871],[163.21711,59.21101],[162.01733,58.24328],[162.05297,57.83912],[163.19191,57.61503],[163.05794,56.15924],[162.12958,56.12219],[161.70146,55.28568],[162.11749,54.85514],[160.36877,54.34433],[160.02173,53.20257],[158.53094,52.95868],[158.23118,51.94269],[156.78979,51.01105],[156.42,51.7],[155.99182,53.15895],[155.43366,55.38103],[155.91442,56.76792],[156.75815,57.3647],[156.81035,57.83204],[158.36433,58.05575],[160.15064,59.31477],[161.87204,60.343],[163.66969,61.1409],[164.47355,62.55061],[163.25842,62.46627],[162.65791,61.6425],[160.12148,60.54423],[159.30232,61.77396],[156.72068,61.43442],[154.21806,59.75818],[155.04375,59.14495],[152.81185,58.88385],[151.26573,58.78089],[151.33815,59.50396],[149.78371,59.65573],[148.54481,59.16448],[145.48722,59.33637],[142.19782,59.03998],[138.95848,57.08805],[135.12619,54.72959],[136.70171,54.60355],[137.19342,53.97732],[138.1647,53.75501],[138.80463,54.25455],[139.90151,54.18968],[141.34531,53.08957],[141.37923,52.23877],[140.59742,51.23967],[140.51308,50.04553],[140.06193,48.44671],[138.55472,46.99965],[138.21971,46.30795],[136.86232,45.1435],[135.51535,43.989],[134.86939,43.39821],[133.53687,42.81147],[132.90627,42.79849],[132.27807,43.28456],[130.93587,42.55274],[130.78,42.22],[130.64,42.395],[130.633866,42.903015],[131.144688,42.92999],[131.288555,44.11152],[131.02519,44.96796],[131.883454,45.321162],[133.09712,45.14409],[133.769644,46.116927],[134.11235,47.21248],[134.50081,47.57845],[135.026311,48.47823],[133.373596,48.183442],[132.50669,47.78896],[130.98726,47.79013],[130.582293,48.729687],[129.397818,49.4406],[127.6574,49.76027],[127.287456,50.739797],[126.939157,51.353894],[126.564399,51.784255],[125.946349,52.792799],[125.068211,53.161045],[123.57147,53.4588],[122.245748,53.431726],[121.003085,53.251401],[120.177089,52.753886],[120.725789,52.516226],[120.7382,51.96411],[120.18208,51.64355],[119.27939,50.58292],[119.288461,50.142883],[117.879244,49.510983],[116.678801,49.888531],[115.485695,49.805177],[114.96211,50.140247],[114.362456,50.248303],[112.89774,49.543565],[111.581231,49.377968],[110.662011,49.130128],[109.402449,49.292961],[108.475167,49.282548],[107.868176,49.793705],[106.888804,50.274296],[105.886591,50.406019],[104.62158,50.27532],[103.676545,50.089966],[102.25589,50.51056],[102.06521,51.25991],[100.88948,51.516856],[99.981732,51.634006],[98.861491,52.047366],[97.82574,51.010995],[98.231762,50.422401],[97.25976,49.72605],[95.81402,49.97746],[94.815949,50.013433],[94.147566,50.480537],[93.10421,50.49529],[92.234712,50.802171],[90.713667,50.331812],[88.805567,49.470521],[87.751264,49.297198],[87.35997,49.214981],[86.829357,49.826675],[85.54127,49.692859],[85.11556,50.117303],[84.416377,50.3114],[83.935115,50.889246],[83.383004,51.069183],[81.945986,50.812196],[80.568447,51.388336],[80.03556,50.864751],[77.800916,53.404415],[76.525179,54.177003],[76.8911,54.490524],[74.38482,53.54685],[73.425679,53.48981],[73.508516,54.035617],[72.22415,54.376655],[71.180131,54.133285],[70.865267,55.169734],[69.068167,55.38525],[68.1691,54.970392],[65.66687,54.60125],[65.178534,54.354228],[61.4366,54.00625],[60.978066,53.664993],[61.699986,52.979996],[60.739993,52.719986],[60.927269,52.447548],[59.967534,51.96042],[61.588003,51.272659],[61.337424,50.79907],[59.932807,50.842194],[59.642282,50.545442],[58.36332,51.06364],[56.77798,51.04355],[55.71694,50.62171],[54.532878,51.02624],[52.328724,51.718652],[50.766648,51.692762],[48.702382,50.605128],[48.577841,49.87476],[47.54948,50.454698],[46.751596,49.356006],[47.043672,49.152039],[46.466446,48.394152],[47.31524,47.71585],[48.05725,47.74377],[48.694734,47.075628],[48.59325,46.56104],[49.10116,46.39933],[48.64541,45.80629],[47.67591,45.64149],[46.68201,44.6092],[47.59094,43.66016],[47.49252,42.98658],[48.58437,41.80888],[47.987283,41.405819],[47.815666,41.151416],[47.373315,41.219732],[46.686071,41.827137],[46.404951,41.860675],[45.7764,42.09244],[45.470279,42.502781],[44.537623,42.711993],[43.93121,42.55496],[43.75599,42.74083],[42.3944,43.2203],[40.92219,43.38215],[40.076965,43.553104],[39.955009,43.434998],[38.68,44.28],[37.53912,44.65721],[36.67546,45.24469],[37.40317,45.40451],[38.23295,46.24087],[37.67372,46.63657],[39.14767,47.04475],[39.1212,47.26336],[38.223538,47.10219],[38.255112,47.5464],[38.77057,47.82562],[39.738278,47.898937],[39.89562,48.23241],[39.67465,48.78382],[40.080789,49.30743],[40.06904,49.60105],[38.594988,49.926462],[38.010631,49.915662],[37.39346,50.383953],[36.626168,50.225591],[35.356116,50.577197],[35.37791,50.77394],[35.022183,51.207572],[34.224816,51.255993],[34.141978,51.566413],[34.391731,51.768882],[33.7527,52.335075],[32.715761,52.238465],[32.412058,52.288695],[32.15944,52.06125],[31.78597,52.10168],[31.540018,52.742052],[31.305201,53.073996],[31.49764,53.16743],[32.304519,53.132726],[32.693643,53.351421],[32.405599,53.618045],[31.731273,53.794029],[31.791424,53.974639],[31.384472,54.157056],[30.757534,54.811771],[30.971836,55.081548],[30.873909,55.550976],[29.896294,55.789463],[29.371572,55.670091],[29.229513,55.918344],[28.176709,56.16913],[27.855282,56.759326],[27.770016,57.244258],[27.288185,57.474528],[27.716686,57.791899],[27.42015,58.72457],[28.131699,59.300825],[27.98112,59.47537],[29.1177,60.02805],[28.07,60.50352],[30.211107,61.780028],[31.139991,62.357693],[31.516092,62.867687],[30.035872,63.552814],[30.444685,64.204453],[29.54443,64.948672],[30.21765,65.80598],[29.054589,66.944286],[29.977426,67.698297],[28.445944,68.364613],[28.59193,69.064777],[29.39955,69.15692],[31.10108,69.55811],[32.13272,69.90595],[33.77547,69.30142],[36.51396,69.06342],[40.29234,67.9324],[41.05987,67.45713],[41.12595,66.79158],[40.01583,66.26618],[38.38295,65.99953],[33.91871,66.75961],[33.18444,66.63253],[34.81477,65.90015],[34.878574,65.436213],[34.94391,64.41437],[36.23129,64.10945],[37.01273,63.84983],[37.14197,64.33471],[36.539579,64.76446],[37.17604,65.14322],[39.59345,64.52079],[40.4356,64.76446],[39.7626,65.49682],[42.09309,66.47623],[43.01604,66.41858],[43.94975,66.06908],[44.53226,66.75634],[43.69839,67.35245],[44.18795,67.95051],[43.45282,68.57079],[46.25,68.25],[46.82134,67.68997],[45.55517,67.56652],[45.56202,67.01005],[46.34915,66.66767],[47.89416,66.88455],[48.13876,67.52238],[50.22766,67.99867],[53.71743,68.85738],[54.47171,68.80815],[53.48582,68.20131],[54.72628,68.09702],[55.44268,68.43866],[57.31702,68.46628],[58.802,68.88082],[59.94142,68.27844],[61.07784,68.94069],[60.03,69.52],[60.55,69.85],[63.504,69.54739],[64.888115,69.234835],[68.51216,68.09233],[69.18068,68.61563],[68.16444,69.14436],[68.13522,69.35649],[66.93008,69.45461],[67.25976,69.92873],[66.72492,70.70889],[66.69466,71.02897],[68.54006,71.9345],[69.19636,72.84336],[69.94,73.04],[72.58754,72.77629],[72.79603,72.22006],[71.84811,71.40898],[72.47011,71.09019],[72.79188,70.39114],[72.5647,69.02085],[73.66787,68.4079],[73.2387,67.7404],[71.28,66.32],[72.42301,66.17267],[72.82077,66.53267],[73.92099,66.78946],[74.18651,67.28429],[75.052,67.76047],[74.46926,68.32899],[74.93584,68.98918],[73.84236,69.07146],[73.60187,69.62763],[74.3998,70.63175],[73.1011,71.44717],[74.89082,72.12119],[74.65926,72.83227],[75.15801,72.85497],[75.68351,72.30056],[75.28898,71.33556],[76.35911,71.15287],[75.90313,71.87401],[77.57665,72.26717],[79.65202,72.32011],[81.5,71.75],[80.61071,72.58285],[80.51109,73.6482],[82.25,73.85],[84.65526,73.80591],[86.8223,73.93688],[86.00956,74.45967],[87.16682,75.11643],[88.31571,75.14393],[90.26,75.64],[92.90058,75.77333],[93.23421,76.0472],[95.86,76.14],[96.67821,75.91548],[98.92254,76.44689],[100.75967,76.43028],[101.03532,76.86189],[101.99084,77.28754],[104.3516,77.69792],[106.06664,77.37389],[104.705,77.1274],[106.97013,76.97419]]],[[[105.07547,78.30689],[99.43814,77.921],[101.2649,79.23399],[102.08635,79.34641],[102.837815,79.28129],[105.37243,78.71334],[105.07547,78.30689]]],[[[51.136187,80.54728],[49.793685,80.415428],[48.894411,80.339567],[48.754937,80.175468],[47.586119,80.010181],[46.502826,80.247247],[47.072455,80.559424],[44.846958,80.58981],[46.799139,80.771918],[48.318477,80.78401],[48.522806,80.514569],[49.09719,80.753986],[50.039768,80.918885],[51.522933,80.699726],[51.136187,80.54728]]],[[[99.93976,78.88094],[97.75794,78.7562],[94.97259,79.044745],[93.31288,79.4265],[92.5454,80.14379],[91.18107,80.34146],[93.77766,81.0246],[95.940895,81.2504],[97.88385,80.746975],[100.186655,79.780135],[99.93976,78.88094]]]]}},{type:"Feature",id:"RWA",properties:{name:"Rwanda"},geometry:{type:"Polygon",coordinates:[[[30.419105,-1.134659],[30.816135,-1.698914],[30.758309,-2.28725],[30.469696,-2.413858],[29.938359,-2.348487],[29.632176,-2.917858],[29.024926,-2.839258],[29.117479,-2.292211],[29.254835,-2.21511],[29.291887,-1.620056],[29.579466,-1.341313],[29.821519,-1.443322],[30.419105,-1.134659]]]}},{type:"Feature",id:"ESH",properties:{name:"Western Sahara"},geometry:{type:"Polygon",coordinates:[[[-8.794884,27.120696],[-8.817828,27.656426],[-8.66559,27.656426],[-8.665124,27.589479],[-8.6844,27.395744],[-8.687294,25.881056],[-11.969419,25.933353],[-11.937224,23.374594],[-12.874222,23.284832],[-13.118754,22.77122],[-12.929102,21.327071],[-16.845194,21.333323],[-17.063423,20.999752],[-17.020428,21.42231],[-17.002962,21.420734],[-14.750955,21.5006],[-14.630833,21.86094],[-14.221168,22.310163],[-13.89111,23.691009],[-12.500963,24.770116],[-12.030759,26.030866],[-11.71822,26.104092],[-11.392555,26.883424],[-10.551263,26.990808],[-10.189424,26.860945],[-9.735343,26.860945],[-9.413037,27.088476],[-8.794884,27.120696]]]}},{type:"Feature",id:"SGS",properties:{name:"South Georgia and South Sandwich Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-27.152943488999938,-59.470798434999985],[-27.214222785999965,-59.471856377999856],[-27.234608527999853,-59.46795012799995],[-27.25291907499991,-59.458265882999896],[-27.249989386999886,-59.44670989399987],[-27.243397589999915,-59.44068775799987],[-27.231312628999916,-59.43824635199984],[-27.136830206999974,-59.437188408999965],[-27.136830206999974,-59.44402434699998],[-27.146351691999968,-59.45273202899997],[-27.148182745999947,-59.46298593499999],[-27.152943488999938,-59.470798434999985]]],[[[-27.301340298999918,-59.47193775799984],[-27.312123175999915,-59.47275155999985],[-27.322621222999885,-59.471856377999856],[-27.33275305899994,-59.469170830999964],[-27.342274542999917,-59.46453215899985],[-27.371408657999893,-59.455824476999865],[-27.399240688999953,-59.443617445999976],[-27.40721594999991,-59.43173593500002],[-27.377064581999974,-59.423516533999845],[-27.330922003999945,-59.424574476999894],[-27.329945441999882,-59.427504164999824],[-27.330962693999936,-59.431817315999915],[-27.32860266799989,-59.437188408999965],[-27.323231574999937,-59.447360935],[-27.32144120999996,-59.45777760199991],[-27.316477016999897,-59.46656666499997],[-27.301340298999918,-59.47193775799984]]],[[[-26.569447394999884,-59.06414153399999],[-26.59557044199994,-59.06731536299996],[-26.629790818999908,-59.062758070999834],[-26.65367591099988,-59.04558684699999],[-26.657053188999896,-59.02369557099987],[-26.629750128999916,-59.00595468499996],[-26.595041469999956,-59.00188567499991],[-26.56265214799987,-59.00790781],[-26.499379035999908,-59.03313567499988],[-26.522084113999938,-59.04664478999986],[-26.545236782999893,-59.057224216999906],[-26.569447394999884,-59.06414153399999]]],[[[-26.245676235999923,-58.48853932099991],[-26.24620520699989,-58.49871184699995],[-26.249379035999937,-58.494724216999884],[-26.25255286399991,-58.49358489399985],[-26.256011522999927,-58.493096612999864],[-26.30101477799991,-58.47722747199984],[-26.43028723899988,-58.45240650799997],[-26.457834438999924,-58.426690362999835],[-26.454701300999943,-58.42148202900002],[-26.44786536399991,-58.4138322899999],[-26.441029425999915,-58.40398528399997],[-26.437977667999917,-58.392266533999894],[-26.43089758999986,-58.38502369599996],[-26.414540167999917,-58.38193124799989],[-26.312367316999882,-58.382094007999854],[-26.27684485599991,-58.386895440999844],[-26.24620520699989,-58.40252044099983],[-26.259836391999926,-58.436700128],[-26.255116339999915,-58.444919529],[-26.242014126999948,-58.46119557099985],[-26.239328579999892,-58.46770598799984],[-26.245676235999923,-58.48853932099991]]],[[[-26.403187628999945,-57.78435637799997],[-26.388172980999855,-57.78639088299982],[-26.35602779899989,-57.78622812299985],[-26.371937628999888,-57.797051690999936],[-26.388661261999914,-57.80348072699986],[-26.42430579299989,-57.812758070999905],[-26.452381964999887,-57.81178150799984],[-26.47874915299988,-57.80266692499985],[-26.499989386999857,-57.788506768999916],[-26.513050910999937,-57.77255624799991],[-26.477650519999912,-57.74488697699982],[-26.458729620999918,-57.7384579409999],[-26.437977667999917,-57.74456145599998],[-26.433216925999915,-57.75090911299983],[-26.424794074999852,-57.770603122999866],[-26.416859503999888,-57.77874114399988],[-26.403187628999945,-57.78435637799997]]],[[[-26.650257941999882,-57.079766533999845],[-26.655018683999884,-57.08001067499988],[-26.657826300999915,-57.08180103999996],[-26.660267706999946,-57.08424244599981],[-26.66388912699992,-57.086683851999844],[-26.670725063999953,-57.079766533999845],[-26.683216925999943,-57.08131275799988],[-26.699533657999893,-57.07586028399994],[-26.732818162999877,-57.05934010199996],[-26.713205532999922,-57.04843515399989],[-26.690337693999908,-57.05055103999981],[-26.668120897999955,-57.062432549999855],[-26.650257941999882,-57.079766533999845]]],[[[-28.16856848899991,-56.71599700299992],[-28.187123175999915,-56.726250908999944],[-28.210113084999904,-56.72503020599993],[-28.213286912999962,-56.713962497999894],[-28.193104620999918,-56.70403411299989],[-28.171457485999923,-56.7048479149999],[-28.16856848899991,-56.71599700299992]]],[[[-27.107085740999963,-56.714776299999905],[-27.164173956999946,-56.72421640399992],[-27.19627844999991,-56.71949635199982],[-27.20759029899989,-56.713148695999884],[-27.211984829999977,-56.69963958099991],[-27.20457923099991,-56.690199476999894],[-27.187367316999882,-56.682549737999956],[-27.16698157499991,-56.67750416499984],[-27.150502081999917,-56.6757138],[-27.134917772999927,-56.67864348799987],[-27.11221269399988,-56.685967705999964],[-27.094227667999945,-56.69589609199988],[-27.092437303999958,-56.70647551899992],[-27.107085740999963,-56.714776299999905]]],[[[-27.556467251999948,-56.310804945999806],[-27.568999803999958,-56.32057057099984],[-27.582508917999945,-56.31324635199984],[-27.60216223899988,-56.29656340899998],[-27.609771287999934,-56.292168877999906],[-27.593332485999923,-56.27727629999995],[-27.572499152999853,-56.27255624799985],[-27.549875454999892,-56.27556731599994],[-27.527902798999975,-56.28476327899992],[-27.527902798999975,-56.292168877999906],[-27.543120897999955,-56.29713307099986],[-27.556467251999948,-56.310804945999806]]],[[[-37.01817786399991,-54.49651458099996],[-37.01817786399991,-54.50335051899997],[-37.02550208199989,-54.502862237999985],[-37.02993730399987,-54.50497812299999],[-37.03368079299992,-54.50807057099989],[-37.03868567599994,-54.510837497999944],[-37.06305904899992,-54.51392994599984],[-37.07457434799994,-54.51336028399996],[-37.08649654899989,-54.510837497999944],[-37.08649654899989,-54.50335051899997],[-37.06663977799988,-54.50335051899997],[-37.1075740229999,-54.48967864399985],[-37.10997473899994,-54.476983330999886],[-37.10293535099987,-54.47177499799998],[-37.09211178299998,-54.469496351999915],[-37.08307857999998,-54.46591562299985],[-37.0682673819999,-54.46428801899983],[-37.04873613199993,-54.474541924999855],[-37.01817786399991,-54.49651458099996]]],[[[-38.06578528599994,-54.00237395599983],[-38.07632402299993,-54.00383879999988],[-38.08702551999994,-54.00367603999992],[-38.07799231699994,-53.99195728999984],[-38.06236731699994,-53.98805103999993],[-38.026193813999924,-53.98943450299991],[-38.06578528599994,-54.00237395599983]]],[[[-37.68716386599988,-53.993747654],[-37.68980872299997,-54.00367603999992],[-37.49242102799985,-54.000420830999964],[-37.42162024599992,-53.98593515400001],[-37.38194739499991,-53.982598565999986],[-37.38194739499991,-53.98943450299991],[-37.443348761999914,-54.00994231599987],[-37.43651282499988,-54.01734791499986],[-37.443348761999914,-54.03045012799992],[-37.46385657499985,-54.03045012799992],[-37.44277910099993,-54.04290129999985],[-37.426340298999946,-54.04908619599982],[-37.4088435539999,-54.051364841999884],[-37.38499915299991,-54.05144622199987],[-37.37629146999993,-54.050388279],[-37.35924231699997,-54.04517994599991],[-37.35057532499988,-54.04404062299988],[-37.292551235999895,-54.04404062299988],[-37.23281816299993,-54.06755950299984],[-37.22362219999985,-54.06853606599991],[-37.21739661399988,-54.052422783999845],[-37.20238196499986,-54.04892343499994],[-37.18455969999988,-54.04900481599984],[-37.16966712099995,-54.04404062299988],[-37.17137610599994,-54.03411223799988],[-37.15599524599989,-54.031426690999986],[-37.13536536399988,-54.03183359199999],[-37.121205206999946,-54.03045012799992],[-37.13971920499995,-54.04599374799992],[-37.13345292899993,-54.050388279],[-37.117583787999905,-54.050062757999974],[-37.1075740229999,-54.05144622199987],[-37.108143683999884,-54.06218840899988],[-37.11778723899994,-54.06991952899989],[-37.14171301999991,-54.07878997199993],[-37.13756262899997,-54.08798593499991],[-37.13853919199994,-54.096774997999965],[-37.14293372299991,-54.105238539999824],[-37.149159308999884,-54.113539320999806],[-37.122425910999965,-54.11191171699996],[-37.10179602799985,-54.09880950299999],[-37.08259029899989,-54.080987237999835],[-37.05980383999986,-54.06511809699999],[-37.03726152299987,-54.057793877999984],[-37.00523841099988,-54.05201588299984],[-36.97813880099994,-54.05478280999989],[-36.97036699099996,-54.071954033999916],[-37.013295050999915,-54.09644947699994],[-37.03148352799991,-54.11052825299989],[-37.01817786399991,-54.11980559699994],[-36.99632727799985,-54.1169572899999],[-36.91576087099989,-54.08562590899986],[-36.92113196499986,-54.08245208099998],[-36.931019660999965,-54.074883721999846],[-36.936268683999856,-54.071954033999916],[-36.91478430899991,-54.06796640399985],[-36.891428188999924,-54.069512627999885],[-36.84007727799991,-54.07878997199993],[-36.812652147999955,-54.088474216999984],[-36.8059789699999,-54.092461846999875],[-36.80406653599994,-54.103122653999904],[-36.81627356699991,-54.11565520599999],[-36.81338456899988,-54.126641533999866],[-36.81822669199997,-54.13534921699994],[-36.81322180899991,-54.141289971999875],[-36.80296790299991,-54.143487237999956],[-36.79165605399993,-54.14031340899999],[-36.78807532499985,-54.13298919099989],[-36.78425045499992,-54.10808684699986],[-36.77863521999993,-54.09929778399998],[-36.75352942599994,-54.09392669099993],[-36.655100063999924,-54.106133722],[-36.66258704299989,-54.113539320999806],[-36.64293372299994,-54.11402760199997],[-36.631581183999856,-54.11565520599999],[-36.62157141799989,-54.11980559699994],[-36.62157141799989,-54.126641533999866],[-36.62979081899988,-54.135186455999886],[-36.63231360599988,-54.139418226999815],[-36.63524329299992,-54.147719007999974],[-36.65208899599992,-54.141289971999875],[-36.670074022999955,-54.140232029],[-36.68773352799988,-54.14446379999993],[-36.70348059799991,-54.15390390399995],[-36.675404425999915,-54.158135674999876],[-36.664133266999926,-54.16179778399992],[-36.66877193899995,-54.168226820999934],[-36.68049068899995,-54.17099374799999],[-36.70518958199992,-54.170505467],[-36.71715247299994,-54.174411716999906],[-36.6915583979999,-54.18417734199994],[-36.65916907499988,-54.18206145599984],[-36.59984290299991,-54.168226820999934],[-36.541818813999924,-54.161309502999934],[-36.5333552729999,-54.166924737999935],[-36.52440344999988,-54.1770158829999],[-36.51305091099991,-54.18271249799989],[-36.4974666009999,-54.174411716999906],[-36.49266516799992,-54.18141041499989],[-36.491118943999965,-54.18499114399995],[-36.49266516799992,-54.188571873000015],[-36.4974666009999,-54.19548919099984],[-36.512562628999916,-54.18816497199983],[-36.52887936099992,-54.18775807099983],[-36.55894934799997,-54.19548919099984],[-36.57310950399989,-54.20232512799994],[-36.65746008999989,-54.23943450299986],[-36.66429602799988,-54.241143487999956],[-36.669992641999954,-54.24358489399999],[-36.67564856699997,-54.24944426899994],[-36.67414303299992,-54.25400155999998],[-36.66893469999991,-54.25994231599982],[-36.66706295499995,-54.26767343499992],[-36.67564856699997,-54.277439059999956],[-36.6504613919999,-54.27906666499989],[-36.63084876199994,-54.27776458099998],[-36.613270636999914,-54.27271900799986],[-36.5450740229999,-54.23772551899986],[-36.51903235599991,-54.23186614399991],[-36.50426184799991,-54.24277109199998],[-36.491851365999906,-54.23463307099996],[-36.477406378999945,-54.23886484199989],[-36.46886145699992,-54.25090911299999],[-36.47386633999986,-54.26653411299998],[-36.48167883999986,-54.26970794099986],[-36.491851365999906,-54.27011484199986],[-36.50055904899989,-54.27214934699989],[-36.50426184799991,-54.280531507999854],[-36.50108801999997,-54.286309503],[-36.49518795499992,-54.28923919099993],[-36.49209550699993,-54.293877862999864],[-36.4974666009999,-54.30478281000002],[-36.48770097599996,-54.314222914999945],[-36.48582923099988,-54.324883721999974],[-36.48973548099988,-54.33562590899999],[-36.4974666009999,-54.34579843499985],[-36.45811926999991,-54.318291925],[-36.436634894999884,-54.31015390399998],[-36.41893469999988,-54.31462981599995],[-36.39281165299991,-54.34319426899985],[-36.375070766999926,-54.35605234199996],[-36.35407467399989,-54.359307549999826],[-36.33653723899994,-54.35149504999983],[-36.33849036399988,-54.33814869599991],[-36.34825598899994,-54.32073333099985],[-36.35407467399989,-54.30103932099981],[-36.3574926419999,-54.29355234199984],[-36.38072669199991,-54.277439059999956],[-36.387806769999884,-54.26930103999985],[-36.39191646999993,-54.26287200299984],[-36.39378821499989,-54.254978122999866],[-36.39443925699993,-54.24277109199998],[-36.32921301999994,-54.25725676899993],[-36.298898891999954,-54.268161717],[-36.29198157499985,-54.28362395599993],[-36.28034420499995,-54.28215911299996],[-36.26903235599988,-54.28215911299996],[-36.260609503999916,-54.28541432099983],[-36.2572322259999,-54.294203382999974],[-36.255482550999915,-54.305108330999865],[-36.25304114499997,-54.31292083099986],[-36.25462805899991,-54.31910572699983],[-36.26471920499995,-54.32529062299998],[-36.23468990799992,-54.338799737999956],[-36.23534094999988,-54.343519789999874],[-36.248850063999924,-54.350274347],[-36.2572322259999,-54.36988697699987],[-36.24388587099989,-54.375258070999834],[-36.161691860999895,-54.37297942499995],[-36.16445878799996,-54.3861630189999],[-36.16527258999989,-54.39934661299986],[-36.17100989499994,-54.40976327899985],[-36.18895423099991,-54.414646092],[-36.18394934799994,-54.423923434999956],[-36.176258917999945,-54.430271091999984],[-36.16637122299991,-54.43385182099987],[-36.15485592399989,-54.43515390399987],[-36.155018683999856,-54.44394296699993],[-36.14635169199994,-54.44980234199988],[-36.13341223899994,-54.45338307099994],[-36.120716925999886,-54.455661717],[-36.11481686099995,-54.45484791499982],[-36.10020911399994,-54.448663018999845],[-36.09292558499993,-54.45175546699992],[-36.07603919199994,-54.46249765399993],[-36.05150305899991,-54.461195570999934],[-36.04198157499991,-54.46396249799999],[-36.03815670499989,-54.4725888],[-36.0350642569999,-54.48406340899985],[-36.02725175699993,-54.49146900799984],[-36.016224738999966,-54.495375257999925],[-36.03351803299995,-54.504489842],[-36.05638587099989,-54.514825127999835],[-36.10020911399994,-54.545017184999935],[-36.088449673999946,-54.55152760199993],[-36.06981360599988,-54.56666432099993],[-36.05923417899993,-54.571709893999866],[-36.04328365799992,-54.573500257999854],[-35.95059160099996,-54.570570570999834],[-35.93578040299988,-54.565524997999894],[-35.910145636999914,-54.55201588299992],[-35.89830481699997,-54.54859791499991],[-35.88731848899991,-54.55120208099991],[-35.89122473899991,-54.56243255],[-35.90843665299991,-54.59270598799999],[-35.9317927729999,-54.617608330999936],[-35.93578040299988,-54.62004973799988],[-35.91193600199992,-54.664808851999915],[-35.90880286399994,-54.68726978999992],[-35.93578040299988,-54.689060153999904],[-35.914784308999856,-54.715264580999936],[-35.87149003799996,-54.73691171699993],[-35.82241777299993,-54.75156015399985],[-35.78429114499994,-54.75725676899983],[-35.78429114499994,-54.76474374799998],[-35.79718990799995,-54.766696872999844],[-35.81094316299988,-54.772067966999984],[-35.82201087099992,-54.77947356599997],[-35.82652747299997,-54.78769296699997],[-35.835113084999875,-54.79070403399997],[-35.85460364499997,-54.789727472],[-35.88731848899991,-54.78443775799984],[-35.90733801999997,-54.804620049999954],[-35.93736731699991,-54.809991143999916],[-35.96983801999991,-54.80608489399983],[-35.997181769999884,-54.79810963299996],[-36.046864386999886,-54.77597421699989],[-36.07555091099994,-54.766696872999844],[-36.10643469999991,-54.76474374799998],[-36.09658769399988,-54.77516041499988],[-36.083973761999886,-54.78337981599988],[-36.06993567599994,-54.78875090899993],[-36.055816209999904,-54.79070403399997],[-36.043080206999946,-54.79412200299989],[-36.023019985999895,-54.81113046699995],[-36.01085364499991,-54.81861744599992],[-36.0000707669999,-54.82219817499998],[-35.989165818999936,-54.82398853999988],[-35.96304277299987,-54.824883721999875],[-35.953480597999885,-54.827813408999894],[-35.93382727799994,-54.84156666499991],[-35.92202714799987,-54.845961195999806],[-35.92202714799987,-54.85222747199994],[-35.933176235999895,-54.85312265399993],[-35.94383704299992,-54.85271575299993],[-35.95384680899991,-54.850518487999935],[-35.96304277299987,-54.845961195999806],[-35.961008266999954,-54.8506812479999],[-35.95807857999992,-54.86191171699999],[-35.95616614499997,-54.866469007999854],[-35.98517818899995,-54.86695728999993],[-35.99620520699992,-54.863051039999846],[-36.00401770699989,-54.85222747199994],[-36.00772050699993,-54.865329685],[-36.007476365999906,-54.870782158999944],[-36.00401770699989,-54.87948984199984],[-36.01667232999995,-54.87965260199981],[-36.037831183999884,-54.87468840899985],[-36.0489802729999,-54.87330494599987],[-36.05516516799986,-54.87623463299989],[-36.062611456999946,-54.882256768999895],[-36.07262122299991,-54.88730234200001],[-36.10179602799988,-54.88746510199998],[-36.115956183999884,-54.88453541499996],[-36.12730872299997,-54.87761809699996],[-36.134388800999915,-54.866469007999854],[-36.12515214799987,-54.86589934699988],[-36.11896725199989,-54.86419036299988],[-36.10643469999991,-54.859063408999866],[-36.14736894399991,-54.845961195999806],[-36.19237219999991,-54.81121184699993],[-36.211781378999916,-54.80641041499985],[-36.23501542899993,-54.79509856599996],[-36.27155514199998,-54.77092864399995],[-36.27306067599994,-54.756605726999965],[-36.28343665299994,-54.758477471999846],[-36.298817511999886,-54.74358489399989],[-36.294992641999954,-54.72844817499989],[-36.30382239499991,-54.71103281],[-36.31232662699995,-54.69036223799999],[-36.346424933999856,-54.65422942499987],[-36.42174231699991,-54.59335702899995],[-36.43565833199992,-54.585870049999976],[-36.448475714999944,-54.58489348799982],[-36.46446692599994,-54.58171965899985],[-36.47801673099991,-54.57634856599998],[-36.48375403599988,-54.568536065999986],[-36.48045813699994,-54.557549737999935],[-36.46629798099991,-54.54534270599996],[-36.463286912999905,-54.537530205999964],[-36.47443600199992,-54.52385833099984],[-36.49901282499985,-54.51051197699992],[-36.52529863199996,-54.50058359199992],[-36.541818813999924,-54.49651458099996],[-36.570139126999976,-54.49667734200001],[-36.58067786399994,-54.499607028999854],[-36.60081946499989,-54.51376718499996],[-36.61465410099987,-54.51604583099985],[-36.62913977799994,-54.51490650799982],[-36.64146887899997,-54.510837497999944],[-36.65851803299992,-54.498793226999844],[-36.670033331999946,-54.48723723799982],[-36.684315558999856,-54.476983330999886],[-36.78551184799994,-54.448663018999845],[-36.792632615999906,-54.448337498],[-36.80190995999993,-54.44931405999998],[-36.80996660099987,-54.44898853999987],[-36.81338456899988,-54.44500090899989],[-36.81224524599986,-54.440524998],[-36.80724036399991,-54.42929452899992],[-36.8059789699999,-54.4276669249999],[-36.805897589999915,-54.42262135199996],[-36.80044511599988,-54.41529713299995],[-36.79906165299991,-54.41090260199988],[-36.80028235599991,-54.40325286299994],[-36.8033748039999,-54.402764580999865],[-36.807932094999956,-54.40374114399993],[-36.81338456899988,-54.40097421699988],[-36.828236456999946,-54.39006926899999],[-36.84727942599994,-54.383558851999815],[-36.86815344999991,-54.3805477839999],[-36.88849850199992,-54.37981536299996],[-36.88101152299993,-54.37297942499995],[-36.90147864499991,-54.366794528999975],[-36.89565995999993,-54.356622002999934],[-36.88613847599996,-54.351983331],[-36.87413489499994,-54.35125090899997],[-36.860503709999875,-54.352634372999866],[-36.88451087099992,-54.336358330999836],[-36.92357337099989,-54.33570728999988],[-37.00145423099988,-54.34579843499985],[-37.01447506399995,-54.34343840899998],[-37.05296790299985,-54.33123137799991],[-37.073068813999896,-54.321709893999916],[-37.08242753799993,-54.31568775799991],[-37.08649654899989,-54.31161874799986],[-37.08568274599989,-54.30478281000002],[-37.08116614499991,-54.295505466999884],[-37.08023027299993,-54.287286065999886],[-37.0899145169999,-54.28362395599993],[-37.103016730999855,-54.2811825499999],[-37.118967251999976,-54.2751604149998],[-37.13426673099994,-54.267510674999954],[-37.145415818999936,-54.260023695999806],[-37.15339107999989,-54.25750090899988],[-37.17227128799993,-54.261651299999826],[-37.182972785999965,-54.260023695999806],[-37.200062628999916,-54.25318775799997],[-37.22362219999985,-54.24944426899994],[-37.24156653599991,-54.250420830999914],[-37.270375128999916,-54.26067473799985],[-37.33116614499997,-54.2647437479999],[-37.350168423999946,-54.26881275799995],[-37.36827551999997,-54.277439059999956],[-37.37425696499989,-54.270440362999885],[-37.38255774599986,-54.26653411299998],[-37.39220130099994,-54.2660458309999],[-37.402455206999946,-54.269952080999985],[-37.41368567599997,-54.25530364399989],[-37.40965735599991,-54.24846770599987],[-37.334584113999966,-54.22966887799983],[-37.319203253999916,-54.229099216999856],[-37.338490363999966,-54.21379973799989],[-37.39439856699994,-54.20094166499996],[-37.40925045499989,-54.18181731599989],[-37.36754309799994,-54.182386976999865],[-37.321197068999965,-54.17376067499986],[-37.23729407499988,-54.147719007999974],[-37.26211503799993,-54.141045830999836],[-37.3534236319999,-54.14120859199989],[-37.3880916009999,-54.147719007999974],[-37.40078691299993,-54.14511484199998],[-37.42430579299992,-54.13551197699991],[-37.43626868399994,-54.13347747199988],[-37.52904212099986,-54.13347747199988],[-37.55321204299989,-54.13762786299983],[-37.56200110599994,-54.146905205999964],[-37.55516516799992,-54.15642669099987],[-37.53270423099991,-54.161309502999934],[-37.55113684799994,-54.16594817499987],[-37.62970943899995,-54.175469658999866],[-37.668771938999924,-54.17310963299982],[-37.68980872299997,-54.174411716999906],[-37.68504798099988,-54.17001718499992],[-37.68040930899994,-54.164239190999865],[-37.67613684799991,-54.161309502999934],[-37.68944251199986,-54.15618254999983],[-37.72451738199993,-54.13347747199988],[-37.68814042899996,-54.12029387799993],[-37.67007402299993,-54.11126067499992],[-37.65562903599988,-54.09929778399998],[-37.67174231699994,-54.09612395599992],[-37.70628821499986,-54.098321221999825],[-37.72451738199993,-54.092461846999875],[-37.66128495999996,-54.07317473799984],[-37.63158118399994,-54.059014581],[-37.61465410099996,-54.03785572699991],[-37.73448645699992,-54.03785572699991],[-37.79283606699991,-54.04404062299988],[-37.807850714999944,-54.041192315999844],[-37.82917232999992,-54.032159112999835],[-37.84064693899995,-54.03045012799992],[-37.89659583199992,-54.04322682099987],[-37.927723761999914,-54.04558684699992],[-37.95360266799992,-54.03411223799988],[-37.973215298999975,-54.02809010199987],[-38.012277798999946,-54.05201588299984],[-38.032378709999875,-54.05144622199987],[-38.029896613999966,-54.04192473799987],[-38.02521725199995,-54.03289153399995],[-38.01732337099986,-54.02613697699983],[-38.00511633999989,-54.02361419099999],[-38.0099177729999,-54.01572030999993],[-38.01455644399991,-54.01116301899989],[-38.02139238199993,-54.00945403399997],[-38.032378709999875,-54.00994231599987],[-38.01585852799991,-54.00408294099992],[-37.964182094999956,-54.00367603999992],[-37.91246497299994,-53.99098072699995],[-37.891835089999915,-53.98943450299991],[-37.870432094999956,-53.99260833099997],[-37.83726966099994,-54.00676848799999],[-37.82013912699989,-54.00994231599987],[-37.79893958199992,-54.007907809999935],[-37.77684485599991,-54.00237395599983],[-37.755848761999886,-53.993747654],[-37.738189256999874,-53.982598565999986],[-37.73827063699986,-53.973239841999956],[-37.71666419199994,-53.972426039999945],[-37.6887914699999,-53.97682057099984],[-37.669911261999886,-53.982598565999986],[-37.67910722599993,-53.984958591999856],[-37.68423417899996,-53.98796965899986],[-37.68716386599988,-53.993747654]]]]}},{type:"Feature",id:"SLB",properties:{name:"Solomon Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[168.81861412900017,-12.284926039999931],[168.8024194670002,-12.290622653999918],[168.79786217500018,-12.28191497199984],[168.80567467500023,-12.27410247199984],[168.81226647200006,-12.266289971999853],[168.82292728000007,-12.26726653399983],[168.8258569670002,-12.281508070999834],[168.81861412900017,-12.284926039999931]]],[[[166.96322675900015,-11.650323174999897],[166.94564863400004,-11.653252862999821],[166.93897545700017,-11.642022393999824],[166.94434655000012,-11.625420830999857],[166.95769290500002,-11.61256275799984],[166.97584069100006,-11.611016533999887],[166.98487389400023,-11.614353122999916],[166.9855249360002,-11.623304945999848],[166.97966556100002,-11.638604424999912],[166.96322675900015,-11.650323174999897]]],[[[166.86988366000006,-11.588962497999901],[166.89344522899998,-11.59378398099986],[166.93555950900023,-11.608813002999824],[166.923919831,-11.640971530999835],[166.9251969730001,-11.65489905399987],[166.92401641500012,-11.674288607999856],[166.9784481830002,-11.670487411999844],[166.984148859,-11.7098633089999],[166.90927736200015,-11.714936541999819],[166.8882411750001,-11.717422094999861],[166.87152398800006,-11.716865791999837],[166.84302083900016,-11.713315820999838],[166.82810604100004,-11.693353071999852],[166.81617272200018,-11.682305596999896],[166.80250084700006,-11.67717864399988],[166.7970751820001,-11.66979331799989],[166.7796789080002,-11.648617999999857],[166.76724825700003,-11.633490164999884],[166.767203404,-11.617119510999842],[166.77522526700002,-11.60679323099987],[166.78512530300006,-11.60131600199982],[166.8055319690002,-11.591568312999854],[166.82410927200013,-11.591526288999844],[166.8470132150002,-11.592680611999867],[166.86988366000006,-11.588962497999901]]],[[[160.05241946700008,-11.495212497999887],[160.06348717500012,-11.496026299999897],[160.08716881600006,-11.494805596999882],[160.09669030000012,-11.49920012799987],[160.1167098320001,-11.516696872999916],[160.1373804050002,-11.52988046699987],[160.19336998800023,-11.556329033999859],[160.22299238399998,-11.578383070999848],[160.2584741550002,-11.595472914999888],[160.28744550899998,-11.617364190999837],[160.3081160820001,-11.626641533999873],[160.35279381600006,-11.639825127999828],[160.39389082100016,-11.657810153999861],[160.50367272200006,-11.736016533999873],[160.56446373800006,-11.77304452899989],[160.58220462300008,-11.794854424999855],[160.55884850400017,-11.811211846999868],[160.54688561300023,-11.811293226999851],[160.53809655000006,-11.808363539999917],[160.52963300900004,-11.80681731599988],[160.51783287900017,-11.811211846999868],[160.512461785,-11.81812916499986],[160.50456790500002,-11.838311455999886],[160.497325066,-11.84587981599985],[160.48316491000017,-11.844984632999854],[160.470957879,-11.83171965899983],[160.46013431100013,-11.815036716999884],[160.44955488400015,-11.804375908999845],[160.43433678500017,-11.810967705999829],[160.42847741000006,-11.811211846999868],[160.4226180350001,-11.808526299999883],[160.38526451900023,-11.783786716999913],[160.38005618600008,-11.777032158999873],[160.36890709700006,-11.734551690999908],[160.36011803500017,-11.716892184999892],[160.339691602,-11.701348565999893],[160.32935631600017,-11.698337497999887],[160.3081160820001,-11.697035414999888],[160.298106316,-11.69451262799987],[160.28581790500007,-11.686944268999824],[160.28337649800014,-11.680840752999842],[160.28516686300011,-11.67473723799985],[160.28516686300011,-11.667168877999899],[160.28394616000017,-11.657321872999873],[160.2848413420002,-11.649509372999887],[160.28207441500004,-11.641859632999854],[160.27076256600006,-11.632989190999822],[160.26246178500017,-11.629164320999806],[160.25180097700004,-11.626153252999885],[160.24057050900004,-11.62468840899983],[160.23047936300017,-11.626153252999885],[160.22584069100006,-11.631036065999865],[160.21631920700023,-11.648044528999918],[160.20997155000012,-11.65349700299987],[160.2010197270001,-11.655205987999864],[160.189300977,-11.65536874799993],[160.16846764400012,-11.65349700299987],[160.15121504000004,-11.64714934699984],[160.11247806100008,-11.626071872999901],[160.09262129000015,-11.619398695999863],[160.09766686300011,-11.609063408999845],[160.1007593110002,-11.605075778999876],[160.08253014400012,-11.592217705999843],[160.06641686300023,-11.593519789999931],[160.05274498800011,-11.60076262799987],[160.04135175900004,-11.605075778999876],[160.02369225400005,-11.600681247999887],[160.01059004000015,-11.58945077899989],[159.98194420700005,-11.554294528999918],[159.97779381600006,-11.540215752999885],[159.97291100400017,-11.533379815999865],[159.9655054050002,-11.525811455999914],[159.96338951900006,-11.520603122999916],[159.96924889400012,-11.503187757999854],[159.97608483200023,-11.491387627999885],[159.99610436300011,-11.473077080999829],[160.00326582100016,-11.46111419099988],[160.00668379000015,-11.465101820999863],[160.01010175900015,-11.466485283999845],[160.01368248800023,-11.467217705999872],[160.01758873800023,-11.468519789999874],[160.0319930350001,-11.483575127999885],[160.04175866000006,-11.490492445999891],[160.05241946700008,-11.495212497999887]]],[[[159.85108483200005,-11.307712497999887],[159.85320071700008,-11.32447682099982],[159.82992597700016,-11.315362237999821],[159.81055748800023,-11.310479424999855],[159.79330488400015,-11.302422783999901],[159.77735436300023,-11.283623955999857],[159.78532962300008,-11.282810153999847],[159.79200280000023,-11.28394947699988],[159.79835045700005,-11.28655364399988],[159.80469811300011,-11.29045989399988],[159.82227623800023,-11.292657158999873],[159.83936608200005,-11.297621351999823],[159.85108483200005,-11.307712497999887]]],[[[166.56471155100022,-11.259934441999818],[166.5572516080001,-11.283643657999889],[166.534163355,-11.308094010999838],[166.52652088000016,-11.308895799999917],[166.5164519520001,-11.311279307999868],[166.50882668000023,-11.30931908199986],[166.50048185500023,-11.304603408999853],[166.5002067200002,-11.297913562999852],[166.50076424400007,-11.288876229999858],[166.50684756500007,-11.281403898999855],[166.51031904500005,-11.274680456999903],[166.50912724900004,-11.260914753999842],[166.49496605,-11.269270890999863],[166.48344922400022,-11.278662434999859],[166.47769368900006,-11.269983340999843],[166.47975988900023,-11.247421582999849],[166.49426631500003,-11.229276881999837],[166.5118556700002,-11.213424037999829],[166.5251094170001,-11.209051679999902],[166.54042407400007,-11.214563966999904],[166.55575985900012,-11.22679070299992],[166.56390006600012,-11.241026076999859],[166.56471155100022,-11.259934441999818]]],[[[166.06117432800002,-10.65403259199988],[166.07813561300006,-10.663018487999878],[166.08090254000004,-10.667657158999901],[166.08497155000012,-10.672051690999893],[166.1146698910002,-10.668155578999844],[166.14275731800015,-10.669251218999904],[166.14790458600018,-10.69404640199987],[166.13701523800015,-10.705320459999925],[166.13298587300008,-10.724786065999893],[166.0956876330001,-10.73923004199986],[166.08371995500002,-10.749836809999849],[166.06538683300002,-10.758285702999927],[166.05450146000007,-10.766732049999874],[166.03500410200016,-10.765394789999888],[166.02816816500015,-10.767266533999859],[166.00237615100005,-10.75721573999985],[165.9897834120002,-10.766809691999896],[165.98080488400004,-10.773370049999855],[165.96957441499998,-10.770196221999882],[165.93421965400015,-10.775741309999844],[165.8918049280002,-10.824105366999916],[165.86196457200006,-10.868540143999851],[165.84935825199997,-10.856151121999815],[165.85239241600001,-10.82861824499983],[165.84041774100004,-10.814567534999895],[165.82836962200022,-10.812300544999815],[165.80008040300018,-10.837543283999864],[165.77023532799998,-10.835823172999909],[165.7564743410001,-10.812161111999913],[165.75362772000008,-10.772741720999903],[165.7530303880002,-10.751887720999903],[165.77215005400015,-10.738498526999905],[165.7811709800002,-10.724901682999857],[165.792634053,-10.709136707999932],[165.8018129080002,-10.708588093999836],[165.79741707000008,-10.74306464199988],[165.8121698800002,-10.759318133999898],[165.8219498540001,-10.762164557999867],[165.82709388200007,-10.749212321999877],[165.8282100970001,-10.733987447999866],[165.8312182980002,-10.70765121999986],[165.84784080400001,-10.684607855999886],[165.87806236100008,-10.656846509999824],[165.92334342200004,-10.65353927899983],[165.99452654000018,-10.66113948599984],[166.0266637460002,-10.647016063999928],[166.06117432800002,-10.65403259199988]]],[[[165.7452905610002,-10.421644789999931],[165.73560631600006,-10.424574476999865],[165.72779381600006,-10.422458591999856],[165.72291100400017,-10.41285572699988],[165.72380618600008,-10.401543877999899],[165.7262475920002,-10.394626559999892],[165.73218834700006,-10.389906507999882],[165.74634850400017,-10.393487237999864],[165.75505618600008,-10.406914971999853],[165.75294030000023,-10.41676197699988],[165.7452905610002,-10.421644789999931]]],[[[166.24252363400004,-10.22079843499992],[166.24244225400005,-10.26897551899988],[166.24903405000012,-10.266696872999901],[166.25245201900023,-10.264906507999825],[166.26710045700023,-10.26425546699987],[166.27995853000007,-10.273044528999932],[166.27003014400006,-10.291924737999864],[166.25147545700005,-10.30917734199987],[166.23731530000023,-10.311130466999913],[166.236094597,-10.296563408999887],[166.23804772200018,-10.283461195999834],[166.23145592500012,-10.282891533999859],[166.22868899800002,-10.27605559699984],[166.23585045700005,-10.255303643999838],[166.23926842500006,-10.234307549999897],[166.23853600400017,-10.215020440999865],[166.24252363400004,-10.22079843499992]]],[[[161.77051842500023,-10.278415622999887],[161.747813347,-10.289808851999851],[161.74073326900023,-10.288506768999852],[161.73698978000002,-10.284600518999866],[161.73666425899998,-10.279229424999897],[161.7409774100001,-10.272556247999844],[161.74586022200018,-10.26327890399989],[161.74195397200018,-10.259047132999868],[161.73503665500007,-10.257419528999847],[161.7306421230002,-10.25562916499986],[161.71729576900006,-10.231377862999878],[161.71705162900005,-10.218194268999838],[161.7306421230002,-10.206719658999887],[161.75245201900023,-10.224216403999932],[161.76880944100006,-10.252211195999863],[161.77051842500023,-10.278415622999887]]],[[[161.33570397200018,-10.20867278399983],[161.34083092500012,-10.214043877999885],[161.39600670700023,-10.204034112999906],[161.50220787900017,-10.250746351999808],[161.6095483730002,-10.3168270809999],[161.66863040500007,-10.364922783999873],[161.68726647200006,-10.357598565999865],[161.70020592500023,-10.365492445999848],[161.72038821700008,-10.396091403999861],[161.73511803500006,-10.405368747999901],[161.75082441500004,-10.406996351999837],[161.76587975400005,-10.40585702899989],[161.77849368600013,-10.406508070999848],[161.79102623800011,-10.41179778399983],[161.82056725400017,-10.429782809999864],[161.82618248800006,-10.437188408999845],[161.83570397200018,-10.446954033999887],[161.8572697270001,-10.447930596999868],[161.8805444670002,-10.442803643999852],[161.8951929050002,-10.433770440999837],[161.93246504,-10.445977471999825],[161.94947350400005,-10.446954033999887],[161.9635522800002,-10.440606377999856],[161.97234134200008,-10.44850025799984],[161.98707116000006,-10.4672177059999],[161.9975692070001,-10.47478606599985],[162.0092879570001,-10.478448174999897],[162.04184004000015,-10.47478606599985],[162.05884850400005,-10.478285414999931],[162.06397545700023,-10.475844007999811],[162.0685327480002,-10.454766533999873],[162.07520592500023,-10.449639580999872],[162.08423912900017,-10.447686455999829],[162.09376061300023,-10.447523695999863],[162.11361738400015,-10.45647551899988],[162.14039147200018,-10.493747653999861],[162.15170332100016,-10.502129815999822],[162.16309655000012,-10.508721612999892],[162.1713973320001,-10.524021091999856],[162.19174238399998,-10.577894789999888],[162.19629967500012,-10.584649346999825],[162.20362389400023,-10.590427341999884],[162.210215691,-10.592461846999825],[162.21534264400012,-10.596774997999916],[162.22046959700006,-10.629571221999825],[162.22885175899998,-10.64462655999985],[162.24195397200006,-10.656182549999869],[162.27751712300002,-10.67962004999984],[162.28777103000007,-10.691989841999884],[162.29175866000006,-10.707696221999853],[162.29200280000006,-10.764743747999844],[162.288910352,-10.769626559999907],[162.28256269600016,-10.771742445999834],[162.27523847700016,-10.776950778999918],[162.26880944100006,-10.783379815999837],[162.26498457100004,-10.789483330999829],[162.27173912900017,-10.814385674999855],[162.30347741000006,-10.819431247999887],[162.34343509200008,-10.818047783999901],[162.374847852,-10.823663018999909],[162.38550866000006,-10.818780205999843],[162.39258873800011,-10.826918226999851],[162.39161217500012,-10.838799737999906],[162.37826582100004,-10.844821872999901],[162.36500084700018,-10.842543226999837],[162.35328209700018,-10.838962497999873],[162.34115644599999,-10.838148695999863],[162.32715905000023,-10.844821872999901],[162.31967207100016,-10.840264580999872],[162.3092554050002,-10.838474216999884],[162.29232832099999,-10.837985934999892],[162.27865644600016,-10.835544528999861],[162.20704186300023,-10.808038018999824],[162.18392988399998,-10.810967705999843],[162.16195722700016,-10.831149997999873],[162.1507267590001,-10.825127862999864],[162.13803144600004,-10.823174737999821],[162.1108504570001,-10.823663018999909],[162.10108483200017,-10.821465752999828],[162.0939233730002,-10.815850518999824],[162.08765709700018,-10.809340101999823],[162.08008873800011,-10.803806247999901],[162.03589928500006,-10.786553643999895],[162.01986738400015,-10.773370049999855],[162.01124108200023,-10.769626559999907],[161.99854576900012,-10.77166106599985],[161.96941165500002,-10.781345309999892],[161.9601343110002,-10.77955494599982],[161.95069420700005,-10.774102471999882],[161.90886478000007,-10.762139580999843],[161.9103296230002,-10.764092705999886],[161.90463300900004,-10.766696872999887],[161.8917749360002,-10.769626559999907],[161.88526451900012,-10.767347914999931],[161.87501061300006,-10.757582289999903],[161.87134850400005,-10.755303643999838],[161.8615014980002,-10.752618096999853],[161.85482832100016,-10.745700778999847],[161.8468530610002,-10.728122653999918],[161.84131920700005,-10.742771091999927],[161.84050540500007,-10.749200127999842],[161.81861412900005,-10.733168226999851],[161.80697675900004,-10.730075778999861],[161.79216556100008,-10.734958591999842],[161.78956139400023,-10.72869231599988],[161.78223717500023,-10.720391533999901],[161.77849368600013,-10.71502044099985],[161.76921634200008,-10.718845309999864],[161.76099694100017,-10.712334893999866],[161.75635826900023,-10.70208098799985],[161.75806725400005,-10.694512627999899],[161.7487085300002,-10.682793877999899],[161.73682701900023,-10.681817315999837],[161.72348066500015,-10.683689059999892],[161.710215691,-10.680271091999884],[161.702972852,-10.670668226999823],[161.70020592500023,-10.659356377999842],[161.69483483200005,-10.64999765399989],[161.67945397200006,-10.646172783999887],[161.67432701900012,-10.63990650799984],[161.66114342500006,-10.627618096999882],[161.64747155000023,-10.618584893999866],[161.64136803500006,-10.622247002999828],[161.63656660200016,-10.63103606599988],[161.62582441500015,-10.624444268999824],[161.60718834700006,-10.605726820999848],[161.60743248800011,-10.597263278999904],[161.60303795700023,-10.591241143999895],[161.59571373800011,-10.587497653999861],[161.586680535,-10.584649346999825],[161.58871504000004,-10.577080987999878],[161.586680535,-10.570000908999901],[161.58130944100006,-10.563164971999896],[161.57300866000017,-10.556817315999865],[161.5647078790001,-10.566664320999877],[161.55274498800017,-10.570000908999901],[161.5387475920002,-10.568454684999864],[161.52466881600006,-10.564222914999945],[161.545176629,-10.502129815999822],[161.53419030000023,-10.495212497999916],[161.53296959700006,-10.48560963299984],[161.53345787900005,-10.475030205999886],[161.52833092500012,-10.46453215899983],[161.52214603000007,-10.463067315999865],[161.50196373800011,-10.46746184699984],[161.4904077480002,-10.467950127999828],[161.49968509200002,-10.456312757999825],[161.50749759200002,-10.440036716999884],[161.50668379000004,-10.425713799999897],[161.4904077480002,-10.420179945999877],[161.50066165500013,-10.395114841999884],[161.50749759200002,-10.383477471999882],[161.51465905000006,-10.378594658999901],[161.52003014400023,-10.376397393999824],[161.51807701900006,-10.371677341999899],[161.510996941,-10.364922783999873],[161.5055444670002,-10.363539320999806],[161.48975670700023,-10.365411065999865],[161.48365319100006,-10.364922783999873],[161.47681725400005,-10.359551690999822],[161.47234134200008,-10.352715752999899],[161.46599368600002,-10.34693775799984],[161.45264733200023,-10.344496351999808],[161.4254663420002,-10.344496351999808],[161.41374759200002,-10.341566664999874],[161.40919030000006,-10.334242445999877],[161.40284264400023,-10.330010674999855],[161.3888452480002,-10.329196872999844],[161.36752363400004,-10.330824476999865],[161.36133873800023,-10.333754164999888],[161.35694420700005,-10.338474216999884],[161.35173587300008,-10.342543226999851],[161.34400475400017,-10.344496351999808],[161.33692467500012,-10.343438408999845],[161.33008873800011,-10.338799737999821],[161.30388431100008,-10.335381768999909],[161.29314212300002,-10.33123137799987],[161.28492272200006,-10.323907158999859],[161.2807723320001,-10.308851820999848],[161.28939863400004,-10.287041924999897],[161.28492272200006,-10.276136976999823],[161.289805535,-10.271416924999912],[161.29224694100006,-10.26816171699987],[161.29444420700023,-10.265394789999903],[161.29932701900012,-10.263116143999838],[161.29232832100004,-10.247491143999852],[161.29184004000015,-10.22576262799987],[161.30005944100006,-10.207126559999892],[161.31910241000006,-10.20045338299984],[161.32447350400017,-10.20330169099988],[161.33008873800011,-10.205336195999806],[161.33570397200018,-10.20867278399983]]],[[[167.19336998800006,-9.893731377999828],[167.18531334700006,-9.894626559999907],[167.1733504570001,-9.886407158999901],[167.16578209700018,-9.868340752999885],[167.17017662900005,-9.859144789999917],[167.1808374360002,-9.860121351999808],[167.19223066500015,-9.872979424999826],[167.1959741550002,-9.885918877999828],[167.19336998800006,-9.893731377999828]]],[[[167.10824629,-9.80462004999984],[167.10401451900017,-9.806573174999883],[167.09180748800011,-9.803317966999842],[167.10450280000023,-9.801853122999873],[167.10824629,-9.80462004999984]]],[[[161.97779381600017,-9.686618747999844],[161.97852623800023,-9.694756768999866],[161.97681725400005,-9.699965101999865],[161.9708764980002,-9.70696379999984],[161.96908613400004,-9.714532158999887],[161.96753991000017,-9.71770598799985],[161.9635522800002,-9.720635674999869],[161.96973717500023,-9.734958591999856],[161.98243248800011,-9.817559502999842],[161.98243248800011,-9.834161065999893],[161.97779381600017,-9.851006768999895],[161.96363366000017,-9.839288018999824],[161.95004316500004,-9.816827080999914],[161.9401961600001,-9.790134372999887],[161.92847741,-9.72014739399988],[161.92994225400017,-9.70696379999984],[161.9401961600001,-9.692152601999865],[161.95215905000012,-9.690362237999878],[161.96509850400005,-9.691827080999843],[161.97779381600017,-9.686618747999844]]],[[[161.42628014400023,-9.411716403999861],[161.45630944100017,-9.45378997199984],[161.48170006600012,-9.504652601999865],[161.49390709700018,-9.518975518999852],[161.49927819100006,-9.527276299999826],[161.50668379000004,-9.549493096999882],[161.51465905000006,-9.560235283999887],[161.52426191500015,-9.570489190999822],[161.53207441500015,-9.58147551899988],[161.545176629,-9.604668877999913],[161.55193118600008,-9.622979424999869],[161.55396569100017,-9.640313408999859],[161.552500847,-9.676364841999913],[161.55591881600006,-9.693047783999859],[161.57048587300008,-9.72633228999986],[161.57300866000017,-9.748630466999899],[161.5682072270001,-9.771172783999873],[161.55860436300011,-9.788995049999855],[161.54916425899998,-9.792575778999918],[161.545176629,-9.772230726999837],[161.50407962300014,-9.727471612999892],[161.49463951900012,-9.70305754999984],[161.48829186300006,-9.692071221999882],[161.47738691499998,-9.686618747999844],[161.46648196700014,-9.689873955999886],[161.45932050899998,-9.717868747999916],[161.4489038420002,-9.734958591999856],[161.43262780000023,-9.717950127999899],[161.41504967500012,-9.694594007999811],[161.40072675900015,-9.670017184999892],[161.394786004,-9.649021091999856],[161.394786004,-9.587823174999912],[161.394786004,-9.529473565999822],[161.39234459700018,-9.507582289999874],[161.39291425900015,-9.494886976999823],[161.40919030000006,-9.465997002999899],[161.406097852,-9.449965101999823],[161.398203972,-9.433526299999826],[161.394786004,-9.412774346999825],[161.39039147200006,-9.414727471999868],[161.37924238400004,-9.417657158999887],[161.37501061300011,-9.419610283999845],[161.37501061300011,-9.398695570999877],[161.368418816,-9.379571221999896],[161.34701582100016,-9.34392669099985],[161.3543400400001,-9.338555596999896],[161.35914147200018,-9.339288018999838],[161.36752363400004,-9.351332289999931],[161.38086998800023,-9.36516692499984],[161.4152124360002,-9.386000257999825],[161.42221113400015,-9.395765882999854],[161.42628014400023,-9.411716403999861]]],[[[159.93970787900017,-9.432875257999868],[159.96094811300023,-9.434665622999859],[159.99984785200004,-9.433282158999873],[160.01026451900023,-9.431817315999822],[160.01978600400005,-9.427666924999869],[160.02800540500002,-9.422133070999863],[160.03467858200005,-9.416192315999837],[160.04346764400023,-9.414157809999892],[160.0561629570001,-9.417413018999852],[160.07911217500012,-9.426446221999853],[160.09913170700017,-9.431898695999806],[160.10987389400006,-9.433526299999826],[160.1206160820001,-9.433282158999873],[160.13038170700023,-9.42929452899989],[160.14795983200017,-9.415704033999845],[160.1577254570001,-9.412774346999825],[160.17904707100016,-9.414971612999821],[160.21119225400005,-9.424248955999872],[160.23047936300017,-9.426446221999853],[160.23715254000004,-9.424574476999894],[160.24561608200017,-9.415704033999845],[160.25098717500012,-9.412774346999825],[160.25652103000002,-9.413262627999899],[160.26514733200023,-9.418715101999851],[160.27076256600006,-9.419610283999845],[160.34595787900005,-9.419610283999845],[160.34986412900005,-9.418552341999884],[160.36011803500017,-9.413506768999852],[160.3663843110002,-9.412774346999825],[160.36793053500006,-9.414971612999821],[160.37232506600006,-9.419610283999845],[160.37818444100017,-9.424248955999872],[160.39844811300011,-9.432875257999868],[160.41920006600017,-9.461114190999837],[160.45932050900004,-9.475030205999914],[160.47559655000023,-9.493259372999887],[160.50367272200006,-9.536309502999842],[160.54078209700006,-9.531426690999865],[160.58643639400006,-9.551364841999856],[160.62842858200005,-9.582289320999806],[160.65447024800002,-9.610772393999895],[160.66146894600004,-9.627618096999896],[160.66570071700002,-9.648125908999859],[160.66797936300011,-9.690036716999856],[160.67302493600008,-9.698011976999823],[160.68392988400004,-9.698337497999844],[160.699961785,-9.693454684999864],[160.71265709700018,-9.695407809999907],[160.72299238399998,-9.700453382999854],[160.74382571700008,-9.713962497999916],[160.77711022200006,-9.722832940999865],[160.78541100400005,-9.727471612999892],[160.78785241000017,-9.737562757999854],[160.7869572270001,-9.751560153999918],[160.78956139400006,-9.76384856599988],[160.8020939460001,-9.769138278999847],[160.80551191499998,-9.774021091999913],[160.80648847700016,-9.784926039999888],[160.8058374360002,-9.806329033999845],[160.80827884200008,-9.816013278999904],[160.8136499360002,-9.822035414999903],[160.82032311300017,-9.82789478999986],[160.82634524800008,-9.837334893999866],[160.82471764400023,-9.867282809999935],[160.7985132170002,-9.884047132999854],[160.7233179050002,-9.899509372999873],[160.68425540500007,-9.911879164999917],[160.66293379,-9.922946872999859],[160.64478600400017,-9.937107028999876],[160.572520379,-9.919203382999825],[160.50863691499998,-9.889255466999856],[160.48682701900023,-9.885186455999886],[160.44581139400023,-9.892673434999864],[160.43287194100006,-9.889092705999886],[160.42416425900015,-9.880140882999868],[160.41675866000006,-9.869073174999826],[160.40796959700018,-9.858493747999873],[160.40365644599999,-9.857517184999892],[160.39193769599999,-9.859307549999883],[160.38754316500004,-9.858493747999873],[160.385020379,-9.854913018999895],[160.37842858200023,-9.842054945999877],[160.3737899100001,-9.837334893999866],[160.34424889400023,-9.82561614399988],[160.33594811300023,-9.820245049999826],[160.32032311300006,-9.81511809699991],[160.208262566,-9.810153903999861],[160.12387129000004,-9.82317473799985],[160.07911217500012,-9.82382577899989],[160.05152428500017,-9.820489190999865],[160.04037519600016,-9.820570570999848],[160.03126061300006,-9.82382577899989],[160.0245874360002,-9.820245049999826],[160.00326582100016,-9.816827080999914],[159.98113040500007,-9.810967705999872],[159.95899498800011,-9.809340101999851],[159.937266472,-9.805596612999821],[159.90308678500006,-9.787855726999823],[159.88721764400012,-9.78281015399989],[159.8678491550002,-9.785739841999899],[159.8518172540001,-9.792738539999888],[159.83562259200002,-9.793877862999835],[159.81495201900023,-9.778985283999873],[159.76872806100002,-9.732191664999903],[159.75074303500017,-9.720635674999869],[159.723399285,-9.70696379999984],[159.72234134200008,-9.702813408999901],[159.7239689460001,-9.691094658999901],[159.723399285,-9.686618747999844],[159.71941165500002,-9.682386976999837],[159.71111087300008,-9.680271091999913],[159.70590254000015,-9.676364841999913],[159.70215905000023,-9.667575778999861],[159.70118248800023,-9.657403252999899],[159.69906660200016,-9.64910247199984],[159.69206790500007,-9.645603122999844],[159.67530358200023,-9.643243096999882],[159.67212975400017,-9.636976820999834],[159.67481530000023,-9.628106377999885],[159.67497806100013,-9.617608330999829],[159.66570071700008,-9.595147393999824],[159.65398196700008,-9.574802341999913],[159.63965905000012,-9.556410414999874],[159.62338300900015,-9.53972747199984],[159.60840905000012,-9.528903903999847],[159.60181725400005,-9.521905205999872],[159.59913170700005,-9.512383721999868],[159.61215254000015,-9.505791924999897],[159.62175540500002,-9.49822356599985],[159.62720787900017,-9.48796965899983],[159.62525475400005,-9.477634372999901],[159.61109459700012,-9.457126559999864],[159.606700066,-9.447523695999877],[159.60629316500004,-9.435804945999806],[159.61353600400005,-9.409356377999913],[159.6124780610002,-9.398858330999843],[159.6077580090001,-9.385511976999837],[159.606700066,-9.374932549999883],[159.59603925899998,-9.364434502999899],[159.59213300899998,-9.36150481599988],[159.5964461600001,-9.354913018999824],[159.606700066,-9.34392669099985],[159.60954837300008,-9.309828382999854],[159.61597741000017,-9.2953427059999],[159.63062584700018,-9.289239190999822],[159.6461694670002,-9.284763278999847],[159.70899498800023,-9.247735283999916],[159.74366295700023,-9.259535414999888],[159.77898196700008,-9.28199635199988],[159.83269290500002,-9.330254815999822],[159.87330162900005,-9.359470309999864],[159.87973066500004,-9.368096612999864],[159.88412519600004,-9.382419528999847],[159.89470462300008,-9.39959075299987],[159.90821373800023,-9.415622653999861],[159.9213973320001,-9.426446221999853],[159.93970787900017,-9.432875257999868]]],[[[159.83269290500002,-9.10369231599985],[159.840098504,-9.122735283999845],[159.84473717500023,-9.145440362999892],[159.84253991000006,-9.164646091999842],[159.828868035,-9.172621351999808],[159.81470787900017,-9.16619231599988],[159.80616295700017,-9.150323174999855],[159.80445397200006,-9.13014088299984],[159.81153405000012,-9.111097914999931],[159.817637566,-9.109795830999843],[159.82252037900017,-9.109958591999899],[159.82732181100008,-9.108656507999811],[159.83269290500002,-9.10369231599985]]],[[[160.40202884200008,-9.14413827899989],[160.38721764400012,-9.170830987999821],[160.3737899100001,-9.179375908999845],[160.3663843110002,-9.186211846999853],[160.34498131600017,-9.179294528999861],[160.32471764400023,-9.167413018999895],[160.30494225400005,-9.159844658999859],[160.28516686300011,-9.165785414999874],[160.28931725400005,-9.177992445999863],[160.27442467500012,-9.186455987999892],[160.2514754570001,-9.191338799999869],[160.23047936300017,-9.193047783999873],[160.23536217500023,-9.18515390399989],[160.234629754,-9.178806247999873],[160.22828209700018,-9.174493096999868],[160.2161564460001,-9.172621351999808],[160.22193444100006,-9.162774346999882],[160.23047936300017,-9.158868096999882],[160.2540796230002,-9.158949476999865],[160.26514733200023,-9.155694268999824],[160.27662194100017,-9.147881768999824],[160.28598066500004,-9.138929945999806],[160.29200280000012,-9.131605726999894],[160.30469811300011,-9.082614841999927],[160.31495201900012,-9.06170012799987],[160.332286004,-9.063409112999878],[160.35922285200016,-9.110935153999876],[160.37012780000023,-9.117933851999851],[160.38526451900023,-9.11842213299984],[160.39722741000017,-9.120212497999916],[160.40642337300002,-9.124444268999852],[160.41423587300002,-9.131605726999894],[160.40202884200008,-9.14413827899989]]],[[[159.2171330090001,-9.075127862999864],[159.22250410200004,-9.079685153999904],[159.23609459700018,-9.07634856599988],[159.23324629000015,-9.101006768999866],[159.21876061300011,-9.11736419099988],[159.17408287900005,-9.138441664999903],[159.17497806100002,-9.111423434999864],[159.17839603000007,-9.092705987999892],[159.19516035200016,-9.056573174999855],[159.205332879,-9.055108330999886],[159.22584069100017,-9.03142669099988],[159.23609459700018,-9.023044528999904],[159.23585045700023,-9.02752044099988],[159.23422285200004,-9.030205987999864],[159.231700066,-9.032647393999895],[159.22925866000017,-9.036065362999892],[159.22925866000017,-9.046075127999885],[159.22738691500004,-9.048597914999903],[159.22925866000017,-9.056573174999855],[159.21949303500006,-9.066176039999931],[159.2171330090001,-9.075127862999864]]],[[[160.15463300900004,-8.994398695999848],[160.17253665500007,-9.002211195999834],[160.1909285820001,-9.000420830999857],[160.20850670700023,-9.002699476999823],[160.22299238399998,-9.023044528999904],[160.23047936300017,-9.023044528999904],[160.24024498800011,-9.006280205999886],[160.2579858730002,-9.009047132999854],[160.27800540500007,-9.023044528999904],[160.2950952480002,-9.0394833309999],[160.30144290500007,-9.061618747999887],[160.29468834700012,-9.08993905999992],[160.28052819100017,-9.115980726999808],[160.26449629,-9.131605726999894],[160.2610783210001,-9.123955987999864],[160.25757897200018,-9.120782158999887],[160.25228925900004,-9.121189059999892],[160.24415123800011,-9.124200127999899],[160.24293053500017,-9.112399997999844],[160.23731530000006,-9.103448174999897],[160.2282007170002,-9.098321221999896],[160.2161564460001,-9.097588799999869],[160.21859785200004,-9.102959893999824],[160.22299238399998,-9.117933851999851],[160.2161564460001,-9.117933851999851],[160.19988040500007,-9.091729424999826],[160.18751061300011,-9.081801039999917],[160.17188561300023,-9.087009372999901],[160.15674889400023,-9.094008070999806],[160.13819420700023,-9.094821872999901],[160.11996504000015,-9.09059010199988],[160.10629316500004,-9.08375416499986],[160.10425866000017,-9.077894789999917],[160.10385175900015,-9.068780205999829],[160.10230553500006,-9.060235283999901],[160.09669030000012,-9.056573174999855],[160.08936608200023,-9.05535247199984],[160.083750847,-9.052015882999811],[160.080332879,-9.04664478999986],[160.07911217500012,-9.0394833309999],[160.08716881600006,-9.037041924999869],[160.10515384200008,-9.035088799999826],[160.12387129000004,-9.02939218499985],[160.13428795700023,-9.015557549999855],[160.14112389400023,-9.023044528999904],[160.14584394600016,-9.015069268999866],[160.14763431100002,-9.008721612999835],[160.1460067070001,-9.002536716999856],[160.14112389400023,-8.994398695999848],[160.14503014400023,-8.99000416499986],[160.147715691,-8.989678643999838],[160.15463300900004,-8.994398695999848]]],[[[159.13363691499998,-8.988376559999935],[159.14039147200006,-9.001885674999912],[159.1419376960001,-9.012383721999882],[159.14437910200004,-9.020928643999895],[159.15430748800011,-9.029229424999883],[159.15935306100008,-9.029066664999917],[159.16716556100002,-9.017998955999886],[159.17481530000018,-9.016534112999821],[159.19516035200016,-9.023044528999904],[159.16163170700023,-9.090020440999822],[159.14730879000004,-9.10369231599985],[159.09961998800006,-9.117933851999851],[159.09099368600008,-9.11199309699984],[159.08399498800011,-9.101739190999893],[159.07618248800011,-9.095961195999848],[159.06478925900004,-9.10369231599985],[159.03931725400005,-9.06853606599988],[159.04102623800023,-9.057305596999882],[159.07227623800011,-9.056573174999855],[159.06609134200002,-9.043226820999848],[159.06934655000006,-9.033786716999927],[159.07886803500017,-9.030531507999882],[159.09213300900004,-9.036065362999892],[159.09213300900004,-9.023044528999904],[159.09693444100017,-9.024834893999895],[159.11255944100017,-9.029229424999883],[159.111175977,-9.018731377999913],[159.107269727,-9.009535414999931],[159.10084069100017,-9.001397393999824],[159.09213300900004,-8.994398695999848],[159.10645592500006,-8.994398695999848],[159.11622155000023,-8.999281507999825],[159.12403405000012,-8.999932549999869],[159.12989342500018,-8.996351820999806],[159.13363691499998,-8.988376559999935]]],[[[160.11378014400006,-8.974297783999887],[160.11312910200004,-8.994398695999848],[160.09913170700017,-8.988457940999822],[160.09083092500006,-8.99578215899983],[160.07911217500012,-9.023044528999904],[160.06666100400017,-9.013604424999897],[160.06804446700008,-9.003350518999866],[160.07496178500006,-8.991794528999847],[160.07911217500012,-8.977715752999899],[160.0743921230002,-8.951348565999908],[160.07764733200023,-8.943129164999903],[160.09262129000015,-8.940524997999901],[160.10840905000012,-8.961195570999834],[160.11378014400006,-8.974297783999887]]],[[[157.5905867850001,-8.710870049999855],[157.60092207100004,-8.720391533999859],[157.60824629000004,-8.730075778999904],[157.61548912900005,-8.734470309999892],[157.63550866,-8.744073174999869],[157.64991295700005,-8.765232028999876],[157.64893639400012,-8.786228122999916],[157.62232506600006,-8.795830987999892],[157.61353600400017,-8.793064059999935],[157.5776473320001,-8.774672132999896],[157.52979576900017,-8.761814059999864],[157.47673587300002,-8.73951588299984],[157.45240319100017,-8.721856377999828],[157.455332879,-8.70647551899988],[157.49268639400023,-8.712009372999887],[157.50879967500012,-8.712579033999859],[157.52369225400017,-8.70647551899988],[157.52979576900017,-8.713962497999844],[157.5382593110002,-8.700860283999873],[157.54379316500004,-8.694919528999847],[157.54965254000015,-8.692152601999894],[157.55884850400005,-8.693780205999914],[157.5646264980002,-8.698825778999847],[157.56885826900023,-8.70403411299985],[157.57390384200008,-8.70647551899988],[157.5905867850001,-8.710870049999855]]],[[[158.20313561300023,-8.830987237999864],[158.18718509200002,-8.836846612999906],[158.16822350400005,-8.807224216999856],[158.1635848320001,-8.802015882999868],[158.15365644599999,-8.79656340899983],[158.15365644599999,-8.784112237999821],[158.16049238400004,-8.758396091999856],[158.16521243600013,-8.749200127999885],[158.194590691,-8.726983330999829],[158.19996178500017,-8.718031507999811],[158.20427493600008,-8.706638278999847],[158.2072046230002,-8.693454684999892],[158.20826256600006,-8.679131768999895],[158.21509850400017,-8.679131768999895],[158.21509850400017,-8.700290622999901],[158.22339928500006,-8.714939059999907],[158.23023522200018,-8.737969658999887],[158.232676629,-8.760837497999887],[158.228770379,-8.774672132999896],[158.25668379000015,-8.785577080999872],[158.25562584700018,-8.794854424999826],[158.25220787900017,-8.802666924999826],[158.24675540500007,-8.808038018999866],[158.22396894600004,-8.813734632999854],[158.20313561300023,-8.830987237999864]]],[[[158.01335696700008,-8.545505466999927],[158.02637780000023,-8.550957940999865],[158.03728274800014,-8.545505466999927],[158.04704837300008,-8.535821221999868],[158.05689537900017,-8.528252862999821],[158.07764733200005,-8.523532809999907],[158.10279381600017,-8.523614190999893],[158.12378991,-8.53036874799993],[158.1324975920002,-8.545505466999927],[158.135020379,-8.566827080999886],[158.13347415500007,-8.574151299999897],[158.12574303500006,-8.582940362999864],[158.11638431100013,-8.585625908999845],[158.1051538420002,-8.584649346999868],[158.09555097700004,-8.585544528999861],[158.09156334700006,-8.593519789999917],[158.08692467500023,-8.59710051899988],[158.06755618600013,-8.604668877999842],[158.06495201900012,-8.61093515399989],[158.07097415500002,-8.616875908999901],[158.09058678500017,-8.61980559699984],[158.09839928500017,-8.624607028999918],[158.10401451900006,-8.621026299999855],[158.10824629,-8.619561455999886],[158.11890709700006,-8.617771091999899],[158.10621178500017,-8.634535414999917],[158.09961998800011,-8.640232028999904],[158.09156334700006,-8.64511484199987],[158.11426842500012,-8.667738539999931],[158.10572350400017,-8.691094658999845],[158.06495201900012,-8.726983330999829],[158.05250084700012,-8.745782158999873],[158.04761803500006,-8.75139739399988],[158.03858483200023,-8.756768487999835],[158.02116946700008,-8.760837497999887],[158.01335696700008,-8.765232028999876],[157.99903405000006,-8.767266533999901],[157.97689863399998,-8.762627862999878],[157.95704186300011,-8.75595468499992],[157.94825280000012,-8.75139739399988],[157.94556725400005,-8.744724216999913],[157.93946373800017,-8.740166924999883],[157.92774498800006,-8.734470309999892],[157.9233504570001,-8.729424737999864],[157.91749108200023,-8.719008070999877],[157.913340691,-8.713962497999844],[157.88412519600016,-8.688246351999808],[157.87924238399998,-8.682549737999821],[157.87924238399998,-8.631442966999842],[157.88607832100004,-8.596612237999892],[157.89014733200005,-8.590590101999808],[157.8960067070001,-8.584730726999851],[157.90040123800011,-8.576429945999877],[157.89975019600016,-8.562432549999912],[157.92676842500012,-8.578871351999808],[157.93767337300008,-8.579359632999896],[157.94141686300011,-8.562432549999912],[157.94825280000012,-8.563409112999878],[157.95167076900023,-8.566338799999897],[157.95508873800023,-8.576755466999899],[157.96314537900017,-8.563734632999811],[157.9604598320001,-8.554131768999838],[157.95508873800023,-8.543715101999851],[157.95508873800023,-8.528252862999821],[157.96119225400005,-8.521579684999864],[157.995941602,-8.50790780999992],[158.00359134200014,-8.50644296699987],[158.00652103000007,-8.505059502999885],[158.00961347700004,-8.501071872999901],[158.0171004570001,-8.50790780999992],[158.0171004570001,-8.514743747999844],[158.00863691500015,-8.520928643999824],[158.00521894600016,-8.52849700299987],[158.00684655000018,-8.536879164999917],[158.01335696700008,-8.545505466999927]]],[[[157.37818444100006,-8.569268487999835],[157.37598717500023,-8.573011976999865],[157.3698022800002,-8.577894789999931],[157.36524498800023,-8.578220309999864],[157.3615828790001,-8.576755466999899],[157.35865319100017,-8.576755466999899],[157.35425866000017,-8.576755466999899],[157.349864129,-8.573907158999859],[157.34473717500012,-8.572523695999877],[157.33806399800002,-8.576755466999899],[157.33668053500017,-8.581801039999917],[157.33806399800002,-8.60409921699987],[157.33057701900006,-8.632907809999892],[157.32935631600006,-8.649102471999853],[157.33464603000002,-8.662367445999877],[157.37086022200006,-8.700860283999873],[157.39112389400023,-8.715020440999893],[157.41382897200012,-8.720798434999864],[157.41382897200012,-8.726983330999829],[157.398203972,-8.730564059999892],[157.37956790500002,-8.729750257999882],[157.3616642590001,-8.725274346999825],[157.34831790500007,-8.717380466999856],[157.33668053500017,-8.705987237999892],[157.3296004570001,-8.701836846999853],[157.32064863400015,-8.700290622999901],[157.312266472,-8.69622161299985],[157.31072024800008,-8.686618747999873],[157.31153405000006,-8.675225518999909],[157.31080162900005,-8.666192315999893],[157.30420983200005,-8.654717705999857],[157.27784264400006,-8.618584893999824],[157.26612389400006,-8.61093515399989],[157.25001061300011,-8.605726820999806],[157.22836347700004,-8.593438408999845],[157.20915774800008,-8.57838307099982],[157.20093834700018,-8.565850518999824],[157.20362389400023,-8.551527601999837],[157.21013431100008,-8.53923919099988],[157.2189233730002,-8.529229424999897],[157.22820071700008,-8.521579684999864],[157.25489342500006,-8.50750090899983],[157.27003014400006,-8.496514580999872],[157.28907311300006,-8.459161065999822],[157.31723066500015,-8.431735934999864],[157.34750410200016,-8.4125302059999],[157.36597741000017,-8.412855726999837],[157.38404381600012,-8.424981377999828],[157.3992619150001,-8.444024346999825],[157.409922722,-8.46892669099985],[157.41382897200012,-8.497979424999826],[157.4104110040001,-8.504327080999857],[157.39584394600016,-8.521172783999859],[157.3854272800002,-8.554620049999826],[157.38282311300006,-8.559340101999837],[157.38005618600013,-8.56267669099985],[157.37818444100006,-8.569268487999835]]],[[[159.65853925900004,-8.482517184999907],[159.68864993600008,-8.50790780999992],[159.70036868600008,-8.518487237999878],[159.69947350400005,-8.524997653999876],[159.68864993600008,-8.535251559999892],[159.67953535200016,-8.540134372999873],[159.67025800900004,-8.541436455999872],[159.65992272200012,-8.539646091999884],[159.64771569100006,-8.535251559999892],[159.6362410820001,-8.529229424999897],[159.62794030000012,-8.522637627999828],[159.61353600400005,-8.50790780999992],[159.60141035200016,-8.488864841999842],[159.59302819100017,-8.485284112999864],[159.57935631600006,-8.494805596999868],[159.56527754000004,-8.479099216999899],[159.54981530000006,-8.470798434999907],[159.53882897200006,-8.458916924999869],[159.53785241000006,-8.432793877999913],[159.54517662900017,-8.406426690999822],[159.55827884200002,-8.389418226999851],[159.5782983730002,-8.380140882999811],[159.606700066,-8.377536716999899],[159.63591556100008,-8.384209893999852],[159.64405358200005,-8.400323174999826],[159.640879754,-8.447035414999917],[159.64698326900012,-8.468438408999859],[159.65853925900004,-8.482517184999907]]],[[[162.74447675900015,-8.38697682099982],[162.73861738400004,-8.388360283999887],[162.73047936300011,-8.378187757999854],[162.73487389400006,-8.373793226999865],[162.7456160820001,-8.374281507999854],[162.75757897200006,-8.378513278999876],[162.75407962300002,-8.382500908999859],[162.74984785200004,-8.385186455999829],[162.74447675900015,-8.38697682099982]]],[[[160.80046634200008,-8.358819268999838],[160.80982506600017,-8.367282809999878],[160.81950931100008,-8.38494231599988],[160.823985222,-8.397149346999868],[160.8256942070001,-8.405531507999825],[160.82634524800008,-8.415948174999912],[160.82911217500012,-8.420830987999878],[160.84294681100002,-8.429294528999918],[160.84742272200018,-8.432793877999913],[160.8810327480002,-8.483982028999861],[160.932871941,-8.539320570999863],[160.97315514400012,-8.573011976999865],[160.996836785,-8.603773695999848],[161.00660241000006,-8.622816664999931],[161.01059004000004,-8.641534112999906],[161.00269616000006,-8.662367445999877],[160.98373457100016,-8.674086195999877],[160.96119225400017,-8.682224216999884],[160.94239342500012,-8.692152601999894],[160.94906660200016,-8.705336195999848],[160.95337975400017,-8.718519789999888],[160.95297285200016,-8.731622002999856],[160.93702233200023,-8.758884372999844],[160.936778191,-8.771661065999893],[160.94019616,-8.78443775799984],[160.94239342500012,-8.799004815999865],[160.94662519600004,-8.813734632999854],[160.96534264400012,-8.831231377999899],[160.96973717500006,-8.840508721999853],[160.97592207100016,-8.850274346999896],[160.99008222700016,-8.847832940999865],[161.01400800900015,-8.836846612999906],[161.02295983200005,-8.840752862999892],[161.05030358200023,-8.861260674999855],[161.05909264400012,-8.871026299999897],[161.05974368600008,-8.878024997999873],[161.05551191500004,-8.883477471999825],[161.05307050899998,-8.889743747999859],[161.05909264400012,-8.898858330999857],[161.06714928500006,-8.903497002999885],[161.0737410820001,-8.903008721999896],[161.07813561300011,-8.900485934999878],[161.07960045700017,-8.898858330999857],[161.10303795700023,-8.909844658999901],[161.12810306100002,-8.927422783999845],[161.15113366,-8.9496395809999],[161.16895592500006,-8.97454192499984],[161.1559350920002,-8.969496351999808],[161.14576256600006,-8.977308851999808],[161.14283287900005,-8.988702080999857],[161.1515405610002,-8.994398695999848],[161.16358483200023,-8.99944426899988],[161.17514082100016,-9.011651299999855],[161.180918816,-9.02752044099988],[161.17579186300011,-9.042901299999826],[161.18458092500023,-9.047784112999892],[161.18848717500023,-9.054131768999824],[161.1896264980002,-9.062269789999931],[161.18946373800023,-9.072930596999868],[161.19125410200004,-9.083428643999838],[161.19629967500023,-9.086032809999935],[161.202891472,-9.086195570999806],[161.20997155000006,-9.090020440999822],[161.21583092500023,-9.094170830999857],[161.2228296230002,-9.09775155999992],[161.22868899800008,-9.10369231599985],[161.23096764400023,-9.114515882999854],[161.22754967500012,-9.119073174999883],[161.20248457100004,-9.138441664999903],[161.22071373800011,-9.146661065999908],[161.22706139400023,-9.151788018999824],[161.23096764400023,-9.158949476999865],[161.24398847700004,-9.153903903999918],[161.255707227,-9.15691497199984],[161.26172936300011,-9.16594817499984],[161.25831139400012,-9.179375908999845],[161.26587975400005,-9.18035247199991],[161.28492272200006,-9.186211846999853],[161.28492272200006,-9.193047783999873],[161.25782311300011,-9.19931405999992],[161.24781334700006,-9.199883721999882],[161.24431399800002,-9.20525481599985],[161.24512780000023,-9.216973565999837],[161.24927819100017,-9.228692315999822],[161.25464928500006,-9.234063408999873],[161.26099694100017,-9.241875908999873],[161.266856316,-9.27800872199991],[161.27881920700023,-9.289239190999822],[161.26531009200008,-9.296563408999916],[161.25904381600006,-9.290297132999868],[161.25416100400017,-9.280368747999859],[161.24463951900017,-9.275648695999863],[161.23536217500012,-9.281182549999869],[161.23755944100012,-9.291924737999892],[161.24586022200018,-9.303887627999828],[161.28532962300002,-9.34441497199984],[161.29664147200006,-9.360284112999864],[161.32813561300023,-9.438571872999859],[161.33716881600006,-9.447523695999877],[161.34766686300011,-9.455824476999865],[161.36182701900023,-9.474867445999848],[161.38111412900017,-9.50904713299984],[161.39307701900012,-9.587660414999945],[161.39258873800023,-9.609063408999887],[161.38640384200008,-9.621758721999853],[161.37566165500007,-9.624932549999826],[161.36068769600004,-9.617608330999829],[161.30892988399998,-9.581638278999847],[161.29932701900012,-9.580743096999853],[161.29656009200008,-9.563734632999882],[161.28939863400004,-9.548597914999888],[161.24976647200018,-9.497165622999887],[161.24463951900017,-9.48796965899983],[161.24219811300023,-9.47812265399989],[161.24048912900005,-9.458672783999901],[161.23715254,-9.447523695999877],[161.22632897200012,-9.430433851999837],[161.1792098320001,-9.381768487999892],[161.11068769600016,-9.347263278999876],[161.08676191499998,-9.319594007999882],[161.04004967500012,-9.313246351999851],[161.04542076900017,-9.296075127999828],[161.01742597700016,-9.264743747999873],[161.00391686300006,-9.255140882999811],[160.99626712300002,-9.253676039999931],[160.98015384200008,-9.255140882999811],[160.97315514400012,-9.251397393999866],[160.96998131600006,-9.244073174999869],[160.97152754000015,-9.227634372999873],[160.96973717500006,-9.220391533999845],[160.94646243600008,-9.200127862999835],[160.88990319100006,-9.174981377999856],[160.86793053500006,-9.152113539999931],[160.79525800900015,-9.019301039999874],[160.77767988400004,-8.970310153999918],[160.76433353000013,-8.94670989399988],[160.76970462300008,-8.939060153999847],[160.771332227,-8.933363539999874],[160.76970462300008,-8.927666924999883],[160.76433353000013,-8.920017184999864],[160.76368248800006,-8.905450127999828],[160.74822024800002,-8.855157158999873],[160.73438561300023,-8.833672783999845],[160.69312584700018,-8.751234632999825],[160.6893009770001,-8.737562757999882],[160.688731316,-8.68368905999985],[160.68685957100016,-8.674574476999865],[160.65447024800002,-8.60409921699987],[160.67204837300008,-8.592380466999884],[160.70150800900015,-8.567152601999823],[160.7198999360002,-8.562432549999912],[160.71998131600017,-8.553399346999896],[160.69597415500002,-8.501071872999901],[160.6564233730002,-8.449314059999892],[160.65137780000023,-8.439629815999837],[160.63843834700006,-8.433282158999901],[160.60434004000015,-8.399997653999904],[160.59351647200006,-8.38494231599988],[160.58106530000023,-8.340508721999868],[160.60132897200006,-8.325453382999854],[160.63843834700006,-8.329766533999859],[160.67554772200018,-8.343357028999904],[160.69532311300011,-8.361586195999806],[160.70281009200008,-8.364515882999825],[160.71314537900017,-8.362399997999901],[160.72396894600016,-8.35686614399988],[160.730235222,-8.349053643999895],[160.726817254,-8.340264580999829],[160.69597415500002,-8.320082289999888],[160.6987410820001,-8.313083591999913],[160.7057397800002,-8.30624765399989],[160.714610222,-8.302015882999882],[160.7233179050002,-8.302992445999848],[160.7233179050002,-8.309258721999896],[160.74659264400012,-8.309665622999901],[160.75896243600008,-8.316664320999891],[160.77784264400012,-8.343357028999904],[160.79004967500018,-8.35320403399983],[160.80046634200008,-8.358819268999838]]],[[[157.15251712300008,-8.329766533999859],[157.15251712300008,-8.33717213299984],[157.12354576900006,-8.32040780999992],[157.10906009200002,-8.283298434999907],[157.090586785,-8.249118747999916],[157.05005944100017,-8.240899346999825],[157.0535587900001,-8.237969658999901],[157.06006920700005,-8.230564059999907],[157.06373131600006,-8.227308851999865],[157.04737389400012,-8.219903252999885],[157.02995853000007,-8.206312757999825],[157.02263431100002,-8.192803643999852],[157.03638756600006,-8.185723565999893],[157.0499780610002,-8.196709893999852],[157.07585696700014,-8.19850025799984],[157.10084069100006,-8.203545830999872],[157.11207116000006,-8.223890882999854],[157.11361738399998,-8.236748955999886],[157.1251733730002,-8.275079033999901],[157.13062584700006,-8.30828215899983],[157.13803144600004,-8.322360934999864],[157.15251712300008,-8.329766533999859]]],[[[157.09782962300002,-8.15894947699988],[157.12232506600017,-8.167413018999838],[157.14568118600008,-8.16570403399983],[157.16732832100016,-8.167413018999838],[157.18726647200006,-8.185723565999893],[157.19678795700023,-8.20671965899983],[157.20411217500023,-8.232842705999886],[157.20826256600017,-8.26132577899989],[157.2076929050002,-8.288750908999845],[157.20093834700018,-8.288750908999845],[157.198985222,-8.274590752999828],[157.19141686300006,-8.271905205999843],[157.1818139980002,-8.272556247999887],[157.17302493600002,-8.268812757999868],[157.16911868600002,-8.261407158999873],[157.15992272200018,-8.233493747999844],[157.15040123800006,-8.215915622999901],[157.13917076900017,-8.200941664999874],[157.12452233200017,-8.188653252999913],[157.10466556100008,-8.17888762799987],[157.11207116000006,-8.172621351999823],[157.101817254,-8.171644789999945],[157.0971785820001,-8.169122002999842],[157.09644616000006,-8.164971612999892],[157.09782962300002,-8.15894947699988]]],[[[156.81055748800011,-8.055352471999868],[156.81421959700018,-8.072035414999903],[156.82471764400023,-8.069594007999868],[156.8413192070001,-8.11296965899983],[156.81544030000006,-8.111993096999853],[156.78565514400006,-8.086195570999834],[156.78988691499998,-8.055352471999868],[156.81055748800011,-8.055352471999868]]],[[[157.63599694100017,-8.18938567499984],[157.64470462300008,-8.205173434999892],[157.64177493600008,-8.217705987999892],[157.63697350400017,-8.229099216999856],[157.63965905000023,-8.240899346999825],[157.64649498800017,-8.233656507999811],[157.65235436300011,-8.235121351999865],[157.65870201900023,-8.23951588299984],[157.66700280000012,-8.240899346999825],[157.67335045700023,-8.23845794099988],[157.68539472700016,-8.230564059999907],[157.69434655000006,-8.227308851999865],[157.71387780000018,-8.223565362999835],[157.7301538420002,-8.223402601999865],[157.74586022200018,-8.22869231599985],[157.77458743600013,-8.249281507999882],[157.7784936860002,-8.253350518999838],[157.78370201900012,-8.261407158999873],[157.7858992850001,-8.267754815999908],[157.7898869150001,-8.288750908999845],[157.8022567070001,-8.305352471999896],[157.82813561300023,-8.322849216999856],[157.83838951900023,-8.33717213299984],[157.83676191500004,-8.36223723799985],[157.83838951900023,-8.37127044099985],[157.84400475400005,-8.380303643999866],[157.85954837300008,-8.39251067499984],[157.86557050900015,-8.398614190999822],[157.87387129000015,-8.415459893999824],[157.88038170700023,-8.450290622999859],[157.88607832100004,-8.467461846999882],[157.89063561300017,-8.470798434999907],[157.89714603000007,-8.471368096999882],[157.90333092500012,-8.473565362999878],[157.90723717500012,-8.481133721999825],[157.9069116550002,-8.490899346999868],[157.90333092500012,-8.499118747999859],[157.8835555350001,-8.531996351999851],[157.88111412900017,-8.537774346999825],[157.87924238399998,-8.548923434999935],[157.87891686300006,-8.55820077899989],[157.88013756600017,-8.566989841999856],[157.882578972,-8.575127862999878],[157.88607832100004,-8.582940362999864],[157.82447350400017,-8.558851820999848],[157.79737389400023,-8.55632903399983],[157.79737389400023,-8.562432549999912],[157.81104576900006,-8.570733330999886],[157.8204858730002,-8.583184502999899],[157.8235783210001,-8.59921640399989],[157.8178817070001,-8.617771091999899],[157.81104576900006,-8.617771091999899],[157.80884850400017,-8.601332289999903],[157.80152428500017,-8.590915622999916],[157.7936304050002,-8.584242445999863],[157.7898869150001,-8.579847914999874],[157.78646894600016,-8.565524997999887],[157.77784264400017,-8.551527601999837],[157.7557072270001,-8.528252862999821],[157.72934004,-8.513929945999834],[157.67481530000012,-8.509209893999838],[157.64966881600006,-8.497979424999826],[157.6056421230002,-8.467461846999882],[157.58204186300006,-8.439385674999883],[157.5776473320001,-8.436211846999825],[157.57601972700016,-8.421563408999901],[157.56788170700023,-8.398858330999872],[157.5646264980002,-8.38494231599988],[157.5646264980002,-8.323500257999811],[157.57203209700018,-8.33505624799993],[157.57593834700018,-8.346856377999899],[157.5776473320001,-8.374444268999824],[157.58301842500023,-8.386488539999917],[157.60645592500012,-8.392998955999829],[157.61182701900006,-8.40203215899983],[157.61500084700006,-8.412367445999848],[157.62208092500012,-8.410739841999913],[157.6290796230002,-8.401136976999837],[157.63233483200023,-8.388360283999887],[157.62696373800006,-8.378024997999887],[157.60336347700004,-8.355726820999848],[157.59376061300017,-8.323337497999844],[157.58269290500002,-8.299411716999884],[157.56706790500007,-8.276299737999835],[157.54965254000015,-8.261407158999873],[157.537364129,-8.25839609199987],[157.52816816500015,-8.261000257999868],[157.51807701900006,-8.265801690999865],[157.50261478000007,-8.268812757999868],[157.49610436300017,-8.264743747999901],[157.48894290500002,-8.25741952899989],[157.4817814460001,-8.255954684999935],[157.47584069100006,-8.268812757999868],[157.46485436300011,-8.26230234199987],[157.4565535820001,-8.26230234199987],[157.4410913420002,-8.268812757999868],[157.44011478000002,-8.26970794099985],[157.43213951900017,-8.27361419099985],[157.42750084700006,-8.275079033999901],[157.39340254000004,-8.275567315999893],[157.35645592500006,-8.272067966999899],[157.34489993600008,-8.275079033999901],[157.33619225400017,-8.28932057099982],[157.3296004570001,-8.30803801899988],[157.31885826900006,-8.325860283999859],[157.297129754,-8.33717213299984],[157.27955162900017,-8.333428643999909],[157.24537194100017,-8.313653252999885],[157.2350366550002,-8.316664320999891],[157.22820071700008,-8.316664320999891],[157.221934441,-8.223890882999854],[157.22486412900005,-8.217705987999892],[157.23926842500012,-8.197523695999863],[157.24537194100017,-8.193129164999874],[157.259613477,-8.193047783999887],[157.27125084700012,-8.19166432099982],[157.28101647200006,-8.187595309999864],[157.29029381600017,-8.17888762799987],[157.29509524800008,-8.191827080999872],[157.30201256600017,-8.195733330999872],[157.30990644600016,-8.192966403999904],[157.31690514400023,-8.185723565999893],[157.31999759200014,-8.176527601999823],[157.32007897200012,-8.15496184699991],[157.3243921230002,-8.144789320999863],[157.3209741550002,-8.132989190999893],[157.32650800900004,-8.119398695999848],[157.34831790500007,-8.093194268999895],[157.35824629000015,-8.078220309999864],[157.3732202480002,-8.044610283999845],[157.38282311300006,-8.031508070999877],[157.4254663420002,-7.989841403999918],[157.4410913420002,-7.97966887799987],[157.45720462300008,-7.973565362999892],[157.48747806100008,-7.965590101999837],[157.50261478000007,-7.959730726999894],[157.50212649800008,-7.96445077899989],[157.50342858200005,-7.965590101999837],[157.50611412900005,-7.965752862999892],[157.50945071700008,-7.966566664999903],[157.578868035,-8.005547783999887],[157.6056421230002,-8.007582289999917],[157.59864342500023,-8.02556731599985],[157.6017358730002,-8.038262627999828],[157.60816491000006,-8.050388278999904],[157.61182701900006,-8.06617603999986],[157.6105249360002,-8.104180596999868],[157.61247806100002,-8.122735283999873],[157.61931399800008,-8.137953382999854],[157.60987389400023,-8.156345309999892],[157.6131291020001,-8.169122002999842],[157.63599694100017,-8.18938567499984]]],[[[156.60466556100008,-8.191013278999861],[156.58741295700017,-8.199395440999837],[156.57837975400005,-8.187107028999876],[156.55323326900017,-8.11402760199988],[156.53842207099999,-8.091485283999901],[156.53598066500015,-8.06926848799985],[156.54297936300023,-8.021172783999873],[156.53207441500015,-7.970635674999869],[156.5323999360002,-7.948907158999887],[156.54981530000023,-7.939222914999931],[156.564707879,-7.952080987999864],[156.57715905000023,-7.966566664999903],[156.5815535820001,-7.977146091999856],[156.58765709700012,-8.000664971999825],[156.6010848320001,-8.023370049999869],[156.60645592500023,-8.040622653999876],[156.61003665500002,-8.058526299999826],[156.61117597700016,-8.072686455999857],[156.61597741000006,-8.098565362999864],[156.61646569100006,-8.112481377999842],[156.61117597700016,-8.124932549999855],[156.61898847700016,-8.146172783999845],[156.61597741000006,-8.17066822699988],[156.60466556100008,-8.191013278999861]]],[[[160.64795983200023,-7.926853122999901],[160.64087975400017,-7.928399346999839],[160.63200931100002,-7.927015882999868],[160.61304772200006,-7.901136976999851],[160.6075952480002,-7.888848565999894],[160.61207116000006,-7.876722914999903],[160.62330162900017,-7.874444268999838],[160.62989342500023,-7.880303643999866],[160.63575280000006,-7.891045830999886],[160.64795983200023,-7.926853122999901]]],[[[157.184336785,-8.106703382999882],[157.16724694100017,-8.135511976999823],[157.14625084700006,-8.14861419099988],[157.1251733730002,-8.124932549999855],[157.11670983200005,-8.128106377999828],[157.11255944100006,-8.128594658999901],[157.10466556100008,-8.124932549999855],[157.05420983200023,-8.129082940999893],[157.00228925900015,-8.086846612999878],[156.96216881600006,-8.02743905999992],[156.94703209700006,-7.97966887799987],[156.94874108200023,-7.967054945999806],[156.95215905000023,-7.955010674999883],[156.96127363400015,-7.932549737999878],[156.985118035,-7.896091403999918],[156.98853600400005,-7.888116143999866],[157.00196373800011,-7.875176690999865],[157.0327254570001,-7.862969658999887],[157.06706790500007,-7.854099216999842],[157.09107506600012,-7.850518487999864],[157.13754316500015,-7.87476978999986],[157.17042076900023,-7.909926039999917],[157.19125410200004,-7.952894789999874],[157.20093834700018,-8.000746351999808],[157.20232181100008,-8.048272393999895],[157.199473504,-8.06519947699988],[157.184336785,-8.106703382999882]]],[[[156.55543053500017,-7.81731536299985],[156.53484134200014,-7.827406507999825],[156.51685631600017,-7.81812916499986],[156.51791425900015,-7.809258721999825],[156.52588951900012,-7.799411716999884],[156.53638756600017,-7.791110934999907],[156.54542076900006,-7.791680596999882],[156.54908287900005,-7.795017184999907],[156.55941816500004,-7.802422783999887],[156.55543053500017,-7.81731536299985]]],[[[156.61117597700016,-7.569431247999916],[156.6141056650001,-7.577813408999873],[156.61939537900017,-7.585137627999885],[156.63168379000004,-7.596774997999887],[156.63412519600016,-7.60182057099982],[156.6330672540001,-7.606215101999808],[156.6339624360002,-7.609307549999883],[156.64958743600008,-7.611260674999841],[156.65259850400017,-7.614190362999864],[156.65308678500017,-7.619398695999848],[156.65284264400012,-7.6273739559999],[156.65707441500004,-7.63144296699987],[156.6667586600001,-7.635430596999839],[156.67644290500007,-7.642266533999859],[156.684825066,-7.665704033999845],[156.69459069100006,-7.6722958309999],[156.71485436300017,-7.67864348799985],[156.70753014400023,-7.686130466999899],[156.72103925900004,-7.700372002999913],[156.7436629570001,-7.691827080999886],[156.76612389400012,-7.699883721999825],[156.78760826900023,-7.713148695999863],[156.80713951900012,-7.720147393999838],[156.81470787900017,-7.734551690999894],[156.7994897800002,-7.766534112999892],[156.76270592500006,-7.816501559999935],[156.74398847700004,-7.831963799999855],[156.71973717500023,-7.857028903999861],[156.70411217500023,-7.885023695999877],[156.711192254,-7.908868096999868],[156.72055097700016,-7.921075127999842],[156.72071373800011,-7.931817315999851],[156.71338951900012,-7.940362237999878],[156.70069420700023,-7.945489190999879],[156.69752037900017,-7.941989841999899],[156.68921959700018,-7.935235283999859],[156.6780705090001,-7.932305596999839],[156.66635175899998,-7.939222914999931],[156.65967858200023,-7.939222914999931],[156.65748131600006,-7.919122002999885],[156.66179446700002,-7.899102471999825],[156.65894616,-7.883965752999828],[156.61182701900012,-7.871189059999878],[156.60840905000012,-7.854587497999916],[156.61866295700023,-7.813083591999927],[156.61475670700023,-7.805108330999872],[156.60580488400004,-7.798435153999918],[156.5963647800002,-7.792738539999931],[156.59083092500018,-7.788506768999824],[156.57781009200008,-7.761651299999841],[156.57097415500007,-7.754327080999829],[156.5540470710001,-7.748630466999842],[156.55323326900017,-7.747491143999909],[156.54517662900005,-7.746514580999843],[156.54420006600006,-7.743584893999824],[156.54525800900004,-7.739353122999887],[156.53484134200014,-7.71656666499986],[156.5288192070001,-7.713311455999829],[156.51563561300006,-7.720147393999838],[156.49708092500023,-7.674981377999885],[156.50416100400005,-7.630059502999885],[156.53077233200005,-7.592461846999882],[156.57097415500007,-7.569431247999916],[156.58399498800023,-7.572442315999822],[156.5932723320001,-7.576836846999896],[156.60157311300006,-7.577569268999838],[156.61117597700016,-7.569431247999916]]],[[[158.42261803500006,-7.579685153999847],[158.43433678500006,-7.595147393999866],[158.45101972700016,-7.603122653999918],[158.47046959700018,-7.608493747999873],[158.48609459700006,-7.610284112999864],[158.5006616550002,-7.616469007999839],[158.51661217500012,-7.630954684999878],[158.5265405610002,-7.647067966999856],[158.52361087300008,-7.658135674999883],[158.50782311300023,-7.659844658999887],[158.49293053500017,-7.651055596999825],[158.48145592500023,-7.637302341999899],[158.47510826900012,-7.623955987999892],[158.46461022200006,-7.637383721999882],[158.44556725400005,-7.633070570999891],[158.4069116550002,-7.610284112999864],[158.40886478000002,-7.619805596999854],[158.42115319100017,-7.643812757999811],[158.41138756600006,-7.643649997999845],[158.386485222,-7.637627862999835],[158.36215254000015,-7.637627862999835],[158.36361738400004,-7.6312802059999],[158.35938561300006,-7.617120049999883],[158.34791100400005,-7.603122653999918],[158.32797285200016,-7.596774997999887],[158.32422936300011,-7.593438408999859],[158.31918379,-7.586521091999856],[158.31690514400012,-7.579359632999825],[158.32113691500004,-7.576267184999921],[158.3307397800002,-7.577325127999885],[158.34669030000012,-7.58180103999986],[158.35222415500002,-7.5824520809999],[158.35401451900012,-7.584405205999858],[158.36247806100008,-7.586195570999834],[158.36817467500023,-7.58367278399983],[158.36215254000015,-7.572849216999913],[158.36215254000015,-7.567071221999868],[158.36915123800011,-7.562758070999863],[158.378754102,-7.562676690999879],[158.386485222,-7.569431247999916],[158.39795983200023,-7.5746395809999],[158.42261803500006,-7.579685153999847]]],[[[158.59595787900005,-7.585870049999912],[158.60572350400017,-7.586195570999834],[158.61459394600004,-7.574314059999878],[158.62525475400005,-7.564141533999845],[158.63965905000012,-7.569431247999916],[158.64332116000017,-7.565606377999899],[158.6461694670002,-7.563571872999873],[158.64926191499998,-7.562432549999841],[158.6539819670002,-7.561293226999808],[158.6613061860002,-7.58098723799985],[158.67579186300023,-7.593845309999864],[158.71485436300011,-7.610284112999864],[158.71876061300011,-7.604424737999821],[158.72559655000023,-7.597426039999931],[158.7330835300002,-7.591566664999888],[158.73926842500018,-7.589288018999824],[158.75171959700018,-7.593438408999859],[158.75700931100008,-7.603610934999907],[158.76026451900012,-7.615980726999851],[158.76661217500023,-7.6273739559999],[158.78614342500012,-7.64568450299987],[158.79818769600004,-7.654473565999837],[158.80811608200023,-7.658135674999883],[158.81446373800017,-7.664727471999868],[158.8302514980002,-7.693780205999843],[158.848399285,-7.704359632999882],[158.86378014400023,-7.724867445999848],[158.87232506600017,-7.733819268999866],[158.88477623800011,-7.741306247999845],[158.92074629000015,-7.754327080999829],[158.93864993600002,-7.765069268999838],[158.96876061300023,-7.790704033999901],[158.9897567070001,-7.802178643999852],[158.97950280000018,-7.821954033999873],[158.98707116,-7.839613539999888],[159.00269616,-7.848890882999839],[159.01693769600004,-7.843682549999855],[159.05689537900017,-7.859958591999884],[159.06861412900005,-7.8676083309999],[159.07545006600017,-7.880303643999866],[159.07935631600017,-7.894952080999886],[159.08570397200018,-7.903578382999882],[159.09961998800006,-7.898370049999883],[159.1268009770001,-7.91952890399989],[159.14942467500023,-7.908868096999868],[159.16797936300023,-7.904880466999884],[159.18628991,-7.906182549999883],[159.20826256600006,-7.91187916499986],[159.19556725400017,-7.91765715899983],[159.19874108200023,-7.926853122999901],[159.209239129,-7.935479424999897],[159.21876061300011,-7.939222914999931],[159.2356876960001,-7.940850518999866],[159.24512780000012,-7.945570570999863],[159.2507430350001,-7.954196872999873],[159.25586998800011,-7.966566664999903],[159.27295983200017,-7.954034112999821],[159.28305097700004,-7.962660414999903],[159.29102623800006,-7.978692315999894],[159.30128014400012,-7.987074476999865],[159.33383222700016,-7.989841403999918],[159.34717858200005,-7.986097914999888],[159.35279381600017,-7.973402601999837],[159.37134850400017,-7.981866143999866],[159.37891686300023,-7.986748955999843],[159.38697350400017,-7.993910414999874],[159.40259850400017,-7.982354424999855],[159.41293379000015,-7.993422132999896],[159.42156009200008,-8.01425546699987],[159.43165123800023,-8.031508070999877],[159.44792728000007,-8.043877862999821],[159.47632897200018,-8.059502862999892],[159.48943118600008,-8.069594007999868],[159.49203535200016,-8.071058851999837],[159.50367272200018,-8.075860283999916],[159.50586998800023,-8.079034112999878],[159.50831139400012,-8.087090752999828],[159.5099389980002,-8.089532158999859],[159.55640709700006,-8.126397393999824],[159.64893639400023,-8.181247653999918],[159.84205162900017,-8.325616143999824],[159.84644616000006,-8.335381768999852],[159.82504316499998,-8.357598565999822],[159.8042098320001,-8.386163018999895],[159.79664147200018,-8.391778252999899],[159.7878524100001,-8.38681405999985],[159.77662194100012,-8.384047132999896],[159.76539147200018,-8.385349216999884],[159.75684655000006,-8.391778252999899],[159.75757897200012,-8.397556247999873],[159.77328535200016,-8.4086239559999],[159.78158613400015,-8.425388278999918],[159.79102623800017,-8.425388278999918],[159.80046634200008,-8.420668226999823],[159.80860436300011,-8.411797783999873],[159.81788170700023,-8.42009856599985],[159.847911004,-8.461602471999853],[159.85596764400023,-8.476657809999864],[159.85873457099999,-8.490980726999851],[159.85938561300023,-8.511325778999847],[159.88884524800014,-8.533786716999842],[159.90040123800023,-8.550713799999826],[159.88721764400012,-8.562432549999912],[159.87826582100016,-8.560723565999908],[159.84636478000007,-8.542087497999916],[159.84156334700018,-8.54111093499985],[159.82992597700016,-8.542738539999874],[159.82504316499998,-8.542087497999916],[159.82007897200006,-8.536797783999845],[159.81771894599999,-8.529961846999825],[159.81470787900017,-8.524021091999899],[159.79737389400012,-8.517266533999859],[159.78549238400015,-8.498955987999892],[159.76482181100002,-8.49228280999985],[159.75782311300023,-8.485528252999899],[159.74390709700018,-8.467461846999882],[159.71241295700017,-8.443129164999917],[159.70289147200006,-8.432793877999913],[159.70069420700005,-8.42302825299987],[159.70281009200008,-8.414239190999908],[159.70036868600008,-8.407891533999873],[159.68523196700008,-8.405450127999842],[159.67383873800006,-8.398695570999806],[159.62720787900017,-8.357598565999822],[159.54395592500023,-8.34002044099988],[159.50831139400012,-8.31853606599985],[159.48340905000023,-8.30828215899983],[159.4611108730002,-8.289727471999825],[159.44483483200005,-8.281182549999897],[159.42774498800023,-8.277276299999897],[159.41431725400005,-8.28191497199984],[159.38062584700006,-8.261651299999826],[159.36231530000006,-8.256280205999857],[159.3453882170002,-8.261407158999873],[159.33529707100004,-8.238376559999907],[159.32618248800023,-8.225844007999811],[159.3147078790001,-8.220472914999945],[159.30079186300011,-8.219333591999913],[159.28760826900017,-8.21493905999992],[159.27849368600008,-8.206638278999847],[159.27711022200018,-8.193129164999874],[159.25538170700023,-8.200372002999899],[159.2338973320001,-8.196221612999864],[159.21363366000017,-8.185316664999888],[159.11996504000015,-8.117445570999806],[159.11378014400012,-8.116387627999842],[159.09839928500006,-8.118584893999838],[159.09213300900004,-8.117445570999806],[159.08790123800006,-8.111016533999873],[159.08708743600008,-8.102146091999842],[159.08725019600004,-8.093926690999837],[159.08594811300023,-8.089532158999859],[159.0779728520001,-8.088148695999877],[159.07390384200014,-8.091892184999907],[159.0704858730002,-8.096286716999884],[159.06478925900004,-8.09693775799984],[159.03744550900015,-8.083265882999811],[159.03101647200006,-8.082289320999834],[159.01661217500006,-8.084161065999893],[159.01010175899998,-8.083265882999811],[159.00993899800014,-8.080498955999843],[159.00554446700002,-8.0668270809999],[159.00326582100016,-8.062758070999848],[158.99203535200016,-8.05754973799985],[158.98357181100002,-8.055108330999829],[158.9780379570001,-8.049574476999808],[158.97608483200017,-8.034926039999888],[158.9694116550002,-8.039971612999821],[158.94809004000015,-8.04908619599982],[158.94629967500023,-8.029229424999897],[158.93734785200004,-8.013929945999848],[158.92286217500006,-8.00416432099982],[158.90406334700006,-8.000746351999808],[158.84571373800023,-7.973402601999837],[158.84034264400006,-7.935235283999859],[158.83204186300011,-7.917901299999869],[158.81495201900023,-7.922539971999896],[158.784434441,-7.915215752999885],[158.76986738399998,-7.905857028999861],[158.77735436300023,-7.891534112999878],[158.7663680350001,-7.8793270809999],[158.75635826900012,-7.871026299999826],[158.7495223320001,-7.871026299999826],[158.73902428500006,-7.884535414999888],[158.72852623800023,-7.872002862999892],[158.71485436300011,-7.836195570999877],[158.70362389400012,-7.822930596999854],[158.68848717500012,-7.811211846999868],[158.67115319100006,-7.805108330999872],[158.6539819670002,-7.809665622999916],[158.64429772200006,-7.791761976999865],[158.60075931100013,-7.767754815999822],[158.58497155000006,-7.754327080999829],[158.58008873800011,-7.740817966999856],[158.58057701900012,-7.730238539999903],[158.58326256600017,-7.720635674999826],[158.58497155000006,-7.710056247999873],[158.58497155000006,-7.668633721999854],[158.50684655000023,-7.603610934999907],[158.45533287900017,-7.576267184999921],[158.446543816,-7.560723565999837],[158.44507897200006,-7.543552341999899],[158.45199629000015,-7.531996351999879],[158.46892337300002,-7.534600518999881],[158.48951256600017,-7.546970309999907],[158.58773847700004,-7.580336195999806],[158.59595787900005,-7.585870049999912]]],[[[158.30567467500012,-7.482517184999921],[158.31128991,-7.493747653999918],[158.32439212300008,-7.489678643999866],[158.33611087300008,-7.494561455999843],[158.35906009200008,-7.514092705999829],[158.371348504,-7.50416432099982],[158.39307701900006,-7.505791924999841],[158.41675866,-7.514906507999839],[158.434825066,-7.527764580999858],[158.42514082100016,-7.53281015399989],[158.41846764400012,-7.539727471999882],[158.41667728000002,-7.549086195999834],[158.42115319100017,-7.561293226999808],[158.37671959700018,-7.552504164999931],[158.36524498800023,-7.548272393999824],[158.3571069670002,-7.539727471999882],[158.34864342500018,-7.528415622999901],[158.337657097,-7.518324476999851],[158.30779056100013,-7.510918877999856],[158.2866317070001,-7.496840101999823],[158.273203972,-7.493747653999918],[158.26579837300002,-7.488213799999912],[158.26441491000017,-7.476820570999848],[158.26856530000012,-7.466973565999837],[158.27662194100006,-7.466403903999861],[158.2863061860002,-7.472832940999865],[158.29664147200012,-7.476820570999848],[158.30567467500012,-7.482517184999921]]],[[[157.50912519600016,-7.390557549999912],[157.53541100400017,-7.395603122999845],[157.563731316,-7.392266533999916],[157.58887780000012,-7.393324476999865],[157.605235222,-7.411797783999887],[157.61158287900005,-7.404229424999855],[157.61898847700004,-7.411797783999887],[157.61280358200017,-7.419366143999852],[157.61060631600017,-7.429782809999921],[157.61280358200017,-7.441338799999855],[157.61898847700004,-7.452080987999878],[157.59164472700016,-7.43222421699987],[157.5905867850001,-7.447198174999897],[157.58041425900015,-7.452813408999901],[157.5494897800002,-7.452080987999878],[157.5494897800002,-7.445896091999899],[157.55551191500004,-7.44255950299987],[157.56421959700012,-7.435642184999878],[157.56999759200008,-7.43222421699987],[157.53052819100012,-7.420668226999851],[157.51937910200016,-7.414808851999808],[157.51140384200014,-7.413506768999895],[157.48585045700023,-7.414727471999825],[157.47559655000012,-7.411797783999887],[157.491953972,-7.400079033999901],[157.50912519600016,-7.390557549999912]]],[[[158.26937910200004,-7.390557549999912],[158.26937910200004,-7.417901299999883],[158.273203972,-7.416110934999892],[158.27979576900012,-7.413750908999845],[158.28321373800011,-7.411797783999887],[158.27930748800011,-7.420830987999906],[158.27662194100006,-7.430759372999901],[158.27564537900017,-7.441338799999855],[158.27621504000004,-7.452080987999878],[158.26140384200008,-7.443536065999851],[158.25635826900012,-7.438409112999835],[158.24903405000012,-7.47323984199987],[158.23519941500004,-7.463311455999872],[158.22657311300011,-7.449802341999899],[158.21534264400012,-7.439141533999873],[158.19434655000006,-7.438409112999835],[158.19434655000006,-7.43222421699987],[158.20801842500012,-7.417901299999883],[158.21485436300023,-7.417901299999883],[158.22429446700002,-7.419610283999887],[158.25025475400005,-7.394952080999886],[158.26937910200004,-7.390557549999912]]],[[[157.7898869150001,-7.459649346999825],[157.79737389400023,-7.47323984199987],[157.770274285,-7.474786065999822],[157.7560327480002,-7.473890882999825],[157.73926842500006,-7.46689218499985],[157.73275800899998,-7.468438408999887],[157.72584069100012,-7.471449476999894],[157.71827233200023,-7.47323984199987],[157.71070397200012,-7.470961195999806],[157.70435631600017,-7.461602471999868],[157.69776451900012,-7.459567966999842],[157.67855879000015,-7.448174737999878],[157.68897545700023,-7.423028252999899],[157.72169030000023,-7.383884372999859],[157.76929772200006,-7.400811455999843],[157.77621504000015,-7.407972914999874],[157.778086785,-7.422946872999916],[157.7898869150001,-7.459649346999825]]],[[[155.57032311300023,-7.322930596999868],[155.58627363400015,-7.331231377999842],[155.59742272200018,-7.342054945999834],[155.606700066,-7.353692315999851],[155.61817467500023,-7.363946221999868],[155.59742272200018,-7.382907809999878],[155.57618248800006,-7.387872002999842],[155.52523847700016,-7.383884372999859],[155.50798587300008,-7.375746351999837],[155.51441491000017,-7.357517184999864],[155.54232832100004,-7.322930596999868],[155.54932701900012,-7.325290622999916],[155.5549422540001,-7.32512786299985],[155.57032311300023,-7.322930596999868]]],[[[155.81674238400004,-7.020684502999899],[155.84669030000006,-7.027927341999842],[155.85425866000006,-7.031508070999806],[155.86801191500015,-7.048516533999873],[155.86793053500017,-7.061944268999866],[155.86207116,-7.075778903999861],[155.85824629000004,-7.092950127999885],[155.85092207099999,-7.099297783999916],[155.83415774800008,-7.104180596999882],[155.81560306100008,-7.105889580999886],[155.8030705090001,-7.103204033999901],[155.78663170700005,-7.117852471999825],[155.77003014400012,-7.117608330999872],[155.75294030000006,-7.115492445999863],[155.73487389400023,-7.124281507999839],[155.72559655000012,-7.119561455999829],[155.71412194100006,-7.10857512799987],[155.70687910200004,-7.103204033999901],[155.67855879,-7.094496351999837],[155.67286217500012,-7.089532158999873],[155.67448978000002,-7.075941664999917],[155.70069420700005,-7.020684502999899],[155.7088322270001,-7.025485934999892],[155.71192467500018,-7.010674737999835],[155.71794681100008,-6.992445570999848],[155.73487389400023,-6.986504815999822],[155.73145592500023,-6.97861093499985],[155.73194420700023,-6.972426039999874],[155.73487389400023,-6.966078382999854],[155.74740644600016,-6.970879815999837],[155.78256269600004,-7.000746351999823],[155.81674238400004,-7.020684502999899]]],[[[156.10254967500018,-6.878187757999882],[156.09791100400005,-6.890883070999848],[156.1128035820001,-6.912692966999899],[156.11841881600017,-6.91822682099982],[156.12631269600016,-6.922458591999842],[156.14527428500017,-6.927911065999879],[156.15259850400017,-6.931329033999887],[156.14275149800008,-6.937269789999903],[156.13209069100006,-6.938734632999868],[156.12142988399998,-6.936455987999892],[156.11158287900017,-6.931329033999887],[156.10914147200006,-6.94687265399989],[156.10434004000015,-6.96209075299987],[156.0963647800002,-6.975762627999899],[156.08366946700002,-6.986504815999822],[156.08253014400012,-6.97877369599982],[156.08073978000013,-6.974786065999837],[156.07862389400012,-6.971449476999808],[156.07683353000013,-6.966078382999854],[156.07007897200018,-6.974053643999895],[156.06226647200018,-6.979099216999842],[156.05298912900005,-6.981133721999868],[156.042735222,-6.980401299999841],[156.05860436300023,-6.969414971999868],[156.0734155610002,-6.955743096999839],[156.07667076900023,-6.947523695999848],[156.07203209700006,-6.940687757999825],[156.06568444100012,-6.933770440999822],[156.06373131600006,-6.925062757999839],[156.06714928500017,-6.910902601999823],[156.07146243600008,-6.906426690999851],[156.08025149800014,-6.904554945999877],[156.08716881600006,-6.901625257999868],[156.08179772200018,-6.895684502999842],[156.07325280000023,-6.890801690999865],[156.0699975920002,-6.890883070999848],[156.05713951900006,-6.872002862999821],[156.04688561300023,-6.851657809999921],[156.04965254000004,-6.831719658999845],[156.07683353000013,-6.815199476999865],[156.09791100400005,-6.815199476999865],[156.09791100400005,-6.822035414999874],[156.08415774800014,-6.825453382999882],[156.0734155610002,-6.833184502999899],[156.06641686300023,-6.844903252999885],[156.06373131600006,-6.859633070999877],[156.072520379,-6.867933851999865],[156.08969160200004,-6.872328382999839],[156.10254967500018,-6.878187757999882]]],[[[156.5815535820001,-6.649672132999868],[156.591075066,-6.649834893999838],[156.60084069100006,-6.64625416499986],[156.60515384200008,-6.643975518999881],[156.64307701900006,-6.655043226999837],[156.66960696700002,-6.674981377999913],[156.72103925900004,-6.733330987999821],[156.73511803500017,-6.745538018999881],[156.78028405000012,-6.775811455999872],[156.82309004000004,-6.787286065999822],[156.88550866000017,-6.829522393999852],[156.9272567070001,-6.84937916499986],[156.96338951900023,-6.856052341999899],[156.98047936300011,-6.864678643999824],[156.99284915500002,-6.868829033999859],[157.003754102,-6.875258070999863],[157.00847415500013,-6.88730234199987],[157.0123804050002,-6.894626559999878],[157.02149498800011,-6.895765882999825],[157.0327254570001,-6.895196221999854],[157.0426538420002,-6.897149346999896],[157.052500847,-6.90545012799987],[157.07398522200006,-6.934991143999838],[157.11207116000006,-6.966078382999854],[157.12045332099999,-6.980726820999863],[157.12330162900005,-6.998223565999908],[157.1251733730002,-7.041192315999865],[157.13624108200023,-7.086114190999865],[157.15251712300008,-7.124281507999839],[157.1622827480002,-7.136976820999806],[157.17269941500004,-7.147637627999828],[157.18189537900017,-7.160414320999877],[157.18726647200006,-7.178887627999899],[157.20264733200005,-7.169691664999917],[157.2076929050002,-7.164727471999868],[157.21558678500017,-7.182224216999913],[157.22877037900005,-7.195245049999912],[157.24610436300011,-7.203545830999886],[157.26612389400006,-7.20623137799987],[157.27963300900015,-7.212497653999918],[157.28931725400005,-7.226820570999806],[157.29517662900017,-7.243910414999945],[157.297129754,-7.257745049999855],[157.30274498800011,-7.266371351999851],[157.31592858200017,-7.272637627999899],[157.34489993600008,-7.281996351999837],[157.35621178500006,-7.288506768999838],[157.36850019599999,-7.298272393999866],[157.37940514400006,-7.310235283999901],[157.38648522200006,-7.322930596999868],[157.39275149800008,-7.322930596999868],[157.39519290500013,-7.306329033999901],[157.402598504,-7.305759372999845],[157.41309655000006,-7.311944268999895],[157.42408287900005,-7.316094658999845],[157.44556725400017,-7.316176039999917],[157.45557701900023,-7.314222914999874],[157.49187259200002,-7.300957940999851],[157.51140384200014,-7.300225518999824],[157.5249129570001,-7.309991143999852],[157.52979576900017,-7.333184502999885],[157.52979576900017,-7.357598565999837],[157.52637780000023,-7.370863539999874],[157.51343834700006,-7.376560153999847],[157.4855249360002,-7.377618096999896],[157.47348066499998,-7.384698174999869],[157.44792728000013,-7.43222421699987],[157.44605553500006,-7.420505466999884],[157.44174238400015,-7.414239190999837],[157.43555748800006,-7.413506768999895],[157.42750084700006,-7.417901299999883],[157.4143986340001,-7.407484632999896],[157.3901473320001,-7.402032158999859],[157.34489993600008,-7.398044528999876],[157.32545006600006,-7.391778252999828],[157.31202233200005,-7.378838799999826],[157.30795332100004,-7.360284112999821],[157.31690514400023,-7.336602471999896],[157.308441602,-7.339613539999903],[157.30250084700018,-7.344333591999899],[157.29029381600017,-7.357110283999859],[157.2825626960001,-7.353448174999897],[157.27800540500002,-7.356540622999887],[157.27662194100006,-7.370782158999887],[157.25757897200018,-7.359795830999829],[157.221934441,-7.347832940999894],[157.20093834700018,-7.336602471999896],[157.14795983200023,-7.332289320999806],[157.13892662900005,-7.333184502999885],[157.1324975920002,-7.342950127999828],[157.1183374360002,-7.342461846999839],[157.10425866000006,-7.332207940999822],[157.09343509200008,-7.302015882999811],[157.08269290500002,-7.287530205999858],[157.06910241000017,-7.274346612999906],[157.056895379,-7.268324476999808],[157.04802493600008,-7.273125908999887],[157.0284936860002,-7.28101978999986],[157.01465905000006,-7.282647393999881],[157.02279707099999,-7.268324476999808],[157.01351972700016,-7.251885674999897],[156.99854576900012,-7.238702080999858],[156.97925866000017,-7.229913018999881],[156.95753014400012,-7.226739190999822],[156.94385826900017,-7.221612237999821],[156.92774498800011,-7.208754164999888],[156.83432050900004,-7.099786065999894],[156.83008873800011,-7.090508721999854],[156.82764733200017,-7.078057549999841],[156.82325280000006,-7.067071221999868],[156.81397545700023,-7.062269789999888],[156.80062910200004,-7.058770440999894],[156.79322350400005,-7.050225518999866],[156.7830509770001,-7.028090101999808],[156.74390709700006,-6.973890882999839],[156.73170006600017,-6.966078382999854],[156.72201582100004,-6.956475518999866],[156.6870223320001,-6.897149346999896],[156.6705835300002,-6.88567473799985],[156.62305748800011,-6.860935153999876],[156.60816491000006,-6.856215101999865],[156.59620201900012,-6.850762627999842],[156.48462975400005,-6.753838799999869],[156.482188347,-6.750420830999858],[156.4611108730002,-6.733330987999821],[156.45443769600004,-6.719414971999839],[156.44662519600004,-6.664971612999835],[156.44695071700008,-6.644789320999806],[156.45443769600004,-6.630791924999841],[156.4878035820001,-6.602959893999881],[156.50489342500023,-6.599867445999806],[156.5280054050002,-6.603122653999847],[156.54802493600008,-6.610528252999828],[156.55982506600006,-6.623467705999843],[156.56674238400015,-6.626722914999874],[156.57398522200018,-6.631931247999873],[156.57715905000023,-6.640801690999822],[156.5815535820001,-6.649672132999868]]]]}},{type:"Feature",id:"SHN",properties:{name:"Saint Helena"},geometry:{type:"MultiPolygon",coordinates:[[[[-9.895375128999945,-40.38640715899989],[-9.92516028599988,-40.39788176899984],[-9.965077277999939,-40.38274504999984],[-10.039377407999922,-40.338636976999936],[-10.039377407999922,-40.33180103999983],[-10.030018683999913,-40.31373463299998],[-10.022206183999913,-40.307224217],[-10.008656378999945,-40.304457289999945],[-9.962757941999882,-40.30185312299986],[-9.949940558999941,-40.304457289999945],[-9.943104620999918,-40.312269789999846],[-9.932362433999913,-40.33904387799994],[-9.926380988999881,-40.348809502999885],[-9.906361456999917,-40.364190362999835],[-9.900013800999886,-40.37216562299997],[-9.895375128999945,-40.38640715899989]]],[[[-12.263783331999946,-37.149021091999984],[-12.276600714999887,-37.14918385199995],[-12.304107225999928,-37.12558359199991],[-12.335316535999908,-37.104261976999936],[-12.325591600999957,-37.09465911299988],[-12.307362433999884,-37.070082289999945],[-12.296620245999861,-37.059177341999884],[-12.291900193999936,-37.05575937299996],[-12.244984503999916,-37.059177341999884],[-12.227935350999957,-37.0681291649999],[-12.213124152999882,-37.08001067499987],[-12.19127356699994,-37.09050872199984],[-12.195708787999905,-37.09856536299996],[-12.20030676999994,-37.10409921699997],[-12.205474412999934,-37.108005466999884],[-12.211740688999896,-37.11101653399989],[-12.244781053999958,-37.137872002999956],[-12.263783331999946,-37.149021091999984]]],[[[-5.666656053999901,-15.902113539999931],[-5.657704230999855,-15.919528903999904],[-5.651966925999886,-15.934502862999935],[-5.650380011999857,-15.948907158999901],[-5.653553839999916,-15.96355559699991],[-5.662749803999901,-15.979587497999901],[-5.673939581999889,-15.9882138],[-5.6869197259999,-15.994805596999882],[-5.701975063999925,-16.00514088299998],[-5.704335089999859,-15.999444268999909],[-5.707753058999884,-15.996351820999834],[-5.711659308999884,-15.994317315999893],[-5.715646938999953,-15.990899346999967],[-5.729888475999871,-16.00481536299995],[-5.746490037999905,-16.01384856599988],[-5.763742641999926,-16.015720309999935],[-5.780181443999908,-16.008233330999957],[-5.78954016799986,-15.99529387799987],[-5.787180141999897,-15.984470309999878],[-5.780384894999884,-15.973402601999922],[-5.776519334999875,-15.960137627999984],[-5.770130988999938,-15.945245049999855],[-5.755116339999916,-15.929945570999891],[-5.737049933999884,-15.917168877999856],[-5.721831834999904,-15.908949476999936],[-5.709584113999938,-15.906996351999894],[-5.679676886999886,-15.907321873000015],[-5.666656053999901,-15.902113539999931]]],[[[-14.373646613999881,-7.885349216999899],[-14.369984503999916,-7.889336846999882],[-14.364572719999984,-7.889336846999882],[-14.356271938999896,-7.884698174999855],[-14.347401495999861,-7.899834893999852],[-14.31041419199991,-7.927504164999945],[-14.29478919199994,-7.945489190999879],[-14.305246548999918,-7.952080987999864],[-14.328480597999942,-7.962334893999881],[-14.339466925999886,-7.969984632999825],[-14.350331183999884,-7.974704684999921],[-14.378529425999943,-7.976006768999824],[-14.391021287999877,-7.97966887799987],[-14.406402147999898,-7.973890882999825],[-14.411000128999945,-7.963067315999822],[-14.412261522999927,-7.950372002999856],[-14.41771399599989,-7.939222914999931],[-14.406605597999942,-7.924086195999848],[-14.390614386999857,-7.889336846999882],[-14.37669837099989,-7.877862237999835],[-14.373646613999881,-7.885349216999899]]]]}},{type:"Feature",id:"ASM",properties:{name:"American Samoa"},geometry:{type:"MultiPolygon",coordinates:[[[[-168.16047115799995,-14.520928643999966],[-168.1615697909999,-14.532891533999901],[-168.1730850899999,-14.52369557099992],[-168.16352291599992,-14.519789320999934],[-168.16047115799995,-14.520928643999966]]],[[[-170.62006588399993,-14.25457122199991],[-170.59101315,-14.264825127999927],[-170.5762426419999,-14.252536716999884],[-170.56725012899986,-14.258558851999894],[-170.5684708319999,-14.270928643999838],[-170.58417721299995,-14.277764580999943],[-170.6423233709999,-14.280694268999952],[-170.65929114499986,-14.28525156],[-170.68358313699994,-14.30282968500002],[-170.72179114499988,-14.35344817499984],[-170.74864661399988,-14.374688408999916],[-170.7554825509999,-14.367120049999869],[-170.79645748599992,-14.339939059999864],[-170.82282467399992,-14.326755467],[-170.83124752499995,-14.319431247999901],[-170.78864498599992,-14.29452890399996],[-170.77257239499994,-14.291436455999886],[-170.7378637359999,-14.29208749799993],[-170.72150631399995,-14.289239190999893],[-170.6984757149999,-14.260511976999936],[-170.66144772,-14.252373956],[-170.62006588399993,-14.25457122199991]]],[[[-169.4401342439999,-14.245293877999956],[-169.44713294199988,-14.255629164999874],[-169.46015377499987,-14.250420830999957],[-169.46808834499993,-14.258721612999949],[-169.47618567599986,-14.262383722],[-169.48497473899994,-14.261976820999891],[-169.49486243399994,-14.257256768999895],[-169.49836178299992,-14.266045830999943],[-169.50426184799986,-14.270603122999901],[-169.51252193899995,-14.271742445999848],[-169.52281653599988,-14.270928643999838],[-169.52550208199995,-14.258965752999899],[-169.52928626199986,-14.248793226999936],[-169.5347794259999,-14.24114348799992],[-169.54267330599987,-14.236748955999843],[-169.52753658799986,-14.226006768999923],[-169.50645911399985,-14.22226327899989],[-169.4638565749999,-14.22323984199987],[-169.4440404939999,-14.230645440999936],[-169.4401342439999,-14.245293877999956]]],[[[-169.63560950399986,-14.177015882999868],[-169.66014563699989,-14.189141533999859],[-169.66974850199986,-14.187920830999843],[-169.67621822799995,-14.174899997999859],[-169.67617753799988,-14.174899997999859],[-169.66816158799992,-14.16912200299997],[-169.65819251199994,-14.16887786299985],[-169.6471654939999,-14.172133070999891],[-169.63560950399986,-14.177015882999868]]],[[[-171.07347571499992,-11.062107028999918],[-171.08153235599994,-11.066094658999901],[-171.08653723899988,-11.060316664999931],[-171.0856420559999,-11.051364841999913],[-171.07282467399995,-11.052504164999945],[-171.07347571499992,-11.062107028999918]]]]}},{type:"Feature",id:"WSM",properties:{name:"Samoa"},geometry:{type:"MultiPolygon",coordinates:[[[[-171.5700170559999,-13.938164971999925],[-171.56427975199992,-13.949395440999936],[-171.5194799469999,-13.944756768999909],[-171.46934973899988,-13.969414972],[-171.43769283799992,-14.00611744599982],[-171.4481908839999,-14.037530205999929],[-171.44530188699986,-14.041436455999843],[-171.4407445949999,-14.051853123000015],[-171.46617591099994,-14.05282968499999],[-171.53693600199995,-14.045668226999865],[-171.57921301999988,-14.049493096999967],[-171.5988256499999,-14.047784112999963],[-171.61949622299994,-14.037530205999929],[-171.63581295499986,-14.046156507999854],[-171.65241451699993,-14.045179945999877],[-171.68403072799993,-14.037530205999929],[-171.70014400899987,-14.038995049999983],[-171.74299068899995,-14.051853123000015],[-171.75328528599988,-14.051527601999894],[-171.76203365799995,-14.04876067499994],[-171.76805579299986,-14.043226820999834],[-171.77033443899992,-14.034844658999958],[-171.77452551999988,-14.02629973799985],[-171.7843725249999,-14.022230726999965],[-171.80443274599995,-14.017754815999908],[-171.82221432199992,-14.008477471999868],[-171.8379613919999,-14.003187757999981],[-171.85407467399995,-14.001885674999983],[-171.89350338399993,-14.007012627999984],[-171.91112219999985,-14.006442967000012],[-171.9266251289999,-14.001153252999956],[-171.94098873599995,-13.99041106599985],[-171.9619034499999,-13.958103123],[-171.97240149599986,-13.946221612999878],[-171.98200436099995,-13.949395440999936],[-171.9888402989999,-13.949395440999936],[-172.00629635299993,-13.92498137799997],[-172.01801510299993,-13.917901299999926],[-172.0406388009999,-13.915215752999856],[-172.06102454299986,-13.906182549999926],[-172.0636694,-13.885023695999934],[-172.05561275899993,-13.861911716999884],[-172.04405676999988,-13.846368096999882],[-171.96519934799994,-13.818536065999922],[-171.8801977199999,-13.805352471999967],[-171.8345434239999,-13.807386976999894],[-171.79230709499996,-13.816501559999892],[-171.65021725199995,-13.871270440999908],[-171.60692298099985,-13.87615325299997],[-171.5851537749999,-13.883884372999901],[-171.56757565,-13.896742445999834],[-171.5574438139999,-13.915215752999856],[-171.55907141799992,-13.925388278999975],[-171.5657445949999,-13.931410414999903],[-171.5700170559999,-13.938164971999925]]],[[[-172.28050696499986,-13.493584893999923],[-172.22276770699995,-13.558363539999931],[-172.22187252499992,-13.56259530999995],[-172.22358150899984,-13.573907158999845],[-172.22276770699995,-13.578301690999908],[-172.21751868399994,-13.582777601999965],[-172.20531165299988,-13.587660414999945],[-172.20103919199988,-13.592543226999922],[-172.19758053299995,-13.603122653999876],[-172.1956680979999,-13.61386484199997],[-172.1948949859999,-13.636895440999865],[-172.19025631399995,-13.656019789999931],[-172.18138587099992,-13.667657158999845],[-172.17564856699994,-13.680271092],[-172.1806127589999,-13.702406507999896],[-172.19066321499986,-13.717950127999899],[-172.2021378249999,-13.730157158999958],[-172.21149654899995,-13.744561455999929],[-172.21532141799995,-13.767673434999892],[-172.21235104099995,-13.790622653999975],[-172.2129613919999,-13.800957940999893],[-172.2190649079999,-13.805352471999967],[-172.2427872389999,-13.805108330999929],[-172.2532445949999,-13.802911065999936],[-172.26378333199995,-13.79802825299987],[-172.2795304029999,-13.784844658999916],[-172.2877091139999,-13.77499765399999],[-172.29755611899992,-13.769789320999905],[-172.3184301419999,-13.77125416499996],[-172.36864173099988,-13.788995049999954],[-172.52318274599992,-13.805352471999967],[-172.53290768099995,-13.798597914999931],[-172.5431615879999,-13.78525155999992],[-172.55113684799994,-13.77752044099999],[-172.56737219999988,-13.76881275799984],[-172.57514400899987,-13.762790623],[-172.5784805979999,-13.754001559999864],[-172.58055579299992,-13.744805596999967],[-172.58995520699995,-13.724786065999908],[-172.59211178299995,-13.712660415],[-172.5971166659999,-13.700616143999909],[-172.60895748599995,-13.693047783999958],[-172.6225479809999,-13.687758070999891],[-172.63304602799988,-13.681898695999848],[-172.6545304029999,-13.649183851999823],[-172.6674698559999,-13.633884372999859],[-172.6933487619999,-13.624118747999916],[-172.70348059799989,-13.616631768999852],[-172.71873938699994,-13.602797132999854],[-172.72187252499992,-13.597832940999979],[-172.72301184799989,-13.587334893999838],[-172.72557532499988,-13.581963799999954],[-172.73127193899995,-13.578871351999979],[-172.74449622299989,-13.580010674999912],[-172.7497452459999,-13.578301690999908],[-172.76117916599992,-13.56503671699997],[-172.77647864499988,-13.542087497999901],[-172.78258216099988,-13.520277601999851],[-172.7665502589999,-13.510511976999908],[-172.7323705719999,-13.510511976999908],[-172.69513912699992,-13.524183851999851],[-172.66120357999986,-13.525160414999917],[-172.6389867829999,-13.522067966999927],[-172.6153458319999,-13.509372653999876],[-172.60399329299992,-13.506442966999856],[-172.58185787699992,-13.504489841999899],[-172.56920325399986,-13.50139739399999],[-172.54222571499992,-13.487888279000018],[-172.53062903599988,-13.483982028999932],[-172.45185299399992,-13.483982028999932],[-172.43146725199995,-13.480889580999957],[-172.38923092399992,-13.466973565999965],[-172.36615963399987,-13.46282317499994],[-172.34443111899986,-13.462985934999907],[-172.3223770819999,-13.46689218499999],[-172.30077063699989,-13.476495049999883],[-172.28050696499986,-13.493584893999923]]]]}},{type:"Feature",id:"MNP",properties:{name:"Northern Mariana Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[145.23682701900023,14.129095770000134],[145.22901451900017,14.119940497000144],[145.20997155000018,14.110663153000104],[145.199473504,14.113918361000145],[145.18962649800008,14.121771552000126],[145.17164147200006,14.126166083000115],[145.14226321700002,14.122707424000112],[145.12623131600006,14.123236395000092],[145.11931399800002,14.129584052000112],[145.13070722700004,14.146918036000102],[145.15723717500006,14.163763739000103],[145.18637129000004,14.176418361000088],[145.20573978000007,14.181382554000123],[145.25245201900023,14.200384833000129],[145.27995853000007,14.202785549000083],[145.29053795700023,14.181382554000123],[145.28736412900017,14.169582424000154],[145.28207441499998,14.161037502000141],[145.27361087300002,14.155829169000143],[145.2604272800002,14.154120184000135],[145.24984785200004,14.150051174000083],[145.24284915500007,14.140366929000123],[145.23682701900023,14.129095770000134]]],[[[145.645762566,14.929754950000131],[145.62582441500004,14.915269273000177],[145.60645592500012,14.92812734600011],[145.60181725400017,14.941107489000117],[145.5979110040001,14.968654690000136],[145.59213300900004,14.98273346600017],[145.57984459700018,14.998602606000105],[145.57715905000012,15.005845445000134],[145.57846113399998,15.017482815000136],[145.590098504,15.04043203300013],[145.61109459700006,15.066799221000124],[145.63306725400017,15.082098700000174],[145.64730879000015,15.072088934000107],[145.65259850400005,15.05927155200007],[145.65121504000015,15.046576239000103],[145.6479598320001,15.032945054000066],[145.64730879000015,15.017482815000136],[145.65137780000012,15.008734442000062],[145.66504967500023,14.992987372000101],[145.66781660200004,14.98273346600017],[145.66138756600012,14.956976630000142],[145.645762566,14.929754950000131]]],[[[145.78451582100004,15.168280341000141],[145.77979576900012,15.159165757000139],[145.77361087300002,15.154608466000099],[145.76612389400017,15.155015367000104],[145.75717207100004,15.16083405200007],[145.74496504000015,15.149847723000107],[145.73878014400012,15.136664130000057],[145.73943118600002,15.122707424000083],[145.74691816500004,15.109320380000085],[145.7526147800002,15.096014716000155],[145.73853600400005,15.09642161700016],[145.72103925899998,15.102362372000101],[145.7163192070001,15.105617580000143],[145.69410241000006,15.100490627000127],[145.68555748800011,15.102484442000076],[145.68213951900012,15.116522528000118],[145.683848504,15.131293036000102],[145.69581139400023,15.168280341000141],[145.69695071700008,15.182562567000133],[145.6964624360002,15.193670966000155],[145.69825280000018,15.20319245000016],[145.70582116,15.212347723000136],[145.7111108730002,15.215521552000112],[145.72999108200023,15.222886460000097],[145.73340905000023,15.227687893000095],[145.7340600920002,15.23924388200011],[145.736094597,15.243394273000149],[145.74838300900015,15.249335028000175],[145.77442467500023,15.257391669000114],[145.78785241000006,15.267279364000132],[145.80111738400015,15.272162177000098],[145.8165796230002,15.27016836100016],[145.82374108200023,15.26239655200007],[145.8118595710001,15.250230210000083],[145.8004663420002,15.243231512000179],[145.79273522200012,15.232245184000135],[145.77588951900012,15.189520575000117],[145.77654056100008,15.180853583000129],[145.78451582100004,15.168280341000141]]],[[[145.69703209700006,16.341782945000162],[145.6691186860002,16.339178778000147],[145.65601647200006,16.340277411000116],[145.64380944100017,16.344631252000013],[145.63379967500006,16.353216864000117],[145.62818444100017,16.364081122000115],[145.62940514400012,16.373683986000074],[145.63770592500006,16.379950262000037],[145.65414472700016,16.38117096600014],[145.66716556100008,16.377427476000108],[145.69792728000007,16.373724677000084],[145.70948326900006,16.367499091000113],[145.71762129,16.35260651200015],[145.71119225400017,16.344956773000135],[145.69703209700006,16.341782945000162]]],[[[145.80453535200016,16.69306061400006],[145.7892358730002,16.675482489000146],[145.7690535820001,16.694769598000065],[145.78589928500017,16.700100002000127],[145.80453535200016,16.69306061400006]]],[[[145.86817467500023,17.30174388200011],[145.8549910820001,17.285793361000103],[145.83594811300011,17.305161851000108],[145.85124759200008,17.30939362200003],[145.86817467500023,17.30174388200011]]],[[[145.86695397200006,17.575018622000144],[145.85425866000017,17.56688060100005],[145.83220462300008,17.57746002800009],[145.8269149100001,17.59320709800015],[145.834239129,17.60578034100014],[145.85059655000012,17.606878973000093],[145.86296634200008,17.598537502000042],[145.86890709700018,17.586737372000144],[145.86695397200006,17.575018622000144]]],[[[145.75814863400004,18.06118398600016],[145.74366295700017,18.053290106000176],[145.71949303500006,18.05418528900016],[145.7130674370001,18.077465158000066],[145.739512566,18.090969143000066],[145.7507662630001,18.11372564200009],[145.75669677200008,18.16175080300009],[145.77111816800013,18.175209014000032],[145.81169681100013,18.173895575000174],[145.82496178500006,18.167710679000024],[145.83521569100017,18.157945054000052],[145.83912194100017,18.145086981000034],[145.83562259200008,18.128322658000016],[145.826426629,18.119330145],[145.81430097700004,18.113023179000052],[145.80201256600006,18.104193427],[145.75814863400004,18.06118398600016]]],[[[145.69361412900005,18.727728583],[145.67823326900012,18.72260163],[145.66163170700023,18.724269924000012],[145.63551721600018,18.747217909000156],[145.63255503600024,18.786913627000118],[145.65037179100003,18.808902361000136],[145.68832441500015,18.80735911700016],[145.70191491000006,18.791652736000017],[145.70801842500012,18.779689846000068],[145.70964603000002,18.76683177300005],[145.70948326900006,18.74843984600001],[145.70508873800011,18.73712799700003],[145.69361412900005,18.727728583]]],[[[145.4137475920002,19.662420966000084],[145.40560957099999,19.652777411000116],[145.3917749360002,19.660549221000124],[145.38209069100006,19.672796942],[145.38209069100006,19.684149481000148],[145.39722741000006,19.688910223000065],[145.40992272200018,19.6844750020001],[145.41537519600004,19.674383856000034],[145.4137475920002,19.662420966000084]]],[[[145.24537194100017,20.035793361000074],[145.24586022200006,20.030422268000123],[145.25245201900023,20.03143952],[145.26148522200006,20.034613348000065],[145.26937910200004,20.036200262000094],[145.27279707100004,20.032375393000066],[145.27076256600012,20.02415599200016],[145.26579837300002,20.017564195000105],[145.25863691500004,20.012640692000147],[145.25074303500006,20.009711005000113],[145.240000847,20.013251044000086],[145.23113040500007,20.020209052],[145.2267358730002,20.02977122599999],[145.22925866,20.040961005],[145.23878014400012,20.050441799000097],[145.24341881600006,20.045558986000017],[145.24537194100017,20.035793361000074]]],[[[144.92579186300023,20.525336005],[144.91570071700008,20.517157294000086],[144.90512129000004,20.52659739800002],[144.902110222,20.540025132],[144.90674889400023,20.551499742000047],[144.91968834700006,20.555405992000132],[144.93181399800002,20.549221096000068],[144.93246504,20.537502346000068],[144.92579186300023,20.525336005]]]]}},{type:"Feature",id:"STP",properties:{name:"Sao Tome and Principe"},geometry:{type:"MultiPolygon",coordinates:[[[[6.616221550000148,.078111070000162],[6.582855665000096,.077337958000143],[6.57837975400011,.078111070000162],[6.567718946000099,.042141018000095],[6.557302280000101,.028265692000105],[6.544200066000116,.043931382000082],[6.536957227000102,.026434637000037],[6.526621941000087,.02411530200007],[6.516368035000085,.033636786000059],[6.510101759000122,.051418361000131],[6.511729363000143,.052720445000134],[6.51661217500012,.06997304900014],[6.516937696000127,.078111070000162],[6.513682488000086,.088283596000025],[6.50961347700013,.092678127000099],[6.50570722700013,.094875393000081],[6.502696160000141,.098578192000119],[6.467295769000117,.212469794000157],[6.461680535000113,.222154039000131],[6.46631920700014,.231024481000162],[6.468109571000127,.239813544000143],[6.468516472000147,.259955145000077],[6.470876498000109,.267889716000056],[6.490244988000114,.290961005000099],[6.494313998000081,.29999420800003],[6.495371941000116,.306382554000137],[6.497813347000147,.312689520000077],[6.533050977000102,.348130601000165],[6.540782097000118,.351874091000113],[6.578298373000052,.364569403000161],[6.609548373000109,.390366929000095],[6.641856316000116,.410793361000074],[6.68140709700009,.407131252000113],[6.703868035000085,.391831773000149],[6.727061394000117,.366929429000038],[6.746104363000114,.338080145000106],[6.756521030000101,.310858466000099],[6.760915561000076,.284165757],[6.760508660000085,.268296617000061],[6.756521030000101,.250067450000159],[6.748545769000145,.230698960000055],[6.740082227000102,.218573309000149],[6.715586785000085,.1954613300001],[6.703135613000143,.180405992000175],[6.674571160000141,.133368231000162],[6.668467644000089,.131008205000114],[6.65919030000012,.128851630000113],[6.653330925000091,.124579169000114],[6.66000410200013,.107326565000108],[6.652598504000139,.103216864000146],[6.641449415000125,.101019598000065],[6.633636915000125,.098578192000119],[6.61817467500012,.081203518000137],[6.616221550000148,.078111070000162]]],[[[7.434418165000125,1.615220445000134],[7.435557488000143,1.592596747000172],[7.430511915000125,1.572739976000079],[7.425547722000147,1.562730210000083],[7.418223504000054,1.558498440000065],[7.40577233200014,1.55646393400005],[7.40211022200009,1.550726629999986],[7.402517123000109,1.542059637000079],[7.401377800000148,1.531195380000085],[7.398773634000065,1.534979559000107],[7.395681186000076,1.542385158000101],[7.39405358200014,1.545396226000193],[7.387380405000101,1.542466539000174],[7.381032748000081,1.537990627000028],[7.372243686000104,1.55414459799999],[7.358409050000091,1.55890534100017],[7.343760613000086,1.559881903000147],[7.332530144000089,1.565334377000085],[7.329356316000116,1.596258856000119],[7.330088738000143,1.614650783000073],[7.339366082000112,1.613104559000121],[7.35596764400006,1.620021877000042],[7.364024285000113,1.62938060100015],[7.366465691000144,1.641791083000086],[7.366547071000127,1.658107815000108],[7.371836785000085,1.677191473000093],[7.385264519000089,1.69232819200009],[7.403005405000073,1.699774481000162],[7.42123457100007,1.69570547100011],[7.448741082000112,1.693182684000092],[7.459727410000141,1.68829987200013],[7.462738477000073,1.674546617000104],[7.457367384000094,1.669989325000074],[7.446136915000096,1.665472723000107],[7.434825066000116,1.658880927000126],[7.42872155000012,1.647853908000087],[7.443532748000109,1.645453192000133],[7.45671634200005,1.638332424000097],[7.461761915000096,1.630804755000128],[7.452647332000083,1.627346096000125],[7.438243035000113,1.623928127000127],[7.434418165000125,1.615220445000134]]]]}},{type:"Feature",id:"SPM",properties:{name:"Saint Pierre and Miquelon "},geometry:{type:"MultiPolygon",coordinates:[[[[-56.168080206999946,46.757269598],[-56.195790167999945,46.75275299700006],[-56.22191321499989,46.754624742000104],[-56.240305141999926,46.765692450000145],[-56.2189021479999,46.788275458000115],[-56.20750891799992,46.79783763200011],[-56.191883917999945,46.80662669499999],[-56.180246548999946,46.809556382],[-56.161366339999915,46.81159088700004],[-56.14753170499992,46.80784739799999],[-56.15094967399992,46.793646552000084],[-56.15648352799994,46.78925202],[-56.16079667899993,46.784369208000115],[-56.16380774599995,46.778876044000086],[-56.16519120999993,46.77252838700015],[-56.15021725199989,46.76691315300015],[-56.14476477799985,46.765692450000145],[-56.168080206999946,46.757269598]]],[[[-56.273793097999885,46.99909088700004],[-56.28034420499998,46.989691473],[-56.291859503999916,46.985419012000094],[-56.297596808999884,46.987534898000106],[-56.300282355999855,46.99225495000012],[-56.30199133999986,46.99697500200004],[-56.30516516799992,46.99909088700004],[-56.312163865999906,46.99835846600011],[-56.32970130099994,46.99225495000012],[-56.34357662699995,46.99591705900015],[-56.35020911399991,46.99461497600008],[-56.35016842399992,46.985419012000094],[-56.345773891999926,46.979925848000065],[-56.33971106699994,46.97907135600015],[-56.33385169199988,46.97955963700015],[-56.32591712099992,46.976467190000065],[-56.32005774599989,46.97638580900009],[-56.31371008999986,46.97565338700015],[-56.30858313699994,46.97174713700015],[-56.306752081999946,46.96499258000004],[-56.309681769999884,46.96015045800014],[-56.3138728509999,46.956691799000126],[-56.316029425999915,46.95380280200011],[-56.316029425999915,46.91278717700003],[-56.311756964999915,46.90013255400014],[-56.30117753799993,46.89630768400012],[-56.273793097999885,46.89545319200012],[-56.23550370999993,46.87201569200015],[-56.24925696499986,46.84227122600011],[-56.28929602799991,46.81378815300012],[-56.34626217399992,46.78359609600001],[-56.358509894999884,46.78074778900016],[-56.37067623599995,46.786200262000094],[-56.37791907499988,46.79901764500012],[-56.375070766999954,46.806952216000084],[-56.375111456999946,46.81395091400016],[-56.391102667999945,46.824042059000035],[-56.39635169199991,46.836371161],[-56.37987219999994,46.85150788],[-56.34276282499994,46.875555731000034],[-56.32827714799987,46.91494375200001],[-56.336781378999916,46.954250393],[-56.38499915299985,47.03563060099999],[-56.38817298099991,47.05182526200004],[-56.391102667999945,47.087836005],[-56.396595831999974,47.10398997600005],[-56.39590410099993,47.11359284100003],[-56.38768469999994,47.12539297100001],[-56.37743079299992,47.134263414000046],[-56.36628170499998,47.14020416900017],[-56.354644334999875,47.14126211100013],[-56.34276282499994,47.13564687700013],[-56.36131751199994,47.12596263200008],[-56.37169348899994,47.11615631700015],[-56.371164516999954,47.105902411000116],[-56.35700436099992,47.09467194200003],[-56.34032141799989,47.089056708000115],[-56.30479895699992,47.083156643000066],[-56.25332597599993,47.053697007],[-56.25169837099989,47.04389069200006],[-56.25230872299994,47.03021881700012],[-56.2560115229999,47.01801178600006],[-56.26935787699992,47.008449611000074],[-56.273793097999885,46.99909088700004]]]]}},{type:"Feature",id:"VCT",properties:{name:"Saint Vincent and the Grenadines"},geometry:{type:"MultiPolygon",coordinates:[[[[-61.432728644999884,12.587836005000113],[-61.44322669199994,12.585150458000129],[-61.455922003999916,12.586086330000114],[-61.459828253999916,12.591457424000083],[-61.45567786399988,12.596584377000099],[-61.45466061099992,12.600775458000115],[-61.45677649599992,12.604437567000076],[-61.45555579299992,12.607082424000154],[-61.44831295499998,12.609930731000105],[-61.441395636999886,12.60789622600008],[-61.42935136599996,12.600490627000084],[-61.42662512899989,12.591864325000174],[-61.432728644999884,12.587836005000113]]],[[[-61.33389238199996,12.69358958500014],[-61.344105597999885,12.693060614000075],[-61.35309811099992,12.696478583000072],[-61.35065670499998,12.699530341000155],[-61.33926347599993,12.701971747000101],[-61.33397376199994,12.708563544000171],[-61.3358455069999,12.717433986000117],[-61.33535722599993,12.72719961100016],[-61.3263240229999,12.733140367000175],[-61.31940670499992,12.73379140800013],[-61.31631425699993,12.7300479190001],[-61.314361131999874,12.72089264500012],[-61.31969153599994,12.713934637000136],[-61.3255102199999,12.708197333000072],[-61.32835852799994,12.699448960000083],[-61.33389238199996,12.69358958500014]]],[[[-61.18761145699992,12.856390692000076],[-61.19082597599987,12.855861721000096],[-61.19176184799994,12.868231512000122],[-61.18317623599992,12.883490302000098],[-61.17495683499993,12.88178131700009],[-61.18358313699994,12.86200592700007],[-61.18761145699992,12.856390692000076]]],[[[-61.22642981699994,12.99315013200011],[-61.24242102799994,12.982245184000135],[-61.23497473899994,12.982245184000135],[-61.24242102799994,12.974798895000063],[-61.24754798099994,12.982123114000075],[-61.255482550999915,12.98672109600011],[-61.26561438699986,12.988714911000145],[-61.27721106699988,12.988470770000106],[-61.27721106699988,12.995917059000163],[-61.26231848899991,12.991359768000123],[-61.23961341099988,12.995794989000103],[-61.2395727199999,13.003851630000142],[-61.246205206999946,13.01121653900013],[-61.249256964999944,13.016343492000146],[-61.240956183999884,13.024237372000115],[-61.21312415299991,13.041815497000144],[-61.20148678299989,13.051174221000096],[-61.200062628999916,13.047308661000088],[-61.19961503799993,13.043687242000118],[-61.19823157499985,13.040228583000115],[-61.19399980399993,13.036851304000109],[-61.20832271999993,13.02326080900015],[-61.22642981699994,12.99315013200011]]],[[[-61.16734778599991,13.146063544000128],[-61.18521074099996,13.132513739000075],[-61.21019446499989,13.144191799000154],[-61.27135169199994,13.186509507000068],[-61.27936764199998,13.215887762000165],[-61.2766820949999,13.249904690000093],[-61.26292883999989,13.27643463700015],[-61.265533006999874,13.28021881700009],[-61.270375128999945,13.290106512000179],[-61.243397589999915,13.294378973000107],[-61.23184160099987,13.316961981000176],[-61.22496497299997,13.345770575000117],[-61.21202551999997,13.368882554000066],[-61.19912675699993,13.377020575000174],[-61.187123175999915,13.380438544000086],[-61.17638098899991,13.380764065000108],[-61.151234503999916,13.376776434000135],[-61.14403235599991,13.37409088700015],[-61.14004472599993,13.367377020000106],[-61.13377844999988,13.352769273000177],[-61.123931443999936,13.308254299000097],[-61.12441972599993,13.246975002000084],[-61.1380102199999,13.186916408000073],[-61.16734778599991,13.146063544000128]]]]}},{type:"Feature",id:"SAU",properties:{name:"Saudi Arabia"},geometry:{type:"Polygon",coordinates:[[[42.779332,16.347891],[42.649573,16.774635],[42.347989,17.075806],[42.270888,17.474722],[41.754382,17.833046],[41.221391,18.6716],[40.939341,19.486485],[40.247652,20.174635],[39.801685,20.338862],[39.139399,21.291905],[39.023696,21.986875],[39.066329,22.579656],[38.492772,23.688451],[38.02386,24.078686],[37.483635,24.285495],[37.154818,24.858483],[37.209491,25.084542],[36.931627,25.602959],[36.639604,25.826228],[36.249137,26.570136],[35.640182,27.37652],[35.130187,28.063352],[34.632336,28.058546],[34.787779,28.607427],[34.83222,28.957483],[34.956037,29.356555],[36.068941,29.197495],[36.501214,29.505254],[36.740528,29.865283],[37.503582,30.003776],[37.66812,30.338665],[37.998849,30.5085],[37.002166,31.508413],[39.004886,32.010217],[39.195468,32.161009],[40.399994,31.889992],[41.889981,31.190009],[44.709499,29.178891],[46.568713,29.099025],[47.459822,29.002519],[47.708851,28.526063],[48.416094,28.552004],[48.807595,27.689628],[49.299554,27.461218],[49.470914,27.109999],[50.152422,26.689663],[50.212935,26.277027],[50.113303,25.943972],[50.239859,25.60805],[50.527387,25.327808],[50.660557,24.999896],[50.810108,24.754743],[51.112415,24.556331],[51.389608,24.627386],[51.579519,24.245497],[51.617708,24.014219],[52.000733,23.001154],[55.006803,22.496948],[55.208341,22.70833],[55.666659,22.000001],[54.999982,19.999994],[52.00001,19.000003],[49.116672,18.616668],[48.183344,18.166669],[47.466695,17.116682],[47.000005,16.949999],[46.749994,17.283338],[46.366659,17.233315],[45.399999,17.333335],[45.216651,17.433329],[44.062613,17.410359],[43.791519,17.319977],[43.380794,17.579987],[43.115798,17.08844],[43.218375,16.66689],[42.779332,16.347891]]]}},{type:"Feature",id:"SDN",properties:{name:"Sudan"},geometry:{type:"Polygon",coordinates:[[[33.963393,9.464285],[33.824963,9.484061],[33.842131,9.981915],[33.721959,10.325262],[33.206938,10.720112],[33.086766,11.441141],[33.206938,12.179338],[32.743419,12.248008],[32.67475,12.024832],[32.073892,11.97333],[32.314235,11.681484],[32.400072,11.080626],[31.850716,10.531271],[31.352862,9.810241],[30.837841,9.707237],[29.996639,10.290927],[29.618957,10.084919],[29.515953,9.793074],[29.000932,9.604232],[28.966597,9.398224],[27.97089,9.398224],[27.833551,9.604232],[27.112521,9.638567],[26.752006,9.466893],[26.477328,9.55273],[25.962307,10.136421],[25.790633,10.411099],[25.069604,10.27376],[24.794926,9.810241],[24.537415,8.917538],[24.194068,8.728696],[23.88698,8.61973],[23.805813,8.666319],[23.459013,8.954286],[23.394779,9.265068],[23.55725,9.681218],[23.554304,10.089255],[22.977544,10.714463],[22.864165,11.142395],[22.87622,11.38461],[22.50869,11.67936],[22.49762,12.26024],[22.28801,12.64605],[21.93681,12.58818],[22.03759,12.95546],[22.29658,13.37232],[22.18329,13.78648],[22.51202,14.09318],[22.30351,14.32682],[22.56795,14.94429],[23.02459,15.68072],[23.88689,15.61084],[23.83766,19.58047],[23.85,20],[25,20.00304],[25,22],[29.02,22],[32.9,22],[36.86623,22],[37.18872,21.01885],[36.96941,20.83744],[37.1147,19.80796],[37.48179,18.61409],[37.86276,18.36786],[38.41009,17.998307],[37.904,17.42754],[37.16747,17.26314],[36.85253,16.95655],[36.75389,16.29186],[36.32322,14.82249],[36.42951,14.42211],[36.27022,13.56333],[35.86363,12.57828],[35.26049,12.08286],[34.83163,11.31896],[34.73115,10.91017],[34.25745,10.63009],[33.96162,9.58358],[33.963393,9.464285]]]}},{type:"Feature",id:"SSD",properties:{name:"South Sudan"},geometry:{type:"Polygon",coordinates:[[[33.963393,9.464285],[33.97498,8.68456],[33.8255,8.37916],[33.2948,8.35458],[32.95418,7.78497],[33.56829,7.71334],[34.0751,7.22595],[34.25032,6.82607],[34.70702,6.59422],[35.298007,5.506],[34.620196,4.847123],[34.005,4.249885],[33.39,3.79],[32.68642,3.79232],[31.88145,3.55827],[31.24556,3.7819],[30.83385,3.50917],[29.95349,4.1737],[29.715995,4.600805],[29.159078,4.389267],[28.696678,4.455077],[28.428994,4.287155],[27.979977,4.408413],[27.374226,5.233944],[27.213409,5.550953],[26.465909,5.946717],[26.213418,6.546603],[25.796648,6.979316],[25.124131,7.500085],[25.114932,7.825104],[24.567369,8.229188],[23.88698,8.61973],[24.194068,8.728696],[24.537415,8.917538],[24.794926,9.810241],[25.069604,10.27376],[25.790633,10.411099],[25.962307,10.136421],[26.477328,9.55273],[26.752006,9.466893],[27.112521,9.638567],[27.833551,9.604232],[27.97089,9.398224],[28.966597,9.398224],[29.000932,9.604232],[29.515953,9.793074],[29.618957,10.084919],[29.996639,10.290927],[30.837841,9.707237],[31.352862,9.810241],[31.850716,10.531271],[32.400072,11.080626],[32.314235,11.681484],[32.073892,11.97333],[32.67475,12.024832],[32.743419,12.248008],[33.206938,12.179338],[33.086766,11.441141],[33.206938,10.720112],[33.721959,10.325262],[33.842131,9.981915],[33.824963,9.484061],[33.963393,9.464285]]]}},{type:"Feature",id:"SEN",properties:{name:"Senegal"},geometry:{type:"Polygon",coordinates:[[[-16.713729,13.594959],[-17.126107,14.373516],[-17.625043,14.729541],[-17.185173,14.919477],[-16.700706,15.621527],[-16.463098,16.135036],[-16.12069,16.455663],[-15.623666,16.369337],[-15.135737,16.587282],[-14.577348,16.598264],[-14.099521,16.304302],[-13.435738,16.039383],[-12.830658,15.303692],[-12.17075,14.616834],[-12.124887,13.994727],[-11.927716,13.422075],[-11.553398,13.141214],[-11.467899,12.754519],[-11.513943,12.442988],[-11.658301,12.386583],[-12.203565,12.465648],[-12.278599,12.35444],[-12.499051,12.33209],[-13.217818,12.575874],[-13.700476,12.586183],[-15.548477,12.62817],[-15.816574,12.515567],[-16.147717,12.547762],[-16.677452,12.384852],[-16.841525,13.151394],[-15.931296,13.130284],[-15.691001,13.270353],[-15.511813,13.27857],[-15.141163,13.509512],[-14.712197,13.298207],[-14.277702,13.280585],[-13.844963,13.505042],[-14.046992,13.794068],[-14.376714,13.62568],[-14.687031,13.630357],[-15.081735,13.876492],[-15.39877,13.860369],[-15.624596,13.623587],[-16.713729,13.594959]]]}},{type:"Feature",id:"SLB",properties:{name:"Solomon Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[162.119025,-10.482719],[162.398646,-10.826367],[161.700032,-10.820011],[161.319797,-10.204751],[161.917383,-10.446701],[162.119025,-10.482719]]],[[[160.852229,-9.872937],[160.462588,-9.89521],[159.849447,-9.794027],[159.640003,-9.63998],[159.702945,-9.24295],[160.362956,-9.400304],[160.688518,-9.610162],[160.852229,-9.872937]]],[[[161.679982,-9.599982],[161.529397,-9.784312],[160.788253,-8.917543],[160.579997,-8.320009],[160.920028,-8.320009],[161.280006,-9.120011],[161.679982,-9.599982]]],[[[159.875027,-8.33732],[159.917402,-8.53829],[159.133677,-8.114181],[158.586114,-7.754824],[158.21115,-7.421872],[158.359978,-7.320018],[158.820001,-7.560003],[159.640003,-8.020027],[159.875027,-8.33732]]],[[[157.538426,-7.34782],[157.33942,-7.404767],[156.90203,-7.176874],[156.491358,-6.765943],[156.542828,-6.599338],[157.14,-7.021638],[157.538426,-7.34782]]]]}},{type:"Feature",id:"SLE",properties:{name:"Sierra Leone"},geometry:{type:"Polygon",coordinates:[[[-11.438779,6.785917],[-11.708195,6.860098],[-12.428099,7.262942],[-12.949049,7.798646],[-13.124025,8.163946],[-13.24655,8.903049],[-12.711958,9.342712],[-12.596719,9.620188],[-12.425929,9.835834],[-12.150338,9.858572],[-11.917277,10.046984],[-11.117481,10.045873],[-10.839152,9.688246],[-10.622395,9.26791],[-10.65477,8.977178],[-10.494315,8.715541],[-10.505477,8.348896],[-10.230094,8.406206],[-10.695595,7.939464],[-11.146704,7.396706],[-11.199802,7.105846],[-11.438779,6.785917]]]}},{type:"Feature",id:"SGP",properties:{name:"Singapore"},geometry:{type:"MultiPolygon",coordinates:[[[[103.96078535200013,1.39109935100015],[103.98568769600007,1.38544342700007],[103.99952233200003,1.38031647300005],[104.00342858200003,1.374172268000066],[103.9918725920001,1.354925848000036],[103.97486412900014,1.334458726000065],[103.95435631600009,1.318101304000052],[103.93189537900008,1.311468817000076],[103.90723717500009,1.308742580000114],[103.88770592500003,1.301255601000136],[103.85271243600005,1.277289130000085],[103.84693444100009,1.271918036000045],[103.84408613400012,1.268500067000034],[103.83887780000003,1.266262111000046],[103.82601972700007,1.264308986000089],[103.80160566500007,1.264797268000081],[103.78956139400003,1.26788971600007],[103.78443444100003,1.273871161000088],[103.77588951900009,1.287583726000108],[103.75513756600003,1.297105210000012],[103.7301538420001,1.302923895000063],[103.70875084700003,1.305243231000119],[103.66529381600009,1.304103908000087],[103.6476343110001,1.308417059000092],[103.64039147200003,1.322251695000091],[103.64470462300005,1.338039455000043],[103.67457116000003,1.38031647300005],[103.67888431100005,1.399237372000073],[103.68384850400008,1.40989817900001],[103.69507897200009,1.421332098000065],[103.70834394600013,1.429388739000089],[103.7179468110001,1.430975653000118],[103.73975670700008,1.428127346000082],[103.76221764400009,1.430975653000118],[103.79004967500003,1.444281317000048],[103.80494225400008,1.448635158000045],[103.83155358200003,1.447088934000092],[103.85718834700009,1.438706773000135],[103.93246504000007,1.401109117000132],[103.96078535200013,1.39109935100015]]]]}},{type:"Feature",id:"SLV",properties:{name:"El Salvador"},geometry:{type:"Polygon",coordinates:[[[-87.793111,13.38448],[-87.904112,13.149017],[-88.483302,13.163951],[-88.843228,13.259734],[-89.256743,13.458533],[-89.812394,13.520622],[-90.095555,13.735338],[-90.064678,13.88197],[-89.721934,14.134228],[-89.534219,14.244816],[-89.587343,14.362586],[-89.353326,14.424133],[-89.058512,14.340029],[-88.843073,14.140507],[-88.541231,13.980155],[-88.503998,13.845486],[-88.065343,13.964626],[-87.859515,13.893312],[-87.723503,13.78505],[-87.793111,13.38448]]]}},{type:"Feature",id:"SOM",properties:{name:"Somaliland"},geometry:{type:"Polygon",coordinates:[[[48.93813,9.451749],[48.486736,8.837626],[47.78942,8.003],[46.948328,7.996877],[43.67875,9.18358],[43.296975,9.540477],[42.92812,10.02194],[42.55876,10.57258],[42.776852,10.926879],[43.145305,11.46204],[43.47066,11.27771],[43.666668,10.864169],[44.117804,10.445538],[44.614259,10.442205],[45.556941,10.698029],[46.645401,10.816549],[47.525658,11.127228],[48.021596,11.193064],[48.378784,11.375482],[48.948206,11.410622],[48.942005,11.394266],[48.938491,10.982327],[48.938233,9.9735],[48.93813,9.451749]]]}},{type:"Feature",id:"SOM",properties:{name:"Somalia"},geometry:{type:"MultiPolygon",coordinates:[[[[50.797863585000215,11.989118646000165],[50.86705530800012,11.942890981000133],[50.9700825890001,11.932322507000094],[51.029307488000114,11.885077216000141],[51.048838738000114,11.878648179000137],[51.12769616000011,11.878648179000137],[51.14722741000011,11.873602606000105],[51.181162957000055,11.855373440000122],[51.19971764400006,11.851304429000066],[51.22291100400011,11.850775458000086],[51.24708092500012,11.847560940000136],[51.26734459700006,11.839422919000114],[51.29269816200011,11.833107906000123],[51.277354363000114,11.800604559000107],[51.26638056600021,11.759286141000175],[51.24935901000006,11.728775444000092],[51.25570771500006,11.681654547000122],[51.2478009820002,11.652391025000114],[51.22954044100018,11.635896993000173],[51.21252904600007,11.607946950000127],[51.18124454700009,11.578828739000144],[51.148122592000135,11.536037502000127],[51.124766472,11.511786200000131],[51.12086022200006,11.505316473000136],[51.121918165000096,11.49412669500012],[51.12663821700019,11.478827216000155],[51.12769616000011,11.470892645000106],[51.12501061300006,11.447984117000189],[51.118418816000116,11.426255601000136],[51.08619225400017,11.357163804000123],[51.08130944100017,11.341498114000146],[51.079356316000116,11.27594635600012],[51.07252037900011,11.233791408000073],[51.085948113000114,11.18797435100008],[51.13094468600016,11.160751984000115],[51.17443966300007,11.158763644000175],[51.18950407800011,11.138306071000116],[51.16439863400015,11.116766669000157],[51.14226321700008,11.068426825000145],[51.13135826900012,11.052883205000143],[51.12378991000017,11.038763739000103],[51.11833743600013,11.01691315300016],[51.11508222700016,10.993353583000115],[51.124522332000055,10.854559637000136],[51.13819420700011,10.676743882000096],[51.16065514400012,10.598456122000101],[51.154307488000114,10.587713934000178],[51.13135826900012,10.58392975500007],[51.10743248800023,10.576564846000082],[51.101898634000094,10.558579820000134],[51.107188347000175,10.515041408000116],[51.10222415500007,10.49469635600012],[51.09229576900006,10.482163804000123],[51.07691491000011,10.475816148000177],[51.05567467500012,10.474066473000093],[51.03581790500013,10.467515367000104],[51.01832116000017,10.452093817000076],[51.01010175900015,10.43402741100006],[51.01840254000015,10.41941966400013],[51.03809655000006,10.416083075000117],[51.19044030000012,10.446112372000158],[51.20093834700012,10.444769598000079],[51.21192467500006,10.441839911000145],[51.22038821700019,10.442043361000103],[51.22388756600017,10.449855861000103],[51.219574415000096,10.461004950000117],[51.210215691000116,10.467108466000099],[51.200856967000135,10.471502997000172],[51.196543816000116,10.477443752000113],[51.19581139400006,10.500311591000113],[51.19304446700002,10.521185614000089],[51.18677819100017,10.541571356000162],[51.17611738400015,10.562811591000155],[51.191742384000094,10.548976955000157],[51.20733970800015,10.538096169000127],[51.220646888000175,10.524928378000155],[51.237965935000176,10.515024253000107],[51.246619897000045,10.509089677000162],[51.25794208900001,10.503801198000104],[51.28055649500001,10.4873300510001],[51.29253239700009,10.480075168000141],[51.3112001760002,10.476054565000183],[51.325879153000045,10.472679851000123],[51.33587133100011,10.474614266000117],[51.3458748570001,10.480493886000147],[51.35720966700009,10.483740236000173],[51.37785594100009,10.481689558000141],[51.39517347200015,10.47902281600011],[51.403077385000216,10.456707060000127],[51.41703781100014,10.447485379000156],[51.410964965000204,10.42981365700011],[51.39750890200011,10.39579316700015],[51.38502037900011,10.391506252000099],[51.38015423800019,10.387339056000187],[51.372569207000055,10.381415106000134],[51.37608015300006,10.367693175000127],[51.3674191920002,10.367725742000161],[51.34945834900023,10.375001636000164],[51.33613051300003,10.374395207000177],[51.320078972,10.378485419000114],[51.30083143900018,10.372565974000082],[51.27287252700009,10.377904658000105],[51.265391472000175,10.396877346000153],[51.262950066000116,10.408596096000139],[51.25660241000011,10.420314846000124],[51.24097741000011,10.425604559000107],[51.09009880800008,10.407313042000112],[51.017125389000086,10.381916048000107],[50.92738876300015,10.327844449000125],[50.909879876000076,10.295634720000152],[50.901703321000156,10.234442450000145],[50.91281386200009,10.176853487000116],[50.88379967500006,10.101263739000075],[50.88868248800017,10.055650132000125],[50.90040123800023,10.024074611000131],[50.901703321000156,10.0116641300001],[50.8997501960001,10.000718492000132],[50.89079837300008,9.986029364000132],[50.87769616000011,9.916652736000088],[50.881195509000094,9.905462958000086],[50.86963951900006,9.884466864000132],[50.86312910200016,9.866034247000101],[50.85401451900006,9.81610748900006],[50.84058678500011,9.77977122600008],[50.83326256600017,9.768784898000106],[50.83863366000011,9.74091217700007],[50.83692467500006,9.730780341000113],[50.83171634200002,9.712062893000137],[50.82447350400011,9.651068427000055],[50.80616295700017,9.624457098000107],[50.805511915000096,9.593939520000077],[50.81299889400006,9.541164455000086],[50.836761915000096,9.477036851000122],[50.84034264400006,9.456122137000165],[50.837412957000225,9.437201239000146],[50.83033287900017,9.419623114000117],[50.76832116000011,9.319281317000133],[50.74830162900017,9.303534247000172],[50.70630944100017,9.285711981000105],[50.68946373800006,9.274847723000121],[50.67676842500012,9.259182033000144],[50.64698326900012,9.211371161000116],[50.64112389400006,9.196356512000179],[50.64918053500017,9.13251373900006],[50.64844811300017,9.110419012000165],[50.633636915000096,9.07318756700009],[50.60450280000012,9.037909247000144],[50.49488366000011,8.951971747000144],[50.464121941000116,8.920558986000117],[50.43970787900017,8.888169664000102],[50.42204837300008,8.857123114000089],[50.407969597,8.816351630000128],[50.38982181100019,8.733547268000095],[50.374278191000116,8.698879299000112],[50.32650800900015,8.641099351000094],[50.31959069100017,8.620347398000177],[50.32260175900015,8.559759833000115],[50.31959069100017,8.541815497000158],[50.30347741000011,8.504584052000084],[50.290212436000076,8.486761786000102],[50.27491295700011,8.47915273600016],[50.25619550900015,8.472560940000093],[50.24610436300006,8.456447658000116],[50.239105665000096,8.436346747000158],[50.23015384200008,8.417669989000089],[50.166026238000114,8.33336009300011],[50.15642337300014,8.320624091000141],[50.14136803500011,8.287990627000099],[50.11304772200006,8.19953034100017],[50.091075066000116,8.161037502000084],[50.05827884200002,8.130316473000093],[49.92937259200008,8.051743882000082],[49.84205162900017,7.962713934000178],[49.824229363000114,7.933905341000141],[49.812510613000114,7.897528387000165],[49.80323326900006,7.826890367000118],[49.808604363000114,7.815008856000162],[49.82341556100019,7.805324611000103],[49.82764733200011,7.782904364000089],[49.825043165000096,7.757757880000114],[49.81934655000012,7.739935614000132],[49.79078209700006,7.699530341000084],[49.760915561000076,7.667303778000147],[49.75220787900017,7.650295315000079],[49.74830162900017,7.606634833000086],[49.74415123800023,7.589056708000143],[49.64079837300008,7.40912506700009],[49.58659915500019,7.314764716000127],[49.52051842500006,7.239650783000116],[49.3670353520001,7.025702216000127],[49.29322350400011,6.880926825000131],[49.247325066000116,6.810614325000103],[49.19792728000007,6.673570054000123],[49.07471764400023,6.415269273000192],[49.072032097000175,6.393296617000175],[49.0740666020001,6.370794989000089],[49.083506707000225,6.329046942000147],[49.08562259200002,6.307359117000161],[49.07129967500006,6.219916083000101],[49.03614342500006,6.144232489000117],[48.95149109298748,5.998720092007446],[48.85010826900023,5.824448960000126],[48.69581139400023,5.587347723000093],[48.64673912900011,5.480047919000128],[48.62012780000006,5.44399648600016],[48.548106316000116,5.375067450000117],[48.44800866000011,5.208726304000123],[48.32886803500017,5.079657294000086],[48.202403191000116,4.908921617000189],[48.05567467500006,4.612941799000097],[47.94849694100017,4.457098700000159],[47.84058678500017,4.341376044000143],[47.57797285200016,4.059881903000175],[47.48926842500006,3.936346747000172],[47.33562259200002,3.778753973000136],[47.20671634200008,3.644598700000088],[47.03980553500017,3.469265041000156],[47.012950066000116,3.441066799000012],[46.83423912900017,3.232489325000074],[46.700043165000096,3.113267320000148],[46.62574303500011,3.023911851000136],[46.487803582000225,2.908840236000074],[46.41431725400011,2.833441473000107],[46.35157311300023,2.788641669000171],[46.349619988000114,2.780178127000141],[46.34489993600019,2.770086981000162],[46.3392033210001,2.761704820000119],[46.33448326900012,2.758246161000031],[46.317637566000116,2.751898505000085],[46.30762780000012,2.736029364000061],[46.29981530000012,2.715765692000147],[46.28939863400015,2.696234442000076],[46.27540123800006,2.685858466000155],[46.236501498000194,2.667629299000083],[46.142344597000175,2.568915106000134],[46.13086998800023,2.554022528000175],[46.114512566000116,2.523260809000092],[46.104991082000225,2.51056549700013],[46.06299889400023,2.484035549000083],[46.04761803500011,2.455064195000176],[46.02702884200008,2.438137111000103],[45.826345248000194,2.308823960000126],[45.71192467500006,2.244330145000149],[45.60564212300008,2.183050848000121],[45.266205274000214,1.987290757000125],[45.232188347,1.96767812700007],[45.210703972000175,1.963120835000041],[45.19971764400012,1.959621486000131],[45.00147545700011,1.866359768000123],[44.831553582000225,1.749701239000032],[44.823985222000175,1.740301825000088],[44.81218509200019,1.735581773000092],[44.67628014400023,1.63760000200007],[44.55005944100017,1.559068101000136],[44.33277428500017,1.389960028000161],[44.221364780000016,1.275620835000126],[44.198415561000076,1.265692450000131],[44.15788821700002,1.240790106000091],[44.14551842500006,1.229559637000179],[44.142100457000055,1.221380927000084],[44.13965905000006,1.21116771000014],[44.1380314460001,1.191595770000077],[44.133962436000076,1.187567450000103],[44.11500084700006,1.182033596000096],[44.11085045700011,1.178290106000148],[44.10377037900017,1.168361721000153],[44.03288821700008,1.097479559000149],[44.01254316500015,1.084214585000041],[43.99097741000017,1.078599351000122],[43.97877037900017,1.068670966000127],[43.93262780000006,1.009833075000131],[43.81983483200017,.949448960000112],[43.781911655000016,.921616929000066],[43.73422285200016,.854966539000088],[43.71729576900012,.845282294000114],[43.703461134000094,.840521552000126],[43.65894616000011,.804917709999984],[43.46762129000015,.620550848000121],[43.285492384000094,.414984442000019],[43.1849064460001,.316270249000141],[43.090179884000094,.223374742000146],[42.89112389400006,.003078518000123],[42.77027428500017,-.129327080999843],[42.71208743600013,-.176690362999878],[42.6477970710001,-.228936455999886],[42.58033287900011,-.297539971999896],[42.55591881600017,-.332126559999892],[42.553558790000096,-.342380466999927],[42.553965691000116,-.351250908999958],[42.55079186300023,-.357598565999908],[42.526621941000116,-.362725518999909],[42.51929772200006,-.369317315999893],[42.47974694100017,-.422051690999893],[42.4744572270001,-.438653252999856],[42.48650149800014,-.449395440999865],[42.47641035200016,-.465997002999828],[42.472829623000194,-.469903252999913],[42.47291100400017,-.463799737999835],[42.472422722000175,-.458672783999916],[42.47046959700006,-.454034112999892],[42.465993686000076,-.449395440999865],[42.41260826900023,-.490980726999837],[42.40455162900011,-.50090911299985],[42.39795983200011,-.517347914999931],[42.38266035200016,-.535251559999892],[42.34986412900017,-.56560637799987],[42.25025475400011,-.685642184999892],[42.24675540500019,-.694268487999892],[42.24675540500019,-.701918226999823],[42.245290561000076,-.707452080999929],[42.236338738000114,-.709567966999856],[42.232595248000194,-.713067315999851],[42.192230665000096,-.776136976999851],[42.16651451900006,-.802666924999897],[42.151621941000116,-.813897393999909],[42.13550866000017,-.82170989399998],[42.11646569100017,-.82626718499985],[42.08659915500007,-.825616143999895],[42.07154381600017,-.828708591999884],[42.06251061300023,-.839288018999838],[42.08171634200019,-.843438408999873],[42.080902540000096,-.862888278999876],[42.07195071700008,-.884454033999873],[42.065684441000116,-.894463799999869],[42.05144290500019,-.902032158999901],[42.03695722700016,-.920017184999935],[42.025563998000194,-.941582940999865],[42.0208439460001,-.960056247999887],[42.01636803500011,-.968031507999925],[41.98316491000011,-.994073174999912],[41.971934441000116,-.999769789999974],[41.96794681100002,-.992852471999896],[41.96363366000011,-.950860283999901],[41.9646916020001,-.911553643999909],[41.95883222700016,-.894463799999869],[41.95281009200002,-.894463799999869],[41.95541425900015,-.909600518999866],[41.952403191000116,-.920830987999864],[41.94752037900017,-.930840752999842],[41.9451603520001,-.942966403999932],[41.94646243600019,-.954766533999987],[41.95142662900017,-.969414971999825],[41.95281009200002,-.980401299999869],[41.95557701900012,-.992933851999879],[41.962250196000156,-.998955987999963],[41.96924889400023,-1.003187757999811],[41.97315514400023,-1.011163018999852],[41.97169030000006,-1.023614190999879],[41.96143639400023,-1.044122002999828],[41.95883222700016,-1.055840752999913],[41.953461134000094,-1.068617445999863],[41.930023634000094,-1.089939059999921],[41.92465254000015,-1.097100518999952],[41.92302493600002,-1.110121351999851],[41.918304884000094,-1.121026299999841],[41.911631707000055,-1.130954684999921],[41.873871290000096,-1.176039320999891],[41.869476759000094,-1.186211846999854],[41.8728947270001,-1.195489190999979],[41.8807072270001,-1.194919528999918],[41.890147332000225,-1.189385674999912],[41.89747155000006,-1.183200778999847],[41.885427280000016,-1.20964934699991],[41.862803582000055,-1.21233489399998],[41.841970248000194,-1.196954033999944],[41.8352970710001,-1.168877862999864],[41.82911217500006,-1.168877862999864],[41.830251498000194,-1.189222914999945],[41.841970248000194,-1.224867445999891],[41.84278405000012,-1.243910414999974],[41.836599155000016,-1.262302341999842],[41.73226972700016,-1.431084893999881],[41.708750847,-1.460056247999873],[41.68970787900011,-1.489515882999939],[41.652110222,-1.565118096999854],[41.63331139400006,-1.580336195999934],[41.610606316000116,-1.593194268999866],[41.57504316500015,-1.65260182099999],[41.554860873000024,-1.66969166499986],[41.56104576900012,-1.66969166499986],[41.53510482597747,-1.696283164977643],[41.53510332100009,-1.696268761999818],[41.535943705000165,-1.676312018999795],[41.53858036300008,-1.613698831999912],[41.53496301200019,-1.594785257999874],[41.522870727000196,-1.57277109799989],[41.484526815000066,-1.523161721999912],[41.43419397000011,-1.458049417999831],[41.38375777200011,-1.39304046599986],[41.3321846920002,-1.326377867999852],[41.28298872800022,-1.262815855999875],[41.237306763000134,-1.20390472399987],[41.18221968600008,-1.132694600999827],[41.13106001800023,-1.06644541399983],[41.08155399500012,-1.00257334399987],[41.05612919100011,-.969603779999986],[41.03060103300007,-.936737568999959],[41.0052795820001,-.903768004999918],[40.97975142400011,-.870798440999863],[40.97882124800017,-.794834085999909],[40.97789107200006,-.724347431999874],[40.97696089700017,-.653860777999824],[40.97551395600007,-.545236917999901],[40.97406701600019,-.436716409999818],[40.972620076000084,-.328299254999862],[40.97117313700019,-.21967539399985],[40.970449666,-.152185973999821],[40.9696228440001,-.084696552999873],[40.96848596200019,-.002737730999812],[40.96848596200019,.122319234000088],[40.96848596200019,.247272848000122],[40.96848596200019,.372329814000025],[40.96848596200019,.49728342700007],[40.96848596200019,.62234039300013],[40.96848596200019,.747242330000162],[40.96848596200019,.872247620000053],[40.96848596200019,.997201233000098],[40.96848596200019,1.122206523000145],[40.96848596200019,1.230295056000017],[40.96848596200019,1.247211812000117],[40.96848596200019,1.372191264000165],[40.96848596200019,1.497144877000125],[40.96848596200019,1.6221501670001],[40.96848596200019,1.747181295000075],[40.96848596200019,1.87213490800012],[40.96848596200019,1.997166036000095],[40.96848596200019,2.103619487000117],[40.96848596200019,2.210047099000121],[40.96848596200019,2.316500550000143],[40.96848596200019,2.422954000000175],[40.96848596200019,2.497109680000122],[40.96714237500012,2.631726786000101],[40.96590214000017,2.760607808000117],[40.96538537600023,2.814144593000066],[40.97975142400011,2.841894836000023],[41.01396122200006,2.875794576000203],[41.09612674900009,2.957081604000109],[41.17839563000021,3.038420309000102],[41.260664510000055,3.119810690000122],[41.34272668500009,3.201149394000112],[41.39450647000015,3.275150045000117],[41.446182902000174,3.349047343000109],[41.49796268700007,3.423073832000114],[41.549639120000194,3.497022807000107],[41.63356164500007,3.617092998000047],[41.71738081900017,3.737163188000068],[41.80130334400005,3.857181702000162],[41.8850191650001,3.977226054000184],[41.89845503800004,3.996914774000132],[41.91220096800012,4.007973532000136],[41.917471965000146,4.020453389000124],[41.91664514200008,4.051097514000148],[41.92346643100004,4.070553691000143],[41.94124312300019,4.086211650000095],[42.011833130000156,4.129490662000151],[42.068367147000146,4.174552511000101],[42.10288700300012,4.191889954000203],[42.13533980300022,4.20008066800014],[42.22184615100011,4.200959167000164],[42.29729374200022,4.201734314000177],[42.41501265400021,4.221707255000112],[42.56828495200014,4.247855530000123],[42.71866337100013,4.273487040000177],[42.78977014200015,4.285605164000174],[42.83162805200013,4.302322490000123],[42.86893843600015,4.326765442000152],[42.87019486400018,4.328170991000192],[42.89963423700007,4.36110443200009],[42.9147237550001,4.393298849000132],[42.932500447000194,4.463217061000137],[42.94593632000007,4.496858419000162],[42.95255090300017,4.507581279000178],[42.960405721000114,4.51737396200015],[43.0354399010001,4.578894755000164],[43.11925907400004,4.64770192400016],[43.23279219600013,4.701497091000164],[43.34699711100015,4.755653991000187],[43.45934167500016,4.808829041000138],[43.52848474100003,4.841566060000133],[43.640519246000196,4.867352600000132],[43.71648360200001,4.884793396000177],[43.81518558800016,4.907479350000145],[43.84515791900017,4.914352316000105],[43.932284383000166,4.945203146000097],[43.96897465000015,4.953962301000161],[44.029126017000095,4.950448303000201],[44.08100915500009,4.947451071000103],[44.132788940000154,4.944479675000181],[44.18467207800015,4.941430766000167],[44.23645186300021,4.938485209000163],[44.288335001000206,4.93548797700015],[44.34011478700009,4.932439067000118],[44.391997925000084,4.929467672000115],[44.44372603400021,4.926444601000185],[44.49555749500021,4.923473206000097],[44.54744063300021,4.920475972000162],[44.59680771700013,4.917643031000154],[44.5992204180001,4.917504578000163],[44.651103556000095,4.914507345000146],[44.702883341000216,4.911561788000142],[44.75476647900015,4.90856455500014],[44.80654626500021,4.905541484000111],[44.85837772700009,4.902544251000109],[44.91258630400014,4.899391988000147],[44.94152510600006,4.911484273000127],[45.02064172400017,4.996879578000133],[45.02090010600014,4.996879578000133],[45.0777441810001,5.059072164000128],[45.18502445500022,5.176248474000161],[45.29235640400012,5.293476461000125],[45.399585002000066,5.410704448000161],[45.506865275000195,5.527880758000109],[45.51847745300003,5.540564097000157],[45.61414554900014,5.645057068000142],[45.7214258220001,5.762336731000119],[45.828706096000104,5.879513042000141],[45.935986369000176,5.996689352000175],[45.996809530000206,6.059191996000081],[46.057839396000105,6.12172048000015],[46.11881758600006,6.184223124000141],[46.17989912900006,6.246725769000122],[46.240980673000166,6.309228414000103],[46.30206221500006,6.371731059000183],[46.362937053000195,6.434259542000177],[46.42391524200016,6.496736348000155],[46.46696287700016,6.53829240600011],[46.48804569500007,6.55864471500017],[46.50840620900013,6.578307597000119],[46.55320967600019,6.621457418000134],[46.598064820000076,6.664633077000161],[46.61842533400008,6.684244284000101],[46.6670011800002,6.731114807000139],[46.71557702600009,6.777985331000167],[46.7641011960001,6.824881694000112],[46.81272871900009,6.871674704000128],[46.86140791800014,6.918596903000164],[46.909983765000135,6.96546742800011],[46.95855961100014,7.012286276000125],[47.00703210500009,7.05920847600008],[47.0556079510001,7.106079000000122],[47.10428715000009,7.153001201000166],[47.1528629970002,7.199820048000092],[47.20143884300009,7.246690572000205],[47.250118042000025,7.293509420000135],[47.298797241000074,7.340379944000176],[47.34737308700008,7.387302144000131],[47.395948934000074,7.434172669000162],[47.44452478000008,7.481043193000105],[47.493100627000075,7.527913717000132],[47.53238810600007,7.565863750000148],[47.54167647300008,7.574835917000172],[47.590252320000076,7.621654765000187],[47.63893151900018,7.668525289000129],[47.68750736500007,7.715395813000072],[47.73603153500008,7.762214661000186],[47.784659058000074,7.809136862000145],[47.83318322800008,7.855955709000156],[47.881810750000085,7.902826233000099],[47.93059330300011,7.949696757000126],[47.97916914900023,7.996567281000168],[48.03911381000009,8.08749196400008],[48.09905847200011,8.178519999000102],[48.1590031330002,8.2694188440002],[48.219154500000144,8.360317689000098],[48.27909916200022,8.45116485600009],[48.33914717600007,8.542089539000187],[48.39929854400006,8.633117574000124],[48.45924320500009,8.723887227000176],[48.51918786600007,8.814915263000117],[48.579184204000086,8.905839946000128],[48.6393355710002,8.996661275000108],[48.699228556000065,9.087689311000133],[48.759224895000074,9.178510641000116],[48.81932458500009,9.269383647000097],[48.87911421700008,9.36030832900019],[48.93911055500004,9.451233012000117],[48.93911055500004,9.562700993000163],[48.93911055500004,9.563603414000141],[48.93911055500004,9.675999655000169],[48.93911055500004,9.78842173300012],[48.93911055500004,9.90071462000013],[48.93911055500004,10.013033346000157],[48.93911055500004,10.125429586000095],[48.93911055500004,10.23779998800012],[48.93911055500004,10.350118713000143],[48.93911055500004,10.462566631000186],[48.93911055500004,10.574937032000122],[48.93911055500004,10.68733327200016],[48.93911055500004,10.79960032200016],[48.93911055500004,10.912022401000115],[48.93911055500004,11.024366964000137],[48.93911055500004,11.136737366000162],[48.939111999908135,11.249129976335098],[48.93913821700002,11.249131578000117],[48.97681725400011,11.251410223000093],[49.10840905000006,11.276597398000163],[49.2395939460001,11.300279039000173],[49.27808678500011,11.31696198100012],[49.293304884000094,11.33795807500016],[49.30347741000011,11.345445054000137],[49.315928582000225,11.340521552000084],[49.325450066000116,11.335109768000123],[49.33570397200006,11.334621486000131],[49.40007571700008,11.340521552000084],[49.419200066000116,11.344794012000179],[49.435069207000055,11.35106028900013],[49.488617384000094,11.381740627000127],[49.507334832000225,11.38519928600013],[49.52173912900011,11.393784898000149],[49.544444207000225,11.436712958000115],[49.55860436300006,11.453517971000124],[49.57683353000007,11.460028387000122],[49.59961998800006,11.461737372000115],[49.64454186300006,11.460353908000144],[49.65007571700019,11.46214427300012],[49.666026238000114,11.471136786000145],[49.675303582000055,11.473944403000104],[49.686778191000116,11.474351304000109],[49.716319207000055,11.467759507000125],[49.80486087300008,11.458400783000101],[49.85124759200008,11.464911200000174],[49.8807072270001,11.4882266300001],[49.8885197270001,11.48729075700011],[49.90642337300008,11.49872467700007],[49.917979363000114,11.501898505000128],[49.921885613000114,11.503851630000085],[49.934418165000096,11.512884833000086],[49.94214928500011,11.51557038000007],[49.94947350400011,11.514960028000104],[49.956309441000116,11.512518622000158],[49.96111087300014,11.509955145000063],[49.962657097000175,11.508734442000147],[50.053884311000076,11.511379299000126],[50.07252037900011,11.508734442000147],[50.13152103000019,11.539943752000127],[50.15113366000011,11.55792877800016],[50.16187584700006,11.563381252000099],[50.197601759000094,11.562648830000157],[50.206553582000225,11.56679922100011],[50.21436608200011,11.572658596000153],[50.22543379000015,11.578111070000176],[50.26832116000011,11.589300848000107],[50.28891035200016,11.602443752000156],[50.37232506600017,11.668931382000082],[50.41814212300008,11.678045966000155],[50.43702233200011,11.690619208000143],[50.47038821700008,11.727850653000132],[50.500824415000096,11.75482819200009],[50.51270592500006,11.771226304000095],[50.51758873800023,11.792669989000132],[50.518890821000156,11.815252997000115],[50.52295983200011,11.837958075000145],[50.529470248000194,11.859523830000157],[50.538584832000055,11.878648179000137],[50.56120853000007,11.907904364000075],[50.57593834700006,11.920965887000136],[50.589854363000114,11.926459052000084],[50.60206139400012,11.927964585000126],[50.62745201900012,11.940130927000112],[50.632090691000116,11.946763414000173],[50.636485222,11.951605536000145],[50.64112389400006,11.954413153000104],[50.64714603000007,11.95404694200009],[50.65593509200002,11.948431708000086],[50.661468946000156,11.947577216000084],[50.682953321000156,11.95335521000014],[50.72486412900017,11.97113678600013],[50.7615666020001,11.978745835000083],[50.77198326900006,11.985785223000136],[50.797863585000215,11.989118646000165]]]]}},{type:"Feature",id:"SRB",properties:{name:"Republic of Serbia"},geometry:{type:"Polygon",coordinates:[[[20.874313,45.416375],[21.483526,45.18117],[21.562023,44.768947],[22.145088,44.478422],[22.459022,44.702517],[22.705726,44.578003],[22.474008,44.409228],[22.65715,44.234923],[22.410446,44.008063],[22.500157,43.642814],[22.986019,43.211161],[22.604801,42.898519],[22.436595,42.580321],[22.545012,42.461362],[22.380526,42.32026],[21.91708,42.30364],[21.576636,42.245224],[21.54332,42.32025],[21.66292,42.43922],[21.77505,42.6827],[21.63302,42.67717],[21.43866,42.86255],[21.27421,42.90959],[21.143395,43.068685],[20.95651,43.13094],[20.81448,43.27205],[20.63508,43.21671],[20.49679,42.88469],[20.25758,42.81275],[20.3398,42.89852],[19.95857,43.10604],[19.63,43.21378],[19.48389,43.35229],[19.21852,43.52384],[19.454,43.5681],[19.59976,44.03847],[19.11761,44.42307],[19.36803,44.863],[19.00548,44.86023],[19.390476,45.236516],[19.072769,45.521511],[18.82982,45.90888],[19.596045,46.17173],[20.220192,46.127469],[20.762175,45.734573],[20.874313,45.416375]]]}},{type:"Feature",id:"SUR",properties:{name:"Suriname"},geometry:{type:"Polygon",coordinates:[[[-57.147436,5.97315],[-55.949318,5.772878],[-55.84178,5.953125],[-55.03325,6.025291],[-53.958045,5.756548],[-54.478633,4.896756],[-54.399542,4.212611],[-54.006931,3.620038],[-54.181726,3.18978],[-54.269705,2.732392],[-54.524754,2.311849],[-55.097587,2.523748],[-55.569755,2.421506],[-55.973322,2.510364],[-56.073342,2.220795],[-55.9056,2.021996],[-55.995698,1.817667],[-56.539386,1.899523],[-57.150098,2.768927],[-57.281433,3.333492],[-57.601569,3.334655],[-58.044694,4.060864],[-57.86021,4.576801],[-57.914289,4.812626],[-57.307246,5.073567],[-57.147436,5.97315]]]}},{type:"Feature",id:"SVK",properties:{name:"Slovakia"},geometry:{type:"Polygon",coordinates:[[[18.853144,49.49623],[18.909575,49.435846],[19.320713,49.571574],[19.825023,49.217125],[20.415839,49.431453],[20.887955,49.328772],[21.607808,49.470107],[22.558138,49.085738],[22.280842,48.825392],[22.085608,48.422264],[21.872236,48.319971],[20.801294,48.623854],[20.473562,48.56285],[20.239054,48.327567],[19.769471,48.202691],[19.661364,48.266615],[19.174365,48.111379],[18.777025,48.081768],[18.696513,47.880954],[17.857133,47.758429],[17.488473,47.867466],[16.979667,48.123497],[16.879983,48.470013],[16.960288,48.596982],[17.101985,48.816969],[17.545007,48.800019],[17.886485,48.903475],[17.913512,48.996493],[18.104973,49.043983],[18.170498,49.271515],[18.399994,49.315001],[18.554971,49.495015],[18.853144,49.49623]]]}},{type:"Feature",id:"SVN",properties:{name:"Slovenia"},geometry:{type:"Polygon",coordinates:[[[13.806475,46.509306],[14.632472,46.431817],[15.137092,46.658703],[16.011664,46.683611],[16.202298,46.852386],[16.370505,46.841327],[16.564808,46.503751],[15.768733,46.238108],[15.67153,45.834154],[15.323954,45.731783],[15.327675,45.452316],[14.935244,45.471695],[14.595109,45.634941],[14.411968,45.466166],[13.71506,45.500324],[13.93763,45.591016],[13.69811,46.016778],[13.806475,46.509306]]]}},{type:"Feature",id:"SYC",properties:{name:"Seychelles"},geometry:{type:"MultiPolygon",coordinates:[[[[46.50066165500007,-9.746514580999886],[46.49048912900011,-9.755547783999887],[46.47966556100019,-9.75107187299993],[46.47852623800006,-9.740411065999893],[46.48698978000013,-9.730157158999873],[46.499359571000156,-9.722751559999878],[46.50977623800023,-9.719984632999825],[46.50757897200006,-9.73186614399988],[46.50066165500007,-9.746514580999886]]],[[[47.515798373000024,-9.700127862999821],[47.50733483200011,-9.713067315999837],[47.50733483200011,-9.698174737999878],[47.51295006600017,-9.694431247999844],[47.515798373000024,-9.700127862999821]]],[[[46.52003014400006,-9.385511976999837],[46.50709069100017,-9.39072030999992],[46.47291100400017,-9.416436455999872],[46.45460045700011,-9.426446221999853],[46.3807072270001,-9.424574476999894],[46.29981530000012,-9.449314059999864],[46.23438561300006,-9.45232512799987],[46.20736738400015,-9.385511976999837],[46.23047936300006,-9.413669528999904],[46.27409915500019,-9.42636484199987],[46.32048587300008,-9.423760674999883],[46.35157311300023,-9.405938408999901],[46.3689884770001,-9.406833591999899],[46.396006707000055,-9.398370049999855],[46.42156009200008,-9.386895440999822],[46.43458092500006,-9.378106377999842],[46.4407658210001,-9.385511976999837],[46.44776451900012,-9.378106377999842],[46.45769290500019,-9.382989190999822],[46.46876061300023,-9.385511976999837],[46.46876061300023,-9.378106377999842],[46.45875084700006,-9.371677341999842],[46.45281009200002,-9.362399997999873],[46.449554884000094,-9.350844007999854],[46.44776451900012,-9.337660414999903],[46.495453321000156,-9.357598565999893],[46.515961134000094,-9.371758721999825],[46.525157097000175,-9.3812802059999],[46.52003014400006,-9.385511976999837]]],[[[46.4270939460001,-9.337660414999903],[46.41065514400006,-9.353285414999888],[46.37940514400012,-9.357028903999918],[46.347992384000094,-9.352634372999844],[46.33106530000012,-9.34392669099985],[46.31836998800023,-9.350844007999854],[46.29566491000011,-9.347588799999897],[46.283864780000016,-9.351332289999931],[46.28207441500015,-9.348077080999886],[46.2825626960001,-9.34579843499992],[46.28174889400012,-9.344496351999823],[46.27637780000006,-9.34392669099985],[46.27613366000011,-9.339288018999838],[46.27800540500019,-9.338474216999913],[46.28093509200019,-9.33879973799985],[46.31519616000017,-9.326429945999806],[46.35368899800008,-9.328871351999837],[46.39307701900023,-9.335870049999826],[46.4270939460001,-9.337660414999903]]],[[[56.27247155000012,-7.153578382999854],[56.24708092500012,-7.192640882999825],[56.25879967500006,-7.140232028999847],[56.26937910200016,-7.119805596999868],[56.28744550900015,-7.110039971999839],[56.282969597000175,-7.131931247999859],[56.27247155000012,-7.153578382999854]]],[[[52.74187259200019,-6.994317315999822],[52.747243686000076,-7.005059502999828],[52.743418816000116,-7.004082940999851],[52.742198113000114,-7.001722914999888],[52.742198113000114,-6.998467705999858],[52.74187259200019,-6.994317315999822]]],[[[55.38184655000006,-5.865492445999848],[55.380056186000076,-5.869073174999826],[55.37989342500006,-5.864922783999873],[55.382823113000114,-5.853936455999829],[55.38184655000006,-5.865492445999848]]],[[[53.344086134000094,-5.434747002999842],[53.34473717500006,-5.441013278999876],[53.34050540500007,-5.436211846999896],[53.33790123800023,-5.431247653999847],[53.33399498800017,-5.420179945999806],[53.3416447270001,-5.429945570999848],[53.344086134000094,-5.434747002999842]]],[[[55.405367642092045,-4.679927412968652],[55.404091248398714,-4.680292096881047],[55.40007972536202,-4.675733547975938],[55.397526937975016,-4.673363102545238],[55.39770927993132,-4.671357341026862],[55.39643288623793,-4.669716263420966],[55.397162254062636,-4.66843986972755],[55.39898567362482,-4.668622211683839],[55.40117377709933,-4.669533921464762],[55.40482061622342,-4.671722024939342],[55.40682637774174,-4.675004180151134],[55.40591466796073,-4.678103993406637],[55.405367642092045,-4.679927412968652]]],[[[55.373822483667965,-4.666434108209259],[55.37291077388696,-4.667892843858866],[55.36981096063144,-4.666616450165463],[55.36488772781374,-4.665887082340561],[55.361970256514354,-4.663698978866151],[55.360511520864776,-4.661328533435452],[55.362699624339285,-4.659322771917076],[55.36616412150718,-4.660599165610648],[55.370540328456144,-4.66388132082227],[55.373822483667965,-4.666434108209259]]],[[[55.49721328543441,-4.628124063209739],[55.49969313603893,-4.629874545989352],[55.50158949238343,-4.628853431034628],[55.50406934298783,-4.629728672424392],[55.506840940722185,-4.636876477107819],[55.50581982576753,-4.639648074842242],[55.50261060733814,-4.639939821972163],[55.49852614751907,-4.638481086322386],[55.49560867621986,-4.635709488588049],[55.491961837095545,-4.634250752938343],[55.49167008996565,-4.629874545989352],[55.493712319875186,-4.627978189644779],[55.49721328543441,-4.628124063209739]]],[[[55.51282175688581,-4.627248821819975],[55.51107127410623,-4.629582798859431],[55.50844554993685,-4.628415810339746],[55.50509045794266,-4.626227706865151],[55.503339975163016,-4.62360198269586],[55.50421521655281,-4.621413879221279],[55.5056739522025,-4.621705626351201],[55.508153802807016,-4.623893729825781],[55.51150889480121,-4.624768971215545],[55.51282175688581,-4.627248821819975]]],[[[55.503777595858,-4.598365855956601],[55.50844554993685,-4.599386970911326],[55.51253000975592,-4.599386970911326],[55.514426366100594,-4.600553959431011],[55.51253000975592,-4.604638419250094],[55.5093207913267,-4.609014626199084],[55.502756480903116,-4.611640350368475],[55.498672021084104,-4.614411948102983],[55.496775664739545,-4.614703695232905],[55.49633804404456,-4.611786223933436],[55.497359158999274,-4.606534775594753],[55.496775664739545,-4.603033810035441],[55.49794265325923,-4.600845706560932],[55.49940138890881,-4.599678718041247],[55.503777595858,-4.598365855956601]]],[[[55.9501440264398,-4.590992880301712],[55.944857225654715,-4.592755147230179],[55.939066920032786,-4.592251642393421],[55.93302486199261,-4.586209584353227],[55.932521357155935,-4.582433298078072],[55.9357941385945,-4.57991577389474],[55.94007392970613,-4.578657011803102],[55.944353720817986,-4.57991577389474],[55.94938876918482,-4.586461336771606],[55.9501440264398,-4.590992880301712]]],[[[55.45718971179414,-4.623999701601946],[55.45668242401328,-4.625802016707283],[55.46441161945066,-4.625395216947439],[55.47566057572399,-4.639937634852799],[55.49766076472352,-4.655384576065416],[55.516384329829606,-4.668022982511957],[55.52855464714858,-4.680193299830862],[55.521533310233764,-4.707810558362226],[55.52527802325497,-4.713895717021757],[55.528086558020874,-4.736832084276657],[55.51966095372316,-4.739172529914839],[55.5168524189572,-4.750406668978471],[55.52574611238268,-4.770066412339745],[55.5271916020001,-4.783786716999884],[55.53463980580793,-4.789726155701104],[55.537916429701596,-4.80376882953064],[55.51966095372316,-4.80376882953064],[55.50421401251057,-4.795811314360634],[55.49110751693652,-4.772874947105734],[55.48689471478761,-4.762108897169739],[55.47800102136213,-4.758832273276113],[55.47097968444743,-4.763513164552649],[55.46349025840507,-4.759768451531556],[55.468171149681524,-4.741512975553022],[55.484778172338196,-4.741601501378014],[55.49157560606406,-4.73636399514902],[55.48502235827695,-4.727470301723571],[55.48034146700044,-4.721385143064126],[55.48174573438351,-4.712959538766484],[55.47800102136213,-4.706406290979217],[55.468171149681524,-4.705470112723944],[55.45834127800097,-4.690959349766857],[55.44897949544779,-4.677852854192508],[55.43540491074597,-4.676448586809599],[55.41808561302301,-4.66615062600124],[55.40919682317244,-4.660781507566767],[55.40170249355518,-4.660533556469517],[55.394427124719556,-4.65786403626737],[55.39489671037907,-4.653859894000021],[55.40007972536202,-4.652940803449781],[55.397526937975016,-4.649840990194178],[55.389503891902024,-4.647288202807289],[55.37965742626673,-4.649476306281784],[55.371269696281075,-4.646923518894965],[55.36561709563867,-4.64272965390208],[55.36725817324455,-4.639265156734098],[55.37491653540533,-4.639994524558986],[55.377651664748356,-4.637806421084491],[55.37473419344897,-4.632700846310598],[55.388409840164655,-4.6195722254636],[55.394609466675746,-4.617019438076611],[55.40685147395928,-4.616065089342627],[55.417617523895245,-4.611384198066162],[55.42229841517181,-4.603426682896085],[55.426117384000094,-4.595472914999945],[55.431651238000114,-4.59156666499986],[55.43433678500017,-4.579522393999937],[55.43369823758135,-4.562544654049418],[55.44061383349893,-4.560510655250241],[55.44752942941645,-4.561120854890035],[55.45489718765705,-4.562234432649817],[55.463859659488634,-4.571383622644589],[55.4672205864255,-4.583426944168281],[55.46311278683598,-4.587908180084057],[55.459936822092146,-4.598546432796837],[55.459936822092146,-4.606479028114165],[55.45884595359556,-4.618115330384711],[55.461767421011444,-4.622547618628516],[55.45718971179414,-4.623999701601946]]],[[[55.26026451900006,-4.500095309999921],[55.241953972,-4.50400156],[55.228037957000225,-4.487481377999856],[55.22144616000017,-4.463474216999899],[55.22543379000015,-4.444919528999904],[55.2420353520001,-4.450372002999927],[55.25993899800008,-4.462985934999921],[55.26921634200019,-4.480157158999845],[55.26026451900006,-4.500095309999921]]],[[[55.651104576023926,-4.353442443139556],[55.64812978060726,-4.353442443139556],[55.64366758748238,-4.349352099441674],[55.64701423232603,-4.346749153452166],[55.6488734794614,-4.348608400587608],[55.651104576023926,-4.353442443139556]]],[[[55.844094428678176,-4.374266011056037],[55.84149148268867,-4.382818547878955],[55.83442634357411,-4.380959300743427],[55.82550195732429,-4.372034914493597],[55.82327086076171,-4.35976388339995],[55.828476752740954,-4.347492852306303],[55.8318233975846,-4.337452917775266],[55.844094428678176,-4.342658809754283],[55.85078771836564,-4.355301690275084],[55.85710915862606,-4.364969775379137],[55.850415868938654,-4.368316420222797],[55.844094428678176,-4.374266011056037]]],[[[55.92367020607318,-4.343030659181437],[55.922554657792006,-4.349723948868743],[55.91883616352115,-4.347864701733386],[55.91772061523986,-4.340427713191843],[55.9199517118025,-4.33410627293145],[55.92478575435442,-4.337081068348113],[55.92367020607318,-4.343030659181437]]],[[[55.66560670368008,-4.33410627293145],[55.660400811700896,-4.334849971785673],[55.6600289622738,-4.330387778660636],[55.663003757690404,-4.328156682098197],[55.66635040253411,-4.329272230379502],[55.66560670368008,-4.33410627293145]]],[[[55.88462601622982,-4.336709218920944],[55.878676425396606,-4.338196616629332],[55.873470533417475,-4.332618875223162],[55.86677724373001,-4.323322639546177],[55.86863649086544,-4.317373048712838],[55.873470533417475,-4.318488596994143],[55.88313861852154,-4.328900380952348],[55.88462601622982,-4.336709218920944]]],[[[55.74666987878331,-4.311423457879684],[55.754478716752004,-4.321091542983737],[55.764518651283225,-4.316629349858701],[55.777161531803955,-4.318488596994143],[55.78703806352323,-4.330592470559793],[55.77092478252334,-4.33132489255982],[55.76823923552328,-4.339625673559809],[55.76799509552333,-4.350286481559749],[55.75912465252341,-4.358424502559757],[55.74675486052328,-4.358098981559735],[55.7327574645233,-4.352239606559792],[55.72331736052328,-4.342555361559732],[55.71763486357108,-4.33011646392977],[55.70410178128597,-4.327859605228966],[55.69200801300266,-4.326297434962754],[55.68457102446112,-4.318860446421127],[55.683766579523336,-4.311549502559799],[55.67717478252334,-4.296412783559802],[55.69011423552328,-4.291774111559789],[55.69695017352328,-4.290553408559774],[55.70443715252324,-4.290227887559752],[55.71867868852328,-4.303248720559736],[55.73215057185163,-4.308817604088276],[55.74666987878331,-4.311423457879684]]],[[[55.87384238284446,-4.296177631369289],[55.87012388857377,-4.296549480796443],[55.86640539430303,-4.288740642827762],[55.86640539430303,-4.283162901421491],[55.869752039146675,-4.283534750848659],[55.87086758742791,-4.289856191108967],[55.87384238284446,-4.296177631369289]]],[[[55.733283299408555,-4.28911249225483],[55.73291144998146,-4.292459137098561],[55.72073014601736,-4.288270654353397],[55.71208743600019,-4.280368747999887],[55.71506267748154,-4.276841461161183],[55.7221278165961,-4.276841461161183],[55.73848919138757,-4.277957009442403],[55.74295138451251,-4.278328858869472],[55.741463986804234,-4.283162901421491],[55.73216775112721,-4.283162901421491],[55.733283299408555,-4.28911249225483]]],[[[55.67527478878415,-4.212139660849388],[55.67192814394039,-4.214742606838897],[55.66449115539879,-4.213998907984831],[55.659285263419605,-4.212883359703525],[55.660400811700896,-4.210280413713932],[55.666722251961204,-4.209908564286948],[55.67044074623212,-4.210652263141014],[55.67527478878415,-4.212139660849388]]],[[[55.659678582000225,-3.791110934999907],[55.6658634770001,-3.811781507999825],[55.658539259000094,-3.811700127999842],[55.651866082000225,-3.801202080999957],[55.659678582000225,-3.791110934999907]]]]}},{type:"Feature",id:"SWE",properties:{name:"Sweden"},geometry:{type:"MultiPolygon",coordinates:[[[[22.183173,65.723741],[21.213517,65.026005],[21.369631,64.413588],[19.778876,63.609554],[17.847779,62.7494],[17.119555,61.341166],[17.831346,60.636583],[18.787722,60.081914],[17.869225,58.953766],[16.829185,58.719827],[16.44771,57.041118],[15.879786,56.104302],[14.666681,56.200885],[14.100721,55.407781],[12.942911,55.361737],[12.625101,56.30708],[11.787942,57.441817],[11.027369,58.856149],[11.468272,59.432393],[12.300366,60.117933],[12.631147,61.293572],[11.992064,61.800362],[11.930569,63.128318],[12.579935,64.066219],[13.571916,64.049114],[13.919905,64.445421],[13.55569,64.787028],[15.108411,66.193867],[16.108712,67.302456],[16.768879,68.013937],[17.729182,68.010552],[17.993868,68.567391],[19.87856,68.407194],[20.025269,69.065139],[20.645593,69.106247],[21.978535,68.616846],[23.539473,67.936009],[23.56588,66.396051],[23.903379,66.006927],[22.183173,65.723741]]],[[[17.061767,57.385783],[17.210083,57.326521],[16.430053,56.179196],[16.364135,56.556455],[17.061767,57.385783]]],[[[19.35791,57.958588],[18.8031,57.651279],[18.825073,57.444949],[18.995361,57.441993],[18.951416,57.370976],[18.693237,57.305756],[18.709716,57.204734],[18.462524,57.127295],[18.319702,56.926992],[18.105468,56.891003],[18.187866,57.109402],[18.072509,57.267163],[18.154907,57.394664],[18.094482,57.545312],[18.660278,57.929434],[19.039306,57.941098],[19.105224,57.993543],[19.374389,57.996454],[19.35791,57.958588]]],[[[20.846557,63.82371],[21.066284,63.829768],[20.9729,63.71567],[20.824584,63.579121],[20.695495,63.59134],[20.819091,63.714454],[20.799865,63.780059],[20.846557,63.82371]]]]}},{type:"Feature",id:"SWZ",properties:{name:"Swaziland"},geometry:{type:"Polygon",coordinates:[[[32.071665,-26.73382],[31.86806,-27.177927],[31.282773,-27.285879],[30.685962,-26.743845],[30.676609,-26.398078],[30.949667,-26.022649],[31.04408,-25.731452],[31.333158,-25.660191],[31.837778,-25.843332],[31.985779,-26.29178],[32.071665,-26.73382]]]}},{type:"Feature",id:"SYR",properties:{name:"Syria"},geometry:{type:"Polygon",coordinates:[[[38.792341,33.378686],[36.834062,32.312938],[35.719918,32.709192],[35.700798,32.716014],[35.836397,32.868123],[35.821101,33.277426],[36.06646,33.824912],[36.61175,34.201789],[36.448194,34.593935],[35.998403,34.644914],[35.905023,35.410009],[36.149763,35.821535],[36.41755,36.040617],[36.685389,36.259699],[36.739494,36.81752],[37.066761,36.623036],[38.167727,36.90121],[38.699891,36.712927],[39.52258,36.716054],[40.673259,37.091276],[41.212089,37.074352],[42.349591,37.229873],[41.837064,36.605854],[41.289707,36.358815],[41.383965,35.628317],[41.006159,34.419372],[38.792341,33.378686]]]}},{type:"Feature",id:"TCD",properties:{name:"Chad"},geometry:{type:"Polygon",coordinates:[[[14.495787,12.859396],[14.595781,13.330427],[13.954477,13.353449],[13.956699,13.996691],[13.540394,14.367134],[13.97217,15.68437],[15.247731,16.627306],[15.300441,17.92795],[15.685741,19.95718],[15.903247,20.387619],[15.487148,20.730415],[15.47106,21.04845],[15.096888,21.308519],[14.8513,22.86295],[15.86085,23.40972],[19.84926,21.49509],[23.83766,19.58047],[23.88689,15.61084],[23.02459,15.68072],[22.56795,14.94429],[22.30351,14.32682],[22.51202,14.09318],[22.18329,13.78648],[22.29658,13.37232],[22.03759,12.95546],[21.93681,12.58818],[22.28801,12.64605],[22.49762,12.26024],[22.50869,11.67936],[22.87622,11.38461],[22.864165,11.142395],[22.231129,10.971889],[21.723822,10.567056],[21.000868,9.475985],[20.059685,9.012706],[19.094008,9.074847],[18.81201,8.982915],[18.911022,8.630895],[18.389555,8.281304],[17.96493,7.890914],[16.705988,7.508328],[16.456185,7.734774],[16.290562,7.754307],[16.106232,7.497088],[15.27946,7.421925],[15.436092,7.692812],[15.120866,8.38215],[14.979996,8.796104],[14.544467,8.965861],[13.954218,9.549495],[14.171466,10.021378],[14.627201,9.920919],[14.909354,9.992129],[15.467873,9.982337],[14.923565,10.891325],[14.960152,11.555574],[14.89336,12.21905],[14.495787,12.859396]]]}},{type:"Feature",id:"TGO",properties:{name:"Togo"},geometry:{type:"Polygon",coordinates:[[[1.865241,6.142158],[1.060122,5.928837],[.836931,6.279979],[.570384,6.914359],[.490957,7.411744],[.712029,8.312465],[.461192,8.677223],[.365901,9.465004],[.36758,10.191213],[-.049785,10.706918],[.023803,11.018682],[.899563,10.997339],[.772336,10.470808],[1.077795,10.175607],[1.425061,9.825395],[1.463043,9.334624],[1.664478,9.12859],[1.618951,6.832038],[1.865241,6.142158]]]}},{type:"Feature",id:"THA",properties:{name:"Thailand"},geometry:{type:"Polygon",coordinates:[[[102.584932,12.186595],[101.687158,12.64574],[100.83181,12.627085],[100.978467,13.412722],[100.097797,13.406856],[100.018733,12.307001],[99.478921,10.846367],[99.153772,9.963061],[99.222399,9.239255],[99.873832,9.207862],[100.279647,8.295153],[100.459274,7.429573],[101.017328,6.856869],[101.623079,6.740622],[102.141187,6.221636],[101.814282,5.810808],[101.154219,5.691384],[101.075516,6.204867],[100.259596,6.642825],[100.085757,6.464489],[99.690691,6.848213],[99.519642,7.343454],[98.988253,7.907993],[98.503786,8.382305],[98.339662,7.794512],[98.150009,8.350007],[98.25915,8.973923],[98.553551,9.93296],[99.038121,10.960546],[99.587286,11.892763],[99.196354,12.804748],[99.212012,13.269294],[99.097755,13.827503],[98.430819,14.622028],[98.192074,15.123703],[98.537376,15.308497],[98.903348,16.177824],[98.493761,16.837836],[97.859123,17.567946],[97.375896,18.445438],[97.797783,18.62708],[98.253724,19.708203],[98.959676,19.752981],[99.543309,20.186598],[100.115988,20.41785],[100.548881,20.109238],[100.606294,19.508344],[101.282015,19.462585],[101.035931,18.408928],[101.059548,17.512497],[102.113592,18.109102],[102.413005,17.932782],[102.998706,17.961695],[103.200192,18.309632],[103.956477,18.240954],[104.716947,17.428859],[104.779321,16.441865],[105.589039,15.570316],[105.544338,14.723934],[105.218777,14.273212],[104.281418,14.416743],[102.988422,14.225721],[102.348099,13.394247],[102.584932,12.186595]]]}},{type:"Feature",id:"TJK",properties:{name:"Tajikistan"},geometry:{type:"Polygon",coordinates:[[[71.014198,40.244366],[70.648019,39.935754],[69.55961,40.103211],[69.464887,39.526683],[70.549162,39.604198],[71.784694,39.279463],[73.675379,39.431237],[73.928852,38.505815],[74.257514,38.606507],[74.864816,38.378846],[74.829986,37.990007],[74.980002,37.41999],[73.948696,37.421566],[73.260056,37.495257],[72.63689,37.047558],[72.193041,36.948288],[71.844638,36.738171],[71.448693,37.065645],[71.541918,37.905774],[71.239404,37.953265],[71.348131,38.258905],[70.806821,38.486282],[70.376304,38.138396],[70.270574,37.735165],[70.116578,37.588223],[69.518785,37.608997],[69.196273,37.151144],[68.859446,37.344336],[68.135562,37.023115],[67.83,37.144994],[68.392033,38.157025],[68.176025,38.901553],[67.44222,39.140144],[67.701429,39.580478],[68.536416,39.533453],[69.011633,40.086158],[69.329495,40.727824],[70.666622,40.960213],[70.45816,40.496495],[70.601407,40.218527],[71.014198,40.244366]]]}},{type:"Feature",id:"TKM",properties:{name:"Turkmenistan"},geometry:{type:"Polygon",coordinates:[[[61.210817,35.650072],[61.123071,36.491597],[60.377638,36.527383],[59.234762,37.412988],[58.436154,37.522309],[57.330434,38.029229],[56.619366,38.121394],[56.180375,37.935127],[55.511578,37.964117],[54.800304,37.392421],[53.921598,37.198918],[53.735511,37.906136],[53.880929,38.952093],[53.101028,39.290574],[53.357808,39.975286],[52.693973,40.033629],[52.915251,40.876523],[53.858139,40.631034],[54.736845,40.951015],[54.008311,41.551211],[53.721713,42.123191],[52.91675,41.868117],[52.814689,41.135371],[52.50246,41.783316],[52.944293,42.116034],[54.079418,42.324109],[54.755345,42.043971],[55.455251,41.259859],[55.968191,41.308642],[57.096391,41.32231],[56.932215,41.826026],[57.78653,42.170553],[58.629011,42.751551],[59.976422,42.223082],[60.083341,41.425146],[60.465953,41.220327],[61.547179,41.26637],[61.882714,41.084857],[62.37426,40.053886],[63.518015,39.363257],[64.170223,38.892407],[65.215999,38.402695],[66.54615,37.974685],[66.518607,37.362784],[66.217385,37.39379],[65.745631,37.661164],[65.588948,37.305217],[64.746105,37.111818],[64.546479,36.312073],[63.982896,36.007957],[63.193538,35.857166],[62.984662,35.404041],[62.230651,35.270664],[61.210817,35.650072]]]}},{type:"Feature",id:"TLS",properties:{name:"East Timor"},geometry:{type:"Polygon",coordinates:[[[124.968682,-8.89279],[125.086246,-8.656887],[125.947072,-8.432095],[126.644704,-8.398247],[126.957243,-8.273345],[127.335928,-8.397317],[126.967992,-8.668256],[125.925885,-9.106007],[125.08852,-9.393173],[125.07002,-9.089987],[124.968682,-8.89279]]]}},{type:"Feature",id:"TON",properties:{name:"Tonga"},geometry:{type:"MultiPolygon",coordinates:[[[[-176.20702063699989,-22.33879973799992],[-176.21019446499994,-22.33879973799992],[-176.2158910799999,-22.335137627999885],[-176.21930904899995,-22.329847914999903],[-176.21825110599988,-22.32488372199994],[-176.21349036399988,-22.323907158999972],[-176.2042130199999,-22.326918226999965],[-176.19810950399994,-22.33196379999991],[-176.20185299399986,-22.33611419099995],[-176.20702063699989,-22.33879973799992]]],[[[-174.91392981699994,-21.44410572699998],[-174.92027747299989,-21.45419687299986],[-174.93586178299995,-21.44548919099995],[-174.9422094389999,-21.43027109199997],[-174.95490475199995,-21.41806406],[-174.98363196499992,-21.39771900799991],[-174.98363196499992,-21.390883070999905],[-174.97968502499992,-21.38941822699985],[-174.96996008999986,-21.383965752999984],[-174.97581946499992,-21.373142184999907],[-174.97687740799986,-21.35955169099995],[-174.97175045499995,-21.347914320999934],[-174.95185299399995,-21.33977629999984],[-174.94550533799992,-21.33212656],[-174.93586178299995,-21.315687757999896],[-174.9335424469999,-21.309502862999935],[-174.9261368479999,-21.294610283999887],[-174.9184057279999,-21.284437757999925],[-174.91474361899995,-21.292168877999856],[-174.9085180329999,-21.32935963299994],[-174.90904700399986,-21.344496351999936],[-174.91474361899995,-21.38144296699997],[-174.91392981699994,-21.44410572699998]]],[[[-175.3154190749999,-21.121351820999962],[-175.30650794199988,-21.121677341999984],[-175.2498266269999,-21.11126067499991],[-175.24058997299994,-21.113702080999857],[-175.23310299399986,-21.119317315999936],[-175.22520911399988,-21.123793226999823],[-175.21886145699986,-21.13005950299987],[-175.21637936099995,-21.141045831],[-175.2313126289999,-21.15007903399993],[-175.2382299469999,-21.158379815999908],[-175.23407955599993,-21.168633721999925],[-175.22358150899987,-21.17253997199984],[-175.2135717439999,-21.168389580999985],[-175.2035619779999,-21.16155364399988],[-175.19310462099992,-21.15813567499987],[-175.18077551999988,-21.16008879999991],[-175.16307532499988,-21.16936614399995],[-175.15497799399995,-21.171807549999983],[-175.14012610599988,-21.168389580999985],[-175.13422604099995,-21.157891534],[-175.1284073559999,-21.144138278999904],[-175.11396236899992,-21.130791924999897],[-175.10370846299992,-21.126234632999854],[-175.0908097,-21.122735283999944],[-175.07738196499992,-21.12151458099993],[-175.06554114499994,-21.123955987999878],[-175.05463619699987,-21.131524346999925],[-175.05089270699995,-21.139336847],[-175.0518692699999,-21.15496184699998],[-175.06049557199992,-21.163750908999873],[-175.11738033799995,-21.203057549999954],[-175.1209610669999,-21.21168385199988],[-175.1193334629999,-21.222344658999987],[-175.1159154939999,-21.233575128],[-175.11396236899992,-21.244073174999883],[-175.1176244779999,-21.255954685],[-175.12653561099992,-21.262790622999944],[-175.1378067699999,-21.26620859199994],[-175.1487524079999,-21.26799895599993],[-175.1703588529999,-21.263360283999916],[-175.18049068899995,-21.255059502999842],[-175.1965225899999,-21.22633228999989],[-175.2096654939999,-21.214450778999932],[-175.25731360599985,-21.192152601999894],[-175.26484127499992,-21.199639580999957],[-175.2896215489999,-21.185967705999914],[-175.30378170499992,-21.18075937299993],[-175.3162735669999,-21.17864348799992],[-175.32575436099992,-21.17359791499989],[-175.35045325399992,-21.141045831],[-175.3648168609999,-21.113946221999896],[-175.3552953769999,-21.08961354],[-175.33214270699995,-21.071221612999963],[-175.3057755199999,-21.062595309999878],[-175.31822669199988,-21.076836846999882],[-175.3340551419999,-21.08961354],[-175.3408097,-21.102634373],[-175.3262426419999,-21.117120049999954],[-175.3154190749999,-21.121351820999962]]],[[[-174.32017981699994,-19.81926848799999],[-174.3393448559999,-19.82187265399999],[-174.34699459499993,-19.81812916499996],[-174.35313880099991,-19.813734632999896],[-174.35785885299993,-19.80836353999993],[-174.3610733709999,-19.80136484199994],[-174.3475235669999,-19.79680754999991],[-174.33698483,-19.78777434699998],[-174.32966061099995,-19.77499765399986],[-174.32567298099988,-19.759698174999897],[-174.32074947799993,-19.760674737999878],[-174.3098038399999,-19.76474374799993],[-174.3058569,-19.76718515399996],[-174.3137914699999,-19.78476327899999],[-174.31513424399992,-19.804457290000016],[-174.32017981699994,-19.81926848799999]]],[[[-175.0478409499999,-19.781182549999926],[-175.05931555899988,-19.80136484199994],[-175.05931555899988,-19.793877862999892],[-175.06554114499994,-19.80136484199994],[-175.0705053379999,-19.795586846999896],[-175.0757543609999,-19.792250257999868],[-175.0872696609999,-19.787692967],[-175.0864965489999,-19.78728606599999],[-175.08763587099992,-19.78476327899999],[-175.0872696609999,-19.780857028999904],[-175.09947669199988,-19.749769789999988],[-175.1003311839999,-19.739841403999975],[-175.09666907499994,-19.72079843499999],[-175.09064693899992,-19.71266041499989],[-175.08165442599991,-19.711358330999886],[-175.06928463399987,-19.71200937299993],[-175.05333411399988,-19.723809502999984],[-175.04600989499988,-19.75115325299997],[-175.0478409499999,-19.781182549999926]]],[[[-174.27167721299986,-19.749118747999944],[-174.2875463529999,-19.750583592],[-174.30219479099992,-19.74407317499991],[-174.30581620999988,-19.73300546699997],[-174.28819739499994,-19.723728123],[-174.27818762899986,-19.71062590899986],[-174.26996822799995,-19.696872653999932],[-174.25743567599986,-19.684665622999958],[-174.25218665299988,-19.699314059999878],[-174.2551977199999,-19.712172132999896],[-174.26105709499993,-19.724297783999972],[-174.26427161399988,-19.736423434999978],[-174.27167721299986,-19.749118747999944]]],[[[-174.24400794199988,-19.646254164999945],[-174.24925696499994,-19.65374114399991],[-174.26427161399988,-19.650485934999878],[-174.27521725199995,-19.63567473799999],[-174.28844153599988,-19.61109791499989],[-174.29303951699993,-19.59270598799985],[-174.27790279899992,-19.595879815999908],[-174.2727758449999,-19.604261976999965],[-174.26777096299986,-19.626153252999984],[-174.26085364499988,-19.630547783999887],[-174.24799557199995,-19.63591887799994],[-174.24400794199988,-19.646254164999945]]],[[[-174.64045162699992,-18.81658294099985],[-174.65379798099994,-18.817478122999844],[-174.66413326699995,-18.80136484199987],[-174.6612442699999,-18.786879164999917],[-174.6496069,-18.779554945999834],[-174.63385983,-18.78533294099988],[-174.62682044199988,-18.797539971999868],[-174.63023841099988,-18.809014580999985],[-174.64045162699992,-18.81658294099985]]],[[[-173.9142553379999,-18.606133721999853],[-173.91515051999988,-18.62688567499994],[-173.92296301999988,-18.63697682099982],[-173.94208736899992,-18.615817966999913],[-173.95295162699992,-18.62070077899989],[-173.95860755099991,-18.626722914999974],[-173.95763098899994,-18.634209893999866],[-173.94896399599995,-18.64316171699997],[-173.95722408799992,-18.65300872199991],[-173.9625951809999,-18.66350676899988],[-173.97663326699995,-18.660577080999943],[-173.9859513009999,-18.670993747999844],[-173.9905899729999,-18.688083591999884],[-173.99054928299992,-18.705173434999935],[-174.00304114499994,-18.698500257999882],[-174.00995846299992,-18.687107028999918],[-174.01720130099986,-18.66350676899988],[-174.00116939999987,-18.657403252999885],[-174.00035559799986,-18.645684502999984],[-174.00645911399994,-18.634372653999918],[-174.01097571499992,-18.629489841999856],[-174.0223282539999,-18.63884856599988],[-174.0256241529999,-18.653741143999838],[-174.03014075399986,-18.663344007999825],[-174.04515540299988,-18.656833591999913],[-174.04613196499986,-18.66236744599985],[-174.04906165299988,-18.66350676899988],[-174.05357825399994,-18.66318124799986],[-174.0594376289999,-18.66350676899988],[-174.07249915299985,-18.633965752999913],[-174.05357825399994,-18.61907317499987],[-174.02546139199995,-18.604913018999838],[-174.01097571499992,-18.577894789999974],[-174.00413977799988,-18.570977471999896],[-173.9881078769999,-18.56731536299985],[-173.9698380199999,-18.566176039999903],[-173.95636959499993,-18.56731536299985],[-173.94127356699994,-18.572849216999856],[-173.93427486899995,-18.579278252999956],[-173.9279679029999,-18.586683851999865],[-173.9153946609999,-18.595310153999947],[-173.9142553379999,-18.606133721999853]]],[[[-175.61778723899994,-15.601495049999983],[-175.63914954299992,-15.62428150799984],[-175.66889400899993,-15.621514580999872],[-175.6862686839999,-15.602308851999823],[-175.68333899599986,-15.582126559999978],[-175.6637670559999,-15.566013279],[-175.63133704299992,-15.55950286299992],[-175.61261959499993,-15.573337497999916],[-175.61778723899994,-15.601495049999983]]]]}},{type:"Feature",id:"TTO",properties:{name:"Trinidad and Tobago"},geometry:{type:"Polygon",coordinates:[[[-61.68,10.76],[-61.105,10.89],[-60.895,10.855],[-60.935,10.11],[-61.77,10],[-61.95,10.09],[-61.66,10.365],[-61.68,10.76]]]}},{type:"Feature",id:"TUV",properties:{name:"Tuvalu"},geometry:{type:"MultiPolygon",coordinates:[[[[179.90609785200016,-9.418633721999868],[179.90528405000012,-9.420668226999808],[179.90406334700012,-9.400485934999864],[179.8986108730002,-9.38681405999992],[179.9012150400001,-9.387953382999868],[179.90674889400017,-9.399346612999835],[179.90609785200016,-9.418633721999868]]],[[[179.87842858200017,-9.360772393999852],[179.87696373800028,-9.362969658999845],[179.8717554050002,-9.350192966999899],[179.8674422540001,-9.344333591999856],[179.86784915500013,-9.343194268999824],[179.87330162900022,-9.34685637799987],[179.87842858200017,-9.360772393999852]]],[[[179.2097274100001,-8.529961846999825],[179.19125410200016,-8.542087497999916],[179.20004316500004,-8.52955494599982],[179.2041121750003,-8.518975518999866],[179.20232181100013,-8.509698174999826],[179.1980900400002,-8.49781666499986],[179.19752037900022,-8.48154062299993],[179.1993921230002,-8.460625908999873],[179.20639082100016,-8.474053643999866],[179.2072046230002,-8.498467705999914],[179.21550540500024,-8.511325778999847],[179.2175399100001,-8.520603122999887],[179.2097274100001,-8.529961846999825]]],[[[178.39063561300017,-8.026543877999828],[178.38054446700008,-8.070000908999873],[178.37330162900017,-8.069024346999896],[178.37549889400017,-8.056084893999895],[178.3831486340002,-8.039239190999893],[178.39063561300017,-8.026543877999828]]],[[[178.69410241000023,-7.493829033999901],[178.69141686300017,-7.498630466999899],[178.68279056100013,-7.491469007999854],[178.66797936300017,-7.463636976999808],[178.66521243600013,-7.454034112999821],[178.6883244150001,-7.474379164999903],[178.69109134200014,-7.475355726999879],[178.693369988,-7.48398202899989],[178.69410241000023,-7.493829033999901]]],[[[177.1533309250003,-7.199151299999897],[177.15259850400017,-7.200290622999845],[177.15259850400017,-7.197360934999921],[177.15235436300011,-7.195082289999945],[177.15040123800028,-7.19036223799985],[177.15007571700025,-7.188164971999854],[177.1530054050002,-7.195000908999873],[177.1533309250003,-7.199151299999897]]],[[[176.32243899800008,-6.295098565999837],[176.3143009770001,-6.302341403999847],[176.31918379000004,-6.289239190999879],[176.3229272800002,-6.288832289999874],[176.32243899800008,-6.295098565999837]]],[[[177.35629316500015,-6.118747653999847],[177.3440861340001,-6.121026299999912],[177.33985436300011,-6.114515882999825],[177.33814537899994,-6.11101653399983],[177.33716881600023,-6.108168226999879],[177.34880618599996,-6.110528252999842],[177.35661868599996,-6.114515882999825],[177.35629316500015,-6.118747653999847]]],[[[176.14039147200023,-5.687188408999901],[176.14844811300023,-5.706719658999887],[176.1352645190003,-5.692803643999824],[176.1252547540001,-5.679131768999881],[176.12989342500018,-5.67750416499986],[176.14039147200023,-5.687188408999901]]]]}},{type:"Feature",id:"TUN",properties:{name:"Tunisia"},geometry:{type:"Polygon",coordinates:[[[9.48214,30.307556],[9.055603,32.102692],[8.439103,32.506285],[8.430473,32.748337],[7.612642,33.344115],[7.524482,34.097376],[8.140981,34.655146],[8.376368,35.479876],[8.217824,36.433177],[8.420964,36.946427],[9.509994,37.349994],[10.210002,37.230002],[10.18065,36.724038],[11.028867,37.092103],[11.100026,36.899996],[10.600005,36.41],[10.593287,35.947444],[10.939519,35.698984],[10.807847,34.833507],[10.149593,34.330773],[10.339659,33.785742],[10.856836,33.76874],[11.108501,33.293343],[11.488787,33.136996],[11.432253,32.368903],[10.94479,32.081815],[10.636901,31.761421],[9.950225,31.37607],[10.056575,30.961831],[9.970017,30.539325],[9.48214,30.307556]]]}},{type:"Feature",id:"TUR",properties:{name:"Turkey"},geometry:{type:"MultiPolygon",coordinates:[[[[36.913127,41.335358],[38.347665,40.948586],[39.512607,41.102763],[40.373433,41.013673],[41.554084,41.535656],[42.619549,41.583173],[43.582746,41.092143],[43.752658,40.740201],[43.656436,40.253564],[44.400009,40.005],[44.79399,39.713003],[44.109225,39.428136],[44.421403,38.281281],[44.225756,37.971584],[44.772699,37.170445],[44.293452,37.001514],[43.942259,37.256228],[42.779126,37.385264],[42.349591,37.229873],[41.212089,37.074352],[40.673259,37.091276],[39.52258,36.716054],[38.699891,36.712927],[38.167727,36.90121],[37.066761,36.623036],[36.739494,36.81752],[36.685389,36.259699],[36.41755,36.040617],[36.149763,35.821535],[35.782085,36.274995],[36.160822,36.650606],[35.550936,36.565443],[34.714553,36.795532],[34.026895,36.21996],[32.509158,36.107564],[31.699595,36.644275],[30.621625,36.677865],[30.391096,36.262981],[29.699976,36.144357],[28.732903,36.676831],[27.641187,36.658822],[27.048768,37.653361],[26.318218,38.208133],[26.8047,38.98576],[26.170785,39.463612],[27.28002,40.420014],[28.819978,40.460011],[29.240004,41.219991],[31.145934,41.087622],[32.347979,41.736264],[33.513283,42.01896],[35.167704,42.040225],[36.913127,41.335358]]],[[[27.192377,40.690566],[26.358009,40.151994],[26.043351,40.617754],[26.056942,40.824123],[26.294602,40.936261],[26.604196,41.562115],[26.117042,41.826905],[27.135739,42.141485],[27.99672,42.007359],[28.115525,41.622886],[28.988443,41.299934],[28.806438,41.054962],[27.619017,40.999823],[27.192377,40.690566]]]]}},{type:"Feature",id:"TWN",properties:{name:"Taiwan"},geometry:{type:"Polygon",coordinates:[[[121.777818,24.394274],[121.175632,22.790857],[120.74708,21.970571],[120.220083,22.814861],[120.106189,23.556263],[120.69468,24.538451],[121.495044,25.295459],[121.951244,24.997596],[121.777818,24.394274]]]}},{type:"Feature",id:"TZA",properties:{name:"United Republic of Tanzania"},geometry:{type:"Polygon",coordinates:[[[33.903711,-.95],[34.07262,-1.05982],[37.69869,-3.09699],[37.7669,-3.67712],[39.20222,-4.67677],[38.74054,-5.90895],[38.79977,-6.47566],[39.44,-6.84],[39.47,-7.1],[39.19469,-7.7039],[39.25203,-8.00781],[39.18652,-8.48551],[39.53574,-9.11237],[39.9496,-10.0984],[40.31659,-10.3171],[39.521,-10.89688],[38.427557,-11.285202],[37.82764,-11.26879],[37.47129,-11.56876],[36.775151,-11.594537],[36.514082,-11.720938],[35.312398,-11.439146],[34.559989,-11.52002],[34.28,-10.16],[33.940838,-9.693674],[33.73972,-9.41715],[32.759375,-9.230599],[32.191865,-8.930359],[31.556348,-8.762049],[31.157751,-8.594579],[30.74,-8.34],[30.2,-7.08],[29.62,-6.52],[29.419993,-5.939999],[29.519987,-5.419979],[29.339998,-4.499983],[29.753512,-4.452389],[30.11632,-4.09012],[30.50554,-3.56858],[30.75224,-3.35931],[30.74301,-3.03431],[30.52766,-2.80762],[30.46967,-2.41383],[30.758309,-2.28725],[30.816135,-1.698914],[30.419105,-1.134659],[30.76986,-1.01455],[31.86617,-1.02736],[33.903711,-.95]]]}},{type:"Feature",id:"UGA",properties:{name:"Uganda"},geometry:{type:"Polygon",coordinates:[[[31.86617,-1.02736],[30.76986,-1.01455],[30.419105,-1.134659],[29.821519,-1.443322],[29.579466,-1.341313],[29.587838,-.587406],[29.8195,-.2053],[29.875779,.59738],[30.086154,1.062313],[30.468508,1.583805],[30.85267,1.849396],[31.174149,2.204465],[30.77332,2.33989],[30.83385,3.50917],[31.24556,3.7819],[31.88145,3.55827],[32.68642,3.79232],[33.39,3.79],[34.005,4.249885],[34.47913,3.5556],[34.59607,3.05374],[35.03599,1.90584],[34.6721,1.17694],[34.18,.515],[33.893569,.109814],[33.903711,-.95],[31.86617,-1.02736]]]}},{type:"Feature",id:"UKR",properties:{name:"Ukraine"},geometry:{type:"Polygon",coordinates:[[[31.785998,52.101678],[32.159412,52.061267],[32.412058,52.288695],[32.715761,52.238465],[33.7527,52.335075],[34.391731,51.768882],[34.141978,51.566413],[34.224816,51.255993],[35.022183,51.207572],[35.377924,50.773955],[35.356116,50.577197],[36.626168,50.225591],[37.39346,50.383953],[38.010631,49.915662],[38.594988,49.926462],[40.069058,49.601055],[40.080789,49.30743],[39.674664,48.783818],[39.895632,48.232405],[39.738278,47.898937],[38.770585,47.825608],[38.255112,47.5464],[38.223538,47.10219],[37.425137,47.022221],[36.759855,46.6987],[35.823685,46.645964],[34.962342,46.273197],[35.020788,45.651219],[35.510009,45.409993],[36.529998,45.46999],[36.334713,45.113216],[35.239999,44.939996],[33.882511,44.361479],[33.326421,44.564877],[33.546924,45.034771],[32.454174,45.327466],[32.630804,45.519186],[33.588162,45.851569],[33.298567,46.080598],[31.74414,46.333348],[31.675307,46.706245],[30.748749,46.5831],[30.377609,46.03241],[29.603289,45.293308],[29.149725,45.464925],[28.679779,45.304031],[28.233554,45.488283],[28.485269,45.596907],[28.659987,45.939987],[28.933717,46.25883],[28.862972,46.437889],[29.072107,46.517678],[29.170654,46.379262],[29.759972,46.349988],[30.024659,46.423937],[29.83821,46.525326],[29.908852,46.674361],[29.559674,46.928583],[29.415135,47.346645],[29.050868,47.510227],[29.122698,47.849095],[28.670891,48.118149],[28.259547,48.155562],[27.522537,48.467119],[26.857824,48.368211],[26.619337,48.220726],[26.19745,48.220881],[25.945941,47.987149],[25.207743,47.891056],[24.866317,47.737526],[24.402056,47.981878],[23.760958,47.985598],[23.142236,48.096341],[22.710531,47.882194],[22.64082,48.15024],[22.085608,48.422264],[22.280842,48.825392],[22.558138,49.085738],[22.776419,49.027395],[22.51845,49.476774],[23.426508,50.308506],[23.922757,50.424881],[24.029986,50.705407],[23.527071,51.578454],[24.005078,51.617444],[24.553106,51.888461],[25.327788,51.910656],[26.337959,51.832289],[27.454066,51.592303],[28.241615,51.572227],[28.617613,51.427714],[28.992835,51.602044],[29.254938,51.368234],[30.157364,51.416138],[30.555117,51.319503],[30.619454,51.822806],[30.927549,52.042353],[31.785998,52.101678]]]}},{type:"Feature",id:"WLF",properties:{name:"Wallis ans Futuna"},geometry:{type:"MultiPolygon",coordinates:[[[[-178.04674231699994,-14.312595309999978],[-178.04674231699994,-14.319431247999901],[-178.1000463529999,-14.316013278999975],[-178.10883541599995,-14.319431247999901],[-178.12144934799994,-14.313897393999966],[-178.14692135299993,-14.310153903999947],[-178.15660559799989,-14.305108330999914],[-178.1752416659999,-14.277032158999916],[-178.18573971299995,-14.248223565999965],[-178.17804928299995,-14.232598565999979],[-178.14232337099992,-14.243584893999952],[-178.1081436839999,-14.278985283999958],[-178.10509192599991,-14.28525156],[-178.09247799399992,-14.288995049999855],[-178.04674231699994,-14.312595309999978]]],[[[-176.14716549399992,-13.347751559999878],[-176.1594945949999,-13.350274346999981],[-176.1732071609999,-13.34644947699988],[-176.1828100249999,-13.339288018999838],[-176.18390865799992,-13.32382577899999],[-176.19477291599992,-13.30673593499995],[-176.1995743479999,-13.290622653999975],[-176.1828100249999,-13.277927341999927],[-176.19017493399988,-13.257012627999956],[-176.1840307279999,-13.23788827899999],[-176.17039954299995,-13.221449476999894],[-176.15546627499992,-13.208916924999983],[-176.1430151029999,-13.230726820999863],[-176.13056393099987,-13.247653903999932],[-176.12559973899994,-13.264092705999843],[-176.13560950399992,-13.284763278999947],[-176.1321508449999,-13.288506768999966],[-176.13056393099987,-13.291192315999865],[-176.12816321499992,-13.298272393999923],[-176.14447994699995,-13.30087655999992],[-176.14765377499992,-13.310479424999897],[-176.14183508999986,-13.335870049999912],[-176.14716549399992,-13.347751559999878]]]]}},{type:"Feature",id:"URY",properties:{name:"Uruguay"},geometry:{type:"Polygon",coordinates:[[[-57.625133,-30.216295],[-56.976026,-30.109686],[-55.973245,-30.883076],[-55.60151,-30.853879],[-54.572452,-31.494511],[-53.787952,-32.047243],[-53.209589,-32.727666],[-53.650544,-33.202004],[-53.373662,-33.768378],[-53.806426,-34.396815],[-54.935866,-34.952647],[-55.67409,-34.752659],[-56.215297,-34.859836],[-57.139685,-34.430456],[-57.817861,-34.462547],[-58.427074,-33.909454],[-58.349611,-33.263189],[-58.132648,-33.040567],[-58.14244,-32.044504],[-57.874937,-31.016556],[-57.625133,-30.216295]]]}},{type:"Feature",id:"USA",properties:{name:"United States of America"},geometry:{type:"MultiPolygon",coordinates:[[[[-155.54211,19.08348],[-155.68817,18.91619],[-155.93665,19.05939],[-155.90806,19.33888],[-156.07347,19.70294],[-156.02368,19.81422],[-155.85008,19.97729],[-155.91907,20.17395],[-155.86108,20.26721],[-155.78505,20.2487],[-155.40214,20.07975],[-155.22452,19.99302],[-155.06226,19.8591],[-154.80741,19.50871],[-154.83147,19.45328],[-155.22217,19.23972],[-155.54211,19.08348]]],[[[-156.07926,20.64397],[-156.41445,20.57241],[-156.58673,20.783],[-156.70167,20.8643],[-156.71055,20.92676],[-156.61258,21.01249],[-156.25711,20.91745],[-155.99566,20.76404],[-156.07926,20.64397]]],[[[-156.75824,21.17684],[-156.78933,21.06873],[-157.32521,21.09777],[-157.25027,21.21958],[-156.75824,21.17684]]],[[[-157.65283,21.32217],[-157.70703,21.26442],[-157.7786,21.27729],[-158.12667,21.31244],[-158.2538,21.53919],[-158.29265,21.57912],[-158.0252,21.71696],[-157.94161,21.65272],[-157.65283,21.32217]]],[[[-159.34512,21.982],[-159.46372,21.88299],[-159.80051,22.06533],[-159.74877,22.1382],[-159.5962,22.23618],[-159.36569,22.21494],[-159.34512,21.982]]],[[[-94.81758,49.38905],[-94.64,48.84],[-94.32914,48.67074],[-93.63087,48.60926],[-92.61,48.45],[-91.64,48.14],[-90.83,48.27],[-89.6,48.01],[-89.272917,48.019808],[-88.378114,48.302918],[-87.439793,47.94],[-86.461991,47.553338],[-85.652363,47.220219],[-84.87608,46.900083],[-84.779238,46.637102],[-84.543749,46.538684],[-84.6049,46.4396],[-84.3367,46.40877],[-84.14212,46.512226],[-84.091851,46.275419],[-83.890765,46.116927],[-83.616131,46.116927],[-83.469551,45.994686],[-83.592851,45.816894],[-82.550925,45.347517],[-82.337763,44.44],[-82.137642,43.571088],[-82.43,42.98],[-82.9,42.43],[-83.12,42.08],[-83.142,41.975681],[-83.02981,41.832796],[-82.690089,41.675105],[-82.439278,41.675105],[-81.277747,42.209026],[-80.247448,42.3662],[-78.939362,42.863611],[-78.92,42.965],[-79.01,43.27],[-79.171674,43.466339],[-78.72028,43.625089],[-77.737885,43.629056],[-76.820034,43.628784],[-76.5,44.018459],[-76.375,44.09631],[-75.31821,44.81645],[-74.867,45.00048],[-73.34783,45.00738],[-71.50506,45.0082],[-71.405,45.255],[-71.08482,45.30524],[-70.66,45.46],[-70.305,45.915],[-69.99997,46.69307],[-69.237216,47.447781],[-68.905,47.185],[-68.23444,47.35486],[-67.79046,47.06636],[-67.79134,45.70281],[-67.13741,45.13753],[-66.96466,44.8097],[-68.03252,44.3252],[-69.06,43.98],[-70.11617,43.68405],[-70.645476,43.090238],[-70.81489,42.8653],[-70.825,42.335],[-70.495,41.805],[-70.08,41.78],[-70.185,42.145],[-69.88497,41.92283],[-69.96503,41.63717],[-70.64,41.475],[-71.12039,41.49445],[-71.86,41.32],[-72.295,41.27],[-72.87643,41.22065],[-73.71,40.931102],[-72.24126,41.11948],[-71.945,40.93],[-73.345,40.63],[-73.982,40.628],[-73.952325,40.75075],[-74.25671,40.47351],[-73.96244,40.42763],[-74.17838,39.70926],[-74.90604,38.93954],[-74.98041,39.1964],[-75.20002,39.24845],[-75.52805,39.4985],[-75.32,38.96],[-75.071835,38.782032],[-75.05673,38.40412],[-75.37747,38.01551],[-75.94023,37.21689],[-76.03127,37.2566],[-75.72205,37.93705],[-76.23287,38.319215],[-76.35,39.15],[-76.542725,38.717615],[-76.32933,38.08326],[-76.989998,38.239992],[-76.30162,37.917945],[-76.25874,36.9664],[-75.9718,36.89726],[-75.86804,36.55125],[-75.72749,35.55074],[-76.36318,34.80854],[-77.397635,34.51201],[-78.05496,33.92547],[-78.55435,33.86133],[-79.06067,33.49395],[-79.20357,33.15839],[-80.301325,32.509355],[-80.86498,32.0333],[-81.33629,31.44049],[-81.49042,30.72999],[-81.31371,30.03552],[-80.98,29.18],[-80.535585,28.47213],[-80.53,28.04],[-80.056539,26.88],[-80.088015,26.205765],[-80.13156,25.816775],[-80.38103,25.20616],[-80.68,25.08],[-81.17213,25.20126],[-81.33,25.64],[-81.71,25.87],[-82.24,26.73],[-82.70515,27.49504],[-82.85526,27.88624],[-82.65,28.55],[-82.93,29.1],[-83.70959,29.93656],[-84.1,30.09],[-85.10882,29.63615],[-85.28784,29.68612],[-85.7731,30.15261],[-86.4,30.4],[-87.53036,30.27433],[-88.41782,30.3849],[-89.18049,30.31598],[-89.593831,30.159994],[-89.413735,29.89419],[-89.43,29.48864],[-89.21767,29.29108],[-89.40823,29.15961],[-89.77928,29.30714],[-90.15463,29.11743],[-90.880225,29.148535],[-91.626785,29.677],[-92.49906,29.5523],[-93.22637,29.78375],[-93.84842,29.71363],[-94.69,29.48],[-95.60026,28.73863],[-96.59404,28.30748],[-97.14,27.83],[-97.37,27.38],[-97.38,26.69],[-97.33,26.21],[-97.14,25.87],[-97.53,25.84],[-98.24,26.06],[-99.02,26.37],[-99.3,26.84],[-99.52,27.54],[-100.11,28.11],[-100.45584,28.69612],[-100.9576,29.38071],[-101.6624,29.7793],[-102.48,29.76],[-103.11,28.97],[-103.94,29.27],[-104.45697,29.57196],[-104.70575,30.12173],[-105.03737,30.64402],[-105.63159,31.08383],[-106.1429,31.39995],[-106.50759,31.75452],[-108.24,31.754854],[-108.24194,31.34222],[-109.035,31.34194],[-111.02361,31.33472],[-113.30498,32.03914],[-114.815,32.52528],[-114.72139,32.72083],[-115.99135,32.61239],[-117.12776,32.53534],[-117.295938,33.046225],[-117.944,33.621236],[-118.410602,33.740909],[-118.519895,34.027782],[-119.081,34.078],[-119.438841,34.348477],[-120.36778,34.44711],[-120.62286,34.60855],[-120.74433,35.15686],[-121.71457,36.16153],[-122.54747,37.55176],[-122.51201,37.78339],[-122.95319,38.11371],[-123.7272,38.95166],[-123.86517,39.76699],[-124.39807,40.3132],[-124.17886,41.14202],[-124.2137,41.99964],[-124.53284,42.76599],[-124.14214,43.70838],[-124.020535,44.615895],[-123.89893,45.52341],[-124.079635,46.86475],[-124.39567,47.72017],[-124.68721,48.184433],[-124.566101,48.379715],[-123.12,48.04],[-122.58736,47.096],[-122.34,47.36],[-122.5,48.18],[-122.84,49],[-120,49],[-117.03121,49],[-116.04818,49],[-113,49],[-110.05,49],[-107.05,49],[-104.04826,48.99986],[-100.65,49],[-97.22872,49.0007],[-95.15907,49],[-95.15609,49.38425],[-94.81758,49.38905]]],[[[-153.006314,57.115842],[-154.00509,56.734677],[-154.516403,56.992749],[-154.670993,57.461196],[-153.76278,57.816575],[-153.228729,57.968968],[-152.564791,57.901427],[-152.141147,57.591059],[-153.006314,57.115842]]],[[[-165.579164,59.909987],[-166.19277,59.754441],[-166.848337,59.941406],[-167.455277,60.213069],[-166.467792,60.38417],[-165.67443,60.293607],[-165.579164,59.909987]]],[[[-171.731657,63.782515],[-171.114434,63.592191],[-170.491112,63.694975],[-169.682505,63.431116],[-168.689439,63.297506],[-168.771941,63.188598],[-169.52944,62.976931],[-170.290556,63.194438],[-170.671386,63.375822],[-171.553063,63.317789],[-171.791111,63.405846],[-171.731657,63.782515]]],[[[-155.06779,71.147776],[-154.344165,70.696409],[-153.900006,70.889989],[-152.210006,70.829992],[-152.270002,70.600006],[-150.739992,70.430017],[-149.720003,70.53001],[-147.613362,70.214035],[-145.68999,70.12001],[-144.920011,69.989992],[-143.589446,70.152514],[-142.07251,69.851938],[-140.985988,69.711998],[-140.992499,66.000029],[-140.99777,60.306397],[-140.012998,60.276838],[-139.039,60.000007],[-138.34089,59.56211],[-137.4525,58.905],[-136.47972,59.46389],[-135.47583,59.78778],[-134.945,59.27056],[-134.27111,58.86111],[-133.355549,58.410285],[-132.73042,57.69289],[-131.70781,56.55212],[-130.00778,55.91583],[-129.979994,55.284998],[-130.53611,54.802753],[-131.085818,55.178906],[-131.967211,55.497776],[-132.250011,56.369996],[-133.539181,57.178887],[-134.078063,58.123068],[-135.038211,58.187715],[-136.628062,58.212209],[-137.800006,58.499995],[-139.867787,59.537762],[-140.825274,59.727517],[-142.574444,60.084447],[-143.958881,59.99918],[-145.925557,60.45861],[-147.114374,60.884656],[-148.224306,60.672989],[-148.018066,59.978329],[-148.570823,59.914173],[-149.727858,59.705658],[-150.608243,59.368211],[-151.716393,59.155821],[-151.859433,59.744984],[-151.409719,60.725803],[-150.346941,61.033588],[-150.621111,61.284425],[-151.895839,60.727198],[-152.57833,60.061657],[-154.019172,59.350279],[-153.287511,58.864728],[-154.232492,58.146374],[-155.307491,57.727795],[-156.308335,57.422774],[-156.556097,56.979985],[-158.117217,56.463608],[-158.433321,55.994154],[-159.603327,55.566686],[-160.28972,55.643581],[-161.223048,55.364735],[-162.237766,55.024187],[-163.069447,54.689737],[-164.785569,54.404173],[-164.942226,54.572225],[-163.84834,55.039431],[-162.870001,55.348043],[-161.804175,55.894986],[-160.563605,56.008055],[-160.07056,56.418055],[-158.684443,57.016675],[-158.461097,57.216921],[-157.72277,57.570001],[-157.550274,58.328326],[-157.041675,58.918885],[-158.194731,58.615802],[-158.517218,58.787781],[-159.058606,58.424186],[-159.711667,58.93139],[-159.981289,58.572549],[-160.355271,59.071123],[-161.355003,58.670838],[-161.968894,58.671665],[-162.054987,59.266925],[-161.874171,59.633621],[-162.518059,59.989724],[-163.818341,59.798056],[-164.662218,60.267484],[-165.346388,60.507496],[-165.350832,61.073895],[-166.121379,61.500019],[-165.734452,62.074997],[-164.919179,62.633076],[-164.562508,63.146378],[-163.753332,63.219449],[-163.067224,63.059459],[-162.260555,63.541936],[-161.53445,63.455817],[-160.772507,63.766108],[-160.958335,64.222799],[-161.518068,64.402788],[-160.777778,64.788604],[-161.391926,64.777235],[-162.45305,64.559445],[-162.757786,64.338605],[-163.546394,64.55916],[-164.96083,64.446945],[-166.425288,64.686672],[-166.845004,65.088896],[-168.11056,65.669997],[-166.705271,66.088318],[-164.47471,66.57666],[-163.652512,66.57666],[-163.788602,66.077207],[-161.677774,66.11612],[-162.489715,66.735565],[-163.719717,67.116395],[-164.430991,67.616338],[-165.390287,68.042772],[-166.764441,68.358877],[-166.204707,68.883031],[-164.430811,68.915535],[-163.168614,69.371115],[-162.930566,69.858062],[-161.908897,70.33333],[-160.934797,70.44769],[-159.039176,70.891642],[-158.119723,70.824721],[-156.580825,71.357764],[-155.06779,71.147776]]]]}},{type:"Feature",id:"VGB",properties:{name:"British Virgin Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-64.56786048099994,18.337388414000046],[-64.57091223899994,18.334662177000055],[-64.57469641799986,18.343003648000135],[-64.58531653599991,18.34861888200014],[-64.60073808499993,18.35162995000003],[-64.60301673099991,18.355617580000015],[-64.59406490799998,18.35781484600001],[-64.58690344999994,18.357977606000148],[-64.58283443899998,18.35944245000003],[-64.57835852799991,18.360581773000163],[-64.56944739499997,18.357977606000148],[-64.56818600199998,18.350897528000118],[-64.56786048099994,18.337388414000046]]],[[[-64.52719946799996,18.44911813200018],[-64.51684528599989,18.43929038100005],[-64.52012864599988,18.43412304600018],[-64.53159171999994,18.43567723600016],[-64.54859616299993,18.440270558000165],[-64.56116595099991,18.433545514000073],[-64.56639563699989,18.42572663],[-64.57404537699992,18.419134833000115],[-64.58332271999987,18.41632721600017],[-64.59117591099994,18.417792059000035],[-64.5969945949999,18.420803127000127],[-64.60338294199991,18.423041083000115],[-64.61339270699992,18.422552802000112],[-64.61286373599992,18.41950104400003],[-64.62071692599991,18.411566473000065],[-64.63036048099988,18.404852606000034],[-64.63512122299997,18.405503648000163],[-64.64366614499991,18.39394765800013],[-64.6596851429999,18.38307161200005],[-64.67547765499998,18.384105078000132],[-64.68962849699994,18.38463998100015],[-64.71412824599986,18.386202581000035],[-64.7005087339999,18.398069858000056],[-64.68255356999995,18.399548393000188],[-64.67439957199994,18.412397892000016],[-64.66564710999998,18.424396466000175],[-64.66182129899988,18.440415670000093],[-64.64170492799991,18.451157722000076],[-64.6272680329999,18.447088934000064],[-64.6036330009999,18.45161612300008],[-64.59270478999989,18.448562173000184],[-64.56016094899988,18.454102780000042],[-64.52719946799996,18.44911813200018]]],[[[-64.72423255099994,18.442694403000147],[-64.73033606699994,18.437892971000068],[-64.75938880099991,18.44183991100006],[-64.77399654899995,18.442287502000156],[-64.76842200399992,18.44965241100006],[-64.74290930899994,18.454982815000122],[-64.72980709499987,18.453436591000084],[-64.72752844999991,18.449896552],[-64.72423255099994,18.442694403000147]]],[[[-64.53160559799994,18.46702708500014],[-64.5365291009999,18.462388414000102],[-64.5382380849999,18.46515534100017],[-64.53734290299991,18.471828518000123],[-64.5394587879999,18.48285553600006],[-64.53770911399991,18.49066803600006],[-64.53270423099988,18.494126695000077],[-64.52953040299991,18.49258047100004],[-64.52892005099994,18.481838283000016],[-64.52916419199991,18.47638580900015],[-64.53160559799994,18.46702708500014]]],[[[-64.32603919199991,18.51194896000014],[-64.3342992829999,18.497056382],[-64.35309811099995,18.48720937700007],[-64.37197831899988,18.481919664000188],[-64.38060462099989,18.480902411000116],[-64.38902747299994,18.471096096000096],[-64.40819251199989,18.456691799000126],[-64.42931067599991,18.444891669000143],[-64.44334876199986,18.44306061400009],[-64.41852779899992,18.475327867000104],[-64.41173255099997,18.491359768],[-64.41539466099994,18.51194896000014],[-64.41095943899995,18.51194896000014],[-64.4081111319999,18.51048411700016],[-64.40575110599985,18.50820547100001],[-64.40241451699993,18.505764065000065],[-64.3468318349999,18.506903387000094],[-64.32603919199991,18.51194896000014]]],[[[-64.2850642569999,18.734076239000117],[-64.27074133999992,18.70066966400016],[-64.27953040299988,18.70123932500003],[-64.33653723899988,18.724269924000012],[-64.3805232409999,18.72614166900017],[-64.39867102799991,18.732082424000097],[-64.40855872299991,18.744696356000176],[-64.32030188699994,18.746242580000015],[-64.2850642569999,18.734076239000117]]]]}},{type:"Feature",id:"VIR",properties:{name:"United states Virgin Islands"},geometry:{type:"MultiPolygon",coordinates:[[[[-64.73078365799995,17.765285549000126],[-64.70970618399991,17.758205471000068],[-64.69904537699998,17.752834377000013],[-64.68976803299992,17.744777736000074],[-64.66690019399994,17.762884833],[-64.63097083199995,17.770331122000144],[-64.59178626199991,17.768296617000132],[-64.5593969389999,17.758449611000017],[-64.5593969389999,17.751613674000097],[-64.58519446499994,17.748968817],[-64.60667883999986,17.742254950000145],[-64.64879309799991,17.72370026200015],[-64.67052161399988,17.71723053600006],[-64.87637285099996,17.689113674000154],[-64.8951716789999,17.682766018000123],[-64.8878474599999,17.699896552000055],[-64.88662675699987,17.714422919000114],[-64.88768469999994,17.75527578300013],[-64.88463294199994,17.767889716000028],[-64.87645423099994,17.77586497599999],[-64.83869381399995,17.764837958000143],[-64.81745357999998,17.774115302],[-64.79548092399997,17.787543036000088],[-64.7716365229999,17.792629299000012],[-64.76915442599994,17.79002513200011],[-64.73078365799995,17.765285549000126]]],[[[-64.66456145799995,18.346927221000144],[-64.66039026099989,18.336723168000063],[-64.67412997599993,18.334462902],[-64.70099350799995,18.342976068000056],[-64.70816063399994,18.340145034000116],[-64.69742311599995,18.32653998300013],[-64.70400507199992,18.303310064000087],[-64.73623042099985,18.319753190000185],[-64.78636715499994,18.315221772000044],[-64.80128501799996,18.328253009000107],[-64.78636541799989,18.349772052000063],[-64.76964889799993,18.356589046000025],[-64.75173632899993,18.361689154000132],[-64.75591344999987,18.369056759000088],[-64.74695540599996,18.373589962000082],[-64.71351856599998,18.365083232000117],[-64.6973968689999,18.362243917000015],[-64.6824723069999,18.356003063000045],[-64.66456145799995,18.346927221000144]]],[[[-64.92850484399992,18.380369590000058],[-64.89143645499993,18.359968246],[-64.85498378299991,18.340129434000076],[-64.84007959199997,18.317489213000087],[-64.8514081939999,18.31578181400012],[-64.86031207099995,18.318590940000107],[-64.87163696599987,18.314623045000175],[-64.8788391729999,18.304440513000188],[-64.91049791299994,18.31575774900007],[-64.92185889299992,18.32255468600006],[-64.93083383699988,18.339550364000118],[-64.93502297799995,18.330486062000134],[-64.94458577799989,18.33671428300012],[-64.96609509199993,18.332735290000144],[-64.98164310499993,18.335558349000152],[-64.99362102299997,18.34802401000003],[-65.02530892999994,18.33892613800016],[-65.04149344199993,18.353658056000157],[-65.0118708979999,18.368597723],[-64.98664303299992,18.37482330900015],[-64.95000232999988,18.37355397900002],[-64.93497996399992,18.363320022000053],[-64.92601936499989,18.36615355900004],[-64.94225088299987,18.37809915000004],[-64.95002834499991,18.386598614000135],[-64.92850484399992,18.380369590000058]]]]}},{type:"Feature",id:"UZB",properties:{name:"Uzbekistan"},geometry:{type:"Polygon",coordinates:[[[66.518607,37.362784],[66.54615,37.974685],[65.215999,38.402695],[64.170223,38.892407],[63.518015,39.363257],[62.37426,40.053886],[61.882714,41.084857],[61.547179,41.26637],[60.465953,41.220327],[60.083341,41.425146],[59.976422,42.223082],[58.629011,42.751551],[57.78653,42.170553],[56.932215,41.826026],[57.096391,41.32231],[55.968191,41.308642],[55.928917,44.995858],[58.503127,45.586804],[58.689989,45.500014],[60.239972,44.784037],[61.05832,44.405817],[62.0133,43.504477],[63.185787,43.650075],[64.900824,43.728081],[66.098012,42.99766],[66.023392,41.994646],[66.510649,41.987644],[66.714047,41.168444],[67.985856,41.135991],[68.259896,40.662325],[68.632483,40.668681],[69.070027,41.384244],[70.388965,42.081308],[70.962315,42.266154],[71.259248,42.167711],[70.420022,41.519998],[71.157859,41.143587],[71.870115,41.3929],[73.055417,40.866033],[71.774875,40.145844],[71.014198,40.244366],[70.601407,40.218527],[70.45816,40.496495],[70.666622,40.960213],[69.329495,40.727824],[69.011633,40.086158],[68.536416,39.533453],[67.701429,39.580478],[67.44222,39.140144],[68.176025,38.901553],[68.392033,38.157025],[67.83,37.144994],[67.075782,37.356144],[66.518607,37.362784]]]}},{type:"Feature",id:"VEN",properties:{name:"Venezuela"},geometry:{type:"Polygon",coordinates:[[[-71.331584,11.776284],[-71.360006,11.539994],[-71.94705,11.423282],[-71.620868,10.96946],[-71.633064,10.446494],[-72.074174,9.865651],[-71.695644,9.072263],[-71.264559,9.137195],[-71.039999,9.859993],[-71.350084,10.211935],[-71.400623,10.968969],[-70.155299,11.375482],[-70.293843,11.846822],[-69.943245,12.162307],[-69.5843,11.459611],[-68.882999,11.443385],[-68.233271,10.885744],[-68.194127,10.554653],[-67.296249,10.545868],[-66.227864,10.648627],[-65.655238,10.200799],[-64.890452,10.077215],[-64.329479,10.389599],[-64.318007,10.641418],[-63.079322,10.701724],[-61.880946,10.715625],[-62.730119,10.420269],[-62.388512,9.948204],[-61.588767,9.873067],[-60.830597,9.38134],[-60.671252,8.580174],[-60.150096,8.602757],[-59.758285,8.367035],[-60.550588,7.779603],[-60.637973,7.415],[-60.295668,7.043911],[-60.543999,6.856584],[-61.159336,6.696077],[-61.139415,6.234297],[-61.410303,5.959068],[-60.733574,5.200277],[-60.601179,4.918098],[-60.966893,4.536468],[-62.08543,4.162124],[-62.804533,4.006965],[-63.093198,3.770571],[-63.888343,4.02053],[-64.628659,4.148481],[-64.816064,4.056445],[-64.368494,3.79721],[-64.408828,3.126786],[-64.269999,2.497006],[-63.422867,2.411068],[-63.368788,2.2009],[-64.083085,1.916369],[-64.199306,1.492855],[-64.611012,1.328731],[-65.354713,1.095282],[-65.548267,.789254],[-66.325765,.724452],[-66.876326,1.253361],[-67.181294,2.250638],[-67.447092,2.600281],[-67.809938,2.820655],[-67.303173,3.318454],[-67.337564,3.542342],[-67.621836,3.839482],[-67.823012,4.503937],[-67.744697,5.221129],[-67.521532,5.55687],[-67.34144,6.095468],[-67.695087,6.267318],[-68.265052,6.153268],[-68.985319,6.206805],[-69.38948,6.099861],[-70.093313,6.960376],[-70.674234,7.087785],[-71.960176,6.991615],[-72.198352,7.340431],[-72.444487,7.423785],[-72.479679,7.632506],[-72.360901,8.002638],[-72.439862,8.405275],[-72.660495,8.625288],[-72.78873,9.085027],[-73.304952,9.152],[-73.027604,9.73677],[-72.905286,10.450344],[-72.614658,10.821975],[-72.227575,11.108702],[-71.973922,11.608672],[-71.331584,11.776284]]]}},{type:"Feature",id:"VNM",properties:{name:"Vietnam"},geometry:{type:"Polygon",coordinates:[[[108.05018,21.55238],[106.715068,20.696851],[105.881682,19.75205],[105.662006,19.058165],[106.426817,18.004121],[107.361954,16.697457],[108.269495,16.079742],[108.877107,15.276691],[109.33527,13.426028],[109.200136,11.666859],[108.36613,11.008321],[107.220929,10.364484],[106.405113,9.53084],[105.158264,8.59976],[104.795185,9.241038],[105.076202,9.918491],[104.334335,10.486544],[105.199915,10.88931],[106.24967,10.961812],[105.810524,11.567615],[107.491403,12.337206],[107.614548,13.535531],[107.382727,14.202441],[107.564525,15.202173],[107.312706,15.908538],[106.556008,16.604284],[105.925762,17.485315],[105.094598,18.666975],[103.896532,19.265181],[104.183388,19.624668],[104.822574,19.886642],[104.435,20.758733],[103.203861,20.766562],[102.754896,21.675137],[102.170436,22.464753],[102.706992,22.708795],[103.504515,22.703757],[104.476858,22.81915],[105.329209,23.352063],[105.811247,22.976892],[106.725403,22.794268],[106.567273,22.218205],[107.04342,21.811899],[108.05018,21.55238]]]}},{type:"Feature",id:"VUT",properties:{name:"Vanuatu"},geometry:{type:"MultiPolygon",coordinates:[[[[167.844877,-16.466333],[167.515181,-16.59785],[167.180008,-16.159995],[167.216801,-15.891846],[167.844877,-16.466333]]],[[[167.107712,-14.93392],[167.270028,-15.740021],[167.001207,-15.614602],[166.793158,-15.668811],[166.649859,-15.392704],[166.629137,-14.626497],[167.107712,-14.93392]]]]}},{type:"Feature",id:"PSE",properties:{name:"West Bank"},geometry:{type:"Polygon",coordinates:[[[35.545665,32.393992],[35.545252,31.782505],[35.397561,31.489086],[34.927408,31.353435],[34.970507,31.616778],[35.225892,31.754341],[34.974641,31.866582],[35.18393,32.532511],[35.545665,32.393992]]]}},{type:"Feature",id:"YEM",properties:{name:"Yemen"},geometry:{type:"Polygon",coordinates:[[[53.108573,16.651051],[52.385206,16.382411],[52.191729,15.938433],[52.168165,15.59742],[51.172515,15.17525],[49.574576,14.708767],[48.679231,14.003202],[48.238947,13.94809],[47.938914,14.007233],[47.354454,13.59222],[46.717076,13.399699],[45.877593,13.347764],[45.62505,13.290946],[45.406459,13.026905],[45.144356,12.953938],[44.989533,12.699587],[44.494576,12.721653],[44.175113,12.58595],[43.482959,12.6368],[43.222871,13.22095],[43.251448,13.767584],[43.087944,14.06263],[42.892245,14.802249],[42.604873,15.213335],[42.805015,15.261963],[42.702438,15.718886],[42.823671,15.911742],[42.779332,16.347891],[43.218375,16.66689],[43.115798,17.08844],[43.380794,17.579987],[43.791519,17.319977],[44.062613,17.410359],[45.216651,17.433329],[45.399999,17.333335],[46.366659,17.233315],[46.749994,17.283338],[47.000005,16.949999],[47.466695,17.116682],[48.183344,18.166669],[49.116672,18.616668],[52.00001,19.000003],[52.782184,17.349742],[53.108573,16.651051]]]}},{type:"Feature",id:"ZAF",properties:{name:"South Africa"},geometry:{type:"Polygon",coordinates:[[[31.521001,-29.257387],[31.325561,-29.401978],[30.901763,-29.909957],[30.622813,-30.423776],[30.055716,-31.140269],[28.925553,-32.172041],[28.219756,-32.771953],[27.464608,-33.226964],[26.419452,-33.61495],[25.909664,-33.66704],[25.780628,-33.944646],[25.172862,-33.796851],[24.677853,-33.987176],[23.594043,-33.794474],[22.988189,-33.916431],[22.574157,-33.864083],[21.542799,-34.258839],[20.689053,-34.417175],[20.071261,-34.795137],[19.616405,-34.819166],[19.193278,-34.462599],[18.855315,-34.444306],[18.424643,-33.997873],[18.377411,-34.136521],[18.244499,-33.867752],[18.25008,-33.281431],[17.92519,-32.611291],[18.24791,-32.429131],[18.221762,-31.661633],[17.566918,-30.725721],[17.064416,-29.878641],[17.062918,-29.875954],[16.344977,-28.576705],[16.824017,-28.082162],[17.218929,-28.355943],[17.387497,-28.783514],[17.836152,-28.856378],[18.464899,-29.045462],[19.002127,-28.972443],[19.894734,-28.461105],[19.895768,-24.76779],[20.165726,-24.917962],[20.758609,-25.868136],[20.66647,-26.477453],[20.889609,-26.828543],[21.605896,-26.726534],[22.105969,-26.280256],[22.579532,-25.979448],[22.824271,-25.500459],[23.312097,-25.26869],[23.73357,-25.390129],[24.211267,-25.670216],[25.025171,-25.71967],[25.664666,-25.486816],[25.765849,-25.174845],[25.941652,-24.696373],[26.485753,-24.616327],[26.786407,-24.240691],[27.11941,-23.574323],[28.017236,-22.827754],[29.432188,-22.091313],[29.839037,-22.102216],[30.322883,-22.271612],[30.659865,-22.151567],[31.191409,-22.25151],[31.670398,-23.658969],[31.930589,-24.369417],[31.752408,-25.484284],[31.837778,-25.843332],[31.333158,-25.660191],[31.04408,-25.731452],[30.949667,-26.022649],[30.676609,-26.398078],[30.685962,-26.743845],[31.282773,-27.285879],[31.86806,-27.177927],[32.071665,-26.73382],[32.83012,-26.742192],[32.580265,-27.470158],[32.462133,-28.301011],[32.203389,-28.752405],[31.521001,-29.257387]],[[28.978263,-28.955597],[28.5417,-28.647502],[28.074338,-28.851469],[27.532511,-29.242711],[26.999262,-29.875954],[27.749397,-30.645106],[28.107205,-30.545732],[28.291069,-30.226217],[28.8484,-30.070051],[29.018415,-29.743766],[29.325166,-29.257387],[28.978263,-28.955597]]]}},{type:"Feature",id:"ZMB",properties:{name:"Zambia"},geometry:{type:"Polygon",coordinates:[[[32.759375,-9.230599],[33.231388,-9.676722],[33.485688,-10.525559],[33.31531,-10.79655],[33.114289,-11.607198],[33.306422,-12.435778],[32.991764,-12.783871],[32.688165,-13.712858],[33.214025,-13.97186],[30.179481,-14.796099],[30.274256,-15.507787],[29.516834,-15.644678],[28.947463,-16.043051],[28.825869,-16.389749],[28.467906,-16.4684],[27.598243,-17.290831],[27.044427,-17.938026],[26.706773,-17.961229],[26.381935,-17.846042],[25.264226,-17.73654],[25.084443,-17.661816],[25.07695,-17.578823],[24.682349,-17.353411],[24.033862,-17.295843],[23.215048,-17.523116],[22.562478,-16.898451],[21.887843,-16.08031],[21.933886,-12.898437],[24.016137,-12.911046],[23.930922,-12.565848],[24.079905,-12.191297],[23.904154,-11.722282],[24.017894,-11.237298],[23.912215,-10.926826],[24.257155,-10.951993],[24.314516,-11.262826],[24.78317,-11.238694],[25.418118,-11.330936],[25.75231,-11.784965],[26.553088,-11.92444],[27.16442,-11.608748],[27.388799,-12.132747],[28.155109,-12.272481],[28.523562,-12.698604],[28.934286,-13.248958],[29.699614,-13.257227],[29.616001,-12.178895],[29.341548,-12.360744],[28.642417,-11.971569],[28.372253,-11.793647],[28.49607,-10.789884],[28.673682,-9.605925],[28.449871,-9.164918],[28.734867,-8.526559],[29.002912,-8.407032],[30.346086,-8.238257],[30.740015,-8.340007],[31.157751,-8.594579],[31.556348,-8.762049],[32.191865,-8.930359],[32.759375,-9.230599]]]}},{type:"Feature",id:"ZWE",properties:{name:"Zimbabwe"},geometry:{type:"Polygon",coordinates:[[[31.191409,-22.25151],[30.659865,-22.151567],[30.322883,-22.271612],[29.839037,-22.102216],[29.432188,-22.091313],[28.794656,-21.639454],[28.02137,-21.485975],[27.727228,-20.851802],[27.724747,-20.499059],[27.296505,-20.39152],[26.164791,-19.293086],[25.850391,-18.714413],[25.649163,-18.536026],[25.264226,-17.73654],[26.381935,-17.846042],[26.706773,-17.961229],[27.044427,-17.938026],[27.598243,-17.290831],[28.467906,-16.4684],[28.825869,-16.389749],[28.947463,-16.043051],[29.516834,-15.644678],[30.274256,-15.507787],[30.338955,-15.880839],[31.173064,-15.860944],[31.636498,-16.07199],[31.852041,-16.319417],[32.328239,-16.392074],[32.847639,-16.713398],[32.849861,-17.979057],[32.654886,-18.67209],[32.611994,-19.419383],[32.772708,-19.715592],[32.659743,-20.30429],[32.508693,-20.395292],[32.244988,-21.116489],[31.191409,-22.25151]]]}}]};function mx(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function ws(i,e){return vx(i)||_x(i,e)||cA(i,e)||wx()}function gx(i){return yx(i)||xx(i)||cA(i)||bx()}function yx(i){if(Array.isArray(i))return cn(i)}function vx(i){if(Array.isArray(i))return i}function xx(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function _x(i,e){var t=i&&(typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"]);if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function cA(i,e){if(!!i){if(typeof i=="string")return cn(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return cn(i,e)}}function cn(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function bx(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function wx(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var Mx=function(e,t){var n=new Set(t);return Object.assign.apply(Object,[{}].concat(gx(Object.entries(e).filter(function(r){var o=ws(r,1),s=o[0];return!n.has(s)}).map(function(r){var o=ws(r,2),s=o[0],a=o[1];return mx({},s,a)}))))};/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */var Ms=function(e){return[...e].reduce((t,[n,r])=>(t[n]=r,t),{})};function y3(i){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?y3=function(e){return typeof e}:y3=function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y3(i)}function Sx(i,e){return Tx(i)||Px(i,e)||fA(i,e)||Lx()}function Ss(i){return Ex(i)||Cx(i)||fA(i)||Rx()}function Ex(i){if(Array.isArray(i))return fn(i)}function Tx(i){if(Array.isArray(i))return i}function Cx(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function Px(i,e){var t=i&&(typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"]);if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function fA(i,e){if(!!i){if(typeof i=="string")return fn(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return fn(i,e)}}function fn(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function Rx(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Lx(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Dx(i,e){var t=y3(e)==="object"?e:{wrapperElementType:e,methodNames:(arguments.length<=2?void 0:arguments[2])||void 0,initPropNames:(arguments.length<=3?void 0:arguments[3])||void 0},n=t.wrapperElementType,r=n===void 0?"div":n,o=t.nodeMapper,s=o===void 0?function(m){return m}:o,a=t.methodNames,h=a===void 0?[]:a,f=t.initPropNames,d=f===void 0?[]:f;return d9.exports.forwardRef(function(m,y){var v=d9.exports.useRef(),b=d9.exports.useState({}),M=Sx(b,2),w=M[0],E=M[1];d9.exports.useEffect(function(){return E(m)});var T=d9.exports.useMemo(function(){var R=Ms(d.filter(function(I){return m.hasOwnProperty(I)}).map(function(I){return[I,m[I]]}));return i(R)},[]);d9.exports.useLayoutEffect(function(){T(s(v.current))},[]),d9.exports.useEffect(function(){return T._destructor instanceof Function?T._destructor:void 0},[]);var C=d9.exports.useCallback(function(R){for(var I=arguments.length,q=new Array(I>1?I-1:0),D=1;D<I;D++)q[D-1]=arguments[D];return T[R]instanceof Function?T[R].apply(T,q):void 0},[T]),P=Mx(m,[].concat(Ss(h),Ss(d)));return Object.keys(P).filter(function(R){return w[R]!==m[R]}).forEach(function(R){return C(R,m[R])}),d9.exports.useImperativeHandle(y,function(){return Ms(h.map(function(R){return[R,function(){for(var I=arguments.length,q=new Array(I),D=0;D<I;D++)q[D]=arguments[D];return C.apply(void 0,[R].concat(q))}]}))}),Df.createElement(r,{ref:v})})}class hA extends H1{constructor(e=document.createElement("div")){super();this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof Element&&t.element.parentNode!==null&&t.element.parentNode.removeChild(t.element)})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}hA.prototype.isCSS2DObject=!0;const W4=new $,Es=new m1,Ts=new m1,Cs=new $,Ps=new $;class Ix{constructor(e={}){const t=this;let n,r,o,s;const a={objects:new WeakMap},h=e.element!==void 0?e.element:document.createElement("div");h.style.overflow="hidden",this.domElement=h,this.getSize=function(){return{width:n,height:r}},this.render=function(v,b){v.autoUpdate===!0&&v.updateMatrixWorld(),b.parent===null&&b.updateMatrixWorld(),Es.copy(b.matrixWorldInverse),Ts.multiplyMatrices(b.projectionMatrix,Es),f(v,v,b),y(v)},this.setSize=function(v,b){n=v,r=b,o=n/2,s=r/2,h.style.width=v+"px",h.style.height=b+"px"};function f(v,b,M){if(v.isCSS2DObject){W4.setFromMatrixPosition(v.matrixWorld),W4.applyMatrix4(Ts);const w=v.visible===!0&&W4.z>=-1&&W4.z<=1&&v.layers.test(M.layers)===!0;if(v.element.style.display=w===!0?"":"none",w===!0){v.onBeforeRender(t,b,M);const T=v.element;/apple/i.test(navigator.vendor)?T.style.transform="translate(-50%,-50%) translate("+Math.round(W4.x*o+o)+"px,"+Math.round(-W4.y*s+s)+"px)":T.style.transform="translate(-50%,-50%) translate("+(W4.x*o+o)+"px,"+(-W4.y*s+s)+"px)",T.parentNode!==h&&h.appendChild(T),v.onAfterRender(t,b,M)}const E={distanceToCameraSquared:d(M,v)};a.objects.set(v,E)}for(let w=0,E=v.children.length;w<E;w++)f(v.children[w],b,M)}function d(v,b){return Cs.setFromMatrixPosition(v.matrixWorld),Ps.setFromMatrixPosition(b.matrixWorld),Cs.distanceToSquared(Ps)}function m(v){const b=[];return v.traverse(function(M){M.isCSS2DObject&&b.push(M)}),b}function y(v){const b=m(v).sort(function(w,E){if(w.renderOrder!==E.renderOrder)return E.renderOrder-w.renderOrder;const T=a.objects.get(w).distanceToCameraSquared,C=a.objects.get(E).distanceToCameraSquared;return T-C}),M=b.length;for(let w=0,E=b.length;w<E;w++)b[w].element.style.zIndex=M-w}}}function hn(i,e,t){var n,r,o,s,a;e==null&&(e=100);function h(){var d=Date.now()-s;d<e&&d>=0?n=setTimeout(h,e-d):(n=null,t||(a=i.apply(o,r),o=r=null))}var f=function(){o=this,r=arguments,s=Date.now();var d=t&&!n;return n||(n=setTimeout(h,e)),d&&(a=i.apply(o,r),o=r=null),a};return f.clear=function(){n&&(clearTimeout(n),n=null)},f.flush=function(){n&&(a=i.apply(o,r),o=r=null,clearTimeout(n),n=null)},f}hn.debounce=hn;var Bx=hn;function Ox(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Rs(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function qx(i,e,t){return e&&Rs(i.prototype,e),t&&Rs(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}function Fx(i,e){return kx(i)||Nx(i,e)||Ux(i,e)||zx()}function kx(i){if(Array.isArray(i))return i}function Nx(i,e){var t=i==null?null:typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function Ux(i,e){if(!!i){if(typeof i=="string")return Ls(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Ls(i,e)}}function Ls(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function zx(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var Gx=qx(function i(e,t){var n=t.default,r=n===void 0?null:n,o=t.triggerUpdate,s=o===void 0?!0:o,a=t.onChange,h=a===void 0?function(f,d){}:a;Ox(this,i),this.name=e,this.defaultVal=r,this.triggerUpdate=s,this.onChange=h});function G9(i){var e=i.stateInit,t=e===void 0?function(){return{}}:e,n=i.props,r=n===void 0?{}:n,o=i.methods,s=o===void 0?{}:o,a=i.aliases,h=a===void 0?{}:a,f=i.init,d=f===void 0?function(){}:f,m=i.update,y=m===void 0?function(){}:m,v=Object.keys(r).map(function(b){return new Gx(b,r[b])});return function(){var b=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},M=Object.assign({},t instanceof Function?t(b):t,{initialised:!1}),w={};function E(P){return T(P,b),C(),E}var T=function(R,I){d.call(E,R,M,I),M.initialised=!0},C=Bx(function(){!M.initialised||(y.call(E,M,w),w={})},1);return v.forEach(function(P){E[P.name]=R(P);function R(I){var q=I.name,D=I.triggerUpdate,O=D===void 0?!1:D,k=I.onChange,B=k===void 0?function(z,G){}:k,j=I.defaultVal,Y=j===void 0?null:j;return function(z){var G=M[q];if(!arguments.length)return G;var X=z===void 0?Y:z;return M[q]=X,B.call(E,X,M,G),!w.hasOwnProperty(q)&&(w[q]=G),O&&C(),E}}}),Object.keys(s).forEach(function(P){E[P]=function(){for(var R,I=arguments.length,q=new Array(I),D=0;D<I;D++)q[D]=arguments[D];return(R=s[P]).call.apply(R,[E,M].concat(q))}}),Object.entries(h).forEach(function(P){var R=Fx(P,2),I=R[0],q=R[1];return E[I]=E[q]}),E.resetProps=function(){return v.forEach(function(P){E[P.name](P.defaultVal)}),E},E.resetProps(),M._rerender=C,E}}var S7={Linear:{None:function(i){return i}},Quadratic:{In:function(i){return i*i},Out:function(i){return i*(2-i)},InOut:function(i){return(i*=2)<1?.5*i*i:-.5*(--i*(i-2)-1)}},Cubic:{In:function(i){return i*i*i},Out:function(i){return--i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i:.5*((i-=2)*i*i+2)}},Quartic:{In:function(i){return i*i*i*i},Out:function(i){return 1- --i*i*i*i},InOut:function(i){return(i*=2)<1?.5*i*i*i*i:-.5*((i-=2)*i*i*i-2)}},Quintic:{In:function(i){return i*i*i*i*i},Out:function(i){return--i*i*i*i*i+1},InOut:function(i){return(i*=2)<1?.5*i*i*i*i*i:.5*((i-=2)*i*i*i*i+2)}},Sinusoidal:{In:function(i){return 1-Math.cos(i*Math.PI/2)},Out:function(i){return Math.sin(i*Math.PI/2)},InOut:function(i){return .5*(1-Math.cos(Math.PI*i))}},Exponential:{In:function(i){return i===0?0:Math.pow(1024,i-1)},Out:function(i){return i===1?1:1-Math.pow(2,-10*i)},InOut:function(i){return i===0?0:i===1?1:(i*=2)<1?.5*Math.pow(1024,i-1):.5*(-Math.pow(2,-10*(i-1))+2)}},Circular:{In:function(i){return 1-Math.sqrt(1-i*i)},Out:function(i){return Math.sqrt(1- --i*i)},InOut:function(i){return(i*=2)<1?-.5*(Math.sqrt(1-i*i)-1):.5*(Math.sqrt(1-(i-=2)*i)+1)}},Elastic:{In:function(i){return i===0?0:i===1?1:-Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI)},Out:function(i){return i===0?0:i===1?1:Math.pow(2,-10*i)*Math.sin((i-.1)*5*Math.PI)+1},InOut:function(i){return i===0?0:i===1?1:(i*=2,i<1?-.5*Math.pow(2,10*(i-1))*Math.sin((i-1.1)*5*Math.PI):.5*Math.pow(2,-10*(i-1))*Math.sin((i-1.1)*5*Math.PI)+1)}},Back:{In:function(i){var e=1.70158;return i*i*((e+1)*i-e)},Out:function(i){var e=1.70158;return--i*i*((e+1)*i+e)+1},InOut:function(i){var e=2.5949095;return(i*=2)<1?.5*(i*i*((e+1)*i-e)):.5*((i-=2)*i*((e+1)*i+e)+2)}},Bounce:{In:function(i){return 1-S7.Bounce.Out(1-i)},Out:function(i){return i<1/2.75?7.5625*i*i:i<2/2.75?7.5625*(i-=1.5/2.75)*i+.75:i<2.5/2.75?7.5625*(i-=2.25/2.75)*i+.9375:7.5625*(i-=2.625/2.75)*i+.984375},InOut:function(i){return i<.5?S7.Bounce.In(i*2)*.5:S7.Bounce.Out(i*2-1)*.5+.5}}},y7;typeof self=="undefined"&&typeof process!="undefined"&&process.hrtime?y7=function(){var i=process.hrtime();return i[0]*1e3+i[1]/1e6}:typeof self!="undefined"&&self.performance!==void 0&&self.performance.now!==void 0?y7=self.performance.now.bind(self.performance):Date.now!==void 0?y7=Date.now:y7=function(){return new Date().getTime()};var S5=y7,dA=function(){function i(){this._tweens={},this._tweensAddedDuringUpdate={}}return i.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},i.prototype.removeAll=function(){this._tweens={}},i.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},i.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},i.prototype.update=function(e,t){e===void 0&&(e=S5()),t===void 0&&(t=!1);var n=Object.keys(this._tweens);if(n.length===0)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<n.length;r++){var o=this._tweens[n[r]],s=!t;o&&o.update(e,s)===!1&&!t&&delete this._tweens[n[r]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},i}(),_6={Linear:function(i,e){var t=i.length-1,n=t*e,r=Math.floor(n),o=_6.Utils.Linear;return e<0?o(i[0],i[1],n):e>1?o(i[t],i[t-1],t-n):o(i[r],i[r+1>t?t:r+1],n-r)},Bezier:function(i,e){for(var t=0,n=i.length-1,r=Math.pow,o=_6.Utils.Bernstein,s=0;s<=n;s++)t+=r(1-e,n-s)*r(e,s)*i[s]*o(n,s);return t},CatmullRom:function(i,e){var t=i.length-1,n=t*e,r=Math.floor(n),o=_6.Utils.CatmullRom;return i[0]===i[t]?(e<0&&(r=Math.floor(n=t*(1+e))),o(i[(r-1+t)%t],i[r],i[(r+1)%t],i[(r+2)%t],n-r)):e<0?i[0]-(o(i[0],i[0],i[1],i[1],-n)-i[0]):e>1?i[t]-(o(i[t],i[t],i[t-1],i[t-1],n-t)-i[t]):o(i[r?r-1:0],i[r],i[t<r+1?t:r+1],i[t<r+2?t:r+2],n-r)},Utils:{Linear:function(i,e,t){return(e-i)*t+i},Bernstein:function(i,e){var t=_6.Utils.Factorial;return t(i)/t(e)/t(i-e)},Factorial:function(){var i=[1];return function(e){var t=1;if(i[e])return i[e];for(var n=e;n>1;n--)t*=n;return i[e]=t,t}}(),CatmullRom:function(i,e,t,n,r){var o=(t-i)*.5,s=(n-e)*.5,a=r*r,h=r*a;return(2*e-2*t+o+s)*h+(-3*e+3*t-2*o-s)*a+o*r+e}}},Ii=function(){function i(){}return i.nextId=function(){return i._nextId++},i._nextId=0,i}(),pA=new dA,Hx=function(){function i(e,t){t===void 0&&(t=pA),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=S7.Linear.None,this._interpolationFunction=_6.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._id=Ii.nextId(),this._isChainStopped=!1,this._goToEnd=!1}return i.prototype.getId=function(){return this._id},i.prototype.isPlaying=function(){return this._isPlaying},i.prototype.isPaused=function(){return this._isPaused},i.prototype.to=function(e,t){return this._valuesEnd=Object.create(e),t!==void 0&&(this._duration=t),this},i.prototype.duration=function(e){return this._duration=e,this},i.prototype.start=function(e){if(this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var t in this._valuesStartRepeat)this._swapEndStartRepeatValues(t),this._valuesStart[t]=this._valuesStartRepeat[t]}return this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e!==void 0?typeof e=="string"?S5()+parseFloat(e):e:S5(),this._startTime+=this._delayTime,this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat),this},i.prototype._setupProperties=function(e,t,n,r){for(var o in n){var s=e[o],a=Array.isArray(s),h=a?"array":typeof s,f=!a&&Array.isArray(n[o]);if(!(h==="undefined"||h==="function")){if(f){var d=n[o];if(d.length===0)continue;d=d.map(this._handleRelativeValue.bind(this,s)),n[o]=[s].concat(d)}if((h==="object"||a)&&s&&!f){t[o]=a?[]:{};for(var m in s)t[o][m]=s[m];r[o]=a?[]:{},this._setupProperties(s,t[o],n[o],r[o])}else typeof t[o]=="undefined"&&(t[o]=s),a||(t[o]*=1),f?r[o]=n[o].slice().reverse():r[o]=t[o]||0}}},i.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},i.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},i.prototype.pause=function(e){return e===void 0&&(e=S5()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this),this)},i.prototype.resume=function(e){return e===void 0&&(e=S5()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},i.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},i.prototype.group=function(e){return this._group=e,this},i.prototype.delay=function(e){return this._delayTime=e,this},i.prototype.repeat=function(e){return this._initialRepeat=e,this._repeat=e,this},i.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},i.prototype.yoyo=function(e){return this._yoyo=e,this},i.prototype.easing=function(e){return this._easingFunction=e,this},i.prototype.interpolation=function(e){return this._interpolationFunction=e,this},i.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},i.prototype.onStart=function(e){return this._onStartCallback=e,this},i.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},i.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},i.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},i.prototype.onStop=function(e){return this._onStopCallback=e,this},i.prototype.update=function(e,t){if(e===void 0&&(e=S5()),t===void 0&&(t=!0),this._isPaused)return!0;var n,r,o=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>o)return!1;t&&this.start(e)}if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),r=(e-this._startTime)/this._duration,r=this._duration===0||r>1?1:r;var s=this._easingFunction(r);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,s),this._onUpdateCallback&&this._onUpdateCallback(this._object,r),r===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(n in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[n]=="string"&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var a=0,h=this._chainedTweens.length;a<h;a++)this._chainedTweens[a].start(this._startTime+this._duration);return this._isPlaying=!1,!1}return!0},i.prototype._updateProperties=function(e,t,n,r){for(var o in n)if(t[o]!==void 0){var s=t[o]||0,a=n[o],h=Array.isArray(e[o]),f=Array.isArray(a),d=!h&&f;d?e[o]=this._interpolationFunction(a,r):typeof a=="object"&&a?this._updateProperties(e[o],s,a,r):(a=this._handleRelativeValue(s,a),typeof a=="number"&&(e[o]=s+(a-s)*r))}},i.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},i.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];typeof n=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(n):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},i}(),Vx="18.6.4",Wx=Ii.nextId,a4=pA,jx=a4.getAll.bind(a4),Qx=a4.removeAll.bind(a4),$x=a4.add.bind(a4),Yx=a4.remove.bind(a4),Xx=a4.update.bind(a4),W1={Easing:S7,Group:dA,Interpolation:_6,now:S5,Sequence:Ii,nextId:Wx,Tween:Hx,VERSION:Vx,getAll:jx,removeAll:Qx,add:$x,remove:Yx,update:Xx},Bi={exports:{}};Bi.exports=we;Bi.exports.default=we;function we(i,e,t){t=t||2;var n=e&&e.length,r=n?e[0]*t:i.length,o=mA(i,0,r,t,!0),s=[];if(!o||o.next===o.prev)return s;var a,h,f,d,m,y,v;if(n&&(o=t_(i,e,o,t)),i.length>80*t){a=f=i[0],h=d=i[1];for(var b=t;b<r;b+=t)m=i[b],y=i[b+1],m<a&&(a=m),y<h&&(h=y),m>f&&(f=m),y>d&&(d=y);v=Math.max(f-a,d-h),v=v!==0?1/v:0}return F7(o,s,t,a,h,v),s}function mA(i,e,t,n,r){var o,s;if(r===mn(i,e,t,n)>0)for(o=e;o<t;o+=n)s=Ds(o,i[o],i[o+1],s);else for(o=t-n;o>=e;o-=n)s=Ds(o,i[o],i[o+1],s);return s&&Me(s,s.next)&&(N7(s),s=s.next),s}function r5(i,e){if(!i)return i;e||(e=i);var t=i,n;do if(n=!1,!t.steiner&&(Me(t,t.next)||f9(t.prev,t,t.next)===0)){if(N7(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function F7(i,e,t,n,r,o,s){if(!!i){!s&&o&&s_(i,n,r,o);for(var a=i,h,f;i.prev!==i.next;){if(h=i.prev,f=i.next,o?Jx(i,n,r,o):Zx(i)){e.push(h.i/t),e.push(i.i/t),e.push(f.i/t),N7(i),i=f.next,a=f.next;continue}if(i=f,i===a){s?s===1?(i=Kx(r5(i),e,t),F7(i,e,t,n,r,o,2)):s===2&&e_(i,e,t,n,r,o):F7(r5(i),e,t,n,r,o,1);break}}}}function Zx(i){var e=i.prev,t=i,n=i.next;if(f9(e,t,n)>=0)return!1;for(var r=i.next.next;r!==i.prev;){if(b6(e.x,e.y,t.x,t.y,n.x,n.y,r.x,r.y)&&f9(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Jx(i,e,t,n){var r=i.prev,o=i,s=i.next;if(f9(r,o,s)>=0)return!1;for(var a=r.x<o.x?r.x<s.x?r.x:s.x:o.x<s.x?o.x:s.x,h=r.y<o.y?r.y<s.y?r.y:s.y:o.y<s.y?o.y:s.y,f=r.x>o.x?r.x>s.x?r.x:s.x:o.x>s.x?o.x:s.x,d=r.y>o.y?r.y>s.y?r.y:s.y:o.y>s.y?o.y:s.y,m=dn(a,h,e,t,n),y=dn(f,d,e,t,n),v=i.prevZ,b=i.nextZ;v&&v.z>=m&&b&&b.z<=y;){if(v!==i.prev&&v!==i.next&&b6(r.x,r.y,o.x,o.y,s.x,s.y,v.x,v.y)&&f9(v.prev,v,v.next)>=0||(v=v.prevZ,b!==i.prev&&b!==i.next&&b6(r.x,r.y,o.x,o.y,s.x,s.y,b.x,b.y)&&f9(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;v&&v.z>=m;){if(v!==i.prev&&v!==i.next&&b6(r.x,r.y,o.x,o.y,s.x,s.y,v.x,v.y)&&f9(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;b&&b.z<=y;){if(b!==i.prev&&b!==i.next&&b6(r.x,r.y,o.x,o.y,s.x,s.y,b.x,b.y)&&f9(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function Kx(i,e,t){var n=i;do{var r=n.prev,o=n.next.next;!Me(r,o)&&gA(r,n,n.next,o)&&k7(r,o)&&k7(o,r)&&(e.push(r.i/t),e.push(n.i/t),e.push(o.i/t),N7(n),N7(n.next),n=i=o),n=n.next}while(n!==i);return r5(n)}function e_(i,e,t,n,r,o){var s=i;do{for(var a=s.next.next;a!==s.prev;){if(s.i!==a.i&&A_(s,a)){var h=yA(s,a);s=r5(s,s.next),h=r5(h,h.next),F7(s,e,t,n,r,o),F7(h,e,t,n,r,o);return}a=a.next}s=s.next}while(s!==i)}function t_(i,e,t,n){var r=[],o,s,a,h,f;for(o=0,s=e.length;o<s;o++)a=e[o]*n,h=o<s-1?e[o+1]*n:i.length,f=mA(i,a,h,n,!1),f===f.next&&(f.steiner=!0),r.push(l_(f));for(r.sort(n_),o=0;o<r.length;o++)t=i_(r[o],t),t=r5(t,t.next);return t}function n_(i,e){return i.x-e.x}function i_(i,e){var t=r_(i,e);if(!t)return e;var n=yA(t,i),r=r5(t,t.next);return r5(n,n.next),e===t?r:e}function r_(i,e){var t=e,n=i.x,r=i.y,o=-1/0,s;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){var a=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=n&&a>o){if(o=a,a===n){if(r===t.y)return t;if(r===t.next.y)return t.next}s=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!s)return null;if(n===o)return s;var h=s,f=s.x,d=s.y,m=1/0,y;t=s;do n>=t.x&&t.x>=f&&n!==t.x&&b6(r<d?n:o,r,f,d,r<d?o:n,r,t.x,t.y)&&(y=Math.abs(r-t.y)/(n-t.x),k7(t,i)&&(y<m||y===m&&(t.x>s.x||t.x===s.x&&o_(s,t)))&&(s=t,m=y)),t=t.next;while(t!==h);return s}function o_(i,e){return f9(i.prev,i,e.prev)<0&&f9(e.next,i,i.next)<0}function s_(i,e,t,n){var r=i;do r.z===null&&(r.z=dn(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,a_(r)}function a_(i){var e,t,n,r,o,s,a,h,f=1;do{for(t=i,i=null,o=null,s=0;t;){for(s++,n=t,a=0,e=0;e<f&&(a++,n=n.nextZ,!!n);e++);for(h=f;a>0||h>0&&n;)a!==0&&(h===0||!n||t.z<=n.z)?(r=t,t=t.nextZ,a--):(r=n,n=n.nextZ,h--),o?o.nextZ=r:i=r,r.prevZ=o,o=r;t=n}o.nextZ=null,f*=2}while(s>1);return i}function dn(i,e,t,n,r){return i=32767*(i-t)*r,e=32767*(e-n)*r,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function l_(i){var e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function b6(i,e,t,n,r,o,s,a){return(r-s)*(e-a)-(i-s)*(o-a)>=0&&(i-s)*(n-a)-(t-s)*(e-a)>=0&&(t-s)*(o-a)-(r-s)*(n-a)>=0}function A_(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!u_(i,e)&&(k7(i,e)&&k7(e,i)&&c_(i,e)&&(f9(i.prev,i,e.prev)||f9(i,e.prev,e))||Me(i,e)&&f9(i.prev,i,i.next)>0&&f9(e.prev,e,e.next)>0)}function f9(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function Me(i,e){return i.x===e.x&&i.y===e.y}function gA(i,e,t,n){var r=X8(f9(i,e,t)),o=X8(f9(i,e,n)),s=X8(f9(t,n,i)),a=X8(f9(t,n,e));return!!(r!==o&&s!==a||r===0&&Y8(i,t,e)||o===0&&Y8(i,n,e)||s===0&&Y8(t,i,n)||a===0&&Y8(t,e,n))}function Y8(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function X8(i){return i>0?1:i<0?-1:0}function u_(i,e){var t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&gA(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function k7(i,e){return f9(i.prev,i,i.next)<0?f9(i,e,i.next)>=0&&f9(i,i.prev,e)>=0:f9(i,e,i.prev)<0||f9(i,i.next,e)<0}function c_(i,e){var t=i,n=!1,r=(i.x+e.x)/2,o=(i.y+e.y)/2;do t.y>o!=t.next.y>o&&t.next.y!==t.y&&r<(t.next.x-t.x)*(o-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function yA(i,e){var t=new pn(i.i,i.x,i.y),n=new pn(e.i,e.x,e.y),r=i.next,o=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,o.next=n,n.prev=o,n}function Ds(i,e,t,n){var r=new pn(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function N7(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function pn(i,e,t){this.i=i,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}we.deviation=function(i,e,t,n){var r=e&&e.length,o=r?e[0]*t:i.length,s=Math.abs(mn(i,0,o,t));if(r)for(var a=0,h=e.length;a<h;a++){var f=e[a]*t,d=a<h-1?e[a+1]*t:i.length;s-=Math.abs(mn(i,f,d,t))}var m=0;for(a=0;a<n.length;a+=3){var y=n[a]*t,v=n[a+1]*t,b=n[a+2]*t;m+=Math.abs((i[y]-i[b])*(i[v+1]-i[y+1])-(i[y]-i[v])*(i[b+1]-i[y+1]))}return s===0&&m===0?0:Math.abs((m-s)/s)};function mn(i,e,t,n){for(var r=0,o=e,s=t-n;o<t;o+=n)r+=(i[s]-i[o])*(i[o+1]+i[s+1]),s=o;return r}we.flatten=function(i){for(var e=i[0][0].length,t={vertices:[],holes:[],dimensions:e},n=0,r=0;r<i.length;r++){for(var o=0;o<i[r].length;o++)for(var s=0;s<e;s++)t.vertices.push(i[r][o][s]);r>0&&(n+=i[r-1].length,t.holes.push(n))}return t};var U7=Bi.exports;function gn(i,e){return i==null||e==null?NaN:i<e?-1:i>e?1:i>=e?0:NaN}function vA(i){let e=i,t=i,n=i;i.length!==2&&(e=(a,h)=>i(a)-h,t=gn,n=(a,h)=>gn(i(a),h));function r(a,h,f=0,d=a.length){if(f<d){if(t(h,h)!==0)return d;do{const m=f+d>>>1;n(a[m],h)<0?f=m+1:d=m}while(f<d)}return f}function o(a,h,f=0,d=a.length){if(f<d){if(t(h,h)!==0)return d;do{const m=f+d>>>1;n(a[m],h)<=0?f=m+1:d=m}while(f<d)}return f}function s(a,h,f=0,d=a.length){const m=r(a,h,f,d-1);return m>f&&e(a[m-1],h)>-e(a[m],h)?m-1:m}return{left:r,center:s,right:o}}function f_(i){return i===null?NaN:+i}const h_=vA(gn),d_=h_.right;vA(f_).center;var p_=d_;function I3(i,e){let t,n;if(e===void 0)for(const r of i)r!=null&&(t===void 0?r>=r&&(t=n=r):(t>r&&(t=r),n<r&&(n=r)));else{let r=-1;for(let o of i)(o=e(o,++r,i))!=null&&(t===void 0?o>=o&&(t=n=o):(t>o&&(t=o),n<o&&(n=o)))}return[t,n]}class M4{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const t=this._partials;let n=0;for(let r=0;r<this._n&&r<32;r++){const o=t[r],s=e+o,a=Math.abs(e)<Math.abs(o)?e-(s-o):o-(s-e);a&&(t[n++]=a),e=s}return t[n]=e,this._n=n+1,this}valueOf(){const e=this._partials;let t=this._n,n,r,o,s=0;if(t>0){for(s=e[--t];t>0&&(n=s,r=e[--t],s=n+r,o=r-(s-n),!o););t>0&&(o<0&&e[t-1]<0||o>0&&e[t-1]>0)&&(r=o*2,n=s+r,r==n-s&&(s=n))}return s}}var yn=Math.sqrt(50),vn=Math.sqrt(10),xn=Math.sqrt(2);function m_(i,e,t){var n,r=-1,o,s,a;if(e=+e,i=+i,t=+t,i===e&&t>0)return[i];if((n=e<i)&&(o=i,i=e,e=o),(a=xA(i,e,t))===0||!isFinite(a))return[];if(a>0){let h=Math.round(i/a),f=Math.round(e/a);for(h*a<i&&++h,f*a>e&&--f,s=new Array(o=f-h+1);++r<o;)s[r]=(h+r)*a}else{a=-a;let h=Math.round(i*a),f=Math.round(e*a);for(h/a<i&&++h,f/a>e&&--f,s=new Array(o=f-h+1);++r<o;)s[r]=(h+r)/a}return n&&s.reverse(),s}function xA(i,e,t){var n=(e-i)/Math.max(0,t),r=Math.floor(Math.log(n)/Math.LN10),o=n/Math.pow(10,r);return r>=0?(o>=yn?10:o>=vn?5:o>=xn?2:1)*Math.pow(10,r):-Math.pow(10,-r)/(o>=yn?10:o>=vn?5:o>=xn?2:1)}function g_(i,e,t){var n=Math.abs(e-i)/Math.max(0,t),r=Math.pow(10,Math.floor(Math.log(n)/Math.LN10)),o=n/r;return o>=yn?r*=10:o>=vn?r*=5:o>=xn&&(r*=2),e<i?-r:r}function y_(i,e){let t=0,n=0;if(e===void 0)for(let r of i)r!=null&&(r=+r)>=r&&(++t,n+=r);else{let r=-1;for(let o of i)(o=e(o,++r,i))!=null&&(o=+o)>=o&&(++t,n+=o)}if(t)return n/t}function*v_(i){for(const e of i)yield*e}function z7(i){return Array.from(v_(i))}function w6(i,e,t){i=+i,e=+e,t=(r=arguments.length)<2?(e=i,i=0,1):r<3?1:+t;for(var n=-1,r=Math.max(0,Math.ceil((e-i)/t))|0,o=new Array(r);++n<r;)o[n]=i+n*t;return o}var L1=1e-6,B3=1e-12,k1=Math.PI,L2=k1/2,O3=k1/4,x2=k1*2,p9=180/k1,b1=k1/180,e9=Math.abs,_A=Math.atan,D2=Math.atan2,M1=Math.cos,Z8=Math.ceil,_n=Math.hypot,v1=Math.sin,x_=Math.sign||function(i){return i>0?1:i<0?-1:0},T4=Math.sqrt;function __(i){return i>1?0:i<-1?k1:Math.acos(i)}function C4(i){return i>1?L2:i<-1?-L2:Math.asin(i)}function Is(i){return(i=v1(i/2))*i}function z9(){}function q3(i,e){i&&Os.hasOwnProperty(i.type)&&Os[i.type](i,e)}var Bs={Feature:function(i,e){q3(i.geometry,e)},FeatureCollection:function(i,e){for(var t=i.features,n=-1,r=t.length;++n<r;)q3(t[n].geometry,e)}},Os={Sphere:function(i,e){e.sphere()},Point:function(i,e){i=i.coordinates,e.point(i[0],i[1],i[2])},MultiPoint:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)i=t[n],e.point(i[0],i[1],i[2])},LineString:function(i,e){bn(i.coordinates,e,0)},MultiLineString:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)bn(t[n],e,0)},Polygon:function(i,e){qs(i.coordinates,e)},MultiPolygon:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)qs(t[n],e)},GeometryCollection:function(i,e){for(var t=i.geometries,n=-1,r=t.length;++n<r;)q3(t[n],e)}};function bn(i,e,t){var n=-1,r=i.length-t,o;for(e.lineStart();++n<r;)o=i[n],e.point(o[0],o[1],o[2]);e.lineEnd()}function qs(i,e){var t=-1,n=i.length;for(e.polygonStart();++t<n;)bn(i[t],e,1);e.polygonEnd()}function Se(i,e){i&&Bs.hasOwnProperty(i.type)?Bs[i.type](i,e):q3(i,e)}var F3=new M4,Fs=new M4,bA,wA,wn,Mn,Sn,P4={point:z9,lineStart:z9,lineEnd:z9,polygonStart:function(){F3=new M4,P4.lineStart=b_,P4.lineEnd=w_},polygonEnd:function(){var i=+F3;Fs.add(i<0?x2+i:i),this.lineStart=this.lineEnd=this.point=z9},sphere:function(){Fs.add(x2)}};function b_(){P4.point=M_}function w_(){MA(bA,wA)}function M_(i,e){P4.point=MA,bA=i,wA=e,i*=b1,e*=b1,wn=i,Mn=M1(e=e/2+O3),Sn=v1(e)}function MA(i,e){i*=b1,e*=b1,e=e/2+O3;var t=i-wn,n=t>=0?1:-1,r=n*t,o=M1(e),s=v1(e),a=Sn*s,h=Mn*o+a*M1(r),f=a*n*v1(r);F3.add(D2(f,h)),wn=i,Mn=o,Sn=s}function k3(i){return[D2(i[1],i[0]),C4(i[2])]}function O5(i){var e=i[0],t=i[1],n=M1(t);return[n*M1(e),n*v1(e),v1(t)]}function J8(i,e){return i[0]*e[0]+i[1]*e[1]+i[2]*e[2]}function q6(i,e){return[i[1]*e[2]-i[2]*e[1],i[2]*e[0]-i[0]*e[2],i[0]*e[1]-i[1]*e[0]]}function Lt(i,e){i[0]+=e[0],i[1]+=e[1],i[2]+=e[2]}function K8(i,e){return[i[0]*e,i[1]*e,i[2]*e]}function N3(i){var e=T4(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]);i[0]/=e,i[1]/=e,i[2]/=e}var u9,a2,h9,g2,w5,SA,EA,P6,E7,Y4,R4,v4={point:En,lineStart:ks,lineEnd:Ns,polygonStart:function(){v4.point=CA,v4.lineStart=S_,v4.lineEnd=E_,E7=new M4,P4.polygonStart()},polygonEnd:function(){P4.polygonEnd(),v4.point=En,v4.lineStart=ks,v4.lineEnd=Ns,F3<0?(u9=-(h9=180),a2=-(g2=90)):E7>L1?g2=90:E7<-L1&&(a2=-90),R4[0]=u9,R4[1]=h9},sphere:function(){u9=-(h9=180),a2=-(g2=90)}};function En(i,e){Y4.push(R4=[u9=i,h9=i]),e<a2&&(a2=e),e>g2&&(g2=e)}function TA(i,e){var t=O5([i*b1,e*b1]);if(P6){var n=q6(P6,t),r=[n[1],-n[0],0],o=q6(r,n);N3(o),o=k3(o);var s=i-w5,a=s>0?1:-1,h=o[0]*p9*a,f,d=e9(s)>180;d^(a*w5<h&&h<a*i)?(f=o[1]*p9,f>g2&&(g2=f)):(h=(h+360)%360-180,d^(a*w5<h&&h<a*i)?(f=-o[1]*p9,f<a2&&(a2=f)):(e<a2&&(a2=e),e>g2&&(g2=e))),d?i<w5?p2(u9,i)>p2(u9,h9)&&(h9=i):p2(i,h9)>p2(u9,h9)&&(u9=i):h9>=u9?(i<u9&&(u9=i),i>h9&&(h9=i)):i>w5?p2(u9,i)>p2(u9,h9)&&(h9=i):p2(i,h9)>p2(u9,h9)&&(u9=i)}else Y4.push(R4=[u9=i,h9=i]);e<a2&&(a2=e),e>g2&&(g2=e),P6=t,w5=i}function ks(){v4.point=TA}function Ns(){R4[0]=u9,R4[1]=h9,v4.point=En,P6=null}function CA(i,e){if(P6){var t=i-w5;E7.add(e9(t)>180?t+(t>0?360:-360):t)}else SA=i,EA=e;P4.point(i,e),TA(i,e)}function S_(){P4.lineStart()}function E_(){CA(SA,EA),P4.lineEnd(),e9(E7)>L1&&(u9=-(h9=180)),R4[0]=u9,R4[1]=h9,P6=null}function p2(i,e){return(e-=i)<0?e+360:e}function T_(i,e){return i[0]-e[0]}function Us(i,e){return i[0]<=i[1]?i[0]<=e&&e<=i[1]:e<i[0]||i[1]<e}function PA(i){var e,t,n,r,o,s,a;if(g2=h9=-(u9=a2=1/0),Y4=[],Se(i,v4),t=Y4.length){for(Y4.sort(T_),e=1,n=Y4[0],o=[n];e<t;++e)r=Y4[e],Us(n,r[0])||Us(n,r[1])?(p2(n[0],r[1])>p2(n[0],n[1])&&(n[1]=r[1]),p2(r[0],n[1])>p2(n[0],n[1])&&(n[0]=r[0])):o.push(n=r);for(s=-1/0,t=o.length-1,e=0,n=o[t];e<=t;n=r,++e)r=o[e],(a=p2(n[1],r[0]))>s&&(s=a,u9=r[0],h9=n[1])}return Y4=R4=null,u9===1/0||a2===1/0?[[NaN,NaN],[NaN,NaN]]:[[u9,a2],[h9,g2]]}var v7,U3,z3,G3,H3,V3,W3,j3,Tn,Cn,Pn,RA,LA,Y9,X9,Z9,W2={sphere:z9,point:Oi,lineStart:zs,lineEnd:Gs,polygonStart:function(){W2.lineStart=R_,W2.lineEnd=L_},polygonEnd:function(){W2.lineStart=zs,W2.lineEnd=Gs}};function Oi(i,e){i*=b1,e*=b1;var t=M1(e);e8(t*M1(i),t*v1(i),v1(e))}function e8(i,e,t){++v7,z3+=(i-z3)/v7,G3+=(e-G3)/v7,H3+=(t-H3)/v7}function zs(){W2.point=C_}function C_(i,e){i*=b1,e*=b1;var t=M1(e);Y9=t*M1(i),X9=t*v1(i),Z9=v1(e),W2.point=P_,e8(Y9,X9,Z9)}function P_(i,e){i*=b1,e*=b1;var t=M1(e),n=t*M1(i),r=t*v1(i),o=v1(e),s=D2(T4((s=X9*o-Z9*r)*s+(s=Z9*n-Y9*o)*s+(s=Y9*r-X9*n)*s),Y9*n+X9*r+Z9*o);U3+=s,V3+=s*(Y9+(Y9=n)),W3+=s*(X9+(X9=r)),j3+=s*(Z9+(Z9=o)),e8(Y9,X9,Z9)}function Gs(){W2.point=Oi}function R_(){W2.point=D_}function L_(){DA(RA,LA),W2.point=Oi}function D_(i,e){RA=i,LA=e,i*=b1,e*=b1,W2.point=DA;var t=M1(e);Y9=t*M1(i),X9=t*v1(i),Z9=v1(e),e8(Y9,X9,Z9)}function DA(i,e){i*=b1,e*=b1;var t=M1(e),n=t*M1(i),r=t*v1(i),o=v1(e),s=X9*o-Z9*r,a=Z9*n-Y9*o,h=Y9*r-X9*n,f=_n(s,a,h),d=C4(f),m=f&&-d/f;Tn.add(m*s),Cn.add(m*a),Pn.add(m*h),U3+=d,V3+=d*(Y9+(Y9=n)),W3+=d*(X9+(X9=r)),j3+=d*(Z9+(Z9=o)),e8(Y9,X9,Z9)}function Hs(i){v7=U3=z3=G3=H3=V3=W3=j3=0,Tn=new M4,Cn=new M4,Pn=new M4,Se(i,W2);var e=+Tn,t=+Cn,n=+Pn,r=_n(e,t,n);return r<B3&&(e=V3,t=W3,n=j3,U3<L1&&(e=z3,t=G3,n=H3),r=_n(e,t,n),r<B3)?[NaN,NaN]:[D2(t,e)*p9,C4(n/r)*p9]}function Rn(i,e){function t(n,r){return n=i(n,r),e(n[0],n[1])}return i.invert&&e.invert&&(t.invert=function(n,r){return n=e.invert(n,r),n&&i.invert(n[0],n[1])}),t}function Ln(i,e){return[e9(i)>k1?i+Math.round(-i/x2)*x2:i,e]}Ln.invert=Ln;function IA(i,e,t){return(i%=x2)?e||t?Rn(Ws(i),js(e,t)):Ws(i):e||t?js(e,t):Ln}function Vs(i){return function(e,t){return e+=i,[e>k1?e-x2:e<-k1?e+x2:e,t]}}function Ws(i){var e=Vs(i);return e.invert=Vs(-i),e}function js(i,e){var t=M1(i),n=v1(i),r=M1(e),o=v1(e);function s(a,h){var f=M1(h),d=M1(a)*f,m=v1(a)*f,y=v1(h),v=y*t+d*n;return[D2(m*r-v*o,d*t-y*n),C4(v*r+m*o)]}return s.invert=function(a,h){var f=M1(h),d=M1(a)*f,m=v1(a)*f,y=v1(h),v=y*r-m*o;return[D2(m*r+y*o,d*t+v*n),C4(v*t-d*n)]},s}function I_(i){i=IA(i[0]*b1,i[1]*b1,i.length>2?i[2]*b1:0);function e(t){return t=i(t[0]*b1,t[1]*b1),t[0]*=p9,t[1]*=p9,t}return e.invert=function(t){return t=i.invert(t[0]*b1,t[1]*b1),t[0]*=p9,t[1]*=p9,t},e}function B_(i,e,t,n,r,o){if(!!t){var s=M1(e),a=v1(e),h=n*t;r==null?(r=e+n*x2,o=e-h/2):(r=Qs(s,r),o=Qs(s,o),(n>0?r<o:r>o)&&(r+=n*x2));for(var f,d=r;n>0?d>o:d<o;d-=h)f=k3([s,-a*M1(d),-a*v1(d)]),i.point(f[0],f[1])}}function Qs(i,e){e=O5(e),e[0]-=i,N3(e);var t=__(-e[1]);return((-e[2]<0?-t:t)+x2-L1)%x2}function BA(){var i=[],e;return{point:function(t,n,r){e.push([t,n,r])},lineStart:function(){i.push(e=[])},lineEnd:z9,rejoin:function(){i.length>1&&i.push(i.pop().concat(i.shift()))},result:function(){var t=i;return i=[],e=null,t}}}function v3(i,e){return e9(i[0]-e[0])<L1&&e9(i[1]-e[1])<L1}function e3(i,e,t,n){this.x=i,this.z=e,this.o=t,this.e=n,this.v=!1,this.n=this.p=null}function OA(i,e,t,n,r){var o=[],s=[],a,h;if(i.forEach(function(b){if(!((M=b.length-1)<=0)){var M,w=b[0],E=b[M],T;if(v3(w,E)){if(!w[2]&&!E[2]){for(r.lineStart(),a=0;a<M;++a)r.point((w=b[a])[0],w[1]);r.lineEnd();return}E[0]+=2*L1}o.push(T=new e3(w,b,null,!0)),s.push(T.o=new e3(w,null,T,!1)),o.push(T=new e3(E,b,null,!1)),s.push(T.o=new e3(E,null,T,!0))}}),!!o.length){for(s.sort(e),$s(o),$s(s),a=0,h=s.length;a<h;++a)s[a].e=t=!t;for(var f=o[0],d,m;;){for(var y=f,v=!0;y.v;)if((y=y.n)===f)return;d=y.z,r.lineStart();do{if(y.v=y.o.v=!0,y.e){if(v)for(a=0,h=d.length;a<h;++a)r.point((m=d[a])[0],m[1]);else n(y.x,y.n.x,1,r);y=y.n}else{if(v)for(d=y.p.z,a=d.length-1;a>=0;--a)r.point((m=d[a])[0],m[1]);else n(y.x,y.p.x,-1,r);y=y.p}y=y.o,d=y.z,v=!v}while(!y.v);r.lineEnd()}}}function $s(i){if(!!(e=i.length)){for(var e,t=0,n=i[0],r;++t<e;)n.n=r=i[t],r.p=n,n=r;n.n=r=i[0],r.p=n}}function Dt(i){return e9(i[0])<=k1?i[0]:x_(i[0])*((e9(i[0])+k1)%x2-k1)}function qA(i,e){var t=Dt(e),n=e[1],r=v1(n),o=[v1(t),-M1(t),0],s=0,a=0,h=new M4;r===1?n=L2+L1:r===-1&&(n=-L2-L1);for(var f=0,d=i.length;f<d;++f)if(!!(y=(m=i[f]).length))for(var m,y,v=m[y-1],b=Dt(v),M=v[1]/2+O3,w=v1(M),E=M1(M),T=0;T<y;++T,b=P,w=I,E=q,v=C){var C=m[T],P=Dt(C),R=C[1]/2+O3,I=v1(R),q=M1(R),D=P-b,O=D>=0?1:-1,k=O*D,B=k>k1,j=w*I;if(h.add(D2(j*O*v1(k),E*q+j*M1(k))),s+=B?D+O*x2:D,B^b>=t^P>=t){var Y=q6(O5(v),O5(C));N3(Y);var z=q6(o,Y);N3(z);var G=(B^D>=0?-1:1)*C4(z[2]);(n>G||n===G&&(Y[0]||Y[1]))&&(a+=B^D>=0?1:-1)}}return(s<-L1||s<L1&&h<-B3)^a&1}function FA(i,e,t,n){return function(r){var o=e(r),s=BA(),a=e(s),h=!1,f,d,m,y={point:v,lineStart:M,lineEnd:w,polygonStart:function(){y.point=E,y.lineStart=T,y.lineEnd=C,d=[],f=[]},polygonEnd:function(){y.point=v,y.lineStart=M,y.lineEnd=w,d=z7(d);var P=qA(f,n);d.length?(h||(r.polygonStart(),h=!0),OA(d,q_,P,t,r)):P&&(h||(r.polygonStart(),h=!0),r.lineStart(),t(null,null,1,r),r.lineEnd()),h&&(r.polygonEnd(),h=!1),d=f=null},sphere:function(){r.polygonStart(),r.lineStart(),t(null,null,1,r),r.lineEnd(),r.polygonEnd()}};function v(P,R){i(P,R)&&r.point(P,R)}function b(P,R){o.point(P,R)}function M(){y.point=b,o.lineStart()}function w(){y.point=v,o.lineEnd()}function E(P,R){m.push([P,R]),a.point(P,R)}function T(){a.lineStart(),m=[]}function C(){E(m[0][0],m[0][1]),a.lineEnd();var P=a.clean(),R=s.result(),I,q=R.length,D,O,k;if(m.pop(),f.push(m),m=null,!!q){if(P&1){if(O=R[0],(D=O.length-1)>0){for(h||(r.polygonStart(),h=!0),r.lineStart(),I=0;I<D;++I)r.point((k=O[I])[0],k[1]);r.lineEnd()}return}q>1&&P&2&&R.push(R.pop().concat(R.shift())),d.push(R.filter(O_))}}return y}}function O_(i){return i.length>1}function q_(i,e){return((i=i.x)[0]<0?i[1]-L2-L1:L2-i[1])-((e=e.x)[0]<0?e[1]-L2-L1:L2-e[1])}var Ys=FA(function(){return!0},F_,N_,[-k1,-L2]);function F_(i){var e=NaN,t=NaN,n=NaN,r;return{lineStart:function(){i.lineStart(),r=1},point:function(o,s){var a=o>0?k1:-k1,h=e9(o-e);e9(h-k1)<L1?(i.point(e,t=(t+s)/2>0?L2:-L2),i.point(n,t),i.lineEnd(),i.lineStart(),i.point(a,t),i.point(o,t),r=0):n!==a&&h>=k1&&(e9(e-n)<L1&&(e-=n*L1),e9(o-a)<L1&&(o-=a*L1),t=k_(e,t,o,s),i.point(n,t),i.lineEnd(),i.lineStart(),i.point(a,t),r=0),i.point(e=o,t=s),n=a},lineEnd:function(){i.lineEnd(),e=t=NaN},clean:function(){return 2-r}}}function k_(i,e,t,n){var r,o,s=v1(i-t);return e9(s)>L1?_A((v1(e)*(o=M1(n))*v1(t)-v1(n)*(r=M1(e))*v1(i))/(r*o*s)):(e+n)/2}function N_(i,e,t,n){var r;if(i==null)r=t*L2,n.point(-k1,r),n.point(0,r),n.point(k1,r),n.point(k1,0),n.point(k1,-r),n.point(0,-r),n.point(-k1,-r),n.point(-k1,0),n.point(-k1,r);else if(e9(i[0]-e[0])>L1){var o=i[0]<e[0]?k1:-k1;r=t*o/2,n.point(-o,r),n.point(0,r),n.point(o,r)}else n.point(e[0],e[1])}function U_(i){var e=M1(i),t=6*b1,n=e>0,r=e9(e)>L1;function o(d,m,y,v){B_(v,i,t,y,d,m)}function s(d,m){return M1(d)*M1(m)>e}function a(d){var m,y,v,b,M;return{lineStart:function(){b=v=!1,M=1},point:function(w,E){var T=[w,E],C,P=s(w,E),R=n?P?0:f(w,E):P?f(w+(w<0?k1:-k1),E):0;if(!m&&(b=v=P)&&d.lineStart(),P!==v&&(C=h(m,T),(!C||v3(m,C)||v3(T,C))&&(T[2]=1)),P!==v)M=0,P?(d.lineStart(),C=h(T,m),d.point(C[0],C[1])):(C=h(m,T),d.point(C[0],C[1],2),d.lineEnd()),m=C;else if(r&&m&&n^P){var I;!(R&y)&&(I=h(T,m,!0))&&(M=0,n?(d.lineStart(),d.point(I[0][0],I[0][1]),d.point(I[1][0],I[1][1]),d.lineEnd()):(d.point(I[1][0],I[1][1]),d.lineEnd(),d.lineStart(),d.point(I[0][0],I[0][1],3)))}P&&(!m||!v3(m,T))&&d.point(T[0],T[1]),m=T,v=P,y=R},lineEnd:function(){v&&d.lineEnd(),m=null},clean:function(){return M|(b&&v)<<1}}}function h(d,m,y){var v=O5(d),b=O5(m),M=[1,0,0],w=q6(v,b),E=J8(w,w),T=w[0],C=E-T*T;if(!C)return!y&&d;var P=e*E/C,R=-e*T/C,I=q6(M,w),q=K8(M,P),D=K8(w,R);Lt(q,D);var O=I,k=J8(q,O),B=J8(O,O),j=k*k-B*(J8(q,q)-1);if(!(j<0)){var Y=T4(j),z=K8(O,(-k-Y)/B);if(Lt(z,q),z=k3(z),!y)return z;var G=d[0],X=m[0],o0=d[1],a0=m[1],u0;X<G&&(u0=G,G=X,X=u0);var l0=X-G,b0=e9(l0-k1)<L1,i0=b0||l0<L1;if(!b0&&a0<o0&&(u0=o0,o0=a0,a0=u0),i0?b0?o0+a0>0^z[1]<(e9(z[0]-G)<L1?o0:a0):o0<=z[1]&&z[1]<=a0:l0>k1^(G<=z[0]&&z[0]<=X)){var g0=K8(O,(-k+Y)/B);return Lt(g0,q),[z,k3(g0)]}}}function f(d,m){var y=n?i:k1-i,v=0;return d<-y?v|=1:d>y&&(v|=2),m<-y?v|=4:m>y&&(v|=8),v}return FA(s,a,o,n?[0,-i]:[-k1,i-k1])}function z_(i,e,t,n,r,o){var s=i[0],a=i[1],h=e[0],f=e[1],d=0,m=1,y=h-s,v=f-a,b;if(b=t-s,!(!y&&b>0)){if(b/=y,y<0){if(b<d)return;b<m&&(m=b)}else if(y>0){if(b>m)return;b>d&&(d=b)}if(b=r-s,!(!y&&b<0)){if(b/=y,y<0){if(b>m)return;b>d&&(d=b)}else if(y>0){if(b<d)return;b<m&&(m=b)}if(b=n-a,!(!v&&b>0)){if(b/=v,v<0){if(b<d)return;b<m&&(m=b)}else if(v>0){if(b>m)return;b>d&&(d=b)}if(b=o-a,!(!v&&b<0)){if(b/=v,v<0){if(b>m)return;b>d&&(d=b)}else if(v>0){if(b<d)return;b<m&&(m=b)}return d>0&&(i[0]=s+d*y,i[1]=a+d*v),m<1&&(e[0]=s+m*y,e[1]=a+m*v),!0}}}}}var x7=1e9,t3=-x7;function G_(i,e,t,n){function r(f,d){return i<=f&&f<=t&&e<=d&&d<=n}function o(f,d,m,y){var v=0,b=0;if(f==null||(v=s(f,m))!==(b=s(d,m))||h(f,d)<0^m>0)do y.point(v===0||v===3?i:t,v>1?n:e);while((v=(v+m+4)%4)!==b);else y.point(d[0],d[1])}function s(f,d){return e9(f[0]-i)<L1?d>0?0:3:e9(f[0]-t)<L1?d>0?2:1:e9(f[1]-e)<L1?d>0?1:0:d>0?3:2}function a(f,d){return h(f.x,d.x)}function h(f,d){var m=s(f,1),y=s(d,1);return m!==y?m-y:m===0?d[1]-f[1]:m===1?f[0]-d[0]:m===2?f[1]-d[1]:d[0]-f[0]}return function(f){var d=f,m=BA(),y,v,b,M,w,E,T,C,P,R,I,q={point:D,lineStart:j,lineEnd:Y,polygonStart:k,polygonEnd:B};function D(G,X){r(G,X)&&d.point(G,X)}function O(){for(var G=0,X=0,o0=v.length;X<o0;++X)for(var a0=v[X],u0=1,l0=a0.length,b0=a0[0],i0,g0,P0=b0[0],T0=b0[1];u0<l0;++u0)i0=P0,g0=T0,b0=a0[u0],P0=b0[0],T0=b0[1],g0<=n?T0>n&&(P0-i0)*(n-g0)>(T0-g0)*(i-i0)&&++G:T0<=n&&(P0-i0)*(n-g0)<(T0-g0)*(i-i0)&&--G;return G}function k(){d=m,y=[],v=[],I=!0}function B(){var G=O(),X=I&&G,o0=(y=z7(y)).length;(X||o0)&&(f.polygonStart(),X&&(f.lineStart(),o(null,null,1,f),f.lineEnd()),o0&&OA(y,a,G,o,f),f.polygonEnd()),d=f,y=v=b=null}function j(){q.point=z,v&&v.push(b=[]),R=!0,P=!1,T=C=NaN}function Y(){y&&(z(M,w),E&&P&&m.rejoin(),y.push(m.result())),q.point=D,P&&d.lineEnd()}function z(G,X){var o0=r(G,X);if(v&&b.push([G,X]),R)M=G,w=X,E=o0,R=!1,o0&&(d.lineStart(),d.point(G,X));else if(o0&&P)d.point(G,X);else{var a0=[T=Math.max(t3,Math.min(x7,T)),C=Math.max(t3,Math.min(x7,C))],u0=[G=Math.max(t3,Math.min(x7,G)),X=Math.max(t3,Math.min(x7,X))];z_(a0,u0,i,e,t,n)?(P||(d.lineStart(),d.point(a0[0],a0[1])),d.point(u0[0],u0[1]),o0||d.lineEnd(),I=!1):o0&&(d.lineStart(),d.point(G,X),I=!1)}T=G,C=X,P=o0}return q}}var Dn,In,x3,_3,F6={sphere:z9,point:z9,lineStart:H_,lineEnd:z9,polygonStart:z9,polygonEnd:z9};function H_(){F6.point=W_,F6.lineEnd=V_}function V_(){F6.point=F6.lineEnd=z9}function W_(i,e){i*=b1,e*=b1,In=i,x3=v1(e),_3=M1(e),F6.point=j_}function j_(i,e){i*=b1,e*=b1;var t=v1(e),n=M1(e),r=e9(i-In),o=M1(r),s=v1(r),a=n*s,h=_3*t-x3*n*o,f=x3*t+_3*n*o;Dn.add(D2(T4(a*a+h*h),f)),In=i,x3=t,_3=n}function Q_(i){return Dn=new M4,Se(i,F6),+Dn}var Bn=[null,null],$_={type:"LineString",coordinates:Bn};function o5(i,e){return Bn[0]=i,Bn[1]=e,Q_($_)}var Xs={Feature:function(i,e){return Q3(i.geometry,e)},FeatureCollection:function(i,e){for(var t=i.features,n=-1,r=t.length;++n<r;)if(Q3(t[n].geometry,e))return!0;return!1}},Zs={Sphere:function(){return!0},Point:function(i,e){return Js(i.coordinates,e)},MultiPoint:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)if(Js(t[n],e))return!0;return!1},LineString:function(i,e){return Ks(i.coordinates,e)},MultiLineString:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)if(Ks(t[n],e))return!0;return!1},Polygon:function(i,e){return ea(i.coordinates,e)},MultiPolygon:function(i,e){for(var t=i.coordinates,n=-1,r=t.length;++n<r;)if(ea(t[n],e))return!0;return!1},GeometryCollection:function(i,e){for(var t=i.geometries,n=-1,r=t.length;++n<r;)if(Q3(t[n],e))return!0;return!1}};function Q3(i,e){return i&&Zs.hasOwnProperty(i.type)?Zs[i.type](i,e):!1}function Js(i,e){return o5(i,e)===0}function Ks(i,e){for(var t,n,r,o=0,s=i.length;o<s;o++){if(n=o5(i[o],e),n===0||o>0&&(r=o5(i[o],i[o-1]),r>0&&t<=r&&n<=r&&(t+n-r)*(1-Math.pow((t-n)/r,2))<B3*r))return!0;t=n}return!1}function ea(i,e){return!!qA(i.map(Y_),kA(e))}function Y_(i){return i=i.map(kA),i.pop(),i}function kA(i){return[i[0]*b1,i[1]*b1]}function X_(i,e){return(i&&Xs.hasOwnProperty(i.type)?Xs[i.type]:Q3)(i,e)}function ta(i,e,t){var n=w6(i,e-L1,t).concat(e);return function(r){return n.map(function(o){return[r,o]})}}function na(i,e,t){var n=w6(i,e-L1,t).concat(e);return function(r){return n.map(function(o){return[o,r]})}}function Z_(){var i,e,t,n,r,o,s,a,h=10,f=h,d=90,m=360,y,v,b,M,w=2.5;function E(){return{type:"MultiLineString",coordinates:T()}}function T(){return w6(Z8(n/d)*d,t,d).map(b).concat(w6(Z8(a/m)*m,s,m).map(M)).concat(w6(Z8(e/h)*h,i,h).filter(function(C){return e9(C%d)>L1}).map(y)).concat(w6(Z8(o/f)*f,r,f).filter(function(C){return e9(C%m)>L1}).map(v))}return E.lines=function(){return T().map(function(C){return{type:"LineString",coordinates:C}})},E.outline=function(){return{type:"Polygon",coordinates:[b(n).concat(M(s).slice(1),b(t).reverse().slice(1),M(a).reverse().slice(1))]}},E.extent=function(C){return arguments.length?E.extentMajor(C).extentMinor(C):E.extentMinor()},E.extentMajor=function(C){return arguments.length?(n=+C[0][0],t=+C[1][0],a=+C[0][1],s=+C[1][1],n>t&&(C=n,n=t,t=C),a>s&&(C=a,a=s,s=C),E.precision(w)):[[n,a],[t,s]]},E.extentMinor=function(C){return arguments.length?(e=+C[0][0],i=+C[1][0],o=+C[0][1],r=+C[1][1],e>i&&(C=e,e=i,i=C),o>r&&(C=o,o=r,r=C),E.precision(w)):[[e,o],[i,r]]},E.step=function(C){return arguments.length?E.stepMajor(C).stepMinor(C):E.stepMinor()},E.stepMajor=function(C){return arguments.length?(d=+C[0],m=+C[1],E):[d,m]},E.stepMinor=function(C){return arguments.length?(h=+C[0],f=+C[1],E):[h,f]},E.precision=function(C){return arguments.length?(w=+C,y=ta(o,r,90),v=na(e,i,w),b=ta(a,s,90),M=na(n,t,w),E):w},E.extentMajor([[-180,-90+L1],[180,90-L1]]).extentMinor([[-180,-80-L1],[180,80+L1]])}function J_(){return Z_()()}function qi(i,e){var t=i[0]*b1,n=i[1]*b1,r=e[0]*b1,o=e[1]*b1,s=M1(n),a=v1(n),h=M1(o),f=v1(o),d=s*M1(t),m=s*v1(t),y=h*M1(r),v=h*v1(r),b=2*C4(T4(Is(o-n)+s*h*Is(r-t))),M=v1(b),w=b?function(E){var T=v1(E*=b)/M,C=v1(b-E)/M,P=C*d+T*y,R=C*m+T*v,I=C*a+T*f;return[D2(R,P)*p9,D2(I,T4(P*P+R*R))*p9]}:function(){return[t*p9,n*p9]};return w.distance=b,w}var ia=i=>i,k6=1/0,$3=k6,G7=-k6,Y3=G7,K_={point:eb,lineStart:z9,lineEnd:z9,polygonStart:z9,polygonEnd:z9,result:function(){var i=[[k6,$3],[G7,Y3]];return G7=Y3=-($3=k6=1/0),i}};function eb(i,e){i<k6&&(k6=i),i>G7&&(G7=i),e<$3&&($3=e),e>Y3&&(Y3=e)}var ra=K_;function Fi(i){return function(e){var t=new On;for(var n in i)t[n]=i[n];return t.stream=e,t}}function On(){}On.prototype={constructor:On,point:function(i,e){this.stream.point(i,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function ki(i,e,t){var n=i.clipExtent&&i.clipExtent();return i.scale(150).translate([0,0]),n!=null&&i.clipExtent(null),Se(t,i.stream(ra)),e(ra.result()),n!=null&&i.clipExtent(n),i}function NA(i,e,t){return ki(i,function(n){var r=e[1][0]-e[0][0],o=e[1][1]-e[0][1],s=Math.min(r/(n[1][0]-n[0][0]),o/(n[1][1]-n[0][1])),a=+e[0][0]+(r-s*(n[1][0]+n[0][0]))/2,h=+e[0][1]+(o-s*(n[1][1]+n[0][1]))/2;i.scale(150*s).translate([a,h])},t)}function tb(i,e,t){return NA(i,[[0,0],e],t)}function nb(i,e,t){return ki(i,function(n){var r=+e,o=r/(n[1][0]-n[0][0]),s=(r-o*(n[1][0]+n[0][0]))/2,a=-o*n[0][1];i.scale(150*o).translate([s,a])},t)}function ib(i,e,t){return ki(i,function(n){var r=+e,o=r/(n[1][1]-n[0][1]),s=-o*n[0][0],a=(r-o*(n[1][1]+n[0][1]))/2;i.scale(150*o).translate([s,a])},t)}var oa=16,rb=M1(30*b1);function sa(i,e){return+e?sb(i,e):ob(i)}function ob(i){return Fi({point:function(e,t){e=i(e,t),this.stream.point(e[0],e[1])}})}function sb(i,e){function t(n,r,o,s,a,h,f,d,m,y,v,b,M,w){var E=f-n,T=d-r,C=E*E+T*T;if(C>4*e&&M--){var P=s+y,R=a+v,I=h+b,q=T4(P*P+R*R+I*I),D=C4(I/=q),O=e9(e9(I)-1)<L1||e9(o-m)<L1?(o+m)/2:D2(R,P),k=i(O,D),B=k[0],j=k[1],Y=B-n,z=j-r,G=T*Y-E*z;(G*G/C>e||e9((E*Y+T*z)/C-.5)>.3||s*y+a*v+h*b<rb)&&(t(n,r,o,s,a,h,B,j,O,P/=q,R/=q,I,M,w),w.point(B,j),t(B,j,O,P,R,I,f,d,m,y,v,b,M,w))}}return function(n){var r,o,s,a,h,f,d,m,y,v,b,M,w={point:E,lineStart:T,lineEnd:P,polygonStart:function(){n.polygonStart(),w.lineStart=R},polygonEnd:function(){n.polygonEnd(),w.lineStart=T}};function E(D,O){D=i(D,O),n.point(D[0],D[1])}function T(){m=NaN,w.point=C,n.lineStart()}function C(D,O){var k=O5([D,O]),B=i(D,O);t(m,y,d,v,b,M,m=B[0],y=B[1],d=D,v=k[0],b=k[1],M=k[2],oa,n),n.point(m,y)}function P(){w.point=E,n.lineEnd()}function R(){T(),w.point=I,w.lineEnd=q}function I(D,O){C(r=D,O),o=m,s=y,a=v,h=b,f=M,w.point=C}function q(){t(m,y,d,v,b,M,o,s,r,a,h,f,oa,n),w.lineEnd=P,P()}return w}}var ab=Fi({point:function(i,e){this.stream.point(i*b1,e*b1)}});function lb(i){return Fi({point:function(e,t){var n=i(e,t);return this.stream.point(n[0],n[1])}})}function Ab(i,e,t,n,r){function o(s,a){return s*=n,a*=r,[e+i*s,t-i*a]}return o.invert=function(s,a){return[(s-e)/i*n,(t-a)/i*r]},o}function aa(i,e,t,n,r,o){if(!o)return Ab(i,e,t,n,r);var s=M1(o),a=v1(o),h=s*i,f=a*i,d=s/i,m=a/i,y=(a*t-s*e)/i,v=(a*e+s*t)/i;function b(M,w){return M*=n,w*=r,[h*M-f*w+e,t-f*M-h*w]}return b.invert=function(M,w){return[n*(d*M-m*w+y),r*(v-m*M-d*w)]},b}function ub(i){return cb(function(){return i})()}function cb(i){var e,t=150,n=480,r=250,o=0,s=0,a=0,h=0,f=0,d,m=0,y=1,v=1,b=null,M=Ys,w=null,E,T,C,P=ia,R=.5,I,q,D,O,k;function B(G){return D(G[0]*b1,G[1]*b1)}function j(G){return G=D.invert(G[0],G[1]),G&&[G[0]*p9,G[1]*p9]}B.stream=function(G){return O&&k===G?O:O=ab(lb(d)(M(I(P(k=G)))))},B.preclip=function(G){return arguments.length?(M=G,b=void 0,z()):M},B.postclip=function(G){return arguments.length?(P=G,w=E=T=C=null,z()):P},B.clipAngle=function(G){return arguments.length?(M=+G?U_(b=G*b1):(b=null,Ys),z()):b*p9},B.clipExtent=function(G){return arguments.length?(P=G==null?(w=E=T=C=null,ia):G_(w=+G[0][0],E=+G[0][1],T=+G[1][0],C=+G[1][1]),z()):w==null?null:[[w,E],[T,C]]},B.scale=function(G){return arguments.length?(t=+G,Y()):t},B.translate=function(G){return arguments.length?(n=+G[0],r=+G[1],Y()):[n,r]},B.center=function(G){return arguments.length?(o=G[0]%360*b1,s=G[1]%360*b1,Y()):[o*p9,s*p9]},B.rotate=function(G){return arguments.length?(a=G[0]%360*b1,h=G[1]%360*b1,f=G.length>2?G[2]%360*b1:0,Y()):[a*p9,h*p9,f*p9]},B.angle=function(G){return arguments.length?(m=G%360*b1,Y()):m*p9},B.reflectX=function(G){return arguments.length?(y=G?-1:1,Y()):y<0},B.reflectY=function(G){return arguments.length?(v=G?-1:1,Y()):v<0},B.precision=function(G){return arguments.length?(I=sa(q,R=G*G),z()):T4(R)},B.fitExtent=function(G,X){return NA(B,G,X)},B.fitSize=function(G,X){return tb(B,G,X)},B.fitWidth=function(G,X){return nb(B,G,X)},B.fitHeight=function(G,X){return ib(B,G,X)};function Y(){var G=aa(t,0,0,y,v,m).apply(null,e(o,s)),X=aa(t,n-G[0],r-G[1],y,v,m);return d=IA(a,h,f),q=Rn(e,X),D=Rn(d,q),I=sa(q,R),z()}function z(){return O=k=null,B}return function(){return e=i.apply(this,arguments),B.invert=e.invert&&j,Y()}}function fb(i){return function(e,t){var n=T4(e*e+t*t),r=i(n),o=v1(r),s=M1(r);return[D2(e*o,n*s),C4(n&&t*o/n)]}}function UA(i,e){var t=M1(e),n=1+M1(i)*t;return[t*v1(i)/n,v1(e)/n]}UA.invert=fb(function(i){return 2*_A(i)});function hb(){return ub(UA).scale(250).clipAngle(142)}function db(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function pb(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),e&&qn(i,e)}function X3(i){return X3=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},X3(i)}function qn(i,e){return qn=Object.setPrototypeOf||function(n,r){return n.__proto__=r,n},qn(i,e)}function mb(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function gb(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function yb(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return gb(i)}function vb(i){var e=mb();return function(){var n=X3(i),r;if(e){var o=X3(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return yb(this,r)}}function u7(i,e){return xb(i)||_b(i,e)||zA(i,e)||bb()}function xb(i){if(Array.isArray(i))return i}function _b(i,e){var t=i==null?null:typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function zA(i,e){if(!!i){if(typeof i=="string")return la(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return la(i,e)}}function la(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function bb(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function wb(i,e){var t=typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(!t){if(Array.isArray(i)||(t=zA(i))||e&&i&&typeof i.length=="number"){t&&(i=t);var n=0,r=function(){};return{s:r,n:function(){return n>=i.length?{done:!0}:{done:!1,value:i[n++]}},e:function(h){throw h},f:r}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var o=!0,s=!1,a;return{s:function(){t=t.call(i)},n:function(){var h=t.next();return o=h.done,h},e:function(h){s=!0,a=h},f:function(){try{!o&&t.return!=null&&t.return()}finally{if(s)throw a}}}}var Aa=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,n=[],r=null;return e.forEach(function(o){if(r){var s=o5(o,r)*180/Math.PI;if(s>t)for(var a=qi(r,o),h=1/Math.ceil(s/t),f=h;f<1;)n.push(a(f)),f+=h}n.push(r=o)}),n},Fn=typeof window!="undefined"&&window.THREE?window.THREE:{BufferGeometry:C1,Float32BufferAttribute:T1},Mb=new Fn.BufferGeometry().setAttribute?"setAttribute":"addAttribute",GA=function(i){pb(t,i);var e=vb(t);function t(n){var r,o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:5;db(this,t),r=e.call(this),r.type="GeoJsonGeometry",r.parameters={geoJson:n,radius:o,resolution:s};var a=({Point:m,MultiPoint:y,LineString:v,MultiLineString:b,Polygon:M,MultiPolygon:w}[n.type]||function(){return[]})(n.coordinates,o),h=[],f=[],d=0;a.forEach(function(E){var T=h.length;c7({indices:h,vertices:f},E),r.addGroup(T,h.length-T,d++)}),h.length&&r.setIndex(h),f.length&&r[Mb]("position",new Fn.Float32BufferAttribute(f,3));function m(E,T){var C=It(E[1],E[0],T),P=[];return[{vertices:C,indices:P}]}function y(E,T){var C={vertices:[],indices:[]};return E.map(function(P){return m(P,T)}).forEach(function(P){var R=u7(P,1),I=R[0];c7(C,I)}),[C]}function v(E,T){for(var C=Aa(E,s).map(function(O){var k=u7(O,2),B=k[0],j=k[1];return It(j,B,T)}),P=U7.flatten([C]),R=P.vertices,I=Math.round(R.length/3),q=[],D=1;D<I;D++)q.push(D-1,D);return[{vertices:R,indices:q}]}function b(E,T){var C={vertices:[],indices:[]};return E.map(function(P){return v(P,T)}).forEach(function(P){var R=u7(P,1),I=R[0];c7(C,I)}),[C]}function M(E,T){for(var C=E.map(function(X){return Aa(X,s).map(function(o0){var a0=u7(o0,2),u0=a0[0],l0=a0[1];return It(l0,u0,T)})}),P=U7.flatten(C),R=P.vertices,I=P.holes,q=I[0]||1/0,D=R.slice(0,q*3),O=R.slice(q*3),k=new Set(I),B=Math.round(R.length/3),j=[],Y=[],z=1;z<B;z++)k.has(z)||(z<q?j.push(z-1,z):Y.push(z-1-q,z-q));var G=[{indices:j,vertices:D}];return I.length&&G.push({indices:Y,vertices:O}),G}function w(E,T){var C={vertices:[],indices:[]},P={vertices:[],indices:[]};E.map(function(I){return M(I,T)}).forEach(function(I){var q=u7(I,2),D=q[0],O=q[1];c7(C,D),O&&c7(P,O)});var R=[C];return P.vertices.length&&R.push(P),R}return r}return t}(Fn.BufferGeometry);function c7(i,e){var t=Math.round(i.vertices.length/3);ua(i.vertices,e.vertices),ua(i.indices,e.indices.map(function(n){return n+t}))}function ua(i,e){var t=wb(e),n;try{for(t.s();!(n=t.n()).done;){var r=n.value;i.push(r)}}catch(o){t.e(o)}finally{t.f()}}function It(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,n=(90-i)*Math.PI/180,r=(90-e)*Math.PI/180;return[t*Math.sin(n)*Math.cos(r),t*Math.cos(n),t*Math.sin(n)*Math.sin(r)]}function Sb(){throw new Error("BufferGeometryUtils: computeTangents renamed to computeMikkTSpaceTangents.")}function Eb(i,e,t=!0){if(!e||!e.isReady)throw new Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!i.hasAttribute("position")||!i.hasAttribute("normal")||!i.hasAttribute("uv"))throw new Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function n(s){if(s.normalized||s.isInterleavedBufferAttribute){const a=s.isInterleavedBufferAttribute?s.data.array:s.array,h=new Float32Array(s.getCount()*s.itemSize);for(let f=0,d=0;f<s.getCount();f++)h[d++]=m3.denormalize(s.getX(f),a),h[d++]=m3.denormalize(s.getY(f),a),s.itemSize>2&&(h[d++]=m3.denormalize(s.getZ(f),a));return h}return s.array instanceof Float32Array?s.array:new Float32Array(s.array)}const r=i.index?i.toNonIndexed():i,o=e.generateTangents(n(r.attributes.position),n(r.attributes.normal),n(r.attributes.uv));if(t)for(let s=3;s<o.length;s+=4)o[s]*=-1;return r.setAttribute("tangent",new t9(o,4)),i!==r&&i.copy(r),i}function Tb(i,e=!1){const t=i[0].index!==null,n=new Set(Object.keys(i[0].attributes)),r=new Set(Object.keys(i[0].morphAttributes)),o={},s={},a=i[0].morphTargetsRelative,h=new C1;let f=0;for(let d=0;d<i.length;++d){const m=i[d];let y=0;if(t!==(m.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const v in m.attributes){if(!n.has(v))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+'. All geometries must have compatible attributes; make sure "'+v+'" attribute exists among all geometries, or in none of them.'),null;o[v]===void 0&&(o[v]=[]),o[v].push(m.attributes[v]),y++}if(y!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+". Make sure all geometries have the same number of attributes."),null;if(a!==m.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const v in m.morphAttributes){if(!r.has(v))return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+".  .morphAttributes must be consistent throughout all geometries."),null;s[v]===void 0&&(s[v]=[]),s[v].push(m.morphAttributes[v])}if(h.userData.mergedUserData=h.userData.mergedUserData||[],h.userData.mergedUserData.push(m.userData),e){let v;if(t)v=m.index.count;else if(m.attributes.position!==void 0)v=m.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index "+d+". The geometry must have either an index or a position attribute"),null;h.addGroup(f,v,d),f+=v}}if(t){let d=0;const m=[];for(let y=0;y<i.length;++y){const v=i[y].index;for(let b=0;b<v.count;++b)m.push(v.getX(b)+d);d+=i[y].attributes.position.count}h.setIndex(m)}for(const d in o){const m=kn(o[d]);if(!m)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+d+" attribute."),null;h.setAttribute(d,m)}for(const d in s){const m=s[d][0].length;if(m===0)break;h.morphAttributes=h.morphAttributes||{},h.morphAttributes[d]=[];for(let y=0;y<m;++y){const v=[];for(let M=0;M<s[d].length;++M)v.push(s[d][M][y]);const b=kn(v);if(!b)return console.error("THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the "+d+" morphAttribute."),null;h.morphAttributes[d].push(b)}}return h}function kn(i){let e,t,n,r=0;for(let a=0;a<i.length;++a){const h=i[a];if(h.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=h.normalized),n!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;r+=h.array.length}const o=new e(r);let s=0;for(let a=0;a<i.length;++a)o.set(i[a].array,s),s+=i[a].array.length;return new t9(o,t,n)}function Cb(i){let e,t=0,n=0;for(let f=0,d=i.length;f<d;++f){const m=i[f];if(e===void 0&&(e=m.array.constructor),e!==m.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;t+=m.array.length,n+=m.itemSize}const r=new W6(new e(t),n);let o=0;const s=[],a=["getX","getY","getZ","getW"],h=["setX","setY","setZ","setW"];for(let f=0,d=i.length;f<d;f++){const m=i[f],y=m.itemSize,v=m.count,b=new t5(r,y,o,m.normalized);s.push(b),o+=y;for(let M=0;M<v;M++)for(let w=0;w<y;w++)b[h[w]](M,m[a[w]](M))}return s}function Nn(i){const e=i.data.array.constructor,t=i.count,n=i.itemSize,r=i.normalized,o=new e(t*n);let s;i.isInstancedInterleavedBufferAttribute?s=new InstancedBufferAttribute(o,n,r,i.meshPerAttribute):s=new t9(o,n,r);for(let a=0;a<t;a++)s.setX(a,i.getX(a)),n>=2&&s.setY(a,i.getY(a)),n>=3&&s.setZ(a,i.getZ(a)),n>=4&&s.setW(a,i.getW(a));return s}function Pb(i){const e=i.attributes,t=i.morphTargets,n=new Map;for(const r in e){const o=e[r];o.isInterleavedBufferAttribute&&(n.has(o)||n.set(o,Nn(o)),e[r]=n.get(o))}for(const r in t){const o=t[r];o.isInterleavedBufferAttribute&&(n.has(o)||n.set(o,Nn(o)),t[r]=n.get(o))}}function Rb(i){let e=0;for(const n in i.attributes){const r=i.getAttribute(n);e+=r.count*r.itemSize*r.array.BYTES_PER_ELEMENT}const t=i.getIndex();return e+=t?t.count*t.itemSize*t.array.BYTES_PER_ELEMENT:0,e}function Lb(i,e=1e-4){e=Math.max(e,Number.EPSILON);const t={},n=i.getIndex(),r=i.getAttribute("position"),o=n?n.count:r.count;let s=0;const a=Object.keys(i.attributes),h={},f={},d=[],m=["getX","getY","getZ","getW"];for(let M=0,w=a.length;M<w;M++){const E=a[M];h[E]=[];const T=i.morphAttributes[E];T&&(f[E]=new Array(T.length).fill().map(()=>[]))}const y=Math.log10(1/e),v=Math.pow(10,y);for(let M=0;M<o;M++){const w=n?n.getX(M):M;let E="";for(let T=0,C=a.length;T<C;T++){const P=a[T],R=i.getAttribute(P),I=R.itemSize;for(let q=0;q<I;q++)E+=`${~~(R[m[q]](w)*v)},`}if(E in t)d.push(t[E]);else{for(let T=0,C=a.length;T<C;T++){const P=a[T],R=i.getAttribute(P),I=i.morphAttributes[P],q=R.itemSize,D=h[P],O=f[P];for(let k=0;k<q;k++){const B=m[k];if(D.push(R[B](w)),I)for(let j=0,Y=I.length;j<Y;j++)O[j].push(I[j][B](w))}}t[E]=s,d.push(s),s++}}const b=i.clone();for(let M=0,w=a.length;M<w;M++){const E=a[M],T=i.getAttribute(E),C=new T.array.constructor(h[E]),P=new t9(C,T.itemSize,T.normalized);if(b.setAttribute(E,P),E in f)for(let R=0;R<f[E].length;R++){const I=i.morphAttributes[E][R],q=new I.array.constructor(f[E][R]),D=new t9(q,I.itemSize,I.normalized);b.morphAttributes[E][R]=D}}return b.setIndex(d),b}function Db(i,e){if(e===_l)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),i;if(e===fo||e===Bh){let t=i.getIndex();if(t===null){const s=[],a=i.getAttribute("position");if(a!==void 0){for(let h=0;h<a.count;h++)s.push(h);i.setIndex(s),t=i.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),i}const n=t.count-2,r=[];if(e===fo)for(let s=1;s<=n;s++)r.push(t.getX(0)),r.push(t.getX(s)),r.push(t.getX(s+1));else for(let s=0;s<n;s++)s%2===0?(r.push(t.getX(s)),r.push(t.getX(s+1)),r.push(t.getX(s+2))):(r.push(t.getX(s+2)),r.push(t.getX(s+1)),r.push(t.getX(s)));r.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const o=i.clone();return o.setIndex(r),o.clearGroups(),o}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),i}function Ib(i){if(i.geometry.isBufferGeometry!==!0)return console.error("THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry."),null;const e=new $,t=new $,n=new $,r=new $,o=new $,s=new $,a=new $,h=new $,f=new $;function d(u0,l0,b0,i0,g0,P0,T0,d0){e.fromBufferAttribute(l0,g0),t.fromBufferAttribute(l0,P0),n.fromBufferAttribute(l0,T0);const p0=u0.morphTargetInfluences;if(b0&&p0){a.set(0,0,0),h.set(0,0,0),f.set(0,0,0);for(let E0=0,I0=b0.length;E0<I0;E0++){const _0=p0[E0],H0=b0[E0];_0!==0&&(r.fromBufferAttribute(H0,g0),o.fromBufferAttribute(H0,P0),s.fromBufferAttribute(H0,T0),i0?(a.addScaledVector(r,_0),h.addScaledVector(o,_0),f.addScaledVector(s,_0)):(a.addScaledVector(r.sub(e),_0),h.addScaledVector(o.sub(t),_0),f.addScaledVector(s.sub(n),_0)))}e.add(a),t.add(h),n.add(f)}u0.isSkinnedMesh&&(u0.boneTransform(g0,e),u0.boneTransform(P0,t),u0.boneTransform(T0,n)),d0[g0*3+0]=e.x,d0[g0*3+1]=e.y,d0[g0*3+2]=e.z,d0[P0*3+0]=t.x,d0[P0*3+1]=t.y,d0[P0*3+2]=t.z,d0[T0*3+0]=n.x,d0[T0*3+1]=n.y,d0[T0*3+2]=n.z}const m=i.geometry,y=i.material;let v,b,M;const w=m.index,E=m.attributes.position,T=m.morphAttributes.position,C=m.morphTargetsRelative,P=m.attributes.normal,R=m.morphAttributes.position,I=m.groups,q=m.drawRange;let D,O,k,B,j,Y,z;const G=new Float32Array(E.count*E.itemSize),X=new Float32Array(P.count*P.itemSize);if(w!==null)if(Array.isArray(y))for(D=0,k=I.length;D<k;D++)for(j=I[D],Y=Math.max(j.start,q.start),z=Math.min(j.start+j.count,q.start+q.count),O=Y,B=z;O<B;O+=3)v=w.getX(O),b=w.getX(O+1),M=w.getX(O+2),d(i,E,T,C,v,b,M,G),d(i,P,R,C,v,b,M,X);else for(Y=Math.max(0,q.start),z=Math.min(w.count,q.start+q.count),D=Y,k=z;D<k;D+=3)v=w.getX(D),b=w.getX(D+1),M=w.getX(D+2),d(i,E,T,C,v,b,M,G),d(i,P,R,C,v,b,M,X);else if(Array.isArray(y))for(D=0,k=I.length;D<k;D++)for(j=I[D],Y=Math.max(j.start,q.start),z=Math.min(j.start+j.count,q.start+q.count),O=Y,B=z;O<B;O+=3)v=O,b=O+1,M=O+2,d(i,E,T,C,v,b,M,G),d(i,P,R,C,v,b,M,X);else for(Y=Math.max(0,q.start),z=Math.min(E.count,q.start+q.count),D=Y,k=z;D<k;D+=3)v=D,b=D+1,M=D+2,d(i,E,T,C,v,b,M,G),d(i,P,R,C,v,b,M,X);const o0=new T1(G,3),a0=new T1(X,3);return{positionAttribute:E,normalAttribute:P,morphedPositionAttribute:o0,morphedNormalAttribute:a0}}function Bb(i){if(i.groups.length===0)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),i;let e=i.groups;if(e=e.sort((s,a)=>s.materialIndex!==a.materialIndex?s.materialIndex-a.materialIndex:s.start-a.start),i.getIndex()===null){const s=i.getAttribute("position"),a=[];for(let h=0;h<s.count;h+=3)a.push(h,h+1,h+2);i.setIndex(a)}const t=i.getIndex(),n=[];for(let s=0;s<e.length;s++){const a=e[s],h=a.start,f=h+a.count;for(let d=h;d<f;d++)n.push(t.getX(d))}i.dispose(),i.setIndex(n);let r=0;for(let s=0;s<e.length;s++){const a=e[s];a.start=r,r+=a.count}let o=e[0];i.groups=[o];for(let s=1;s<e.length;s++){const a=e[s];o.materialIndex===a.materialIndex?o.count+=a.count:(o=a,i.groups.push(o))}return i}var Ni=Object.freeze(Object.defineProperty({__proto__:null,deinterleaveAttribute:Nn,deinterleaveGeometry:Pb,computeTangents:Sb,computeMikkTSpaceTangents:Eb,mergeBufferGeometries:Tb,mergeBufferAttributes:kn,interleaveAttributes:Cb,estimateBytesUsed:Rb,mergeVertices:Lb,toTrianglesDrawMode:Db,computeMorphedAttributes:Ib,mergeGroups:Bb},Symbol.toStringTag,{value:"Module"})),G0=function(i){return i instanceof Function?i:typeof i=="string"?function(e){return e[i]}:function(e){return i}},HA={exports:{}};(function(i){(function(e){var t=/^\s+/,n=/\s+$/,r=0,o=e.round,s=e.min,a=e.max,h=e.random;function f(N,Z){if(N=N||"",Z=Z||{},N instanceof f)return N;if(!(this instanceof f))return new f(N,Z);var H=d(N);this._originalInput=N,this._r=H.r,this._g=H.g,this._b=H.b,this._a=H.a,this._roundA=o(100*this._a)/100,this._format=Z.format||H.format,this._gradientType=Z.gradientType,this._r<1&&(this._r=o(this._r)),this._g<1&&(this._g=o(this._g)),this._b<1&&(this._b=o(this._b)),this._ok=H.ok,this._tc_id=r++}f.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var N=this.toRgb();return(N.r*299+N.g*587+N.b*114)/1e3},getLuminance:function(){var N=this.toRgb(),Z,H,v0,L0,m0,U0;return Z=N.r/255,H=N.g/255,v0=N.b/255,Z<=.03928?L0=Z/12.92:L0=e.pow((Z+.055)/1.055,2.4),H<=.03928?m0=H/12.92:m0=e.pow((H+.055)/1.055,2.4),v0<=.03928?U0=v0/12.92:U0=e.pow((v0+.055)/1.055,2.4),.2126*L0+.7152*m0+.0722*U0},setAlpha:function(N){return this._a=u0(N),this._roundA=o(100*this._a)/100,this},toHsv:function(){var N=b(this._r,this._g,this._b);return{h:N.h*360,s:N.s,v:N.v,a:this._a}},toHsvString:function(){var N=b(this._r,this._g,this._b),Z=o(N.h*360),H=o(N.s*100),v0=o(N.v*100);return this._a==1?"hsv("+Z+", "+H+"%, "+v0+"%)":"hsva("+Z+", "+H+"%, "+v0+"%, "+this._roundA+")"},toHsl:function(){var N=y(this._r,this._g,this._b);return{h:N.h*360,s:N.s,l:N.l,a:this._a}},toHslString:function(){var N=y(this._r,this._g,this._b),Z=o(N.h*360),H=o(N.s*100),v0=o(N.l*100);return this._a==1?"hsl("+Z+", "+H+"%, "+v0+"%)":"hsla("+Z+", "+H+"%, "+v0+"%, "+this._roundA+")"},toHex:function(N){return w(this._r,this._g,this._b,N)},toHexString:function(N){return"#"+this.toHex(N)},toHex8:function(N){return E(this._r,this._g,this._b,this._a,N)},toHex8String:function(N){return"#"+this.toHex8(N)},toRgb:function(){return{r:o(this._r),g:o(this._g),b:o(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+o(this._r)+", "+o(this._g)+", "+o(this._b)+")":"rgba("+o(this._r)+", "+o(this._g)+", "+o(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:o(l0(this._r,255)*100)+"%",g:o(l0(this._g,255)*100)+"%",b:o(l0(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+o(l0(this._r,255)*100)+"%, "+o(l0(this._g,255)*100)+"%, "+o(l0(this._b,255)*100)+"%)":"rgba("+o(l0(this._r,255)*100)+"%, "+o(l0(this._g,255)*100)+"%, "+o(l0(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){return this._a===0?"transparent":this._a<1?!1:o0[w(this._r,this._g,this._b,!0)]||!1},toFilter:function(N){var Z="#"+T(this._r,this._g,this._b,this._a),H=Z,v0=this._gradientType?"GradientType = 1, ":"";if(N){var L0=f(N);H="#"+T(L0._r,L0._g,L0._b,L0._a)}return"progid:DXImageTransform.Microsoft.gradient("+v0+"startColorstr="+Z+",endColorstr="+H+")"},toString:function(N){var Z=!!N;N=N||this._format;var H=!1,v0=this._a<1&&this._a>=0,L0=!Z&&v0&&(N==="hex"||N==="hex6"||N==="hex3"||N==="hex4"||N==="hex8"||N==="name");return L0?N==="name"&&this._a===0?this.toName():this.toRgbString():(N==="rgb"&&(H=this.toRgbString()),N==="prgb"&&(H=this.toPercentageRgbString()),(N==="hex"||N==="hex6")&&(H=this.toHexString()),N==="hex3"&&(H=this.toHexString(!0)),N==="hex4"&&(H=this.toHex8String(!0)),N==="hex8"&&(H=this.toHex8String()),N==="name"&&(H=this.toName()),N==="hsl"&&(H=this.toHslString()),N==="hsv"&&(H=this.toHsvString()),H||this.toHexString())},clone:function(){return f(this.toString())},_applyModification:function(N,Z){var H=N.apply(null,[this].concat([].slice.call(Z)));return this._r=H._r,this._g=H._g,this._b=H._b,this.setAlpha(H._a),this},lighten:function(){return this._applyModification(I,arguments)},brighten:function(){return this._applyModification(q,arguments)},darken:function(){return this._applyModification(D,arguments)},desaturate:function(){return this._applyModification(C,arguments)},saturate:function(){return this._applyModification(P,arguments)},greyscale:function(){return this._applyModification(R,arguments)},spin:function(){return this._applyModification(O,arguments)},_applyCombination:function(N,Z){return N.apply(null,[this].concat([].slice.call(Z)))},analogous:function(){return this._applyCombination(z,arguments)},complement:function(){return this._applyCombination(k,arguments)},monochromatic:function(){return this._applyCombination(G,arguments)},splitcomplement:function(){return this._applyCombination(Y,arguments)},triad:function(){return this._applyCombination(B,arguments)},tetrad:function(){return this._applyCombination(j,arguments)}},f.fromRatio=function(N,Z){if(typeof N=="object"){var H={};for(var v0 in N)N.hasOwnProperty(v0)&&(v0==="a"?H[v0]=N[v0]:H[v0]=d0(N[v0]));N=H}return f(N,Z)};function d(N){var Z={r:0,g:0,b:0},H=1,v0=null,L0=null,m0=null,U0=!1,c1=!1;return typeof N=="string"&&(N=H0(N)),typeof N=="object"&&(_0(N.r)&&_0(N.g)&&_0(N.b)?(Z=m(N.r,N.g,N.b),U0=!0,c1=String(N.r).substr(-1)==="%"?"prgb":"rgb"):_0(N.h)&&_0(N.s)&&_0(N.v)?(v0=d0(N.s),L0=d0(N.v),Z=M(N.h,v0,L0),U0=!0,c1="hsv"):_0(N.h)&&_0(N.s)&&_0(N.l)&&(v0=d0(N.s),m0=d0(N.l),Z=v(N.h,v0,m0),U0=!0,c1="hsl"),N.hasOwnProperty("a")&&(H=N.a)),H=u0(H),{ok:U0,format:N.format||c1,r:s(255,a(Z.r,0)),g:s(255,a(Z.g,0)),b:s(255,a(Z.b,0)),a:H}}function m(N,Z,H){return{r:l0(N,255)*255,g:l0(Z,255)*255,b:l0(H,255)*255}}function y(N,Z,H){N=l0(N,255),Z=l0(Z,255),H=l0(H,255);var v0=a(N,Z,H),L0=s(N,Z,H),m0,U0,c1=(v0+L0)/2;if(v0==L0)m0=U0=0;else{var s1=v0-L0;switch(U0=c1>.5?s1/(2-v0-L0):s1/(v0+L0),v0){case N:m0=(Z-H)/s1+(Z<H?6:0);break;case Z:m0=(H-N)/s1+2;break;case H:m0=(N-Z)/s1+4;break}m0/=6}return{h:m0,s:U0,l:c1}}function v(N,Z,H){var v0,L0,m0;N=l0(N,360),Z=l0(Z,100),H=l0(H,100);function U0(e0,V,M0){return M0<0&&(M0+=1),M0>1&&(M0-=1),M0<1/6?e0+(V-e0)*6*M0:M0<1/2?V:M0<2/3?e0+(V-e0)*(2/3-M0)*6:e0}if(Z===0)v0=L0=m0=H;else{var c1=H<.5?H*(1+Z):H+Z-H*Z,s1=2*H-c1;v0=U0(s1,c1,N+1/3),L0=U0(s1,c1,N),m0=U0(s1,c1,N-1/3)}return{r:v0*255,g:L0*255,b:m0*255}}function b(N,Z,H){N=l0(N,255),Z=l0(Z,255),H=l0(H,255);var v0=a(N,Z,H),L0=s(N,Z,H),m0,U0,c1=v0,s1=v0-L0;if(U0=v0===0?0:s1/v0,v0==L0)m0=0;else{switch(v0){case N:m0=(Z-H)/s1+(Z<H?6:0);break;case Z:m0=(H-N)/s1+2;break;case H:m0=(N-Z)/s1+4;break}m0/=6}return{h:m0,s:U0,v:c1}}function M(N,Z,H){N=l0(N,360)*6,Z=l0(Z,100),H=l0(H,100);var v0=e.floor(N),L0=N-v0,m0=H*(1-Z),U0=H*(1-L0*Z),c1=H*(1-(1-L0)*Z),s1=v0%6,e0=[H,U0,m0,m0,c1,H][s1],V=[c1,H,H,U0,m0,m0][s1],M0=[m0,m0,c1,H,H,U0][s1];return{r:e0*255,g:V*255,b:M0*255}}function w(N,Z,H,v0){var L0=[T0(o(N).toString(16)),T0(o(Z).toString(16)),T0(o(H).toString(16))];return v0&&L0[0].charAt(0)==L0[0].charAt(1)&&L0[1].charAt(0)==L0[1].charAt(1)&&L0[2].charAt(0)==L0[2].charAt(1)?L0[0].charAt(0)+L0[1].charAt(0)+L0[2].charAt(0):L0.join("")}function E(N,Z,H,v0,L0){var m0=[T0(o(N).toString(16)),T0(o(Z).toString(16)),T0(o(H).toString(16)),T0(p0(v0))];return L0&&m0[0].charAt(0)==m0[0].charAt(1)&&m0[1].charAt(0)==m0[1].charAt(1)&&m0[2].charAt(0)==m0[2].charAt(1)&&m0[3].charAt(0)==m0[3].charAt(1)?m0[0].charAt(0)+m0[1].charAt(0)+m0[2].charAt(0)+m0[3].charAt(0):m0.join("")}function T(N,Z,H,v0){var L0=[T0(p0(v0)),T0(o(N).toString(16)),T0(o(Z).toString(16)),T0(o(H).toString(16))];return L0.join("")}f.equals=function(N,Z){return!N||!Z?!1:f(N).toRgbString()==f(Z).toRgbString()},f.random=function(){return f.fromRatio({r:h(),g:h(),b:h()})};function C(N,Z){Z=Z===0?0:Z||10;var H=f(N).toHsl();return H.s-=Z/100,H.s=b0(H.s),f(H)}function P(N,Z){Z=Z===0?0:Z||10;var H=f(N).toHsl();return H.s+=Z/100,H.s=b0(H.s),f(H)}function R(N){return f(N).desaturate(100)}function I(N,Z){Z=Z===0?0:Z||10;var H=f(N).toHsl();return H.l+=Z/100,H.l=b0(H.l),f(H)}function q(N,Z){Z=Z===0?0:Z||10;var H=f(N).toRgb();return H.r=a(0,s(255,H.r-o(255*-(Z/100)))),H.g=a(0,s(255,H.g-o(255*-(Z/100)))),H.b=a(0,s(255,H.b-o(255*-(Z/100)))),f(H)}function D(N,Z){Z=Z===0?0:Z||10;var H=f(N).toHsl();return H.l-=Z/100,H.l=b0(H.l),f(H)}function O(N,Z){var H=f(N).toHsl(),v0=(H.h+Z)%360;return H.h=v0<0?360+v0:v0,f(H)}function k(N){var Z=f(N).toHsl();return Z.h=(Z.h+180)%360,f(Z)}function B(N){var Z=f(N).toHsl(),H=Z.h;return[f(N),f({h:(H+120)%360,s:Z.s,l:Z.l}),f({h:(H+240)%360,s:Z.s,l:Z.l})]}function j(N){var Z=f(N).toHsl(),H=Z.h;return[f(N),f({h:(H+90)%360,s:Z.s,l:Z.l}),f({h:(H+180)%360,s:Z.s,l:Z.l}),f({h:(H+270)%360,s:Z.s,l:Z.l})]}function Y(N){var Z=f(N).toHsl(),H=Z.h;return[f(N),f({h:(H+72)%360,s:Z.s,l:Z.l}),f({h:(H+216)%360,s:Z.s,l:Z.l})]}function z(N,Z,H){Z=Z||6,H=H||30;var v0=f(N).toHsl(),L0=360/H,m0=[f(N)];for(v0.h=(v0.h-(L0*Z>>1)+720)%360;--Z;)v0.h=(v0.h+L0)%360,m0.push(f(v0));return m0}function G(N,Z){Z=Z||6;for(var H=f(N).toHsv(),v0=H.h,L0=H.s,m0=H.v,U0=[],c1=1/Z;Z--;)U0.push(f({h:v0,s:L0,v:m0})),m0=(m0+c1)%1;return U0}f.mix=function(N,Z,H){H=H===0?0:H||50;var v0=f(N).toRgb(),L0=f(Z).toRgb(),m0=H/100,U0={r:(L0.r-v0.r)*m0+v0.r,g:(L0.g-v0.g)*m0+v0.g,b:(L0.b-v0.b)*m0+v0.b,a:(L0.a-v0.a)*m0+v0.a};return f(U0)},f.readability=function(N,Z){var H=f(N),v0=f(Z);return(e.max(H.getLuminance(),v0.getLuminance())+.05)/(e.min(H.getLuminance(),v0.getLuminance())+.05)},f.isReadable=function(N,Z,H){var v0=f.readability(N,Z),L0,m0;switch(m0=!1,L0=w0(H),L0.level+L0.size){case"AAsmall":case"AAAlarge":m0=v0>=4.5;break;case"AAlarge":m0=v0>=3;break;case"AAAsmall":m0=v0>=7;break}return m0},f.mostReadable=function(N,Z,H){var v0=null,L0=0,m0,U0,c1,s1;H=H||{},U0=H.includeFallbackColors,c1=H.level,s1=H.size;for(var e0=0;e0<Z.length;e0++)m0=f.readability(N,Z[e0]),m0>L0&&(L0=m0,v0=f(Z[e0]));return f.isReadable(N,v0,{level:c1,size:s1})||!U0?v0:(H.includeFallbackColors=!1,f.mostReadable(N,["#fff","#000"],H))};var X=f.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},o0=f.hexNames=a0(X);function a0(N){var Z={};for(var H in N)N.hasOwnProperty(H)&&(Z[N[H]]=H);return Z}function u0(N){return N=parseFloat(N),(isNaN(N)||N<0||N>1)&&(N=1),N}function l0(N,Z){g0(N)&&(N="100%");var H=P0(N);return N=s(Z,a(0,parseFloat(N))),H&&(N=parseInt(N*Z,10)/100),e.abs(N-Z)<1e-6?1:N%Z/parseFloat(Z)}function b0(N){return s(1,a(0,N))}function i0(N){return parseInt(N,16)}function g0(N){return typeof N=="string"&&N.indexOf(".")!=-1&&parseFloat(N)===1}function P0(N){return typeof N=="string"&&N.indexOf("%")!=-1}function T0(N){return N.length==1?"0"+N:""+N}function d0(N){return N<=1&&(N=N*100+"%"),N}function p0(N){return e.round(parseFloat(N)*255).toString(16)}function E0(N){return i0(N)/255}var I0=function(){var N="[-\\+]?\\d+%?",Z="[-\\+]?\\d*\\.\\d+%?",H="(?:"+Z+")|(?:"+N+")",v0="[\\s|\\(]+("+H+")[,|\\s]+("+H+")[,|\\s]+("+H+")\\s*\\)?",L0="[\\s|\\(]+("+H+")[,|\\s]+("+H+")[,|\\s]+("+H+")[,|\\s]+("+H+")\\s*\\)?";return{CSS_UNIT:new RegExp(H),rgb:new RegExp("rgb"+v0),rgba:new RegExp("rgba"+L0),hsl:new RegExp("hsl"+v0),hsla:new RegExp("hsla"+L0),hsv:new RegExp("hsv"+v0),hsva:new RegExp("hsva"+L0),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function _0(N){return!!I0.CSS_UNIT.exec(N)}function H0(N){N=N.replace(t,"").replace(n,"").toLowerCase();var Z=!1;if(X[N])N=X[N],Z=!0;else if(N=="transparent")return{r:0,g:0,b:0,a:0,format:"name"};var H;return(H=I0.rgb.exec(N))?{r:H[1],g:H[2],b:H[3]}:(H=I0.rgba.exec(N))?{r:H[1],g:H[2],b:H[3],a:H[4]}:(H=I0.hsl.exec(N))?{h:H[1],s:H[2],l:H[3]}:(H=I0.hsla.exec(N))?{h:H[1],s:H[2],l:H[3],a:H[4]}:(H=I0.hsv.exec(N))?{h:H[1],s:H[2],v:H[3]}:(H=I0.hsva.exec(N))?{h:H[1],s:H[2],v:H[3],a:H[4]}:(H=I0.hex8.exec(N))?{r:i0(H[1]),g:i0(H[2]),b:i0(H[3]),a:E0(H[4]),format:Z?"name":"hex8"}:(H=I0.hex6.exec(N))?{r:i0(H[1]),g:i0(H[2]),b:i0(H[3]),format:Z?"name":"hex"}:(H=I0.hex4.exec(N))?{r:i0(H[1]+""+H[1]),g:i0(H[2]+""+H[2]),b:i0(H[3]+""+H[3]),a:E0(H[4]+""+H[4]),format:Z?"name":"hex8"}:(H=I0.hex3.exec(N))?{r:i0(H[1]+""+H[1]),g:i0(H[2]+""+H[2]),b:i0(H[3]+""+H[3]),format:Z?"name":"hex"}:!1}function w0(N){var Z,H;return N=N||{level:"AA",size:"small"},Z=(N.level||"AA").toUpperCase(),H=(N.size||"small").toLowerCase(),Z!=="AA"&&Z!=="AAA"&&(Z="AA"),H!=="small"&&H!=="large"&&(H="small"),{level:Z,size:H}}i.exports?i.exports=f:window.tinycolor=f})(Math)})(HA);var Ui=HA.exports;function Ob(i,e){if(i==null)return{};var t={},n=Object.keys(i),r,o;for(o=0;o<n.length;o++)r=n[o],!(e.indexOf(r)>=0)&&(t[r]=i[r]);return t}function qb(i,e){if(i==null)return{};var t=Ob(i,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(i);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&(!Object.prototype.propertyIsEnumerable.call(i,n)||(t[n]=i[n]))}return t}function Fb(i,e){return Ub(i)||Gb(i,e)||VA(i,e)||Vb()}function kb(i){return Nb(i)||zb(i)||VA(i)||Hb()}function Nb(i){if(Array.isArray(i))return Un(i)}function Ub(i){if(Array.isArray(i))return i}function zb(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function Gb(i,e){var t=i&&(typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"]);if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function VA(i,e){if(!!i){if(typeof i=="string")return Un(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Un(i,e)}}function Un(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function Hb(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Vb(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Wb(i,e){if(typeof i!="object"||i===null)return i;var t=i[Symbol.toPrimitive];if(t!==void 0){var n=t.call(i,e||"default");if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(i)}function jb(i){var e=Wb(i,"string");return typeof e=="symbol"?e:String(e)}var zn=function(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,r=(e instanceof Array?e.length?e:[void 0]:[e]).map(function(a){return{keyAccessor:a,isProp:!(a instanceof Function)}}),o=i.reduce(function(a,h){var f=a,d=h;return r.forEach(function(m,y){var v=m.keyAccessor,b=m.isProp,M;if(b){var w=d,E=w[v],T=qb(w,[v].map(jb));M=E,d=T}else M=v(d,y);y+1<r.length?(f.hasOwnProperty(M)||(f[M]={}),f=f[M]):t?(f.hasOwnProperty(M)||(f[M]=[]),f[M].push(d)):f[M]=d}),a},{});t instanceof Function&&function a(h){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1;f===r.length?Object.keys(h).forEach(function(d){return h[d]=t(h[d])}):Object.values(h).forEach(function(d){return a(d,f+1)})}(o);var s=o;return n&&(s=[],function a(h){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];f.length===r.length?s.push({keys:f,vals:h}):Object.entries(h).forEach(function(d){var m=Fb(d,2),y=m[0],v=m[1];return a(v,[].concat(kb(f),[y]))})}(o),e instanceof Array&&e.length===0&&s.length===1&&(s[0].keys=[])),s};function ca(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Qb(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?ca(Object(t),!0).forEach(function(n){WA(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):ca(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function WA(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function $b(i,e){if(i==null)return{};var t={},n=Object.keys(i),r,o;for(o=0;o<n.length;o++)r=n[o],!(e.indexOf(r)>=0)&&(t[r]=i[r]);return t}function Yb(i,e){if(i==null)return{};var t=$b(i,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(i);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&(!Object.prototype.propertyIsEnumerable.call(i,n)||(t[n]=i[n]))}return t}function jA(i,e){return Zb(i)||Kb(i,e)||QA(i,e)||tw()}function Z3(i){return Xb(i)||Jb(i)||QA(i)||ew()}function Xb(i){if(Array.isArray(i))return Gn(i)}function Zb(i){if(Array.isArray(i))return i}function Jb(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function Kb(i,e){var t=i&&(typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"]);if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function QA(i,e){if(!!i){if(typeof i=="string")return Gn(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Gn(i,e)}}function Gn(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function ew(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function tw(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function nw(i,e,t){var n={enter:[],update:[],exit:[]};if(t){var s=zn(i,t,!1),a=zn(e,t,!1),h=Object.assign({},s,a);Object.entries(h).forEach(function(f){var d=jA(f,2),m=d[0],y=d[1],v=s.hasOwnProperty(m)?a.hasOwnProperty(m)?"update":"exit":"enter";n[v].push(v==="update"?[s[m],a[m]]:y)})}else{var r=new Set(i),o=new Set(e);new Set([].concat(Z3(r),Z3(o))).forEach(function(f){var d=r.has(f)?o.has(f)?"update":"exit":"enter";n[d].push(d==="update"?[f,f]:f)})}return n}function iw(i,e,t){var n=t.objBindAttr,r=n===void 0?"__obj":n,o=t.dataBindAttr,s=o===void 0?"__data":o,a=t.idAccessor,h=t.purge,f=h===void 0?!1:h,d=function(w){return w.hasOwnProperty(s)},m=e.filter(function(M){return!d(M)}),y=e.filter(d).map(function(M){return M[s]}),v=i,b=f?{enter:v,exit:y,update:[]}:nw(y,v,a);return b.update=b.update.map(function(M){var w=jA(M,2),E=w[0],T=w[1];return E!==T&&(T[r]=E[r],T[r][s]=T),T}),b.exit=b.exit.concat(m.map(function(M){return WA({},r,M)})),b}function rw(i,e,t,n,r){var o=r.createObj,s=o===void 0?function(D){return{}}:o,a=r.updateObj,h=a===void 0?function(D,O){}:a,f=r.exitObj,d=f===void 0?function(D){}:f,m=r.objBindAttr,y=m===void 0?"__obj":m,v=r.dataBindAttr,b=v===void 0?"__data":v,M=Yb(r,["createObj","updateObj","exitObj","objBindAttr","dataBindAttr"]),w=iw(i,e,Qb({objBindAttr:y,dataBindAttr:b},M)),E=w.enter,T=w.update,C=w.exit;C.forEach(function(D){var O=D[y];delete D[y],d(O),n(O)});var P=I(E),R=[].concat(Z3(E),Z3(T));q(R),P.forEach(t);function I(D){var O=[];return D.forEach(function(k){var B=s(k);B&&(B[b]=k,k[y]=B,O.push(B))}),O}function q(D){D.forEach(function(O){var k=O[y];k&&(k[b]=O,h(k,O))})}}var $A={exports:{}};(function(i,e){(function(t,n){i.exports=n()})(dl,function(){return function(t){function n(o){if(r[o])return r[o].exports;var s=r[o]={exports:{},id:o,loaded:!1};return t[o].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}var r={};return n.m=t,n.c=r,n.p="",n(0)}([function(t,n,r){var o=r(1),s=function(){function a(h,f,d){h===void 0&&(h=NaN),f===void 0&&(f=NaN),d===void 0&&(d=!1),this._minFPS=f,this._maxFPS=h,this._timeScale=1,this._currentTick=0,this._currentTime=0,this._tickDeltaTime=0,this._isRunning=!1,this._maxInterval=isNaN(this._minFPS)?NaN:1e3/this._minFPS,this._minInterval=isNaN(this._maxFPS)?NaN:1e3/this._maxFPS,this._onResume=new o.default,this._onPause=new o.default,this._onTick=new o.default,this._onTickOncePerFrame=new o.default,d||this.resume()}return a.prototype.updateOnce=function(h){h(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},a.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._lastTimeUpdated=this.getTimer(),this._onResume.dispatch(),this.animateOnce())},a.prototype.pause=function(){this._isRunning&&(this._isRunning=!1,this._onPause.dispatch(),window.cancelAnimationFrame(this._animationFrameHandle))},a.prototype.dispose=function(){this.pause(),this._onResume.removeAll(),this._onPause.removeAll(),this._onTick.removeAll()},Object.defineProperty(a.prototype,"currentTick",{get:function(){return this._currentTick},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"currentTimeSeconds",{get:function(){return this._currentTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"tickDeltaTimeSeconds",{get:function(){return this._tickDeltaTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"timeScale",{get:function(){return this._timeScale},set:function(h){this._timeScale!==h&&(this._timeScale=h)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"onResume",{get:function(){return this._onResume},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"onPause",{get:function(){return this._onPause},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"onTick",{get:function(){return this._onTick},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"onTickOncePerFrame",{get:function(){return this._onTickOncePerFrame},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"isRunning",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),a.prototype.animateOnce=function(){var h=this;this._animationFrameHandle=window.requestAnimationFrame(function(){return h.onFrame()})},a.prototype.onFrame=function(){if(this._now=this.getTimer(),this._frameDeltaTime=this._now-this._lastTimeUpdated,isNaN(this._minInterval)||this._frameDeltaTime>=this._minInterval)if(isNaN(this._maxInterval))this.update(this._frameDeltaTime*this._timeScale,!0),this._lastTimeUpdated=this._now;else for(this._interval=Math.min(this._frameDeltaTime,this._maxInterval);this._now>=this._lastTimeUpdated+this._interval;)this.update(this._interval*this._timeScale,this._now<=this._lastTimeUpdated+2*this._maxInterval),this._lastTimeUpdated+=this._interval;this._isRunning&&this.animateOnce()},a.prototype.update=function(h,f){f===void 0&&(f=!0),this._currentTick++,this._currentTime+=h,this._tickDeltaTime=h,this._onTick.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick),f&&this._onTickOncePerFrame.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},a.prototype.getTimer=function(){return Date.now()},a}();Object.defineProperty(n,"__esModule",{value:!0}),n.default=s},function(t,n,r){(function(o,s){t.exports=s()})(this,function(){return function(o){function s(h){if(a[h])return a[h].exports;var f=a[h]={exports:{},id:h,loaded:!1};return o[h].call(f.exports,f,f.exports,s),f.loaded=!0,f.exports}var a={};return s.m=o,s.c=a,s.p="",s(0)}([function(o,s){var a=function(){function h(){this.functions=[]}return h.prototype.add=function(f){return this.functions.indexOf(f)===-1&&(this.functions.push(f),!0)},h.prototype.remove=function(f){var d=this.functions.indexOf(f);return d>-1&&(this.functions.splice(d,1),!0)},h.prototype.removeAll=function(){return this.functions.length>0&&(this.functions.length=0,!0)},h.prototype.dispatch=function(){for(var f=[],d=0;d<arguments.length;d++)f[d]=arguments[d];var m=this.functions.concat();m.forEach(function(y){y.apply(void 0,f)})},Object.defineProperty(h.prototype,"numItems",{get:function(){return this.functions.length},enumerable:!0,configurable:!0}),h}();Object.defineProperty(s,"__esModule",{value:!0}),s.default=a}])})}])})})($A);var zi=If($A.exports);function ow(i,e){switch(arguments.length){case 0:break;case 1:this.range(i);break;default:this.range(e).domain(i);break}return this}function Gi(i,e,t){i.prototype=e.prototype=t,t.constructor=i}function YA(i,e){var t=Object.create(i.prototype);for(var n in e)t[n]=e[n];return t}function t8(){}var H7=.7,J3=1/H7,R6="\\s*([+-]?\\d+)\\s*",V7="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",i4="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",sw=/^#([0-9a-f]{3,8})$/,aw=new RegExp(`^rgb\\(${R6},${R6},${R6}\\)$`),lw=new RegExp(`^rgb\\(${i4},${i4},${i4}\\)$`),Aw=new RegExp(`^rgba\\(${R6},${R6},${R6},${V7}\\)$`),uw=new RegExp(`^rgba\\(${i4},${i4},${i4},${V7}\\)$`),cw=new RegExp(`^hsl\\(${V7},${i4},${i4}\\)$`),fw=new RegExp(`^hsla\\(${V7},${i4},${i4},${V7}\\)$`),fa={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Gi(t8,W7,{copy(i){return Object.assign(new this.constructor,this,i)},displayable(){return this.rgb().displayable()},hex:ha,formatHex:ha,formatHex8:hw,formatHsl:dw,formatRgb:da,toString:da});function ha(){return this.rgb().formatHex()}function hw(){return this.rgb().formatHex8()}function dw(){return XA(this).formatHsl()}function da(){return this.rgb().formatRgb()}function W7(i){var e,t;return i=(i+"").trim().toLowerCase(),(e=sw.exec(i))?(t=e[1].length,e=parseInt(e[1],16),t===6?pa(e):t===3?new l2(e>>8&15|e>>4&240,e>>4&15|e&240,(e&15)<<4|e&15,1):t===8?n3(e>>24&255,e>>16&255,e>>8&255,(e&255)/255):t===4?n3(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|e&240,((e&15)<<4|e&15)/255):null):(e=aw.exec(i))?new l2(e[1],e[2],e[3],1):(e=lw.exec(i))?new l2(e[1]*255/100,e[2]*255/100,e[3]*255/100,1):(e=Aw.exec(i))?n3(e[1],e[2],e[3],e[4]):(e=uw.exec(i))?n3(e[1]*255/100,e[2]*255/100,e[3]*255/100,e[4]):(e=cw.exec(i))?ya(e[1],e[2]/100,e[3]/100,1):(e=fw.exec(i))?ya(e[1],e[2]/100,e[3]/100,e[4]):fa.hasOwnProperty(i)?pa(fa[i]):i==="transparent"?new l2(NaN,NaN,NaN,0):null}function pa(i){return new l2(i>>16&255,i>>8&255,i&255,1)}function n3(i,e,t,n){return n<=0&&(i=e=t=NaN),new l2(i,e,t,n)}function pw(i){return i instanceof t8||(i=W7(i)),i?(i=i.rgb(),new l2(i.r,i.g,i.b,i.opacity)):new l2}function Hn(i,e,t,n){return arguments.length===1?pw(i):new l2(i,e,t,n==null?1:n)}function l2(i,e,t,n){this.r=+i,this.g=+e,this.b=+t,this.opacity=+n}Gi(l2,Hn,YA(t8,{brighter(i){return i=i==null?J3:Math.pow(J3,i),new l2(this.r*i,this.g*i,this.b*i,this.opacity)},darker(i){return i=i==null?H7:Math.pow(H7,i),new l2(this.r*i,this.g*i,this.b*i,this.opacity)},rgb(){return this},clamp(){return new l2(I5(this.r),I5(this.g),I5(this.b),K3(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:ma,formatHex:ma,formatHex8:mw,formatRgb:ga,toString:ga}));function ma(){return`#${P5(this.r)}${P5(this.g)}${P5(this.b)}`}function mw(){return`#${P5(this.r)}${P5(this.g)}${P5(this.b)}${P5((isNaN(this.opacity)?1:this.opacity)*255)}`}function ga(){const i=K3(this.opacity);return`${i===1?"rgb(":"rgba("}${I5(this.r)}, ${I5(this.g)}, ${I5(this.b)}${i===1?")":`, ${i})`}`}function K3(i){return isNaN(i)?1:Math.max(0,Math.min(1,i))}function I5(i){return Math.max(0,Math.min(255,Math.round(i)||0))}function P5(i){return i=I5(i),(i<16?"0":"")+i.toString(16)}function ya(i,e,t,n){return n<=0?i=e=t=NaN:t<=0||t>=1?i=e=NaN:e<=0&&(i=NaN),new H2(i,e,t,n)}function XA(i){if(i instanceof H2)return new H2(i.h,i.s,i.l,i.opacity);if(i instanceof t8||(i=W7(i)),!i)return new H2;if(i instanceof H2)return i;i=i.rgb();var e=i.r/255,t=i.g/255,n=i.b/255,r=Math.min(e,t,n),o=Math.max(e,t,n),s=NaN,a=o-r,h=(o+r)/2;return a?(e===o?s=(t-n)/a+(t<n)*6:t===o?s=(n-e)/a+2:s=(e-t)/a+4,a/=h<.5?o+r:2-o-r,s*=60):a=h>0&&h<1?0:s,new H2(s,a,h,i.opacity)}function gw(i,e,t,n){return arguments.length===1?XA(i):new H2(i,e,t,n==null?1:n)}function H2(i,e,t,n){this.h=+i,this.s=+e,this.l=+t,this.opacity=+n}Gi(H2,gw,YA(t8,{brighter(i){return i=i==null?J3:Math.pow(J3,i),new H2(this.h,this.s,this.l*i,this.opacity)},darker(i){return i=i==null?H7:Math.pow(H7,i),new H2(this.h,this.s,this.l*i,this.opacity)},rgb(){var i=this.h%360+(this.h<0)*360,e=isNaN(i)||isNaN(this.s)?0:this.s,t=this.l,n=t+(t<.5?t:1-t)*e,r=2*t-n;return new l2(Bt(i>=240?i-240:i+120,r,n),Bt(i,r,n),Bt(i<120?i+240:i-120,r,n),this.opacity)},clamp(){return new H2(va(this.h),i3(this.s),i3(this.l),K3(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const i=K3(this.opacity);return`${i===1?"hsl(":"hsla("}${va(this.h)}, ${i3(this.s)*100}%, ${i3(this.l)*100}%${i===1?")":`, ${i})`}`}}));function va(i){return i=(i||0)%360,i<0?i+360:i}function i3(i){return Math.max(0,Math.min(1,i||0))}function Bt(i,e,t){return(i<60?e+(t-e)*i/60:i<180?t:i<240?e+(t-e)*(240-i)/60:e)*255}var Hi=i=>()=>i;function yw(i,e){return function(t){return i+t*e}}function vw(i,e,t){return i=Math.pow(i,t),e=Math.pow(e,t)-i,t=1/t,function(n){return Math.pow(i+n*e,t)}}function xw(i){return(i=+i)==1?ZA:function(e,t){return t-e?vw(e,t,i):Hi(isNaN(e)?t:e)}}function ZA(i,e){var t=e-i;return t?yw(i,t):Hi(isNaN(i)?e:i)}var xa=function i(e){var t=xw(e);function n(r,o){var s=t((r=Hn(r)).r,(o=Hn(o)).r),a=t(r.g,o.g),h=t(r.b,o.b),f=ZA(r.opacity,o.opacity);return function(d){return r.r=s(d),r.g=a(d),r.b=h(d),r.opacity=f(d),r+""}}return n.gamma=i,n}(1);function JA(i,e){e||(e=[]);var t=i?Math.min(e.length,i.length):0,n=e.slice(),r;return function(o){for(r=0;r<t;++r)n[r]=i[r]*(1-o)+e[r]*o;return n}}function KA(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function _w(i,e){return(KA(e)?JA:eu)(i,e)}function eu(i,e){var t=e?e.length:0,n=i?Math.min(t,i.length):0,r=new Array(n),o=new Array(t),s;for(s=0;s<n;++s)r[s]=Vi(i[s],e[s]);for(;s<t;++s)o[s]=e[s];return function(a){for(s=0;s<n;++s)o[s]=r[s](a);return o}}function bw(i,e){var t=new Date;return i=+i,e=+e,function(n){return t.setTime(i*(1-n)+e*n),t}}function ee(i,e){return i=+i,e=+e,function(t){return i*(1-t)+e*t}}function ww(i,e){var t={},n={},r;(i===null||typeof i!="object")&&(i={}),(e===null||typeof e!="object")&&(e={});for(r in e)r in i?t[r]=Vi(i[r],e[r]):n[r]=e[r];return function(o){for(r in t)n[r]=t[r](o);return n}}var Vn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ot=new RegExp(Vn.source,"g");function Mw(i){return function(){return i}}function Sw(i){return function(e){return i(e)+""}}function Ew(i,e){var t=Vn.lastIndex=Ot.lastIndex=0,n,r,o,s=-1,a=[],h=[];for(i=i+"",e=e+"";(n=Vn.exec(i))&&(r=Ot.exec(e));)(o=r.index)>t&&(o=e.slice(t,o),a[s]?a[s]+=o:a[++s]=o),(n=n[0])===(r=r[0])?a[s]?a[s]+=r:a[++s]=r:(a[++s]=null,h.push({i:s,x:ee(n,r)})),t=Ot.lastIndex;return t<e.length&&(o=e.slice(t),a[s]?a[s]+=o:a[++s]=o),a.length<2?h[0]?Sw(h[0].x):Mw(e):(e=h.length,function(f){for(var d=0,m;d<e;++d)a[(m=h[d]).i]=m.x(f);return a.join("")})}function Vi(i,e){var t=typeof e,n;return e==null||t==="boolean"?Hi(e):(t==="number"?ee:t==="string"?(n=W7(e))?(e=n,xa):Ew:e instanceof W7?xa:e instanceof Date?bw:KA(e)?JA:Array.isArray(e)?eu:typeof e.valueOf!="function"&&typeof e.toString!="function"||isNaN(e)?ww:ee)(i,e)}function Tw(i,e){return i=+i,e=+e,function(t){return Math.round(i*(1-t)+e*t)}}function Cw(i){return function(){return i}}function Pw(i){return+i}var _a=[0,1];function M6(i){return i}function Wn(i,e){return(e-=i=+i)?function(t){return(t-i)/e}:Cw(isNaN(e)?NaN:.5)}function Rw(i,e){var t;return i>e&&(t=i,i=e,e=t),function(n){return Math.max(i,Math.min(e,n))}}function Lw(i,e,t){var n=i[0],r=i[1],o=e[0],s=e[1];return r<n?(n=Wn(r,n),o=t(s,o)):(n=Wn(n,r),o=t(o,s)),function(a){return o(n(a))}}function Dw(i,e,t){var n=Math.min(i.length,e.length)-1,r=new Array(n),o=new Array(n),s=-1;for(i[n]<i[0]&&(i=i.slice().reverse(),e=e.slice().reverse());++s<n;)r[s]=Wn(i[s],i[s+1]),o[s]=t(e[s],e[s+1]);return function(a){var h=p_(i,a,1,n)-1;return o[h](r[h](a))}}function Iw(i,e){return e.domain(i.domain()).range(i.range()).interpolate(i.interpolate()).clamp(i.clamp()).unknown(i.unknown())}function Bw(){var i=_a,e=_a,t=Vi,n,r,o,s=M6,a,h,f;function d(){var y=Math.min(i.length,e.length);return s!==M6&&(s=Rw(i[0],i[y-1])),a=y>2?Dw:Lw,h=f=null,m}function m(y){return y==null||isNaN(y=+y)?o:(h||(h=a(i.map(n),e,t)))(n(s(y)))}return m.invert=function(y){return s(r((f||(f=a(e,i.map(n),ee)))(y)))},m.domain=function(y){return arguments.length?(i=Array.from(y,Pw),d()):i.slice()},m.range=function(y){return arguments.length?(e=Array.from(y),d()):e.slice()},m.rangeRound=function(y){return e=Array.from(y),t=Tw,d()},m.clamp=function(y){return arguments.length?(s=y?!0:M6,d()):s!==M6},m.interpolate=function(y){return arguments.length?(t=y,d()):t},m.unknown=function(y){return arguments.length?(o=y,m):o},function(y,v){return n=y,r=v,d()}}function Ow(){return Bw()(M6,M6)}function qw(i){return Math.abs(i=Math.round(i))>=1e21?i.toLocaleString("en").replace(/,/g,""):i.toString(10)}function te(i,e){if((t=(i=e?i.toExponential(e-1):i.toExponential()).indexOf("e"))<0)return null;var t,n=i.slice(0,t);return[n.length>1?n[0]+n.slice(2):n,+i.slice(t+1)]}function N6(i){return i=te(Math.abs(i)),i?i[1]:NaN}function Fw(i,e){return function(t,n){for(var r=t.length,o=[],s=0,a=i[0],h=0;r>0&&a>0&&(h+a+1>n&&(a=Math.max(1,n-h)),o.push(t.substring(r-=a,r+a)),!((h+=a+1)>n));)a=i[s=(s+1)%i.length];return o.reverse().join(e)}}function kw(i){return function(e){return e.replace(/[0-9]/g,function(t){return i[+t]})}}var Nw=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ne(i){if(!(e=Nw.exec(i)))throw new Error("invalid format: "+i);var e;return new Wi({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}ne.prototype=Wi.prototype;function Wi(i){this.fill=i.fill===void 0?" ":i.fill+"",this.align=i.align===void 0?">":i.align+"",this.sign=i.sign===void 0?"-":i.sign+"",this.symbol=i.symbol===void 0?"":i.symbol+"",this.zero=!!i.zero,this.width=i.width===void 0?void 0:+i.width,this.comma=!!i.comma,this.precision=i.precision===void 0?void 0:+i.precision,this.trim=!!i.trim,this.type=i.type===void 0?"":i.type+""}Wi.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function Uw(i){e:for(var e=i.length,t=1,n=-1,r;t<e;++t)switch(i[t]){case".":n=r=t;break;case"0":n===0&&(n=t),r=t;break;default:if(!+i[t])break e;n>0&&(n=0);break}return n>0?i.slice(0,n)+i.slice(r+1):i}var tu;function zw(i,e){var t=te(i,e);if(!t)return i+"";var n=t[0],r=t[1],o=r-(tu=Math.max(-8,Math.min(8,Math.floor(r/3)))*3)+1,s=n.length;return o===s?n:o>s?n+new Array(o-s+1).join("0"):o>0?n.slice(0,o)+"."+n.slice(o):"0."+new Array(1-o).join("0")+te(i,Math.max(0,e+o-1))[0]}function ba(i,e){var t=te(i,e);if(!t)return i+"";var n=t[0],r=t[1];return r<0?"0."+new Array(-r).join("0")+n:n.length>r+1?n.slice(0,r+1)+"."+n.slice(r+1):n+new Array(r-n.length+2).join("0")}var wa={"%":(i,e)=>(i*100).toFixed(e),b:i=>Math.round(i).toString(2),c:i=>i+"",d:qw,e:(i,e)=>i.toExponential(e),f:(i,e)=>i.toFixed(e),g:(i,e)=>i.toPrecision(e),o:i=>Math.round(i).toString(8),p:(i,e)=>ba(i*100,e),r:ba,s:zw,X:i=>Math.round(i).toString(16).toUpperCase(),x:i=>Math.round(i).toString(16)};function Ma(i){return i}var Sa=Array.prototype.map,Ea=["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];function Gw(i){var e=i.grouping===void 0||i.thousands===void 0?Ma:Fw(Sa.call(i.grouping,Number),i.thousands+""),t=i.currency===void 0?"":i.currency[0]+"",n=i.currency===void 0?"":i.currency[1]+"",r=i.decimal===void 0?".":i.decimal+"",o=i.numerals===void 0?Ma:kw(Sa.call(i.numerals,String)),s=i.percent===void 0?"%":i.percent+"",a=i.minus===void 0?"\u2212":i.minus+"",h=i.nan===void 0?"NaN":i.nan+"";function f(m){m=ne(m);var y=m.fill,v=m.align,b=m.sign,M=m.symbol,w=m.zero,E=m.width,T=m.comma,C=m.precision,P=m.trim,R=m.type;R==="n"?(T=!0,R="g"):wa[R]||(C===void 0&&(C=12),P=!0,R="g"),(w||y==="0"&&v==="=")&&(w=!0,y="0",v="=");var I=M==="$"?t:M==="#"&&/[boxX]/.test(R)?"0"+R.toLowerCase():"",q=M==="$"?n:/[%p]/.test(R)?s:"",D=wa[R],O=/[defgprs%]/.test(R);C=C===void 0?6:/[gprs]/.test(R)?Math.max(1,Math.min(21,C)):Math.max(0,Math.min(20,C));function k(B){var j=I,Y=q,z,G,X;if(R==="c")Y=D(B)+Y,B="";else{B=+B;var o0=B<0||1/B<0;if(B=isNaN(B)?h:D(Math.abs(B),C),P&&(B=Uw(B)),o0&&+B==0&&b!=="+"&&(o0=!1),j=(o0?b==="("?b:a:b==="-"||b==="("?"":b)+j,Y=(R==="s"?Ea[8+tu/3]:"")+Y+(o0&&b==="("?")":""),O){for(z=-1,G=B.length;++z<G;)if(X=B.charCodeAt(z),48>X||X>57){Y=(X===46?r+B.slice(z+1):B.slice(z))+Y,B=B.slice(0,z);break}}}T&&!w&&(B=e(B,1/0));var a0=j.length+B.length+Y.length,u0=a0<E?new Array(E-a0+1).join(y):"";switch(T&&w&&(B=e(u0+B,u0.length?E-Y.length:1/0),u0=""),v){case"<":B=j+B+Y+u0;break;case"=":B=j+u0+B+Y;break;case"^":B=u0.slice(0,a0=u0.length>>1)+j+B+Y+u0.slice(a0);break;default:B=u0+j+B+Y;break}return o(B)}return k.toString=function(){return m+""},k}function d(m,y){var v=f((m=ne(m),m.type="f",m)),b=Math.max(-8,Math.min(8,Math.floor(N6(y)/3)))*3,M=Math.pow(10,-b),w=Ea[8+b/3];return function(E){return v(M*E)+w}}return{format:f,formatPrefix:d}}var r3,nu,iu;Hw({thousands:",",grouping:[3],currency:["$",""]});function Hw(i){return r3=Gw(i),nu=r3.format,iu=r3.formatPrefix,r3}function Vw(i){return Math.max(0,-N6(Math.abs(i)))}function Ww(i,e){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(N6(e)/3)))*3-N6(Math.abs(i)))}function jw(i,e){return i=Math.abs(i),e=Math.abs(e)-i,Math.max(0,N6(e)-N6(i))+1}function Qw(i,e,t,n){var r=g_(i,e,t),o;switch(n=ne(n==null?",f":n),n.type){case"s":{var s=Math.max(Math.abs(i),Math.abs(e));return n.precision==null&&!isNaN(o=Ww(r,s))&&(n.precision=o),iu(n,s)}case"":case"e":case"g":case"p":case"r":{n.precision==null&&!isNaN(o=jw(r,Math.max(Math.abs(i),Math.abs(e))))&&(n.precision=o-(n.type==="e"));break}case"f":case"%":{n.precision==null&&!isNaN(o=Vw(r))&&(n.precision=o-(n.type==="%")*2);break}}return nu(n)}function $w(i){var e=i.domain;return i.ticks=function(t){var n=e();return m_(n[0],n[n.length-1],t==null?10:t)},i.tickFormat=function(t,n){var r=e();return Qw(r[0],r[r.length-1],t==null?10:t,n)},i.nice=function(t){t==null&&(t=10);var n=e(),r=0,o=n.length-1,s=n[r],a=n[o],h,f,d=10;for(a<s&&(f=s,s=a,a=f,f=r,r=o,o=f);d-- >0;){if(f=xA(s,a,t),f===h)return n[r]=s,n[o]=a,e(n);if(f>0)s=Math.floor(s/f)*f,a=Math.ceil(a/f)*f;else if(f<0)s=Math.ceil(s*f)/f,a=Math.floor(a*f)/f;else break;h=f}return i},i}function U6(){var i=Ow();return i.copy=function(){return Iw(i,U6())},ow.apply(i,arguments),$w(i)}const S4=11102230246251565e-32,N9=134217729,Yw=(3+8*S4)*S4;function qt(i,e,t,n,r){let o,s,a,h,f=e[0],d=n[0],m=0,y=0;d>f==d>-f?(o=f,f=e[++m]):(o=d,d=n[++y]);let v=0;if(m<i&&y<t)for(d>f==d>-f?(s=f+o,a=o-(s-f),f=e[++m]):(s=d+o,a=o-(s-d),d=n[++y]),o=s,a!==0&&(r[v++]=a);m<i&&y<t;)d>f==d>-f?(s=o+f,h=s-o,a=o-(s-h)+(f-h),f=e[++m]):(s=o+d,h=s-o,a=o-(s-h)+(d-h),d=n[++y]),o=s,a!==0&&(r[v++]=a);for(;m<i;)s=o+f,h=s-o,a=o-(s-h)+(f-h),f=e[++m],o=s,a!==0&&(r[v++]=a);for(;y<t;)s=o+d,h=s-o,a=o-(s-h)+(d-h),d=n[++y],o=s,a!==0&&(r[v++]=a);return(o!==0||v===0)&&(r[v++]=o),v}function Xw(i,e){let t=e[0];for(let n=1;n<i;n++)t+=e[n];return t}function n8(i){return new Float64Array(i)}const Zw=(3+16*S4)*S4,Jw=(2+12*S4)*S4,Kw=(9+64*S4)*S4*S4,A6=n8(4),Ta=n8(8),Ca=n8(12),Pa=n8(16),j9=n8(4);function eM(i,e,t,n,r,o,s){let a,h,f,d,m,y,v,b,M,w,E,T,C,P,R,I,q,D;const O=i-r,k=t-r,B=e-o,j=n-o;P=O*j,y=N9*O,v=y-(y-O),b=O-v,y=N9*j,M=y-(y-j),w=j-M,R=b*w-(P-v*M-b*M-v*w),I=B*k,y=N9*B,v=y-(y-B),b=B-v,y=N9*k,M=y-(y-k),w=k-M,q=b*w-(I-v*M-b*M-v*w),E=R-q,m=R-E,A6[0]=R-(E+m)+(m-q),T=P+E,m=T-P,C=P-(T-m)+(E-m),E=C-I,m=C-E,A6[1]=C-(E+m)+(m-I),D=T+E,m=D-T,A6[2]=T-(D-m)+(E-m),A6[3]=D;let Y=Xw(4,A6),z=Jw*s;if(Y>=z||-Y>=z||(m=i-O,a=i-(O+m)+(m-r),m=t-k,f=t-(k+m)+(m-r),m=e-B,h=e-(B+m)+(m-o),m=n-j,d=n-(j+m)+(m-o),a===0&&h===0&&f===0&&d===0)||(z=Kw*s+Yw*Math.abs(Y),Y+=O*d+j*a-(B*f+k*h),Y>=z||-Y>=z))return Y;P=a*j,y=N9*a,v=y-(y-a),b=a-v,y=N9*j,M=y-(y-j),w=j-M,R=b*w-(P-v*M-b*M-v*w),I=h*k,y=N9*h,v=y-(y-h),b=h-v,y=N9*k,M=y-(y-k),w=k-M,q=b*w-(I-v*M-b*M-v*w),E=R-q,m=R-E,j9[0]=R-(E+m)+(m-q),T=P+E,m=T-P,C=P-(T-m)+(E-m),E=C-I,m=C-E,j9[1]=C-(E+m)+(m-I),D=T+E,m=D-T,j9[2]=T-(D-m)+(E-m),j9[3]=D;const G=qt(4,A6,4,j9,Ta);P=O*d,y=N9*O,v=y-(y-O),b=O-v,y=N9*d,M=y-(y-d),w=d-M,R=b*w-(P-v*M-b*M-v*w),I=B*f,y=N9*B,v=y-(y-B),b=B-v,y=N9*f,M=y-(y-f),w=f-M,q=b*w-(I-v*M-b*M-v*w),E=R-q,m=R-E,j9[0]=R-(E+m)+(m-q),T=P+E,m=T-P,C=P-(T-m)+(E-m),E=C-I,m=C-E,j9[1]=C-(E+m)+(m-I),D=T+E,m=D-T,j9[2]=T-(D-m)+(E-m),j9[3]=D;const X=qt(G,Ta,4,j9,Ca);P=a*d,y=N9*a,v=y-(y-a),b=a-v,y=N9*d,M=y-(y-d),w=d-M,R=b*w-(P-v*M-b*M-v*w),I=h*f,y=N9*h,v=y-(y-h),b=h-v,y=N9*f,M=y-(y-f),w=f-M,q=b*w-(I-v*M-b*M-v*w),E=R-q,m=R-E,j9[0]=R-(E+m)+(m-q),T=P+E,m=T-P,C=P-(T-m)+(E-m),E=C-I,m=C-E,j9[1]=C-(E+m)+(m-I),D=T+E,m=D-T,j9[2]=T-(D-m)+(E-m),j9[3]=D;const o0=qt(X,Ca,4,j9,Pa);return Pa[o0-1]}function o3(i,e,t,n,r,o){const s=(e-o)*(t-r),a=(i-r)*(n-o),h=s-a;if(s===0||a===0||s>0!=a>0)return h;const f=Math.abs(s+a);return Math.abs(h)>=Zw*f?h:-eM(i,e,t,n,r,o,f)}const Ra=Math.pow(2,-52),s3=new Uint32Array(512);class j7{static from(e,t=oM,n=sM){const r=e.length,o=new Float64Array(r*2);for(let s=0;s<r;s++){const a=e[s];o[2*s]=t(a),o[2*s+1]=n(a)}return new j7(o)}constructor(e){const t=e.length>>1;if(t>0&&typeof e[0]!="number")throw new Error("Expected coords to contain numbers.");this.coords=e;const n=Math.max(2*t-5,0);this._triangles=new Uint32Array(n*3),this._halfedges=new Int32Array(n*3),this._hashSize=Math.ceil(Math.sqrt(t)),this._hullPrev=new Uint32Array(t),this._hullNext=new Uint32Array(t),this._hullTri=new Uint32Array(t),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(t),this._dists=new Float64Array(t),this.update()}update(){const{coords:e,_hullPrev:t,_hullNext:n,_hullTri:r,_hullHash:o}=this,s=e.length>>1;let a=1/0,h=1/0,f=-1/0,d=-1/0;for(let k=0;k<s;k++){const B=e[2*k],j=e[2*k+1];B<a&&(a=B),j<h&&(h=j),B>f&&(f=B),j>d&&(d=j),this._ids[k]=k}const m=(a+f)/2,y=(h+d)/2;let v=1/0,b,M,w;for(let k=0;k<s;k++){const B=Ft(m,y,e[2*k],e[2*k+1]);B<v&&(b=k,v=B)}const E=e[2*b],T=e[2*b+1];v=1/0;for(let k=0;k<s;k++){if(k===b)continue;const B=Ft(E,T,e[2*k],e[2*k+1]);B<v&&B>0&&(M=k,v=B)}let C=e[2*M],P=e[2*M+1],R=1/0;for(let k=0;k<s;k++){if(k===b||k===M)continue;const B=iM(E,T,C,P,e[2*k],e[2*k+1]);B<R&&(w=k,R=B)}let I=e[2*w],q=e[2*w+1];if(R===1/0){for(let j=0;j<s;j++)this._dists[j]=e[2*j]-e[0]||e[2*j+1]-e[1];S6(this._ids,this._dists,0,s-1);const k=new Uint32Array(s);let B=0;for(let j=0,Y=-1/0;j<s;j++){const z=this._ids[j];this._dists[z]>Y&&(k[B++]=z,Y=this._dists[z])}this.hull=k.subarray(0,B),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}if(o3(E,T,C,P,I,q)<0){const k=M,B=C,j=P;M=w,C=I,P=q,w=k,I=B,q=j}const D=rM(E,T,C,P,I,q);this._cx=D.x,this._cy=D.y;for(let k=0;k<s;k++)this._dists[k]=Ft(e[2*k],e[2*k+1],D.x,D.y);S6(this._ids,this._dists,0,s-1),this._hullStart=b;let O=3;n[b]=t[w]=M,n[M]=t[b]=w,n[w]=t[M]=b,r[b]=0,r[M]=1,r[w]=2,o.fill(-1),o[this._hashKey(E,T)]=b,o[this._hashKey(C,P)]=M,o[this._hashKey(I,q)]=w,this.trianglesLen=0,this._addTriangle(b,M,w,-1,-1,-1);for(let k=0,B,j;k<this._ids.length;k++){const Y=this._ids[k],z=e[2*Y],G=e[2*Y+1];if(k>0&&Math.abs(z-B)<=Ra&&Math.abs(G-j)<=Ra||(B=z,j=G,Y===b||Y===M||Y===w))continue;let X=0;for(let b0=0,i0=this._hashKey(z,G);b0<this._hashSize&&(X=o[(i0+b0)%this._hashSize],!(X!==-1&&X!==n[X]));b0++);X=t[X];let o0=X,a0;for(;a0=n[o0],o3(z,G,e[2*o0],e[2*o0+1],e[2*a0],e[2*a0+1])>=0;)if(o0=a0,o0===X){o0=-1;break}if(o0===-1)continue;let u0=this._addTriangle(o0,Y,n[o0],-1,-1,r[o0]);r[Y]=this._legalize(u0+2),r[o0]=u0,O++;let l0=n[o0];for(;a0=n[l0],o3(z,G,e[2*l0],e[2*l0+1],e[2*a0],e[2*a0+1])<0;)u0=this._addTriangle(l0,Y,a0,r[Y],-1,r[l0]),r[Y]=this._legalize(u0+2),n[l0]=l0,O--,l0=a0;if(o0===X)for(;a0=t[o0],o3(z,G,e[2*a0],e[2*a0+1],e[2*o0],e[2*o0+1])<0;)u0=this._addTriangle(a0,Y,o0,-1,r[o0],r[a0]),this._legalize(u0+2),r[a0]=u0,n[o0]=o0,O--,o0=a0;this._hullStart=t[Y]=o0,n[o0]=t[l0]=Y,n[Y]=l0,o[this._hashKey(z,G)]=Y,o[this._hashKey(e[2*o0],e[2*o0+1])]=o0}this.hull=new Uint32Array(O);for(let k=0,B=this._hullStart;k<O;k++)this.hull[k]=B,B=n[B];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(e,t){return Math.floor(tM(e-this._cx,t-this._cy)*this._hashSize)%this._hashSize}_legalize(e){const{_triangles:t,_halfedges:n,coords:r}=this;let o=0,s=0;for(;;){const a=n[e],h=e-e%3;if(s=h+(e+2)%3,a===-1){if(o===0)break;e=s3[--o];continue}const f=a-a%3,d=h+(e+1)%3,m=f+(a+2)%3,y=t[s],v=t[e],b=t[d],M=t[m];if(nM(r[2*y],r[2*y+1],r[2*v],r[2*v+1],r[2*b],r[2*b+1],r[2*M],r[2*M+1])){t[e]=M,t[a]=y;const E=n[m];if(E===-1){let C=this._hullStart;do{if(this._hullTri[C]===m){this._hullTri[C]=e;break}C=this._hullPrev[C]}while(C!==this._hullStart)}this._link(e,E),this._link(a,n[s]),this._link(s,m);const T=f+(a+1)%3;o<s3.length&&(s3[o++]=T)}else{if(o===0)break;e=s3[--o]}}return s}_link(e,t){this._halfedges[e]=t,t!==-1&&(this._halfedges[t]=e)}_addTriangle(e,t,n,r,o,s){const a=this.trianglesLen;return this._triangles[a]=e,this._triangles[a+1]=t,this._triangles[a+2]=n,this._link(a,r),this._link(a+1,o),this._link(a+2,s),this.trianglesLen+=3,a}}function tM(i,e){const t=i/(Math.abs(i)+Math.abs(e));return(e>0?3-t:1+t)/4}function Ft(i,e,t,n){const r=i-t,o=e-n;return r*r+o*o}function nM(i,e,t,n,r,o,s,a){const h=i-s,f=e-a,d=t-s,m=n-a,y=r-s,v=o-a,b=h*h+f*f,M=d*d+m*m,w=y*y+v*v;return h*(m*w-M*v)-f*(d*w-M*y)+b*(d*v-m*y)<0}function iM(i,e,t,n,r,o){const s=t-i,a=n-e,h=r-i,f=o-e,d=s*s+a*a,m=h*h+f*f,y=.5/(s*f-a*h),v=(f*d-a*m)*y,b=(s*m-h*d)*y;return v*v+b*b}function rM(i,e,t,n,r,o){const s=t-i,a=n-e,h=r-i,f=o-e,d=s*s+a*a,m=h*h+f*f,y=.5/(s*f-a*h),v=i+(f*d-a*m)*y,b=e+(s*m-h*d)*y;return{x:v,y:b}}function S6(i,e,t,n){if(n-t<=20)for(let r=t+1;r<=n;r++){const o=i[r],s=e[o];let a=r-1;for(;a>=t&&e[i[a]]>s;)i[a+1]=i[a--];i[a+1]=o}else{const r=t+n>>1;let o=t+1,s=n;f7(i,r,o),e[i[t]]>e[i[n]]&&f7(i,t,n),e[i[o]]>e[i[n]]&&f7(i,o,n),e[i[t]]>e[i[o]]&&f7(i,t,o);const a=i[o],h=e[a];for(;;){do o++;while(e[i[o]]<h);do s--;while(e[i[s]]>h);if(s<o)break;f7(i,o,s)}i[t+1]=i[s],i[s]=a,n-o+1>=s-t?(S6(i,e,o,n),S6(i,e,t,s-1)):(S6(i,e,t,s-1),S6(i,e,o,n))}}function f7(i,e,t){const n=i[e];i[e]=i[t],i[t]=n}function oM(i){return i[0]}function sM(i){return i[1]}function aM(i){if(!i)throw new Error("coord is required");if(!Array.isArray(i)){if(i.type==="Feature"&&i.geometry!==null&&i.geometry.type==="Point")return i.geometry.coordinates;if(i.type==="Point")return i.coordinates}if(Array.isArray(i)&&i.length>=2&&!Array.isArray(i[0])&&!Array.isArray(i[1]))return i;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function lM(i){return i.type==="Feature"?i.geometry:i}function AM(i,e,t){if(t===void 0&&(t={}),!i)throw new Error("point is required");if(!e)throw new Error("polygon is required");var n=aM(i),r=lM(e),o=r.type,s=e.bbox,a=r.coordinates;if(s&&uM(n,s)===!1)return!1;o==="Polygon"&&(a=[a]);for(var h=!1,f=0;f<a.length&&!h;f++)if(La(n,a[f][0],t.ignoreBoundary)){for(var d=!1,m=1;m<a[f].length&&!d;)La(n,a[f][m],!t.ignoreBoundary)&&(d=!0),m++;d||(h=!0)}return h}function La(i,e,t){var n=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var r=0,o=e.length-1;r<e.length;o=r++){var s=e[r][0],a=e[r][1],h=e[o][0],f=e[o][1],d=i[1]*(s-h)+a*(h-i[0])+f*(i[0]-s)===0&&(s-i[0])*(h-i[0])<=0&&(a-i[1])*(f-i[1])<=0;if(d)return!t;var m=a>i[1]!=f>i[1]&&i[0]<(h-s)*(i[1]-a)/(f-a)+s;m&&(n=!n)}return n}function uM(i,e){return e[0]<=i[0]&&e[1]<=i[1]&&e[2]>=i[0]&&e[3]>=i[1]}const Da=1e-6;class R5{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(e,t){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(e,t){this._+=`L${this._x1=+e},${this._y1=+t}`}arc(e,t,n){e=+e,t=+t,n=+n;const r=e+n,o=t;if(n<0)throw new Error("negative radius");this._x1===null?this._+=`M${r},${o}`:(Math.abs(this._x1-r)>Da||Math.abs(this._y1-o)>Da)&&(this._+="L"+r+","+o),n&&(this._+=`A${n},${n},0,1,1,${e-n},${t}A${n},${n},0,1,1,${this._x1=r},${this._y1=o}`)}rect(e,t,n,r){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}h${+n}v${+r}h${-n}Z`}value(){return this._||null}}class jn{constructor(){this._=[]}moveTo(e,t){this._.push([e,t])}closePath(){this._.push(this._[0].slice())}lineTo(e,t){this._.push([e,t])}value(){return this._.length?this._:null}}class cM{constructor(e,[t,n,r,o]=[0,0,960,500]){if(!((r=+r)>=(t=+t))||!((o=+o)>=(n=+n)))throw new Error("invalid bounds");this.delaunay=e,this._circumcenters=new Float64Array(e.points.length*2),this.vectors=new Float64Array(e.points.length*2),this.xmax=r,this.xmin=t,this.ymax=o,this.ymin=n,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:e,hull:t,triangles:n},vectors:r}=this,o=this.circumcenters=this._circumcenters.subarray(0,n.length/3*2);for(let v=0,b=0,M=n.length,w,E;v<M;v+=3,b+=2){const T=n[v]*2,C=n[v+1]*2,P=n[v+2]*2,R=e[T],I=e[T+1],q=e[C],D=e[C+1],O=e[P],k=e[P+1],B=q-R,j=D-I,Y=O-R,z=k-I,G=(B*z-j*Y)*2;if(Math.abs(G)<1e-9){let X=1e9;const o0=n[0]*2;X*=Math.sign((e[o0]-R)*z-(e[o0+1]-I)*Y),w=(R+O)/2-X*z,E=(I+k)/2+X*Y}else{const X=1/G,o0=B*B+j*j,a0=Y*Y+z*z;w=R+(z*o0-j*a0)*X,E=I+(B*a0-Y*o0)*X}o[b]=w,o[b+1]=E}let s=t[t.length-1],a,h=s*4,f,d=e[2*s],m,y=e[2*s+1];r.fill(0);for(let v=0;v<t.length;++v)s=t[v],a=h,f=d,m=y,h=s*4,d=e[2*s],y=e[2*s+1],r[a+2]=r[h]=m-y,r[a+3]=r[h+1]=d-f}render(e){const t=e==null?e=new R5:void 0,{delaunay:{halfedges:n,inedges:r,hull:o},circumcenters:s,vectors:a}=this;if(o.length<=1)return null;for(let d=0,m=n.length;d<m;++d){const y=n[d];if(y<d)continue;const v=Math.floor(d/3)*2,b=Math.floor(y/3)*2,M=s[v],w=s[v+1],E=s[b],T=s[b+1];this._renderSegment(M,w,E,T,e)}let h,f=o[o.length-1];for(let d=0;d<o.length;++d){h=f,f=o[d];const m=Math.floor(r[f]/3)*2,y=s[m],v=s[m+1],b=h*4,M=this._project(y,v,a[b+2],a[b+3]);M&&this._renderSegment(y,v,M[0],M[1],e)}return t&&t.value()}renderBounds(e){const t=e==null?e=new R5:void 0;return e.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),t&&t.value()}renderCell(e,t){const n=t==null?t=new R5:void 0,r=this._clip(e);if(r===null||!r.length)return;t.moveTo(r[0],r[1]);let o=r.length;for(;r[0]===r[o-2]&&r[1]===r[o-1]&&o>1;)o-=2;for(let s=2;s<o;s+=2)(r[s]!==r[s-2]||r[s+1]!==r[s-1])&&t.lineTo(r[s],r[s+1]);return t.closePath(),n&&n.value()}*cellPolygons(){const{delaunay:{points:e}}=this;for(let t=0,n=e.length/2;t<n;++t){const r=this.cellPolygon(t);r&&(r.index=t,yield r)}}cellPolygon(e){const t=new jn;return this.renderCell(e,t),t.value()}_renderSegment(e,t,n,r,o){let s;const a=this._regioncode(e,t),h=this._regioncode(n,r);a===0&&h===0?(o.moveTo(e,t),o.lineTo(n,r)):(s=this._clipSegment(e,t,n,r,a,h))&&(o.moveTo(s[0],s[1]),o.lineTo(s[2],s[3]))}contains(e,t,n){return t=+t,t!==t||(n=+n,n!==n)?!1:this.delaunay._step(e,t,n)===e}*neighbors(e){const t=this._clip(e);if(t)for(const n of this.delaunay.neighbors(e)){const r=this._clip(n);if(r)e:for(let o=0,s=t.length;o<s;o+=2)for(let a=0,h=r.length;a<h;a+=2)if(t[o]==r[a]&&t[o+1]==r[a+1]&&t[(o+2)%s]==r[(a+h-2)%h]&&t[(o+3)%s]==r[(a+h-1)%h]){yield n;break e}}}_cell(e){const{circumcenters:t,delaunay:{inedges:n,halfedges:r,triangles:o}}=this,s=n[e];if(s===-1)return null;const a=[];let h=s;do{const f=Math.floor(h/3);if(a.push(t[f*2],t[f*2+1]),h=h%3===2?h-2:h+1,o[h]!==e)break;h=r[h]}while(h!==s&&h!==-1);return a}_clip(e){if(e===0&&this.delaunay.hull.length===1)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const t=this._cell(e);if(t===null)return null;const{vectors:n}=this,r=e*4;return n[r]||n[r+1]?this._clipInfinite(e,t,n[r],n[r+1],n[r+2],n[r+3]):this._clipFinite(e,t)}_clipFinite(e,t){const n=t.length;let r=null,o,s,a=t[n-2],h=t[n-1],f,d=this._regioncode(a,h),m,y=0;for(let v=0;v<n;v+=2)if(o=a,s=h,a=t[v],h=t[v+1],f=d,d=this._regioncode(a,h),f===0&&d===0)m=y,y=0,r?r.push(a,h):r=[a,h];else{let b,M,w,E,T;if(f===0){if((b=this._clipSegment(o,s,a,h,f,d))===null)continue;[M,w,E,T]=b}else{if((b=this._clipSegment(a,h,o,s,d,f))===null)continue;[E,T,M,w]=b,m=y,y=this._edgecode(M,w),m&&y&&this._edge(e,m,y,r,r.length),r?r.push(M,w):r=[M,w]}m=y,y=this._edgecode(E,T),m&&y&&this._edge(e,m,y,r,r.length),r?r.push(E,T):r=[E,T]}if(r)m=y,y=this._edgecode(r[0],r[1]),m&&y&&this._edge(e,m,y,r,r.length);else if(this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return r}_clipSegment(e,t,n,r,o,s){for(;;){if(o===0&&s===0)return[e,t,n,r];if(o&s)return null;let a,h,f=o||s;f&8?(a=e+(n-e)*(this.ymax-t)/(r-t),h=this.ymax):f&4?(a=e+(n-e)*(this.ymin-t)/(r-t),h=this.ymin):f&2?(h=t+(r-t)*(this.xmax-e)/(n-e),a=this.xmax):(h=t+(r-t)*(this.xmin-e)/(n-e),a=this.xmin),o?(e=a,t=h,o=this._regioncode(e,t)):(n=a,r=h,s=this._regioncode(n,r))}}_clipInfinite(e,t,n,r,o,s){let a=Array.from(t),h;if((h=this._project(a[0],a[1],n,r))&&a.unshift(h[0],h[1]),(h=this._project(a[a.length-2],a[a.length-1],o,s))&&a.push(h[0],h[1]),a=this._clipFinite(e,a))for(let f=0,d=a.length,m,y=this._edgecode(a[d-2],a[d-1]);f<d;f+=2)m=y,y=this._edgecode(a[f],a[f+1]),m&&y&&(f=this._edge(e,m,y,a,f),d=a.length);else this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(a=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return a}_edge(e,t,n,r,o){for(;t!==n;){let s,a;switch(t){case 5:t=4;continue;case 4:t=6,s=this.xmax,a=this.ymin;break;case 6:t=2;continue;case 2:t=10,s=this.xmax,a=this.ymax;break;case 10:t=8;continue;case 8:t=9,s=this.xmin,a=this.ymax;break;case 9:t=1;continue;case 1:t=5,s=this.xmin,a=this.ymin;break}(r[o]!==s||r[o+1]!==a)&&this.contains(e,s,a)&&(r.splice(o,0,s,a),o+=2)}if(r.length>4)for(let s=0;s<r.length;s+=2){const a=(s+2)%r.length,h=(s+4)%r.length;(r[s]===r[a]&&r[a]===r[h]||r[s+1]===r[a+1]&&r[a+1]===r[h+1])&&(r.splice(a,2),s-=2)}return o}_project(e,t,n,r){let o=1/0,s,a,h;if(r<0){if(t<=this.ymin)return null;(s=(this.ymin-t)/r)<o&&(h=this.ymin,a=e+(o=s)*n)}else if(r>0){if(t>=this.ymax)return null;(s=(this.ymax-t)/r)<o&&(h=this.ymax,a=e+(o=s)*n)}if(n>0){if(e>=this.xmax)return null;(s=(this.xmax-e)/n)<o&&(a=this.xmax,h=t+(o=s)*r)}else if(n<0){if(e<=this.xmin)return null;(s=(this.xmin-e)/n)<o&&(a=this.xmin,h=t+(o=s)*r)}return[a,h]}_edgecode(e,t){return(e===this.xmin?1:e===this.xmax?2:0)|(t===this.ymin?4:t===this.ymax?8:0)}_regioncode(e,t){return(e<this.xmin?1:e>this.xmax?2:0)|(t<this.ymin?4:t>this.ymax?8:0)}}const fM=2*Math.PI,u6=Math.pow;function hM(i){return i[0]}function dM(i){return i[1]}function pM(i){const{triangles:e,coords:t}=i;for(let n=0;n<e.length;n+=3){const r=2*e[n],o=2*e[n+1],s=2*e[n+2];if((t[s]-t[r])*(t[o+1]-t[r+1])-(t[o]-t[r])*(t[s+1]-t[r+1])>1e-10)return!1}return!0}function mM(i,e,t){return[i+Math.sin(i+e)*t,e+Math.cos(i-e)*t]}class ji{static from(e,t=hM,n=dM,r){return new ji("length"in e?gM(e,t,n,r):Float64Array.from(yM(e,t,n,r)))}constructor(e){this._delaunator=new j7(e),this.inedges=new Int32Array(e.length/2),this._hullIndex=new Int32Array(e.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const e=this._delaunator,t=this.points;if(e.hull&&e.hull.length>2&&pM(e)){this.collinear=Int32Array.from({length:t.length/2},(y,v)=>v).sort((y,v)=>t[2*y]-t[2*v]||t[2*y+1]-t[2*v+1]);const h=this.collinear[0],f=this.collinear[this.collinear.length-1],d=[t[2*h],t[2*h+1],t[2*f],t[2*f+1]],m=1e-8*Math.hypot(d[3]-d[1],d[2]-d[0]);for(let y=0,v=t.length/2;y<v;++y){const b=mM(t[2*y],t[2*y+1],m);t[2*y]=b[0],t[2*y+1]=b[1]}this._delaunator=new j7(t)}else delete this.collinear;const n=this.halfedges=this._delaunator.halfedges,r=this.hull=this._delaunator.hull,o=this.triangles=this._delaunator.triangles,s=this.inedges.fill(-1),a=this._hullIndex.fill(-1);for(let h=0,f=n.length;h<f;++h){const d=o[h%3===2?h-2:h+1];(n[h]===-1||s[d]===-1)&&(s[d]=h)}for(let h=0,f=r.length;h<f;++h)a[r[h]]=h;r.length<=2&&r.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=r[0],s[r[0]]=1,r.length===2&&(s[r[1]]=0,this.triangles[1]=r[1],this.triangles[2]=r[1]))}voronoi(e){return new cM(this,e)}*neighbors(e){const{inedges:t,hull:n,_hullIndex:r,halfedges:o,triangles:s,collinear:a}=this;if(a){const m=a.indexOf(e);m>0&&(yield a[m-1]),m<a.length-1&&(yield a[m+1]);return}const h=t[e];if(h===-1)return;let f=h,d=-1;do{if(yield d=s[f],f=f%3===2?f-2:f+1,s[f]!==e)return;if(f=o[f],f===-1){const m=n[(r[e]+1)%n.length];m!==d&&(yield m);return}}while(f!==h)}find(e,t,n=0){if(e=+e,e!==e||(t=+t,t!==t))return-1;const r=n;let o;for(;(o=this._step(n,e,t))>=0&&o!==n&&o!==r;)n=o;return o}_step(e,t,n){const{inedges:r,hull:o,_hullIndex:s,halfedges:a,triangles:h,points:f}=this;if(r[e]===-1||!f.length)return(e+1)%(f.length>>1);let d=e,m=u6(t-f[e*2],2)+u6(n-f[e*2+1],2);const y=r[e];let v=y;do{let b=h[v];const M=u6(t-f[b*2],2)+u6(n-f[b*2+1],2);if(M<m&&(m=M,d=b),v=v%3===2?v-2:v+1,h[v]!==e)break;if(v=a[v],v===-1){if(v=o[(s[e]+1)%o.length],v!==b&&u6(t-f[v*2],2)+u6(n-f[v*2+1],2)<m)return v;break}}while(v!==y);return d}render(e){const t=e==null?e=new R5:void 0,{points:n,halfedges:r,triangles:o}=this;for(let s=0,a=r.length;s<a;++s){const h=r[s];if(h<s)continue;const f=o[s]*2,d=o[h]*2;e.moveTo(n[f],n[f+1]),e.lineTo(n[d],n[d+1])}return this.renderHull(e),t&&t.value()}renderPoints(e,t){t===void 0&&(!e||typeof e.moveTo!="function")&&(t=e,e=null),t=t==null?2:+t;const n=e==null?e=new R5:void 0,{points:r}=this;for(let o=0,s=r.length;o<s;o+=2){const a=r[o],h=r[o+1];e.moveTo(a+t,h),e.arc(a,h,t,0,fM)}return n&&n.value()}renderHull(e){const t=e==null?e=new R5:void 0,{hull:n,points:r}=this,o=n[0]*2,s=n.length;e.moveTo(r[o],r[o+1]);for(let a=1;a<s;++a){const h=2*n[a];e.lineTo(r[h],r[h+1])}return e.closePath(),t&&t.value()}hullPolygon(){const e=new jn;return this.renderHull(e),e.value()}renderTriangle(e,t){const n=t==null?t=new R5:void 0,{points:r,triangles:o}=this,s=o[e*=3]*2,a=o[e+1]*2,h=o[e+2]*2;return t.moveTo(r[s],r[s+1]),t.lineTo(r[a],r[a+1]),t.lineTo(r[h],r[h+1]),t.closePath(),n&&n.value()}*trianglePolygons(){const{triangles:e}=this;for(let t=0,n=e.length/3;t<n;++t)yield this.trianglePolygon(t)}trianglePolygon(e){const t=new jn;return this.renderTriangle(e,t),t.value()}}function gM(i,e,t,n){const r=i.length,o=new Float64Array(r*2);for(let s=0;s<r;++s){const a=i[s];o[s*2]=e.call(n,a,s,i),o[s*2+1]=t.call(n,a,s,i)}return o}function*yM(i,e,t,n){let r=0;for(const o of i)yield e.call(n,o,r,i),yield t.call(n,o,r,i),++r}const Qi=Math.PI,Ia=Qi/2,Ba=180/Qi,Oa=Qi/180,vM=Math.atan2,qa=Math.cos,xM=Math.max,_M=Math.min,Fa=Math.sin,bM=Math.sign||function(i){return i>0?1:i<0?-1:0},ru=Math.sqrt;function wM(i){return i>1?Ia:i<-1?-Ia:Math.asin(i)}function ou(i,e){return i[0]*e[0]+i[1]*e[1]+i[2]*e[2]}function m2(i,e){return[i[1]*e[2]-i[2]*e[1],i[2]*e[0]-i[0]*e[2],i[0]*e[1]-i[1]*e[0]]}function ie(i,e){return[i[0]+e[0],i[1]+e[1],i[2]+e[2]]}function re(i){var e=ru(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]);return[i[0]/e,i[1]/e,i[2]/e]}function $i(i){return[vM(i[1],i[0])*Ba,wM(xM(-1,_M(1,i[2])))*Ba]}function r4(i){const e=i[0]*Oa,t=i[1]*Oa,n=qa(t);return[n*qa(e),n*Fa(e),Fa(t)]}function Yi(i){return i=i.map(e=>r4(e)),ou(i[0],m2(i[2],i[1]))}function MM(i){const e=EM(i),t=CM(e),n=TM(t,i),r=RM(t,i.length),o=SM(r,i),s=PM(t,i),{polygons:a,centers:h}=LM(s,t,i),f=DM(a),d=BM(t,i),m=IM(n,t);return{delaunay:e,edges:n,triangles:t,centers:h,neighbors:r,polygons:a,mesh:f,hull:d,urquhart:m,find:o}}function SM(i,e){function t(n,r){let o=n[0]-r[0],s=n[1]-r[1],a=n[2]-r[2];return o*o+s*s+a*a}return function(r,o,s){s===void 0&&(s=0);let a,h,f=s;const d=r4([r,o]);do a=s,s=null,h=t(d,r4(e[a])),i[a].forEach(m=>{let y=t(d,r4(e[m]));if(y<h){h=y,s=m,f=m;return}});while(s!==null);return f}}function EM(i){if(i.length<2)return{};let e=0;for(;isNaN(i[e][0]+i[e][1])&&e++<i.length;);const t=I_(i[e]),n=hb().translate([0,0]).scale(1).rotate(t.invert([180,0]));i=i.map(n);const r=[];let o=1;for(let m=0,y=i.length;m<y;m++){let v=i[m][0]**2+i[m][1]**2;!isFinite(v)||v>1e32?r.push(m):v>o&&(o=v)}const s=1e6*ru(o);r.forEach(m=>i[m]=[s,0]),i.push([0,s]),i.push([-s,0]),i.push([0,-s]);const a=ji.from(i);a.projection=n;const{triangles:h,halfedges:f,inedges:d}=a;for(let m=0,y=f.length;m<y;m++)if(f[m]<0){const v=m%3==2?m-2:m+1,b=m%3==0?m+2:m-1,M=f[v],w=f[b];f[M]=w,f[w]=M,f[v]=f[b]=-1,h[m]=h[v]=h[b]=e,d[h[M]]=M%3==0?M+2:M-1,d[h[w]]=w%3==0?w+2:w-1,m+=2-m%3}else h[m]>i.length-3-1&&(h[m]=e);return a}function TM(i,e){const t=new Set;return e.length===2?[[0,1]]:(i.forEach(n=>{if(n[0]!==n[1]&&!(Yi(n.map(r=>e[r]))<0))for(let r=0,o;r<3;r++)o=(r+1)%3,t.add(I3([n[r],n[o]]).join("-"))}),Array.from(t,n=>n.split("-").map(Number)))}function CM(i){const{triangles:e}=i;if(!e)return[];const t=[];for(let n=0,r=e.length/3;n<r;n++){const o=e[3*n],s=e[3*n+1],a=e[3*n+2];o!==s&&s!==a&&t.push([o,a,s])}return t}function PM(i,e){return i.map(t=>{const n=t.map(o=>e[o]).map(r4),r=ie(ie(m2(n[1],n[0]),m2(n[2],n[1])),m2(n[0],n[2]));return $i(re(r))})}function RM(i,e){const t=[];return i.forEach(n=>{for(let r=0;r<3;r++){const o=n[r],s=n[(r+1)%3];t[o]=t[o]||[],t[o].push(s)}}),i.length===0&&(e===2?(t[0]=[1],t[1]=[0]):e===1&&(t[0]=[])),t}function LM(i,e,t){const n=[],r=i.slice();if(e.length===0){if(t.length<2)return{polygons:n,centers:r};if(t.length===2){const a=r4(t[0]),h=r4(t[1]),f=re(ie(a,h)),d=re(m2(a,h)),m=m2(f,d),y=[f,m2(f,m),m2(m2(f,m),m),m2(m2(m2(f,m),m),m)].map($i).map(s);return n.push(y),n.push(y.slice().reverse()),{polygons:n,centers:r}}}e.forEach((a,h)=>{for(let f=0;f<3;f++){const d=a[f],m=a[(f+1)%3],y=a[(f+2)%3];n[d]=n[d]||[],n[d].push([m,y,h,[d,m,y]])}});const o=n.map(a=>{const h=[a[0][2]];let f=a[0][1];for(let d=1;d<a.length;d++)for(let m=0;m<a.length;m++)if(a[m][0]==f){f=a[m][1],h.push(a[m][2]);break}if(h.length>2)return h;if(h.length==2){const d=ka(t[a[0][3][0]],t[a[0][3][1]],r[h[0]]),m=ka(t[a[0][3][2]],t[a[0][3][0]],r[h[0]]),y=s(d),v=s(m);return[h[0],v,h[1],y]}});function s(a){let h=-1;return r.slice(e.length,1/0).forEach((f,d)=>{f[0]===a[0]&&f[1]===a[1]&&(h=d+e.length)}),h<0&&(h=r.length,r.push(a)),h}return{polygons:o,centers:r}}function ka(i,e,t){i=r4(i),e=r4(e),t=r4(t);const n=bM(ou(m2(e,i),t));return $i(re(ie(i,e)).map(r=>n*r))}function DM(i){const e=[];return i.forEach(t=>{if(!t)return;let n=t[t.length-1];for(let r of t)r>n&&e.push([n,r]),n=r}),e}function IM(i,e){return function(t){const n=new Map,r=new Map;return i.forEach((o,s)=>{const a=o.join("-");n.set(a,t[s]),r.set(a,!0)}),e.forEach(o=>{let s=0,a=-1;for(let h=0;h<3;h++){let f=I3([o[h],o[(h+1)%3]]).join("-");n.get(f)>s&&(s=n.get(f),a=f)}r.set(a,!1)}),i.map(o=>r.get(o.join("-")))}}function BM(i,e){const t=new Set,n=[];i.map(a=>{if(!(Yi(a.map(h=>e[h>e.length?0:h]))>1e-12))for(let h=0;h<3;h++){let f=[a[h],a[(h+1)%3]],d=`${f[0]}-${f[1]}`;t.has(d)?t.delete(d):t.add(`${f[1]}-${f[0]}`)}});const r=new Map;let o;if(t.forEach(a=>{a=a.split("-").map(Number),r.set(a[0],a[1]),o=a[0]}),o===void 0)return n;let s=o;do{n.push(s);let a=r.get(s);r.set(s,-1),s=a}while(s>-1&&s!==o);return n}function OM(i){const e=function(t){if(e.delaunay=null,e._data=t,typeof e._data=="object"&&e._data.type==="FeatureCollection"&&(e._data=e._data.features),typeof e._data=="object"){const n=e._data.map(r=>[e._vx(r),e._vy(r),r]).filter(r=>isFinite(r[0]+r[1]));e.points=n.map(r=>[r[0],r[1]]),e.valid=n.map(r=>r[2]),e.delaunay=MM(e.points)}return e};return e._vx=function(t){if(typeof t=="object"&&"type"in t)return Hs(t)[0];if(0 in t)return t[0]},e._vy=function(t){if(typeof t=="object"&&"type"in t)return Hs(t)[1];if(1 in t)return t[1]},e.x=function(t){return t?(e._vx=t,e):e._vx},e.y=function(t){return t?(e._vy=t,e):e._vy},e.polygons=function(t){if(t!==void 0&&e(t),!e.delaunay)return!1;const n={type:"FeatureCollection",features:[]};return e.valid.length===0||(e.delaunay.polygons.forEach((r,o)=>n.features.push({type:"Feature",geometry:r?{type:"Polygon",coordinates:[[...r,r[0]].map(s=>e.delaunay.centers[s])]}:null,properties:{site:e.valid[o],sitecoordinates:e.points[o],neighbours:e.delaunay.neighbors[o]}})),e.valid.length===1&&n.features.push({type:"Feature",geometry:{type:"Sphere"},properties:{site:e.valid[0],sitecoordinates:e.points[0],neighbours:[]}})),n},e.triangles=function(t){return t!==void 0&&e(t),e.delaunay?{type:"FeatureCollection",features:e.delaunay.triangles.map((n,r)=>(n=n.map(o=>e.points[o]),n.center=e.delaunay.centers[r],n)).filter(n=>Yi(n)>0).map(n=>({type:"Feature",properties:{circumcenter:n.center},geometry:{type:"Polygon",coordinates:[[...n,n[0]]]}}))}:!1},e.links=function(t){if(t!==void 0&&e(t),!e.delaunay)return!1;const n=e.delaunay.edges.map(o=>o5(e.points[o[0]],e.points[o[1]])),r=e.delaunay.urquhart(n);return{type:"FeatureCollection",features:e.delaunay.edges.map((o,s)=>({type:"Feature",properties:{source:e.valid[o[0]],target:e.valid[o[1]],length:n[s],urquhart:!!r[s]},geometry:{type:"LineString",coordinates:[e.points[o[0]],e.points[o[1]]]}}))}},e.mesh=function(t){return t!==void 0&&e(t),e.delaunay?{type:"MultiLineString",coordinates:e.delaunay.edges.map(n=>[e.points[n[0]],e.points[n[1]]])}:!1},e.cellMesh=function(t){if(t!==void 0&&e(t),!e.delaunay)return!1;const{centers:n,polygons:r}=e.delaunay,o=[];for(const s of r)if(!!s)for(let a=s.length,h=s[a-1],f=s[0],d=0;d<a;h=f,f=s[++d])f>h&&o.push([n[h],n[f]]);return{type:"MultiLineString",coordinates:o}},e._found=void 0,e.find=function(t,n,r){if(e._found=e.delaunay.find(t,n,e._found),!r||o5([t,n],e.points[e._found])<r)return e._found},e.hull=function(t){t!==void 0&&e(t);const n=e.delaunay.hull,r=e.points;return n.length===0?null:{type:"Polygon",coordinates:[[...n.map(o=>r[o]),r[n[0]]]]}},i?e(i):e}function qM(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Na(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function FM(i,e,t){return e&&Na(i.prototype,e),t&&Na(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}function kM(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&Qn(i,e)}function oe(i){return oe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},oe(i)}function Qn(i,e){return Qn=Object.setPrototypeOf||function(n,r){return n.__proto__=r,n},Qn(i,e)}function NM(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function UM(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function zM(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return UM(i)}function GM(i){var e=NM();return function(){var n=oe(i),r;if(e){var o=oe(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return zM(this,r)}}function n4(i,e){return VM(i)||jM(i,e)||su(i,e)||$M()}function kt(i){return HM(i)||WM(i)||su(i)||QM()}function HM(i){if(Array.isArray(i))return $n(i)}function VM(i){if(Array.isArray(i))return i}function WM(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function jM(i,e){var t=i==null?null:typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function su(i,e){if(!!i){if(typeof i=="string")return $n(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return $n(i,e)}}function $n(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function QM(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function $M(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function YM(i){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=e.resolution,n=t===void 0?1/0:t,r=XM(i,n),o=z7(r),s=ZM(i,n),a=[].concat(kt(o),kt(s)),h={type:"Polygon",coordinates:i},f=PA(h),d=n4(f,2),m=n4(d[0],2),y=m[0],v=m[1],b=n4(d[1],2),M=b[0],w=b[1],E=y>M||w>=89||v<=-89,T=[];if(E){var C=OM(a).triangles(),P=new Map(a.map(function(Y,z){var G=n4(Y,2),X=G[0],o0=G[1];return["".concat(X,"-").concat(o0),z]}));C.features.forEach(function(Y){var z,G=Y.geometry.coordinates[0].slice(0,3).reverse(),X=[];if(G.forEach(function(a0){var u0=n4(a0,2),l0=u0[0],b0=u0[1],i0="".concat(l0,"-").concat(b0);P.has(i0)&&X.push(P.get(i0))}),X.length===3){if(X.some(function(a0){return a0<o.length})){var o0=Y.properties.circumcenter;if(!Yn(o0,h,E))return}(z=T).push.apply(z,X)}})}else if(s.length)(function(){for(var Y=j7.from(a),z=function(u0,l0){var b0,i0=[2,1,0].map(function(T0){return Y.triangles[u0+T0]}),g0=i0.map(function(T0){return a[T0]});if(i0.some(function(T0){return T0<o.length})){var P0=[0,1].map(function(T0){return y_(g0,function(d0){return d0[T0]})});if(!Yn(P0,h,E))return"continue"}(b0=T).push.apply(b0,kt(i0))},G=0,X=Y.triangles.length;G<X;G+=3)var o0=z(G)})();else{var R=U7.flatten(r),I=R.vertices,q=R.holes,D=q===void 0?[]:q;T=U7(I,D,2)}var O=U6(I3(a,function(Y){return Y[0]}),[0,1]),k=U6(I3(a,function(Y){return Y[1]}),[0,1]),B=a.map(function(Y){var z=n4(Y,2),G=z[0],X=z[1];return[O(G),k(X)]}),j={points:a,indices:T,uvs:B};return{contour:r,triangles:j}}function XM(i,e){return i.map(function(t){var n=[],r;return t.forEach(function(o){if(r){var s=o5(o,r)*180/Math.PI;if(s>e)for(var a=qi(r,o),h=1/Math.ceil(s/e),f=h;f<1;)n.push(a(f)),f+=h}n.push(r=o)}),n})}function ZM(i,e){var t={type:"Polygon",coordinates:i},n=PA(t),r=n4(n,2),o=n4(r[0],2),s=o[0],a=o[1],h=n4(r[1],2),f=h[0],d=h[1];if(Math.min(Math.abs(f-s),Math.abs(d-a))<e)return[];var m=s>f||d>=89||a<=-89;return JM(e,{minLng:s,maxLng:f,minLat:a,maxLat:d}).filter(function(y){return Yn(y,t,m)})}function JM(i){for(var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},t=e.minLng,n=e.maxLng,r=e.minLat,o=e.maxLat,s=Math.round(Math.pow(360/i,2)/Math.PI),a=(1+Math.sqrt(5))/2,h=function(E){return E/a*360%360-180},f=function(E){return Math.acos(2*E/s-1)/Math.PI*180-90},d=function(E){return s*(Math.cos((E+90)*Math.PI/180)+1)/2},m=[o!==void 0?Math.ceil(d(o)):0,r!==void 0?Math.floor(d(r)):s-1],y=t===void 0&&n===void 0?function(){return!0}:t===void 0?function(w){return w<=n}:n===void 0?function(w){return w>=t}:n>=t?function(w){return w>=t&&w<=n}:function(w){return w>=t||w<=n},v=[],b=m[0];b<=m[1];b++){var M=h(b);y(M)&&v.push([M,f(b)])}return v}function Yn(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1;return t?X_(e,i):AM(i,e)}var b3=window.THREE?window.THREE:{BufferGeometry:C1,Float32BufferAttribute:T1},Ua=new b3.BufferGeometry().setAttribute?"setAttribute":"addAttribute",Xi=function(i){kM(t,i);var e=GM(t);function t(n,r,o,s,a,h,f){var d;qM(this,t),d=e.call(this),d.type="ConicPolygonBufferGeometry",d.parameters={polygonGeoJson:n,startHeight:r,endHeight:o,closedBottom:s,closedTop:a,includeSides:h,curvatureResolution:f},r=r||0,o=o||1,s=s!==void 0?s:!0,a=a!==void 0?a:!0,h=h!==void 0?h:!0,f=f||5;var m=YM(n,{resolution:f}),y=m.contour,v=m.triangles,b=z7(v.uvs),M=[],w=[],E=[],T=0,C=function(D){var O=Math.round(M.length/3),k=E.length;M=M.concat(D.vertices),w=w.concat(D.uvs),E=E.concat(O?D.indices.map(function(B){return B+O}):D.indices),d.addGroup(k,E.length-k,T++)};h&&C(R()),s&&C(I(r,!1)),a&&C(I(o,!0)),d.setIndex(E),d[Ua]("position",new b3.Float32BufferAttribute(M,3)),d[Ua]("uv",new b3.Float32BufferAttribute(w,2)),d.computeVertexNormals();function P(q,D){var O=q.map(function(k){return k.map(function(B){var j=n4(B,2),Y=j[0],z=j[1];return KM(z,Y,D)})});return U7.flatten(O)}function R(){for(var q=P(y,r),D=q.vertices,O=q.holes,k=P(y,o),B=k.vertices,j=z7([B,D]),Y=Math.round(B.length/3),z=new Set(O),G=0,X=[],o0=0;o0<Y;o0++){var a0=o0+1;if(a0===Y)a0=G;else if(z.has(a0)){var u0=a0;a0=G,G=u0}X.push(o0,o0+Y,a0+Y),X.push(a0+Y,a0,o0)}for(var l0=[],b0=1;b0>=0;b0--)for(var i0=0;i0<Y;i0+=1)l0.push(i0/(Y-1),b0);return{indices:X,vertices:j,uvs:l0}}function I(q){var D=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return{indices:D?v.indices:v.indices.slice().reverse(),vertices:P([v.points],q).vertices,uvs:b}}return d}return FM(t)}(b3.BufferGeometry);function KM(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,n=(90-i)*Math.PI/180,r=(90-e)*Math.PI/180;return[t*Math.sin(n)*Math.cos(r),t*Math.cos(n),t*Math.sin(n)*Math.sin(r)]}var z1=function(i){i=i||{};var e=typeof i!="undefined"?i:{},t={},n;for(n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);var r="";function o(Q){return e.locateFile?e.locateFile(Q,r):r+Q}var s;document.currentScript&&(r=document.currentScript.src),r.indexOf("blob:")!==0?r=r.substr(0,r.lastIndexOf("/")+1):r="",s=function(n0,h0,q0){var A=new XMLHttpRequest;A.open("GET",n0,!0),A.responseType="arraybuffer",A.onload=function(){if(A.status==200||A.status==0&&A.response){h0(A.response);return}var t1=y1(n0);if(t1){h0(t1.buffer);return}q0()},A.onerror=q0,A.send(null)};var a=e.print||console.log.bind(console),h=e.printErr||console.warn.bind(console);for(n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);t=null,e.arguments;var f=0,d=function(Q){f=Q},m=function(){return f},y=8;function v(Q,n0,h0,q0){switch(h0=h0||"i8",h0.charAt(h0.length-1)==="*"&&(h0="i32"),h0){case"i1":j[Q>>0]=n0;break;case"i8":j[Q>>0]=n0;break;case"i16":z[Q>>1]=n0;break;case"i32":G[Q>>2]=n0;break;case"i64":B0=[n0>>>0,(M0=n0,+N(M0)>=1?M0>0?(v0(+H(M0/4294967296),4294967295)|0)>>>0:~~+Z((M0-+(~~M0>>>0))/4294967296)>>>0:0)],G[Q>>2]=B0[0],G[Q+4>>2]=B0[1];break;case"float":X[Q>>2]=n0;break;case"double":o0[Q>>3]=n0;break;default:x0("invalid type for setValue: "+h0)}}function b(Q,n0,h0){switch(n0=n0||"i8",n0.charAt(n0.length-1)==="*"&&(n0="i32"),n0){case"i1":return j[Q>>0];case"i8":return j[Q>>0];case"i16":return z[Q>>1];case"i32":return G[Q>>2];case"i64":return G[Q>>2];case"float":return X[Q>>2];case"double":return o0[Q>>3];default:x0("invalid type for getValue: "+n0)}return null}var M=!1;function w(Q,n0){Q||x0("Assertion failed: "+n0)}function E(Q){var n0=e["_"+Q];return w(n0,"Cannot call unknown function "+Q+", make sure it is exported"),n0}function T(Q,n0,h0,q0,A){var W={string:function(r9){var w9=0;if(r9!=null&&r9!==0){var O1=(r9.length<<2)+1;w9=r8(O1),D(r9,w9,O1)}return w9},array:function(r9){var w9=r8(r9.length);return O(r9,w9),w9}};function t1(r9){return n0==="string"?I(r9):n0==="boolean"?Boolean(r9):r9}var u1=E(Q),i1=[],a1=0;if(q0)for(var S1=0;S1<q0.length;S1++){var D1=W[h0[S1]];D1?(a1===0&&(a1=Pe()),i1[S1]=D1(q0[S1])):i1[S1]=q0[S1]}var R1=u1.apply(null,i1);return R1=t1(R1),a1!==0&&N5(a1),R1}function C(Q,n0,h0,q0){h0=h0||[];var A=h0.every(function(t1){return t1==="number"}),W=n0!=="string";return W&&A&&!q0?E(Q):function(){return T(Q,n0,h0,arguments)}}var P=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function R(Q,n0,h0){for(var q0=n0+h0,A=n0;Q[A]&&!(A>=q0);)++A;if(A-n0>16&&Q.subarray&&P)return P.decode(Q.subarray(n0,A));for(var W="";n0<A;){var t1=Q[n0++];if(!(t1&128)){W+=String.fromCharCode(t1);continue}var u1=Q[n0++]&63;if((t1&224)==192){W+=String.fromCharCode((t1&31)<<6|u1);continue}var i1=Q[n0++]&63;if((t1&240)==224?t1=(t1&15)<<12|u1<<6|i1:t1=(t1&7)<<18|u1<<12|i1<<6|Q[n0++]&63,t1<65536)W+=String.fromCharCode(t1);else{var a1=t1-65536;W+=String.fromCharCode(55296|a1>>10,56320|a1&1023)}}return W}function I(Q,n0){return Q?R(Y,Q,n0):""}function q(Q,n0,h0,q0){if(!(q0>0))return 0;for(var A=h0,W=h0+q0-1,t1=0;t1<Q.length;++t1){var u1=Q.charCodeAt(t1);if(u1>=55296&&u1<=57343){var i1=Q.charCodeAt(++t1);u1=65536+((u1&1023)<<10)|i1&1023}if(u1<=127){if(h0>=W)break;n0[h0++]=u1}else if(u1<=2047){if(h0+1>=W)break;n0[h0++]=192|u1>>6,n0[h0++]=128|u1&63}else if(u1<=65535){if(h0+2>=W)break;n0[h0++]=224|u1>>12,n0[h0++]=128|u1>>6&63,n0[h0++]=128|u1&63}else{if(h0+3>=W)break;n0[h0++]=240|u1>>18,n0[h0++]=128|u1>>12&63,n0[h0++]=128|u1>>6&63,n0[h0++]=128|u1&63}}return n0[h0]=0,h0-A}function D(Q,n0,h0){return q(Q,Y,n0,h0)}typeof TextDecoder!="undefined"&&new TextDecoder("utf-16le");function O(Q,n0){j.set(Q,n0)}function k(Q,n0){return Q%n0>0&&(Q+=n0-Q%n0),Q}var B,j,Y,z,G,X,o0;function a0(Q){B=Q,e.HEAP8=j=new Int8Array(Q),e.HEAP16=z=new Int16Array(Q),e.HEAP32=G=new Int32Array(Q),e.HEAPU8=Y=new Uint8Array(Q),e.HEAPU16=new Uint16Array(Q),e.HEAPU32=new Uint32Array(Q),e.HEAPF32=X=new Float32Array(Q),e.HEAPF64=o0=new Float64Array(Q)}var u0=5266928,l0=24016,b0=e.TOTAL_MEMORY||33554432;e.buffer?B=e.buffer:B=new ArrayBuffer(b0),b0=B.byteLength,a0(B),G[l0>>2]=u0;function i0(Q){for(;Q.length>0;){var n0=Q.shift();if(typeof n0=="function"){n0();continue}var h0=n0.func;typeof h0=="number"?n0.arg===void 0?e.dynCall_v(h0):e.dynCall_vi(h0,n0.arg):h0(n0.arg===void 0?null:n0.arg)}}var g0=[],P0=[],T0=[],d0=[];function p0(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)H0(e.preRun.shift());i0(g0)}function E0(){i0(P0)}function I0(){i0(T0)}function _0(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)w0(e.postRun.shift());i0(d0)}function H0(Q){g0.unshift(Q)}function w0(Q){d0.unshift(Q)}var N=Math.abs,Z=Math.ceil,H=Math.floor,v0=Math.min,L0=0,m0=null;function U0(Q){L0++,e.monitorRunDependencies&&e.monitorRunDependencies(L0)}function c1(Q){if(L0--,e.monitorRunDependencies&&e.monitorRunDependencies(L0),L0==0&&m0){var n0=m0;m0=null,n0()}}e.preloadedImages={},e.preloadedAudios={};var s1=null,e0="data:application/octet-stream;base64,";function V(Q){return String.prototype.startsWith?Q.startsWith(e0):Q.indexOf(e0)===0}var M0,B0;s1="data:application/octet-stream;base64,";var Y0=24032;function r1(Q){return Q}function d1(Q){var n0=/\b__Z[\w\d_]+/g;return Q.replace(n0,function(h0){var q0=h0;return h0===q0?h0:q0+" ["+h0+"]"})}function J(){var Q=new Error;if(!Q.stack){try{throw new Error(0)}catch(n0){Q=n0}if(!Q.stack)return"(no stack trace available)"}return Q.stack.toString()}function k0(){var Q=J();return e.extraStackTrace&&(Q+=`
`+e.extraStackTrace()),d1(Q)}function f1(Q,n0,h0,q0){x0("Assertion failed: "+I(Q)+", at: "+[n0?I(n0):"unknown filename",h0,q0?I(q0):"unknown function"])}function $0(){return j.length}function A0(Q,n0,h0){Y.set(Y.subarray(n0,n0+h0),Q)}function W0(Q){return e.___errno_location&&(G[e.___errno_location()>>2]=Q),Q}function V0(Q){x0("OOM")}function g1(Q){try{var n0=new ArrayBuffer(Q);return n0.byteLength!=Q?void 0:(new Int8Array(n0).set(j),w2(n0),a0(n0),1)}catch{}}function J0(Q){var n0=$0(),h0=16777216,q0=2147483648-h0;if(Q>q0)return!1;for(var A=16777216,W=Math.max(n0,A);W<Q;)W<=536870912?W=k(2*W,h0):W=Math.min(k((3*W+2147483648)/4,h0),q0);var t1=g1(W);return!!t1}var h1=typeof atob=="function"?atob:function(Q){var n0="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",h0="",q0,A,W,t1,u1,i1,a1,S1=0;Q=Q.replace(/[^A-Za-z0-9\+\/\=]/g,"");do t1=n0.indexOf(Q.charAt(S1++)),u1=n0.indexOf(Q.charAt(S1++)),i1=n0.indexOf(Q.charAt(S1++)),a1=n0.indexOf(Q.charAt(S1++)),q0=t1<<2|u1>>4,A=(u1&15)<<4|i1>>2,W=(i1&3)<<6|a1,h0=h0+String.fromCharCode(q0),i1!==64&&(h0=h0+String.fromCharCode(A)),a1!==64&&(h0=h0+String.fromCharCode(W));while(S1<Q.length);return h0};function j0(Q){try{for(var n0=h1(Q),h0=new Uint8Array(n0.length),q0=0;q0<n0.length;++q0)h0[q0]=n0.charCodeAt(q0);return h0}catch{throw new Error("Converting base64 string to bytes failed.")}}function y1(Q){if(!!V(Q))return j0(Q.slice(e0.length))}var V1={Math,Int8Array,Int32Array,Uint8Array,Float32Array,Float64Array},B1={a:x0,b:d,c:m,d:f1,e:W0,f:$0,g:A0,h:J0,i:V0,j:r1,k:d1,l:g1,m:J,n:k0,o:Y0,p:l0},F0=function(Q,n0,h0){var q0=new Q.Int8Array(h0),A=new Q.Int32Array(h0);new Q.Uint8Array(h0),new Q.Float32Array(h0);var W=new Q.Float64Array(h0),t1=n0.p|0,u1=Q.Math.floor,i1=Q.Math.abs,a1=Q.Math.sqrt,S1=Q.Math.pow,D1=Q.Math.cos,R1=Q.Math.sin,r9=Q.Math.tan,w9=Q.Math.acos,O1=Q.Math.asin,$2=Q.Math.atan,N1=Q.Math.atan2,H9=Q.Math.ceil,C9=Q.Math.imul,h5=Q.Math.min,B2=Q.Math.clz32,A1=n0.b,s0=n0.c,q1=n0.d,f2=n0.e,Qu=n0.f,$u=n0.g,Yu=n0.h,Xu=n0.i,t0=24048;function Zu(l){return q0=new Int8Array(l),A=new Int32Array(l),W=new Float64Array(l),h0=l,!0}function Ju(l){l=l|0;var u=0;return u=t0,t0=t0+l|0,t0=t0+15&-16,u|0}function Ku(){return t0|0}function ec(l){l=l|0,t0=l}function tc(l,u){l=l|0,t0=l}function nc(l){return l=l|0,(C9(l*3|0,l+1|0)|0)+1|0}function nr(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0;!(Re(l,u,c,p,0)|0)||(_=(C9(c*3|0,c+1|0)|0)+1|0,q2(p|0,0,_<<3|0)|0,g=O2(_,4)|0,g&&(Y2(l,u,c,p,g,_,0),E1(g)))}function ic(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0;if(!!(Re(l,u,c,p,g)|0)){if(_=(C9(c*3|0,c+1|0)|0)+1|0,q2(p|0,0,_<<3|0)|0,g|0){q2(g|0,0,_<<2|0)|0,Y2(l,u,c,p,g,_,0);return}g=O2(_,4)|0,g&&(Y2(l,u,c,p,g,_,0),E1(g))}}function Re(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0;if(y0=t0,t0=t0+16|0,c0=y0,_=p,A[_>>2]=l,A[_+4>>2]=u,_=(g|0)!=0,_&&(A[g>>2]=0),M9(l,u)|0)return c0=1,t0=y0,c0|0;A[c0>>2]=0;e:do if((c|0)>=1)if(_)for(F=0,U=1,r0=1,x=0,_=l;;){if(!(x|F)){if(_=g9(_,u,4,c0)|0,u=s0()|0,(_|0)==0&(u|0)==0){_=2;break e}if(M9(_,u)|0){_=1;break e}}if(_=g9(_,u,A[16+(F<<2)>>2]|0,c0)|0,u=s0()|0,(_|0)==0&(u|0)==0){_=2;break e}if(l=p+(r0<<3)|0,A[l>>2]=_,A[l+4>>2]=u,A[g+(r0<<2)>>2]=U,x=x+1|0,l=(x|0)==(U|0),S=F+1|0,L=(S|0)==6,M9(_,u)|0){_=1;break e}if(U=U+(L&l&1)|0,(U|0)>(c|0)){_=0;break}else F=l?L?0:S:F,r0=r0+1|0,x=l?0:x}else for(F=0,U=1,r0=1,x=0,_=l;;){if(!(x|F)){if(_=g9(_,u,4,c0)|0,u=s0()|0,(_|0)==0&(u|0)==0){_=2;break e}if(M9(_,u)|0){_=1;break e}}if(_=g9(_,u,A[16+(F<<2)>>2]|0,c0)|0,u=s0()|0,(_|0)==0&(u|0)==0){_=2;break e}if(l=p+(r0<<3)|0,A[l>>2]=_,A[l+4>>2]=u,x=x+1|0,l=(x|0)==(U|0),S=F+1|0,L=(S|0)==6,M9(_,u)|0){_=1;break e}if(U=U+(L&l&1)|0,(U|0)>(c|0)){_=0;break}else F=l?L?0:S:F,r0=r0+1|0,x=l?0:x}else _=0;while(0);return c0=_,t0=y0,c0|0}function Y2(l,u,c,p,g,_,x){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0,_=_|0,x=x|0;var S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0;if(r0=t0,t0=t0+16|0,U=r0,(l|0)==0&(u|0)==0){t0=r0;return}if(S=O4(l|0,u|0,_|0,((_|0)<0)<<31>>31|0)|0,s0()|0,L=p+(S<<3)|0,c0=L,y0=A[c0>>2]|0,c0=A[c0+4>>2]|0,F=(y0|0)==(l|0)&(c0|0)==(u|0),!((y0|0)==0&(c0|0)==0|F))do S=(S+1|0)%(_|0)|0,L=p+(S<<3)|0,y0=L,c0=A[y0>>2]|0,y0=A[y0+4>>2]|0,F=(c0|0)==(l|0)&(y0|0)==(u|0);while(!((c0|0)==0&(y0|0)==0|F));if(S=g+(S<<2)|0,F&&(A[S>>2]|0)<=(x|0)){t0=r0;return}if(y0=L,A[y0>>2]=l,A[y0+4>>2]=u,A[S>>2]=x,(x|0)>=(c|0)){t0=r0;return}y0=x+1|0,A[U>>2]=0,c0=g9(l,u,2,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),A[U>>2]=0,c0=g9(l,u,3,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),A[U>>2]=0,c0=g9(l,u,1,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),A[U>>2]=0,c0=g9(l,u,5,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),A[U>>2]=0,c0=g9(l,u,4,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),A[U>>2]=0,c0=g9(l,u,6,U)|0,Y2(c0,s0()|0,c,p,g,_,y0),t0=r0}function g9(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0;if((A[p>>2]|0)>0){g=0;do c=m5(c)|0,g=g+1|0;while((g|0)<(A[p>>2]|0))}S=N0(l|0,u|0,45)|0,s0()|0,L=S&127,_=n2(l,u)|0,g=N0(l|0,u|0,52)|0,s0()|0,g=g&15;e:do if(!g)x=6;else for(;;){if(r0=(15-g|0)*3|0,c0=N0(l|0,u|0,r0|0)|0,s0()|0,c0=c0&7,y0=(M2(g)|0)==0,g=g+-1|0,U=K0(7,0,r0|0)|0,u=u&~(s0()|0),r0=K0(A[(y0?464:48)+(c0*28|0)+(c<<2)>>2]|0,0,r0|0)|0,F=s0()|0,c=A[(y0?672:256)+(c0*28|0)+(c<<2)>>2]|0,l=r0|l&~U,u=F|u,!c){c=0;break e}if(!g){x=6;break}}while(0);(x|0)==6&&(y0=A[880+(L*28|0)+(c<<2)>>2]|0,c0=K0(y0|0,0,45)|0,l=c0|l,u=s0()|0|u&-1040385,c=A[4304+(L*28|0)+(c<<2)>>2]|0,(y0&127|0)==127&&(y0=K0(A[880+(L*28|0)+20>>2]|0,0,45)|0,u=s0()|0|u&-1040385,c=A[4304+(L*28|0)+20>>2]|0,l=B4(y0|l,u)|0,u=s0()|0,A[p>>2]=(A[p>>2]|0)+1)),x=N0(l|0,u|0,45)|0,s0()|0,x=x&127;e:do if(s9(x)|0){t:do if((n2(l,u)|0)==1){if((L|0)!=(x|0))if(or(x,A[7728+(L*28|0)>>2]|0)|0){l=Ue(l,u)|0,_=1,u=s0()|0;break}else{l=B4(l,u)|0,_=1,u=s0()|0;break}switch(_|0){case 5:{l=Ue(l,u)|0,u=s0()|0,A[p>>2]=(A[p>>2]|0)+5,_=0;break t}case 3:{l=B4(l,u)|0,u=s0()|0,A[p>>2]=(A[p>>2]|0)+1,_=0;break t}default:return c0=0,y0=0,A1(c0|0),y0|0}}else _=0;while(0);if((c|0)>0){g=0;do l=Ne(l,u)|0,u=s0()|0,g=g+1|0;while((g|0)!=(c|0))}if((L|0)!=(x|0)){if(!(Le(x)|0)){if((_|0)!=0|(n2(l,u)|0)!=5)break;A[p>>2]=(A[p>>2]|0)+1;break}switch(S&127){case 8:case 118:break e}(n2(l,u)|0)!=3&&(A[p>>2]=(A[p>>2]|0)+1)}}else if((c|0)>0){g=0;do l=B4(l,u)|0,u=s0()|0,g=g+1|0;while((g|0)!=(c|0))}while(0);return A[p>>2]=((A[p>>2]|0)+c|0)%6|0,c0=u,y0=l,A1(c0|0),y0|0}function rc(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0;if(r0=t0,t0=t0+16|0,U=r0,!c)return U=p,A[U>>2]=l,A[U+4>>2]=u,U=0,t0=r0,U|0;A[U>>2]=0;e:do if(M9(l,u)|0)l=1;else{if(_=(c|0)>0,_){g=0,F=l;do{if(F=g9(F,u,4,U)|0,u=s0()|0,(F|0)==0&(u|0)==0){l=2;break e}if(g=g+1|0,M9(F,u)|0){l=1;break e}}while((g|0)<(c|0));if(L=p,A[L>>2]=F,A[L+4>>2]=u,L=c+-1|0,_){_=0,x=1,g=F,l=u;do{if(g=g9(g,l,2,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if(S=p+(x<<3)|0,A[S>>2]=g,A[S+4>>2]=l,x=x+1|0,M9(g,l)|0){l=1;break e}_=_+1|0}while((_|0)<(c|0));S=0,_=x;do{if(g=g9(g,l,3,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if(x=p+(_<<3)|0,A[x>>2]=g,A[x+4>>2]=l,_=_+1|0,M9(g,l)|0){l=1;break e}S=S+1|0}while((S|0)<(c|0));x=0;do{if(g=g9(g,l,1,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if(S=p+(_<<3)|0,A[S>>2]=g,A[S+4>>2]=l,_=_+1|0,M9(g,l)|0){l=1;break e}x=x+1|0}while((x|0)<(c|0));x=0;do{if(g=g9(g,l,5,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if(S=p+(_<<3)|0,A[S>>2]=g,A[S+4>>2]=l,_=_+1|0,M9(g,l)|0){l=1;break e}x=x+1|0}while((x|0)<(c|0));x=0;do{if(g=g9(g,l,4,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if(S=p+(_<<3)|0,A[S>>2]=g,A[S+4>>2]=l,_=_+1|0,M9(g,l)|0){l=1;break e}x=x+1|0}while((x|0)<(c|0));for(x=0;;){if(g=g9(g,l,6,U)|0,l=s0()|0,(g|0)==0&(l|0)==0){l=2;break e}if((x|0)!=(L|0))if(S=p+(_<<3)|0,A[S>>2]=g,A[S+4>>2]=l,!(M9(g,l)|0))_=_+1|0;else{l=1;break e}if(x=x+1|0,(x|0)>=(c|0)){x=F,_=u;break}}}else x=F,g=F,_=u,l=u}else x=p,A[x>>2]=l,A[x+4>>2]=u,x=l,g=l,_=u,l=u;l=((x|0)!=(g|0)|(_|0)!=(l|0))&1}while(0);return U=l,t0=r0,U|0}function oc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0;if(_=t0,t0=t0+48|0,g=_+8|0,p=_,S=l,x=A[S+4>>2]|0,c=p,A[c>>2]=A[S>>2],A[c+4>>2]=x,He(p,g),g=Be(g,u)|0,u=A[p>>2]|0,p=A[l+8>>2]|0,(p|0)<=0)return S=u,x=(g|0)<(S|0),S=x?S:g,S=S+12|0,t0=_,S|0;c=A[l+12>>2]|0,l=0;do u=(A[c+(l<<3)>>2]|0)+u|0,l=l+1|0;while((l|0)<(p|0));return S=(g|0)<(u|0),S=S?u:g,S=S+12|0,t0=_,S|0}function sc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0;if(S=t0,t0=t0+48|0,p=S+8|0,g=S,!(ac(l,u,c)|0)){t0=S;return}if(L=l,_=A[L+4>>2]|0,x=g,A[x>>2]=A[L>>2],A[x+4>>2]=_,He(g,p),x=Be(p,u)|0,u=A[g>>2]|0,_=A[l+8>>2]|0,(_|0)>0){g=A[l+12>>2]|0,p=0;do u=(A[g+(p<<3)>>2]|0)+u|0,p=p+1|0;while((p|0)!=(_|0))}if(u=(x|0)<(u|0)?u:x,(u|0)<=-12){t0=S;return}L=u+11|0,q2(c|0,0,(((L|0)>0?L:0)<<3)+8|0)|0,t0=S}function ac(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0,w1=0,j1=0,G1=0,Z1=0,U1=0,n9=0,i9=0,x1=0;if(x1=t0,t0=t0+112|0,Z1=x1+80|0,L=x1+72|0,U1=x1,n9=x1+56|0,F=l+8|0,i9=X2((A[F>>2]<<5)+32|0)|0,i9||q1(22848,22448,800,22456),ff(l,i9),_=l,p=A[_+4>>2]|0,S=L,A[S>>2]=A[_>>2],A[S+4>>2]=p,He(L,Z1),S=Be(Z1,u)|0,p=A[L>>2]|0,_=A[F>>2]|0,(_|0)>0){x=A[l+12>>2]|0,g=0;do p=(A[x+(g<<3)>>2]|0)+p|0,g=g+1|0;while((g|0)!=(_|0))}if(S=(S|0)<(p|0)?p:S,G1=S+12|0,g=O2(G1,8)|0,U=O2(G1,8)|0,A[Z1>>2]=0,w1=l,j1=A[w1+4>>2]|0,p=L,A[p>>2]=A[w1>>2],A[p+4>>2]=j1,p=ir(L,G1,u,Z1,g,U)|0,p|0)return E1(g),E1(U),E1(i9),i9=p,t0=x1,i9|0;e:do if((A[F>>2]|0)>0){for(_=l+12|0,p=0;x=ir((A[_>>2]|0)+(p<<3)|0,G1,u,Z1,g,U)|0,p=p+1|0,!(x|0);)if((p|0)>=(A[F>>2]|0))break e;return E1(g),E1(U),E1(i9),i9=x,t0=x1,i9|0}while(0);(S|0)>-12&&q2(U|0,0,((G1|0)>1?G1:1)<<3|0)|0;e:do if((A[Z1>>2]|0)>0){j1=((G1|0)<0)<<31>>31,f0=g,n1=U,o1=g,Q0=g,Z0=U,w1=g,p=g,z0=g,e1=U,S0=U,O0=U,g=U;t:for(;;){for(R0=A[Z1>>2]|0,y0=0,C0=0,_=0;;){x=U1,S=x+56|0;do A[x>>2]=0,x=x+4|0;while((x|0)<(S|0));if(u=f0+(y0<<3)|0,L=A[u>>2]|0,u=A[u+4>>2]|0,Re(L,u,1,U1,0)|0){x=U1,S=x+56|0;do A[x>>2]=0,x=x+4|0;while((x|0)<(S|0));x=O2(7,4)|0,x|0&&(Y2(L,u,1,U1,x,7,0),E1(x))}c0=0;do{r0=U1+(c0<<3)|0,U=A[r0>>2]|0,r0=A[r0+4>>2]|0;n:do if(!((U|0)==0&(r0|0)==0)){if(L=O4(U|0,r0|0,G1|0,j1|0)|0,s0()|0,x=c+(L<<3)|0,S=x,u=A[S>>2]|0,S=A[S+4>>2]|0,!((u|0)==0&(S|0)==0))for(F=0;;){if((F|0)>(G1|0))break t;if((u|0)==(U|0)&(S|0)==(r0|0))break n;if(L=(L+1|0)%(G1|0)|0,x=c+(L<<3)|0,S=x,u=A[S>>2]|0,S=A[S+4>>2]|0,(u|0)==0&(S|0)==0)break;F=F+1|0}(U|0)==0&(r0|0)==0||(g5(U,r0,n9),hf(l,i9,n9)|0&&(F=x,A[F>>2]=U,A[F+4>>2]=r0,F=n1+(_<<3)|0,A[F>>2]=U,A[F+4>>2]=r0,_=_+1|0))}while(0);c0=c0+1|0}while(c0>>>0<7);if(C0=C0+1|0,(C0|0)>=(R0|0))break;y0=y0+1|0}if((R0|0)>0&&q2(o1|0,0,R0<<3|0)|0,A[Z1>>2]=_,(_|0)>0)U=g,r0=O0,c0=w1,y0=S0,C0=e1,R0=n1,g=z0,O0=p,S0=Q0,e1=o1,z0=U,p=r0,w1=Z0,Z0=c0,Q0=y0,o1=C0,n1=f0,f0=R0;else break e}return E1(Q0),E1(Z0),E1(i9),i9=-1,t0=x1,i9|0}else p=U;while(0);return E1(i9),E1(g),E1(p),i9=0,t0=x1,i9|0}function ir(l,u,c,p,g,_){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0,_=_|0;var x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0,w1=0,j1=0,G1=0,Z1=0;if(j1=t0,t0=t0+48|0,o1=j1+32|0,Q0=j1+16|0,Z0=j1,x=A[l>>2]|0,(x|0)<=0)return w1=0,t0=j1,w1|0;e1=l+4|0,S0=o1+8|0,O0=Q0+8|0,f0=Z0+8|0,n1=((u|0)<0)<<31>>31,z0=0;e:for(;;){S=A[e1>>2]|0,C0=S+(z0<<4)|0,A[o1>>2]=A[C0>>2],A[o1+4>>2]=A[C0+4>>2],A[o1+8>>2]=A[C0+8>>2],A[o1+12>>2]=A[C0+12>>2],(z0|0)==(x+-1|0)?(A[Q0>>2]=A[S>>2],A[Q0+4>>2]=A[S+4>>2],A[Q0+8>>2]=A[S+8>>2],A[Q0+12>>2]=A[S+12>>2]):(C0=S+(z0+1<<4)|0,A[Q0>>2]=A[C0>>2],A[Q0+4>>2]=A[C0+4>>2],A[Q0+8>>2]=A[C0+8>>2],A[Q0+12>>2]=A[C0+12>>2]),C0=pc(o1,Q0,c)|0;t:do if((C0|0)>0){R0=+(C0|0),y0=0;n:for(;;){Z1=+(C0-y0|0),G1=+(y0|0),W[Z0>>3]=+W[o1>>3]*Z1/R0+ +W[Q0>>3]*G1/R0,W[f0>>3]=+W[S0>>3]*Z1/R0+ +W[O0>>3]*G1/R0,r0=_r(Z0,c)|0,c0=s0()|0,S=O4(r0|0,c0|0,u|0,n1|0)|0,s0()|0,x=_+(S<<3)|0,L=x,F=A[L>>2]|0,L=A[L+4>>2]|0;i:do if((F|0)==0&(L|0)==0)w1=14;else for(U=0;;){if((U|0)>(u|0)){x=1;break i}if((F|0)==(r0|0)&(L|0)==(c0|0)){x=7;break i}if(S=(S+1|0)%(u|0)|0,x=_+(S<<3)|0,L=x,F=A[L>>2]|0,L=A[L+4>>2]|0,(F|0)==0&(L|0)==0){w1=14;break}else U=U+1|0}while(0);switch((w1|0)==14&&(w1=0,(r0|0)==0&(c0|0)==0?x=7:(A[x>>2]=r0,A[x+4>>2]=c0,x=A[p>>2]|0,U=g+(x<<3)|0,A[U>>2]=r0,A[U+4>>2]=c0,A[p>>2]=x+1,x=0)),x&7){case 7:case 0:break;default:break n}if(y0=y0+1|0,(C0|0)<=(y0|0)){w1=8;break t}}if(x|0){x=-1,w1=20;break e}}else w1=8;while(0);if((w1|0)==8&&(w1=0),z0=z0+1|0,x=A[l>>2]|0,(z0|0)>=(x|0)){x=0,w1=20;break}}return(w1|0)==20?(t0=j1,x|0):0}function lc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0;if(F=t0,t0=t0+176|0,L=F,(u|0)<1){Rr(c,0,0),t0=F;return}x=l,x=N0(A[x>>2]|0,A[x+4>>2]|0,52)|0,s0()|0,Rr(c,(u|0)>6?u:6,x&15),x=0;do{if(p=l+(x<<3)|0,y5(A[p>>2]|0,A[p+4>>2]|0,L),p=A[L>>2]|0,(p|0)>0){S=0;do _=L+8+(S<<4)|0,S=S+1|0,p=L+8+(((S|0)%(p|0)|0)<<4)|0,g=Ef(c,p,_)|0,g?Ir(c,g)|0:Sf(c,_,p)|0,p=A[L>>2]|0;while((S|0)<(p|0))}x=x+1|0}while((x|0)!=(u|0));t0=F}function Ac(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0;if(_=t0,t0=t0+32|0,p=_,g=_+16|0,lc(l,u,g),A[c>>2]=0,A[c+4>>2]=0,A[c+8>>2]=0,l=Dr(g)|0,!l){Mr(c)|0,Lr(g),t0=_;return}do{u=rf(c)|0;do of(u,l)|0,x=l+16|0,A[p>>2]=A[x>>2],A[p+4>>2]=A[x+4>>2],A[p+8>>2]=A[x+8>>2],A[p+12>>2]=A[x+12>>2],Ir(g,l)|0,l=Tf(g,p)|0;while((l|0)!=0);l=Dr(g)|0}while((l|0)!=0);Mr(c)|0,Lr(g),t0=_}function s9(l){return l=l|0,A[7728+(l*28|0)+16>>2]|0}function Le(l){return l=l|0,(l|0)==4|(l|0)==117|0}function rr(l){return l=l|0,A[11152+((A[l>>2]|0)*216|0)+((A[l+4>>2]|0)*72|0)+((A[l+8>>2]|0)*24|0)+(A[l+12>>2]<<3)>>2]|0}function uc(l){return l=l|0,A[11152+((A[l>>2]|0)*216|0)+((A[l+4>>2]|0)*72|0)+((A[l+8>>2]|0)*24|0)+(A[l+12>>2]<<3)+4>>2]|0}function cc(l,u){l=l|0,u=u|0,l=7728+(l*28|0)|0,A[u>>2]=A[l>>2],A[u+4>>2]=A[l+4>>2],A[u+8>>2]=A[l+8>>2],A[u+12>>2]=A[l+12>>2]}function fc(l,u){l=l|0,u=u|0;var c=0,p=0;if(u>>>0>20)return u=-1,u|0;do if((A[11152+(u*216|0)>>2]|0)!=(l|0))if((A[11152+(u*216|0)+8>>2]|0)!=(l|0))if((A[11152+(u*216|0)+16>>2]|0)!=(l|0))if((A[11152+(u*216|0)+24>>2]|0)!=(l|0))if((A[11152+(u*216|0)+32>>2]|0)!=(l|0))if((A[11152+(u*216|0)+40>>2]|0)!=(l|0))if((A[11152+(u*216|0)+48>>2]|0)!=(l|0))if((A[11152+(u*216|0)+56>>2]|0)!=(l|0))if((A[11152+(u*216|0)+64>>2]|0)!=(l|0))if((A[11152+(u*216|0)+72>>2]|0)!=(l|0))if((A[11152+(u*216|0)+80>>2]|0)!=(l|0))if((A[11152+(u*216|0)+88>>2]|0)!=(l|0))if((A[11152+(u*216|0)+96>>2]|0)!=(l|0))if((A[11152+(u*216|0)+104>>2]|0)!=(l|0))if((A[11152+(u*216|0)+112>>2]|0)!=(l|0))if((A[11152+(u*216|0)+120>>2]|0)!=(l|0))if((A[11152+(u*216|0)+128>>2]|0)!=(l|0))if((A[11152+(u*216|0)+136>>2]|0)==(l|0))l=2,c=1,p=2;else{if((A[11152+(u*216|0)+144>>2]|0)==(l|0)){l=0,c=2,p=0;break}if((A[11152+(u*216|0)+152>>2]|0)==(l|0)){l=0,c=2,p=1;break}if((A[11152+(u*216|0)+160>>2]|0)==(l|0)){l=0,c=2,p=2;break}if((A[11152+(u*216|0)+168>>2]|0)==(l|0)){l=1,c=2,p=0;break}if((A[11152+(u*216|0)+176>>2]|0)==(l|0)){l=1,c=2,p=1;break}if((A[11152+(u*216|0)+184>>2]|0)==(l|0)){l=1,c=2,p=2;break}if((A[11152+(u*216|0)+192>>2]|0)==(l|0)){l=2,c=2,p=0;break}if((A[11152+(u*216|0)+200>>2]|0)==(l|0)){l=2,c=2,p=1;break}if((A[11152+(u*216|0)+208>>2]|0)==(l|0)){l=2,c=2,p=2;break}else l=-1;return l|0}else l=2,c=1,p=1;else l=2,c=1,p=0;else l=1,c=1,p=2;else l=1,c=1,p=1;else l=1,c=1,p=0;else l=0,c=1,p=2;else l=0,c=1,p=1;else l=0,c=1,p=0;else l=2,c=0,p=2;else l=2,c=0,p=1;else l=2,c=0,p=0;else l=1,c=0,p=2;else l=1,c=0,p=1;else l=1,c=0,p=0;else l=0,c=0,p=2;else l=0,c=0,p=1;else l=0,c=0,p=0;while(0);return u=A[11152+(u*216|0)+(c*72|0)+(l*24|0)+(p<<3)+4>>2]|0,u|0}function or(l,u){return l=l|0,u=u|0,(A[7728+(l*28|0)+20>>2]|0)==(u|0)?(u=1,u|0):(u=(A[7728+(l*28|0)+24>>2]|0)==(u|0),u|0)}function De(l,u){return l=l|0,u=u|0,A[880+(l*28|0)+(u<<2)>>2]|0}function Ie(l,u){return l=l|0,u=u|0,(A[880+(l*28|0)>>2]|0)==(u|0)?(u=0,u|0):(A[880+(l*28|0)+4>>2]|0)==(u|0)?(u=1,u|0):(A[880+(l*28|0)+8>>2]|0)==(u|0)?(u=2,u|0):(A[880+(l*28|0)+12>>2]|0)==(u|0)?(u=3,u|0):(A[880+(l*28|0)+16>>2]|0)==(u|0)?(u=4,u|0):(A[880+(l*28|0)+20>>2]|0)==(u|0)?(u=5,u|0):((A[880+(l*28|0)+24>>2]|0)==(u|0)?6:7)|0}function hc(){return 122}function dc(l){l=l|0;var u=0,c=0,p=0;u=0;do K0(u|0,0,45)|0,p=s0()|0|134225919,c=l+(u<<3)|0,A[c>>2]=-1,A[c+4>>2]=p,u=u+1|0;while((u|0)!=122)}function sr(l){return l=l|0,+W[l+16>>3]<+W[l+24>>3]|0}function ar(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;return c=+W[u>>3],!(c>=+W[l+8>>3])||!(c<=+W[l>>3])?(u=0,u|0):(p=+W[l+16>>3],c=+W[l+24>>3],g=+W[u+8>>3],u=g>=c,l=g<=p&1,p<c?u&&(l=1):u||(l=0),u=(l|0)!=0,u|0)}function Be(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0;x=t0,t0=t0+288|0,c=x+264|0,p=x+96|0,g=x,_=g,S=_+96|0;do A[_>>2]=0,_=_+4|0;while((_|0)<(S|0));return Ge(u,g),_=g,S=A[_>>2]|0,_=A[_+4>>2]|0,g5(S,_,c),y5(S,_,p),L=+K6(c,p+8|0),W[c>>3]=+W[l>>3],_=c+8|0,W[_>>3]=+W[l+16>>3],W[p>>3]=+W[l+8>>3],S=p+8|0,W[S>>3]=+W[l+24>>3],F=+K6(c,p),S=~~+H9(+(F*F/+Or(+ +i1(+((+W[_>>3]-+W[S>>3])/(+W[c>>3]-+W[p>>3]))),3)/(L*(L*2.59807621135)*.8))),t0=x,((S|0)==0?1:S)|0}function pc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0;S=t0,t0=t0+288|0,p=S+264|0,g=S+96|0,_=S,x=_,L=x+96|0;do A[x>>2]=0,x=x+4|0;while((x|0)<(L|0));return Ge(c,_),L=_,x=A[L>>2]|0,L=A[L+4>>2]|0,g5(x,L,p),y5(x,L,g),F=+K6(p,g+8|0),L=~~+H9(+(+K6(l,u)/(F*2))),t0=S,((L|0)==0?1:L)|0}function mc(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0,A[l>>2]=u,A[l+4>>2]=c,A[l+8>>2]=p}function gc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0;r0=u+8|0,A[r0>>2]=0,L=+W[l>>3],x=+i1(+L),F=+W[l+8>>3],S=+i1(+F)/.8660254037844386,x=x+S*.5,c=~~x,l=~~S,x=x-+(c|0),S=S-+(l|0);do if(x<.5)if(x<.3333333333333333)if(A[u>>2]=c,S<(x+1)*.5){A[u+4>>2]=l;break}else{l=l+1|0,A[u+4>>2]=l;break}else if(c0=1-x,l=(!(S<c0)&1)+l|0,A[u+4>>2]=l,c0<=S&S<x*2){c=c+1|0,A[u>>2]=c;break}else{A[u>>2]=c;break}else{if(!(x<.6666666666666666))if(c=c+1|0,A[u>>2]=c,S<x*.5){A[u+4>>2]=l;break}else{l=l+1|0,A[u+4>>2]=l;break}if(S<1-x){if(A[u+4>>2]=l,x*2+-1<S){A[u>>2]=c;break}}else l=l+1|0,A[u+4>>2]=l;c=c+1|0,A[u>>2]=c}while(0);do if(L<0)if(l&1){U=(l+1|0)/2|0,U=t7(c|0,((c|0)<0)<<31>>31|0,U|0,((U|0)<0)<<31>>31|0)|0,c=~~(+(c|0)-((+(U>>>0)+4294967296*+(s0()|0))*2+1)),A[u>>2]=c;break}else{U=(l|0)/2|0,U=t7(c|0,((c|0)<0)<<31>>31|0,U|0,((U|0)<0)<<31>>31|0)|0,c=~~(+(c|0)-(+(U>>>0)+4294967296*+(s0()|0))*2),A[u>>2]=c;break}while(0);U=u+4|0,F<0&&(c=c-((l<<1|1|0)/2|0)|0,A[u>>2]=c,l=0-l|0,A[U>>2]=l),p=l-c|0,(c|0)<0?(g=0-c|0,A[U>>2]=p,A[r0>>2]=g,A[u>>2]=0,l=p,c=0):g=0,(l|0)<0&&(c=c-l|0,A[u>>2]=c,g=g-l|0,A[r0>>2]=g,A[U>>2]=0,l=0),_=c-g|0,p=l-g|0,(g|0)<0&&(A[u>>2]=_,A[U>>2]=p,A[r0>>2]=0,l=p,c=_,g=0),p=(l|0)<(c|0)?l:c,p=(g|0)<(p|0)?g:p,!((p|0)<=0)&&(A[u>>2]=c-p,A[U>>2]=l-p,A[r0>>2]=g-p)}function k9(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0;u=A[l>>2]|0,x=l+4|0,c=A[x>>2]|0,(u|0)<0&&(c=c-u|0,A[x>>2]=c,_=l+8|0,A[_>>2]=(A[_>>2]|0)-u,A[l>>2]=0,u=0),(c|0)<0?(u=u-c|0,A[l>>2]=u,_=l+8|0,g=(A[_>>2]|0)-c|0,A[_>>2]=g,A[x>>2]=0,c=0):(g=l+8|0,_=g,g=A[g>>2]|0),(g|0)<0&&(u=u-g|0,A[l>>2]=u,c=c-g|0,A[x>>2]=c,A[_>>2]=0,g=0),p=(c|0)<(u|0)?c:u,p=(g|0)<(p|0)?g:p,!((p|0)<=0)&&(A[l>>2]=u-p,A[x>>2]=c-p,A[_>>2]=g-p)}function d5(l,u){l=l|0,u=u|0;var c=0,p=0;p=A[l+8>>2]|0,c=+((A[l+4>>2]|0)-p|0),W[u>>3]=+((A[l>>2]|0)-p|0)-c*.5,W[u+8>>3]=c*.8660254037844386}function V9(l,u,c){l=l|0,u=u|0,c=c|0,A[c>>2]=(A[u>>2]|0)+(A[l>>2]|0),A[c+4>>2]=(A[u+4>>2]|0)+(A[l+4>>2]|0),A[c+8>>2]=(A[u+8>>2]|0)+(A[l+8>>2]|0)}function Oe(l,u,c){l=l|0,u=u|0,c=c|0,A[c>>2]=(A[l>>2]|0)-(A[u>>2]|0),A[c+4>>2]=(A[l+4>>2]|0)-(A[u+4>>2]|0),A[c+8>>2]=(A[l+8>>2]|0)-(A[u+8>>2]|0)}function lr(l,u){l=l|0,u=u|0;var c=0,p=0;c=C9(A[l>>2]|0,u)|0,A[l>>2]=c,c=l+4|0,p=C9(A[c>>2]|0,u)|0,A[c>>2]=p,l=l+8|0,u=C9(A[l>>2]|0,u)|0,A[l>>2]=u}function a8(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;x=A[l>>2]|0,S=(x|0)<0,p=(A[l+4>>2]|0)-(S?x:0)|0,_=(p|0)<0,g=(_?0-p|0:0)+((A[l+8>>2]|0)-(S?x:0))|0,c=(g|0)<0,l=c?0:g,u=(_?0:p)-(c?g:0)|0,g=(S?0:x)-(_?p:0)-(c?g:0)|0,c=(u|0)<(g|0)?u:g,c=(l|0)<(c|0)?l:c,p=(c|0)>0,l=l-(p?c:0)|0,u=u-(p?c:0)|0;e:do switch(g-(p?c:0)|0){case 0:switch(u|0){case 0:return S=(l|0)==0?0:(l|0)==1?1:7,S|0;case 1:return S=(l|0)==0?2:(l|0)==1?3:7,S|0;default:break e}case 1:switch(u|0){case 0:return S=(l|0)==0?4:(l|0)==1?5:7,S|0;case 1:{if(!l)l=6;else break e;return l|0}default:break e}}while(0);return S=7,S|0}function Ar(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;x=l+8|0,c=A[x>>2]|0,u=(A[l>>2]|0)-c|0,S=l+4|0,c=(A[S>>2]|0)-c|0,p=f8(+((u*3|0)-c|0)/7)|0,A[l>>2]=p,u=f8(+((c<<1)+u|0)/7)|0,A[S>>2]=u,A[x>>2]=0,c=u-p|0,(p|0)<0?(_=0-p|0,A[S>>2]=c,A[x>>2]=_,A[l>>2]=0,u=c,p=0,c=_):c=0,(u|0)<0&&(p=p-u|0,A[l>>2]=p,c=c-u|0,A[x>>2]=c,A[S>>2]=0,u=0),_=p-c|0,g=u-c|0,(c|0)<0?(A[l>>2]=_,A[S>>2]=g,A[x>>2]=0,u=g,g=_,c=0):g=p,p=(u|0)<(g|0)?u:g,p=(c|0)<(p|0)?c:p,!((p|0)<=0)&&(A[l>>2]=g-p,A[S>>2]=u-p,A[x>>2]=c-p)}function qe(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;x=l+8|0,c=A[x>>2]|0,u=(A[l>>2]|0)-c|0,S=l+4|0,c=(A[S>>2]|0)-c|0,p=f8(+((u<<1)+c|0)/7)|0,A[l>>2]=p,u=f8(+((c*3|0)-u|0)/7)|0,A[S>>2]=u,A[x>>2]=0,c=u-p|0,(p|0)<0?(_=0-p|0,A[S>>2]=c,A[x>>2]=_,A[l>>2]=0,u=c,p=0,c=_):c=0,(u|0)<0&&(p=p-u|0,A[l>>2]=p,c=c-u|0,A[x>>2]=c,A[S>>2]=0,u=0),_=p-c|0,g=u-c|0,(c|0)<0?(A[l>>2]=_,A[S>>2]=g,A[x>>2]=0,u=g,g=_,c=0):g=p,p=(u|0)<(g|0)?u:g,p=(c|0)<(p|0)?c:p,!((p|0)<=0)&&(A[l>>2]=g-p,A[S>>2]=u-p,A[x>>2]=c-p)}function l8(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;u=A[l>>2]|0,x=l+4|0,c=A[x>>2]|0,S=l+8|0,p=A[S>>2]|0,g=c+(u*3|0)|0,A[l>>2]=g,c=p+(c*3|0)|0,A[x>>2]=c,u=(p*3|0)+u|0,A[S>>2]=u,p=c-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=p,A[S>>2]=u,A[l>>2]=0,c=p,p=0):p=g,(c|0)<0&&(p=p-c|0,A[l>>2]=p,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=p-u|0,g=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=g,A[S>>2]=0,p=_,u=0):g=c,c=(g|0)<(p|0)?g:p,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=p-c,A[x>>2]=g-c,A[S>>2]=u-c)}function p5(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;g=A[l>>2]|0,x=l+4|0,u=A[x>>2]|0,S=l+8|0,c=A[S>>2]|0,p=(u*3|0)+g|0,g=c+(g*3|0)|0,A[l>>2]=g,A[x>>2]=p,u=(c*3|0)+u|0,A[S>>2]=u,c=p-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=c,A[S>>2]=u,A[l>>2]=0,g=0):c=p,(c|0)<0&&(g=g-c|0,A[l>>2]=g,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=g-u|0,p=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=p,A[S>>2]=0,g=_,u=0):p=c,c=(p|0)<(g|0)?p:g,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=g-c,A[x>>2]=p-c,A[S>>2]=u-c)}function ur(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0;(u+-1|0)>>>0>=6||(g=(A[15472+(u*12|0)>>2]|0)+(A[l>>2]|0)|0,A[l>>2]=g,S=l+4|0,p=(A[15472+(u*12|0)+4>>2]|0)+(A[S>>2]|0)|0,A[S>>2]=p,x=l+8|0,u=(A[15472+(u*12|0)+8>>2]|0)+(A[x>>2]|0)|0,A[x>>2]=u,c=p-g|0,(g|0)<0?(u=u-g|0,A[S>>2]=c,A[x>>2]=u,A[l>>2]=0,p=0):(c=p,p=g),(c|0)<0&&(p=p-c|0,A[l>>2]=p,u=u-c|0,A[x>>2]=u,A[S>>2]=0,c=0),_=p-u|0,g=c-u|0,(u|0)<0?(A[l>>2]=_,A[S>>2]=g,A[x>>2]=0,p=_,u=0):g=c,c=(g|0)<(p|0)?g:p,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=p-c,A[S>>2]=g-c,A[x>>2]=u-c))}function cr(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;g=A[l>>2]|0,x=l+4|0,u=A[x>>2]|0,S=l+8|0,c=A[S>>2]|0,p=u+g|0,g=c+g|0,A[l>>2]=g,A[x>>2]=p,u=c+u|0,A[S>>2]=u,c=p-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=c,A[S>>2]=u,A[l>>2]=0,p=0):(c=p,p=g),(c|0)<0&&(p=p-c|0,A[l>>2]=p,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=p-u|0,g=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=g,A[S>>2]=0,p=_,u=0):g=c,c=(g|0)<(p|0)?g:p,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=p-c,A[x>>2]=g-c,A[S>>2]=u-c)}function A8(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;u=A[l>>2]|0,x=l+4|0,p=A[x>>2]|0,S=l+8|0,c=A[S>>2]|0,g=p+u|0,A[l>>2]=g,p=c+p|0,A[x>>2]=p,u=c+u|0,A[S>>2]=u,c=p-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=c,A[S>>2]=u,A[l>>2]=0,p=0):(c=p,p=g),(c|0)<0&&(p=p-c|0,A[l>>2]=p,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=p-u|0,g=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=g,A[S>>2]=0,p=_,u=0):g=c,c=(g|0)<(p|0)?g:p,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=p-c,A[x>>2]=g-c,A[S>>2]=u-c)}function m5(l){switch(l=l|0,l|0){case 1:{l=5;break}case 5:{l=4;break}case 4:{l=6;break}case 6:{l=2;break}case 2:{l=3;break}case 3:{l=1;break}}return l|0}function I4(l){switch(l=l|0,l|0){case 1:{l=3;break}case 3:{l=2;break}case 2:{l=6;break}case 6:{l=4;break}case 4:{l=5;break}case 5:{l=1;break}}return l|0}function fr(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;u=A[l>>2]|0,x=l+4|0,c=A[x>>2]|0,S=l+8|0,p=A[S>>2]|0,g=c+(u<<1)|0,A[l>>2]=g,c=p+(c<<1)|0,A[x>>2]=c,u=(p<<1)+u|0,A[S>>2]=u,p=c-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=p,A[S>>2]=u,A[l>>2]=0,c=p,p=0):p=g,(c|0)<0&&(p=p-c|0,A[l>>2]=p,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=p-u|0,g=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=g,A[S>>2]=0,p=_,u=0):g=c,c=(g|0)<(p|0)?g:p,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=p-c,A[x>>2]=g-c,A[S>>2]=u-c)}function hr(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;g=A[l>>2]|0,x=l+4|0,u=A[x>>2]|0,S=l+8|0,c=A[S>>2]|0,p=(u<<1)+g|0,g=c+(g<<1)|0,A[l>>2]=g,A[x>>2]=p,u=(c<<1)+u|0,A[S>>2]=u,c=p-g|0,(g|0)<0?(u=u-g|0,A[x>>2]=c,A[S>>2]=u,A[l>>2]=0,g=0):c=p,(c|0)<0&&(g=g-c|0,A[l>>2]=g,u=u-c|0,A[S>>2]=u,A[x>>2]=0,c=0),_=g-u|0,p=c-u|0,(u|0)<0?(A[l>>2]=_,A[x>>2]=p,A[S>>2]=0,g=_,u=0):p=c,c=(p|0)<(g|0)?p:g,c=(u|0)<(c|0)?u:c,!((c|0)<=0)&&(A[l>>2]=g-c,A[x>>2]=p-c,A[S>>2]=u-c)}function Fe(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0;return x=(A[l>>2]|0)-(A[u>>2]|0)|0,S=(x|0)<0,p=(A[l+4>>2]|0)-(A[u+4>>2]|0)-(S?x:0)|0,_=(p|0)<0,g=(S?0-x|0:0)+(A[l+8>>2]|0)-(A[u+8>>2]|0)+(_?0-p|0:0)|0,l=(g|0)<0,u=l?0:g,c=(_?0:p)-(l?g:0)|0,g=(S?0:x)-(_?p:0)-(l?g:0)|0,l=(c|0)<(g|0)?c:g,l=(u|0)<(l|0)?u:l,p=(l|0)>0,u=u-(p?l:0)|0,c=c-(p?l:0)|0,l=g-(p?l:0)|0,l=(l|0)>-1?l:0-l|0,c=(c|0)>-1?c:0-c|0,u=(u|0)>-1?u:0-u|0,u=(c|0)>(u|0)?c:u,((l|0)>(u|0)?l:u)|0}function yc(l,u){l=l|0,u=u|0;var c=0;c=A[l+8>>2]|0,A[u>>2]=(A[l>>2]|0)-c,A[u+4>>2]=(A[l+4>>2]|0)-c}function vc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0;p=A[l>>2]|0,A[u>>2]=p,l=A[l+4>>2]|0,x=u+4|0,A[x>>2]=l,S=u+8|0,A[S>>2]=0,c=l-p|0,(p|0)<0?(l=0-p|0,A[x>>2]=c,A[S>>2]=l,A[u>>2]=0,p=0):(c=l,l=0),(c|0)<0&&(p=p-c|0,A[u>>2]=p,l=l-c|0,A[S>>2]=l,A[x>>2]=0,c=0),_=p-l|0,g=c-l|0,(l|0)<0?(A[u>>2]=_,A[x>>2]=g,A[S>>2]=0,c=g,g=_,l=0):g=p,p=(c|0)<(g|0)?c:g,p=(l|0)<(p|0)?l:p,!((p|0)<=0)&&(A[u>>2]=g-p,A[x>>2]=c-p,A[S>>2]=l-p)}function dr(l){l=l|0;var u=0,c=0,p=0,g=0;u=l+8|0,g=A[u>>2]|0,c=g-(A[l>>2]|0)|0,A[l>>2]=c,p=l+4|0,l=(A[p>>2]|0)-g|0,A[p>>2]=l,A[u>>2]=0-(l+c)}function xc(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;c=A[l>>2]|0,u=0-c|0,A[l>>2]=u,x=l+8|0,A[x>>2]=0,S=l+4|0,p=A[S>>2]|0,g=p+c|0,(c|0)>0?(A[S>>2]=g,A[x>>2]=c,A[l>>2]=0,u=0,p=g):c=0,(p|0)<0?(_=u-p|0,A[l>>2]=_,c=c-p|0,A[x>>2]=c,A[S>>2]=0,g=_-c|0,u=0-c|0,(c|0)<0?(A[l>>2]=g,A[S>>2]=u,A[x>>2]=0,p=u,c=0):(p=0,g=_)):g=u,u=(p|0)<(g|0)?p:g,u=(c|0)<(u|0)?c:u,!((u|0)<=0)&&(A[l>>2]=g-u,A[S>>2]=p-u,A[x>>2]=c-u)}function _c(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;p=t0,t0=t0+16|0,g=p,bc(l,u,c,g),gc(g,c+4|0),t0=p}function bc(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0;if(L=t0,t0=t0+32|0,_=L,bf(l,_),A[c>>2]=0,g=+y9(15888,_),x=+y9(15912,_),x<g&&(A[c>>2]=1,g=x),x=+y9(15936,_),x<g&&(A[c>>2]=2,g=x),x=+y9(15960,_),x<g&&(A[c>>2]=3,g=x),x=+y9(15984,_),x<g&&(A[c>>2]=4,g=x),x=+y9(16008,_),x<g&&(A[c>>2]=5,g=x),x=+y9(16032,_),x<g&&(A[c>>2]=6,g=x),x=+y9(16056,_),x<g&&(A[c>>2]=7,g=x),x=+y9(16080,_),x<g&&(A[c>>2]=8,g=x),x=+y9(16104,_),x<g&&(A[c>>2]=9,g=x),x=+y9(16128,_),x<g&&(A[c>>2]=10,g=x),x=+y9(16152,_),x<g&&(A[c>>2]=11,g=x),x=+y9(16176,_),x<g&&(A[c>>2]=12,g=x),x=+y9(16200,_),x<g&&(A[c>>2]=13,g=x),x=+y9(16224,_),x<g&&(A[c>>2]=14,g=x),x=+y9(16248,_),x<g&&(A[c>>2]=15,g=x),x=+y9(16272,_),x<g&&(A[c>>2]=16,g=x),x=+y9(16296,_),x<g&&(A[c>>2]=17,g=x),x=+y9(16320,_),x<g&&(A[c>>2]=18,g=x),x=+y9(16344,_),x<g&&(A[c>>2]=19,g=x),x=+w9(+(1-g*.5)),x<1e-16){A[p>>2]=0,A[p+4>>2]=0,A[p+8>>2]=0,A[p+12>>2]=0,t0=L;return}if(c=A[c>>2]|0,g=+W[16368+(c*24|0)>>3],g=+J6(g-+J6(+Tc(15568+(c<<4)|0,l))),M2(u)|0?S=+J6(g+-.3334731722518321):S=g,g=+r9(+x)/.381966011250105,(u|0)>0){_=0;do g=g*2.6457513110645907,_=_+1|0;while((_|0)!=(u|0))}x=+D1(+S)*g,W[p>>3]=x,S=+R1(+S)*g,W[p+8>>3]=S,t0=L}function Z6(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0;if(_=+_f(l),_<1e-16){u=15568+(u<<4)|0,A[g>>2]=A[u>>2],A[g+4>>2]=A[u+4>>2],A[g+8>>2]=A[u+8>>2],A[g+12>>2]=A[u+12>>2];return}if(x=+N1(+ +W[l+8>>3],+ +W[l>>3]),(c|0)>0){l=0;do _=_/2.6457513110645907,l=l+1|0;while((l|0)!=(c|0))}p?(_=_/3,c=(M2(c)|0)==0,_=+$2(+((c?_:_/2.6457513110645907)*.381966011250105))):(_=+$2(+(_*.381966011250105)),M2(c)|0&&(x=+J6(x+.3334731722518321))),Cc(15568+(u<<4)|0,+J6(+W[16368+(u*24|0)>>3]-x),_,g)}function wc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;p=t0,t0=t0+16|0,g=p,d5(l+4|0,g),Z6(g,A[l>>2]|0,u,0,c),t0=p}function pr(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0,w1=0,j1=0,G1=0,Z1=0,U1=0,n9=0,i9=0,x1=0;if(n9=t0,t0=t0+272|0,_=n9+256|0,S0=n9+240|0,G1=n9,Z1=n9+224|0,U1=n9+208|0,O0=n9+176|0,f0=n9+160|0,n1=n9+192|0,o1=n9+144|0,Q0=n9+128|0,Z0=n9+112|0,w1=n9+96|0,j1=n9+80|0,A[_>>2]=u,A[S0>>2]=A[l>>2],A[S0+4>>2]=A[l+4>>2],A[S0+8>>2]=A[l+8>>2],A[S0+12>>2]=A[l+12>>2],mr(S0,_,G1),A[g>>2]=0,S0=p+c+((p|0)==5&1)|0,(S0|0)<=(c|0)){t0=n9;return}L=A[_>>2]|0,F=Z1+4|0,U=O0+4|0,r0=c+5|0,c0=16848+(L<<2)|0,y0=16928+(L<<2)|0,C0=Q0+8|0,R0=Z0+8|0,z0=w1+8|0,e1=U1+4|0,S=c;e:for(;;){x=G1+(((S|0)%5|0)<<4)|0,A[U1>>2]=A[x>>2],A[U1+4>>2]=A[x+4>>2],A[U1+8>>2]=A[x+8>>2],A[U1+12>>2]=A[x+12>>2];do;while((z5(U1,L,0,1)|0)==2);if((S|0)>(c|0)&(M2(u)|0)!=0){if(A[O0>>2]=A[U1>>2],A[O0+4>>2]=A[U1+4>>2],A[O0+8>>2]=A[U1+8>>2],A[O0+12>>2]=A[U1+12>>2],d5(F,f0),p=A[O0>>2]|0,_=A[17008+(p*80|0)+(A[Z1>>2]<<2)>>2]|0,A[O0>>2]=A[18608+(p*80|0)+(_*20|0)>>2],x=A[18608+(p*80|0)+(_*20|0)+16>>2]|0,(x|0)>0){l=0;do cr(U),l=l+1|0;while((l|0)<(x|0))}switch(x=18608+(p*80|0)+(_*20|0)+4|0,A[n1>>2]=A[x>>2],A[n1+4>>2]=A[x+4>>2],A[n1+8>>2]=A[x+8>>2],lr(n1,(A[c0>>2]|0)*3|0),V9(U,n1,U),k9(U),d5(U,o1),i9=+(A[y0>>2]|0),W[Q0>>3]=i9*3,W[C0>>3]=0,x1=i9*-1.5,W[Z0>>3]=x1,W[R0>>3]=i9*2.598076211353316,W[w1>>3]=x1,W[z0>>3]=i9*-2.598076211353316,A[17008+((A[O0>>2]|0)*80|0)+(A[U1>>2]<<2)>>2]|0){case 1:{l=Z0,p=Q0;break}case 3:{l=w1,p=Z0;break}case 2:{l=Q0,p=w1;break}default:{l=12;break e}}Cr(f0,o1,p,l,j1),Z6(j1,A[O0>>2]|0,L,1,g+8+(A[g>>2]<<4)|0),A[g>>2]=(A[g>>2]|0)+1}if((S|0)<(r0|0)&&(d5(e1,O0),Z6(O0,A[U1>>2]|0,L,1,g+8+(A[g>>2]<<4)|0),A[g>>2]=(A[g>>2]|0)+1),A[Z1>>2]=A[U1>>2],A[Z1+4>>2]=A[U1+4>>2],A[Z1+8>>2]=A[U1+8>>2],A[Z1+12>>2]=A[U1+12>>2],S=S+1|0,(S|0)>=(S0|0)){l=3;break}}if((l|0)==3){t0=n9;return}else(l|0)==12&&q1(22474,22521,581,22531)}function mr(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0;L=t0,t0=t0+128|0,p=L+64|0,g=L,_=p,x=20208,S=_+60|0;do A[_>>2]=A[x>>2],_=_+4|0,x=x+4|0;while((_|0)<(S|0));_=g,x=20272,S=_+60|0;do A[_>>2]=A[x>>2],_=_+4|0,x=x+4|0;while((_|0)<(S|0));S=(M2(A[u>>2]|0)|0)==0,p=S?p:g,g=l+4|0,fr(g),hr(g),M2(A[u>>2]|0)|0&&(p5(g),A[u>>2]=(A[u>>2]|0)+1),A[c>>2]=A[l>>2],u=c+4|0,V9(g,p,u),k9(u),A[c+16>>2]=A[l>>2],u=c+20|0,V9(g,p+12|0,u),k9(u),A[c+32>>2]=A[l>>2],u=c+36|0,V9(g,p+24|0,u),k9(u),A[c+48>>2]=A[l>>2],u=c+52|0,V9(g,p+36|0,u),k9(u),A[c+64>>2]=A[l>>2],c=c+68|0,V9(g,p+48|0,c),k9(c),t0=L}function z5(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0;if(C0=t0,t0=t0+32|0,c0=C0+12|0,S=C0,y0=l+4|0,r0=A[16928+(u<<2)>>2]|0,U=(p|0)!=0,r0=U?r0*3|0:r0,g=A[y0>>2]|0,F=l+8|0,x=A[F>>2]|0,U){if(_=l+12|0,p=A[_>>2]|0,g=x+g+p|0,(g|0)==(r0|0))return y0=1,t0=C0,y0|0;L=_}else L=l+12|0,p=A[L>>2]|0,g=x+g+p|0;if((g|0)<=(r0|0))return y0=0,t0=C0,y0|0;do if((p|0)>0){if(p=A[l>>2]|0,(x|0)>0){_=18608+(p*80|0)+60|0,p=l;break}p=18608+(p*80|0)+40|0,c?(mc(c0,r0,0,0),Oe(y0,c0,S),A8(S),V9(S,c0,y0),_=p,p=l):(_=p,p=l)}else _=18608+((A[l>>2]|0)*80|0)+20|0,p=l;while(0);if(A[p>>2]=A[_>>2],g=_+16|0,(A[g>>2]|0)>0){p=0;do cr(y0),p=p+1|0;while((p|0)<(A[g>>2]|0))}return l=_+4|0,A[c0>>2]=A[l>>2],A[c0+4>>2]=A[l+4>>2],A[c0+8>>2]=A[l+8>>2],u=A[16848+(u<<2)>>2]|0,lr(c0,U?u*3|0:u),V9(y0,c0,y0),k9(y0),U?p=((A[F>>2]|0)+(A[y0>>2]|0)+(A[L>>2]|0)|0)==(r0|0)?1:2:p=2,y0=p,t0=C0,y0|0}function Mc(l,u){l=l|0,u=u|0;var c=0;do c=z5(l,u,0,1)|0;while((c|0)==2);return c|0}function gr(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0,w1=0,j1=0,G1=0;if(w1=t0,t0=t0+240|0,_=w1+224|0,n1=w1+208|0,o1=w1,Q0=w1+192|0,Z0=w1+176|0,z0=w1+160|0,e1=w1+144|0,S0=w1+128|0,O0=w1+112|0,f0=w1+96|0,A[_>>2]=u,A[n1>>2]=A[l>>2],A[n1+4>>2]=A[l+4>>2],A[n1+8>>2]=A[l+8>>2],A[n1+12>>2]=A[l+12>>2],yr(n1,_,o1),A[g>>2]=0,R0=p+c+((p|0)==6&1)|0,(R0|0)<=(c|0)){t0=w1;return}L=A[_>>2]|0,F=c+6|0,U=16928+(L<<2)|0,r0=e1+8|0,c0=S0+8|0,y0=O0+8|0,C0=Q0+4|0,x=0,S=c,p=-1;e:for(;;){if(_=(S|0)%6|0,l=o1+(_<<4)|0,A[Q0>>2]=A[l>>2],A[Q0+4>>2]=A[l+4>>2],A[Q0+8>>2]=A[l+8>>2],A[Q0+12>>2]=A[l+12>>2],l=x,x=z5(Q0,L,0,1)|0,(S|0)>(c|0)&(M2(u)|0)!=0&&(l|0)!=1&&(A[Q0>>2]|0)!=(p|0)){switch(d5(o1+(((_+5|0)%6|0)<<4)+4|0,Z0),d5(o1+(_<<4)+4|0,z0),j1=+(A[U>>2]|0),W[e1>>3]=j1*3,W[r0>>3]=0,G1=j1*-1.5,W[S0>>3]=G1,W[c0>>3]=j1*2.598076211353316,W[O0>>3]=G1,W[y0>>3]=j1*-2.598076211353316,_=A[n1>>2]|0,A[17008+(_*80|0)+(((p|0)==(_|0)?A[Q0>>2]|0:p)<<2)>>2]|0){case 1:{l=S0,p=e1;break}case 3:{l=O0,p=S0;break}case 2:{l=e1,p=O0;break}default:{l=8;break e}}Cr(Z0,z0,p,l,f0),!(Pr(Z0,f0)|0)&&!(Pr(z0,f0)|0)&&(Z6(f0,A[n1>>2]|0,L,1,g+8+(A[g>>2]<<4)|0),A[g>>2]=(A[g>>2]|0)+1)}if((S|0)<(F|0)&&(d5(C0,Z0),Z6(Z0,A[Q0>>2]|0,L,1,g+8+(A[g>>2]<<4)|0),A[g>>2]=(A[g>>2]|0)+1),S=S+1|0,(S|0)>=(R0|0)){l=3;break}else p=A[Q0>>2]|0}if((l|0)==3){t0=w1;return}else(l|0)==8&&q1(22557,22521,746,22602)}function yr(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0;L=t0,t0=t0+160|0,p=L+80|0,g=L,_=p,x=20336,S=_+72|0;do A[_>>2]=A[x>>2],_=_+4|0,x=x+4|0;while((_|0)<(S|0));_=g,x=20416,S=_+72|0;do A[_>>2]=A[x>>2],_=_+4|0,x=x+4|0;while((_|0)<(S|0));S=(M2(A[u>>2]|0)|0)==0,p=S?p:g,g=l+4|0,fr(g),hr(g),M2(A[u>>2]|0)|0&&(p5(g),A[u>>2]=(A[u>>2]|0)+1),A[c>>2]=A[l>>2],u=c+4|0,V9(g,p,u),k9(u),A[c+16>>2]=A[l>>2],u=c+20|0,V9(g,p+12|0,u),k9(u),A[c+32>>2]=A[l>>2],u=c+36|0,V9(g,p+24|0,u),k9(u),A[c+48>>2]=A[l>>2],u=c+52|0,V9(g,p+36|0,u),k9(u),A[c+64>>2]=A[l>>2],u=c+68|0,V9(g,p+48|0,u),k9(u),A[c+80>>2]=A[l>>2],c=c+84|0,V9(g,p+60|0,c),k9(c),t0=L}function J6(l){l=+l;var u=0;return u=l<0?l+6.283185307179586:l,+(l>=6.283185307179586?u+-6.283185307179586:u)}function G5(l,u){return l=l|0,u=u|0,+i1(+(+W[l>>3]-+W[u>>3]))<17453292519943298e-27?(u=+i1(+(+W[l+8>>3]-+W[u+8>>3]))<17453292519943298e-27,u|0):(u=0,u|0)}function Sc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0;return g=+W[u>>3],p=+W[l>>3],_=+R1(+((g-p)*.5)),c=+R1(+((+W[u+8>>3]-+W[l+8>>3])*.5)),c=_*_+c*(+D1(+g)*+D1(+p)*c),+(+N1(+ +a1(+c),+ +a1(+(1-c)))*2)}function K6(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0;return g=+W[u>>3],p=+W[l>>3],_=+R1(+((g-p)*.5)),c=+R1(+((+W[u+8>>3]-+W[l+8>>3])*.5)),c=_*_+c*(+D1(+g)*+D1(+p)*c),+(+N1(+ +a1(+c),+ +a1(+(1-c)))*2*6371.007180918475)}function Ec(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0;return g=+W[u>>3],p=+W[l>>3],_=+R1(+((g-p)*.5)),c=+R1(+((+W[u+8>>3]-+W[l+8>>3])*.5)),c=_*_+c*(+D1(+g)*+D1(+p)*c),+(+N1(+ +a1(+c),+ +a1(+(1-c)))*2*6371.007180918475*1e3)}function Tc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;return _=+W[u>>3],p=+D1(+_),g=+W[u+8>>3]-+W[l+8>>3],x=p*+R1(+g),c=+W[l>>3],+ +N1(+x,+(+R1(+_)*+D1(+c)-+D1(+g)*(p*+R1(+c))))}function Cc(l,u,c,p){l=l|0,u=+u,c=+c,p=p|0;var g=0,_=0,x=0,S=0;if(c<1e-16){A[p>>2]=A[l>>2],A[p+4>>2]=A[l+4>>2],A[p+8>>2]=A[l+8>>2],A[p+12>>2]=A[l+12>>2];return}_=u<0?u+6.283185307179586:u,_=u>=6.283185307179586?_+-6.283185307179586:_;do if(_<1e-16)u=+W[l>>3]+c,W[p>>3]=u,g=p;else{if(g=+i1(+(_+-3.141592653589793))<1e-16,u=+W[l>>3],g){u=u-c,W[p>>3]=u,g=p;break}if(x=+D1(+c),c=+R1(+c),u=x*+R1(+u)+ +D1(+_)*(c*+D1(+u)),u=u>1?1:u,u=+O1(+(u<-1?-1:u)),W[p>>3]=u,+i1(+(u+-1.5707963267948966))<1e-16){W[p>>3]=1.5707963267948966,W[p+8>>3]=0;return}if(+i1(+(u+1.5707963267948966))<1e-16){W[p>>3]=-1.5707963267948966,W[p+8>>3]=0;return}if(S=+D1(+u),_=c*+R1(+_)/S,c=+W[l>>3],u=(x-+R1(+u)*+R1(+c))/+D1(+c)/S,x=_>1?1:_,u=u>1?1:u,u=+W[l+8>>3]+ +N1(+(x<-1?-1:x),+(u<-1?-1:u)),u>3.141592653589793)do u=u+-6.283185307179586;while(u>3.141592653589793);if(u<-3.141592653589793)do u=u+6.283185307179586;while(u<-3.141592653589793);W[p+8>>3]=u;return}while(0);if(+i1(+(u+-1.5707963267948966))<1e-16){W[g>>3]=1.5707963267948966,W[p+8>>3]=0;return}if(+i1(+(u+1.5707963267948966))<1e-16){W[g>>3]=-1.5707963267948966,W[p+8>>3]=0;return}if(u=+W[l+8>>3],u>3.141592653589793)do u=u+-6.283185307179586;while(u>3.141592653589793);if(u<-3.141592653589793)do u=u+6.283185307179586;while(u<-3.141592653589793);W[p+8>>3]=u}function Pc(l){return l=l|0,+ +W[20496+(l<<3)>>3]}function Rc(l){return l=l|0,+ +W[20624+(l<<3)>>3]}function Lc(l){return l=l|0,+ +W[20752+(l<<3)>>3]}function Dc(l){return l=l|0,+ +W[20880+(l<<3)>>3]}function Ic(l){l=l|0;var u=0;return u=21008+(l<<3)|0,l=A[u>>2]|0,A1(A[u+4>>2]|0),l|0}function H5(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0;return c0=+W[u>>3],U=+W[l>>3],L=+R1(+((c0-U)*.5)),_=+W[u+8>>3],F=+W[l+8>>3],x=+R1(+((_-F)*.5)),S=+D1(+U),r0=+D1(+c0),x=L*L+x*(r0*S*x),x=+N1(+ +a1(+x),+ +a1(+(1-x)))*2,L=+W[c>>3],c0=+R1(+((L-c0)*.5)),p=+W[c+8>>3],_=+R1(+((p-_)*.5)),g=+D1(+L),_=c0*c0+_*(r0*g*_),_=+N1(+ +a1(+_),+ +a1(+(1-_)))*2,L=+R1(+((U-L)*.5)),p=+R1(+((F-p)*.5)),p=L*L+p*(S*g*p),p=+N1(+ +a1(+p),+ +a1(+(1-p)))*2,g=(x+_+p)*.5,+(+$2(+ +a1(+(+r9(+(g*.5))*+r9(+((g-x)*.5))*+r9(+((g-_)*.5))*+r9(+((g-p)*.5)))))*4)}function Bc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;if(_=t0,t0=t0+192|0,p=_+168|0,g=_,g5(l,u,p),y5(l,u,g),u=A[g>>2]|0,(u|0)<=0)return c=0,t0=_,+c;if(c=+H5(g+8|0,g+8+(((u|0)!=1&1)<<4)|0,p)+0,(u|0)==1)return t0=_,+c;l=1;do x=l,l=l+1|0,c=c+ +H5(g+8+(x<<4)|0,g+8+(((l|0)%(u|0)|0)<<4)|0,p);while((l|0)<(u|0));return t0=_,+c}function Oc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;if(_=t0,t0=t0+192|0,p=_+168|0,g=_,g5(l,u,p),y5(l,u,g),u=A[g>>2]|0,(u|0)>0){if(c=+H5(g+8|0,g+8+(((u|0)!=1&1)<<4)|0,p)+0,(u|0)!=1){l=1;do x=l,l=l+1|0,c=c+ +H5(g+8+(x<<4)|0,g+8+(((l|0)%(u|0)|0)<<4)|0,p);while((l|0)<(u|0))}}else c=0;return t0=_,+(c*6371.007180918475*6371.007180918475)}function qc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;if(_=t0,t0=t0+192|0,p=_+168|0,g=_,g5(l,u,p),y5(l,u,g),u=A[g>>2]|0,(u|0)>0){if(c=+H5(g+8|0,g+8+(((u|0)!=1&1)<<4)|0,p)+0,(u|0)!=1){l=1;do x=l,l=l+1|0,c=c+ +H5(g+8+(x<<4)|0,g+8+(((l|0)%(u|0)|0)<<4)|0,p);while((l|0)<(u|0))}}else c=0;return t0=_,+(c*6371.007180918475*6371.007180918475*1e3*1e3)}function Fc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0;if(x=t0,t0=t0+176|0,_=x,u8(l,u,_),l=A[_>>2]|0,(l|0)<=1)return g=0,t0=x,+g;u=l+-1|0,l=0,c=0,p=+W[_+8>>3],g=+W[_+16>>3];do l=l+1|0,L=p,p=+W[_+8+(l<<4)>>3],F=+R1(+((p-L)*.5)),S=g,g=+W[_+8+(l<<4)+8>>3],S=+R1(+((g-S)*.5)),S=F*F+S*(+D1(+p)*+D1(+L)*S),c=c+ +N1(+ +a1(+S),+ +a1(+(1-S)))*2;while((l|0)<(u|0));return t0=x,+c}function kc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0;if(x=t0,t0=t0+176|0,_=x,u8(l,u,_),l=A[_>>2]|0,(l|0)<=1)return g=0,t0=x,+g;u=l+-1|0,l=0,c=0,p=+W[_+8>>3],g=+W[_+16>>3];do l=l+1|0,L=p,p=+W[_+8+(l<<4)>>3],F=+R1(+((p-L)*.5)),S=g,g=+W[_+8+(l<<4)+8>>3],S=+R1(+((g-S)*.5)),S=F*F+S*(+D1(+L)*+D1(+p)*S),c=c+ +N1(+ +a1(+S),+ +a1(+(1-S)))*2;while((l|0)!=(u|0));return F=c*6371.007180918475,t0=x,+F}function Nc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0;if(x=t0,t0=t0+176|0,_=x,u8(l,u,_),l=A[_>>2]|0,(l|0)<=1)return g=0,t0=x,+g;u=l+-1|0,l=0,c=0,p=+W[_+8>>3],g=+W[_+16>>3];do l=l+1|0,L=p,p=+W[_+8+(l<<4)>>3],F=+R1(+((p-L)*.5)),S=g,g=+W[_+8+(l<<4)+8>>3],S=+R1(+((g-S)*.5)),S=F*F+S*(+D1(+L)*+D1(+p)*S),c=c+ +N1(+ +a1(+S),+ +a1(+(1-S)))*2;while((l|0)!=(u|0));return F=c*6371.007180918475*1e3,t0=x,+F}function Uc(l,u){return l=l|0,u=u|0,u=N0(l|0,u|0,52)|0,s0()|0,u&15|0}function vr(l,u){return l=l|0,u=u|0,u=N0(l|0,u|0,45)|0,s0()|0,u&127|0}function xr(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0;if(!(!0&(u&-16777216|0)==134217728)||(x=N0(l|0,u|0,45)|0,s0()|0,x=x&127,x>>>0>121))return u=0,u|0;c=N0(l|0,u|0,52)|0,s0()|0,c=c&15;do if(c|0){for(g=1,p=0;;){if(_=N0(l|0,u|0,(15-g|0)*3|0)|0,s0()|0,_=_&7,(_|0)!=0&(p^1))if((_|0)==1&(s9(x)|0)!=0){S=0,p=13;break}else p=1;if((_|0)==7){S=0,p=13;break}if(g>>>0<c>>>0)g=g+1|0;else{p=9;break}}if((p|0)==9){if((c|0)==15)S=1;else break;return S|0}else if((p|0)==13)return S|0}while(0);for(;;){if(S=N0(l|0,u|0,(14-c|0)*3|0)|0,s0()|0,!((S&7|0)==7&!0)){S=0,p=13;break}if(c>>>0<14)c=c+1|0;else{S=1,p=13;break}}return(p|0)==13?S|0:0}function ke(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,(p|0)>=(c|0)){if((p|0)!=(c|0))if(c>>>0<=15){if(g=K0(c|0,0,52)|0,l=g|l,u=s0()|0|u&-15728641,(p|0)>(c|0))do g=K0(7,0,(14-c|0)*3|0)|0,c=c+1|0,l=g|l,u=s0()|0|u;while((c|0)<(p|0))}else u=0,l=0}else u=0,l=0;return A1(u|0),l|0}function zc(l,u,c){return l=l|0,u=u|0,c=c|0,l=N0(l|0,u|0,52)|0,s0()|0,l=l&15,(c|0)<16&(l|0)<=(c|0)?(c=c8(7,c-l|0)|0,c|0):(c=0,c|0)}function t2(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0;if(x=N0(l|0,u|0,52)|0,s0()|0,x=x&15,!!((c|0)<16&(x|0)<=(c|0))){if((x|0)==(c|0)){c=p,A[c>>2]=l,A[c+4>>2]=u;return}if(L=c8(7,c-x|0)|0,F=(L|0)/7|0,S=N0(l|0,u|0,45)|0,s0()|0,!(s9(S&127)|0))_=0;else{e:do if(!x)g=0;else for(_=1;;){if(g=N0(l|0,u|0,(15-_|0)*3|0)|0,s0()|0,g=g&7,g|0)break e;if(_>>>0<x>>>0)_=_+1|0;else{g=0;break}}while(0);_=(g|0)==0}if(U=K0(x+1|0,0,52)|0,g=s0()|0|u&-15728641,S=(14-x|0)*3|0,u=K0(7,0,S|0)|0,u=(U|l)&~u,x=g&~(s0()|0),t2(u,x,c,p),g=p+(F<<3)|0,!_){U=K0(1,0,S|0)|0,t2(U|u,s0()|0|x,c,g),U=g+(F<<3)|0,L=K0(2,0,S|0)|0,t2(L|u,s0()|0|x,c,U),U=U+(F<<3)|0,L=K0(3,0,S|0)|0,t2(L|u,s0()|0|x,c,U),U=U+(F<<3)|0,L=K0(4,0,S|0)|0,t2(L|u,s0()|0|x,c,U),U=U+(F<<3)|0,L=K0(5,0,S|0)|0,t2(L|u,s0()|0|x,c,U),L=K0(6,0,S|0)|0,t2(L|u,s0()|0|x,c,U+(F<<3)|0);return}_=g+(F<<3)|0,(L|0)>6&&(L=g+8|0,U=(_>>>0>L>>>0?_:L)+-1+(0-g)|0,q2(g|0,0,U+8&-8|0)|0,g=L+(U>>>3<<3)|0),U=K0(2,0,S|0)|0,t2(U|u,s0()|0|x,c,g),U=g+(F<<3)|0,L=K0(3,0,S|0)|0,t2(L|u,s0()|0|x,c,U),U=U+(F<<3)|0,L=K0(4,0,S|0)|0,t2(L|u,s0()|0|x,c,U),U=U+(F<<3)|0,L=K0(5,0,S|0)|0,t2(L|u,s0()|0|x,c,U),L=K0(6,0,S|0)|0,t2(L|u,s0()|0|x,c,U+(F<<3)|0)}}function M9(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;if(g=N0(l|0,u|0,45)|0,s0()|0,!(s9(g&127)|0))return g=0,g|0;g=N0(l|0,u|0,52)|0,s0()|0,g=g&15;e:do if(!g)c=0;else for(p=1;;){if(c=N0(l|0,u|0,(15-p|0)*3|0)|0,s0()|0,c=c&7,c|0)break e;if(p>>>0<g>>>0)p=p+1|0;else{c=0;break}}while(0);return g=(c|0)==0&1,g|0}function Gc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,(c|0)<16&(p|0)<=(c|0)){if((p|0)!=(c|0)&&(g=K0(c|0,0,52)|0,l=g|l,u=s0()|0|u&-15728641,(p|0)<(c|0)))do g=K0(7,0,(14-p|0)*3|0)|0,p=p+1|0,l=l&~g,u=u&~(s0()|0);while((p|0)<(c|0))}else u=0,l=0;return A1(u|0),l|0}function Hc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0;if(!c)return Q0=0,Q0|0;if(g=l,p=A[g>>2]|0,g=A[g+4>>2]|0,!0&(g&15728640|0)==0){if((c|0)<=0||(Q0=u,A[Q0>>2]=p,A[Q0+4>>2]=g,(c|0)==1))return Q0=0,Q0|0;p=1;do n1=l+(p<<3)|0,o1=A[n1+4>>2]|0,Q0=u+(p<<3)|0,A[Q0>>2]=A[n1>>2],A[Q0+4>>2]=o1,p=p+1|0;while((p|0)!=(c|0));return p=0,p|0}if(n1=c<<3,o1=X2(n1)|0,!o1)return Q0=-3,Q0|0;if(d8(o1|0,l|0,n1|0)|0,f0=O2(c,8)|0,!f0)return E1(o1),Q0=-3,Q0|0;p=c;e:for(;;){x=o1,U=A[x>>2]|0,x=A[x+4>>2]|0,S0=N0(U|0,x|0,52)|0,s0()|0,S0=S0&15,O0=S0+-1|0,e1=(p|0)>0;t:do if(e1){if(z0=((p|0)<0)<<31>>31,C0=K0(O0|0,0,52)|0,R0=s0()|0,O0>>>0>15)for(g=0,l=U,c=x;;){if(!((l|0)==0&(c|0)==0)){if(_=N0(l|0,c|0,52)|0,s0()|0,_=_&15,S=(_|0)<(O0|0),_=(_|0)==(O0|0),F=S?0:_?l:0,l=S?0:_?c:0,c=O4(F|0,l|0,p|0,z0|0)|0,s0()|0,_=f0+(c<<3)|0,S=_,L=A[S>>2]|0,S=A[S+4>>2]|0,(L|0)==0&(S|0)==0)c=F;else for(C0=0,y0=c,c0=S,c=F;;){if((C0|0)>(p|0)){Q0=41;break e}if((L|0)==(c|0)&(c0&-117440513|0)==(l|0)){F=N0(L|0,c0|0,56)|0,s0()|0,F=F&7,r0=F+1|0,R0=N0(L|0,c0|0,45)|0,s0()|0;n:do if(!(s9(R0&127)|0))S=7;else{if(L=N0(L|0,c0|0,52)|0,s0()|0,L=L&15,!L){S=6;break}for(S=1;;){if(R0=K0(7,0,(15-S|0)*3|0)|0,!((R0&c|0)==0&((s0()|0)&l|0)==0)){S=7;break n}if(S>>>0<L>>>0)S=S+1|0;else{S=6;break}}}while(0);if((F+2|0)>>>0>S>>>0){Q0=51;break e}R0=K0(r0|0,0,56)|0,l=s0()|0|l&-117440513,S=_,A[S>>2]=0,A[S+4>>2]=0,S=y0,c=R0|c}else S=(y0+1|0)%(p|0)|0;if(_=f0+(S<<3)|0,c0=_,L=A[c0>>2]|0,c0=A[c0+4>>2]|0,(L|0)==0&(c0|0)==0)break;C0=C0+1|0,y0=S}R0=_,A[R0>>2]=c,A[R0+4>>2]=l}if(g=g+1|0,(g|0)>=(p|0))break t;c=o1+(g<<3)|0,l=A[c>>2]|0,c=A[c+4>>2]|0}for(g=0,l=U,c=x;;){if(!((l|0)==0&(c|0)==0)){if(S=N0(l|0,c|0,52)|0,s0()|0,S=S&15,(S|0)>=(O0|0)){if((S|0)!=(O0|0)&&(l=l|C0,c=c&-15728641|R0,S>>>0>=S0>>>0)){_=O0;do y0=K0(7,0,(14-_|0)*3|0)|0,_=_+1|0,l=y0|l,c=s0()|0|c;while(_>>>0<S>>>0)}}else l=0,c=0;if(S=O4(l|0,c|0,p|0,z0|0)|0,s0()|0,_=f0+(S<<3)|0,L=_,F=A[L>>2]|0,L=A[L+4>>2]|0,!((F|0)==0&(L|0)==0))for(y0=0;;){if((y0|0)>(p|0)){Q0=41;break e}if((F|0)==(l|0)&(L&-117440513|0)==(c|0)){r0=N0(F|0,L|0,56)|0,s0()|0,r0=r0&7,c0=r0+1|0,Z0=N0(F|0,L|0,45)|0,s0()|0;n:do if(!(s9(Z0&127)|0))L=7;else{if(F=N0(F|0,L|0,52)|0,s0()|0,F=F&15,!F){L=6;break}for(L=1;;){if(Z0=K0(7,0,(15-L|0)*3|0)|0,!((Z0&l|0)==0&((s0()|0)&c|0)==0)){L=7;break n}if(L>>>0<F>>>0)L=L+1|0;else{L=6;break}}}while(0);if((r0+2|0)>>>0>L>>>0){Q0=51;break e}Z0=K0(c0|0,0,56)|0,c=s0()|0|c&-117440513,c0=_,A[c0>>2]=0,A[c0+4>>2]=0,l=Z0|l}else S=(S+1|0)%(p|0)|0;if(_=f0+(S<<3)|0,L=_,F=A[L>>2]|0,L=A[L+4>>2]|0,(F|0)==0&(L|0)==0)break;y0=y0+1|0}Z0=_,A[Z0>>2]=l,A[Z0+4>>2]=c}if(g=g+1|0,(g|0)>=(p|0))break t;c=o1+(g<<3)|0,l=A[c>>2]|0,c=A[c+4>>2]|0}}while(0);if((p+5|0)>>>0<11){Q0=99;break}if(R0=O2((p|0)/6|0,8)|0,!R0){Q0=58;break}t:do if(e1){y0=0,c0=0;do{if(S=f0+(y0<<3)|0,l=S,g=A[l>>2]|0,l=A[l+4>>2]|0,!((g|0)==0&(l|0)==0)){L=N0(g|0,l|0,56)|0,s0()|0,L=L&7,c=L+1|0,F=l&-117440513,Z0=N0(g|0,l|0,45)|0,s0()|0;n:do if(s9(Z0&127)|0){if(r0=N0(g|0,l|0,52)|0,s0()|0,r0=r0&15,r0|0)for(_=1;;){if(Z0=K0(7,0,(15-_|0)*3|0)|0,!((g&Z0|0)==0&(F&(s0()|0)|0)==0))break n;if(_>>>0<r0>>>0)_=_+1|0;else break}l=K0(c|0,0,56)|0,g=l|g,l=s0()|0|F,c=S,A[c>>2]=g,A[c+4>>2]=l,c=L+2|0}while(0);(c|0)==7&&(Z0=R0+(c0<<3)|0,A[Z0>>2]=g,A[Z0+4>>2]=l&-117440513,c0=c0+1|0)}y0=y0+1|0}while((y0|0)!=(p|0));if(e1){if(C0=((p|0)<0)<<31>>31,r0=K0(O0|0,0,52)|0,y0=s0()|0,O0>>>0>15)for(l=0,g=0;;){do if(!((U|0)==0&(x|0)==0)){for(L=N0(U|0,x|0,52)|0,s0()|0,L=L&15,_=(L|0)<(O0|0),L=(L|0)==(O0|0),S=_?0:L?U:0,L=_?0:L?x:0,_=O4(S|0,L|0,p|0,C0|0)|0,s0()|0,c=0;;){if((c|0)>(p|0)){Q0=98;break e}if(Z0=f0+(_<<3)|0,F=A[Z0+4>>2]|0,(F&-117440513|0)==(L|0)&&(A[Z0>>2]|0)==(S|0)){Q0=70;break}if(_=(_+1|0)%(p|0)|0,Z0=f0+(_<<3)|0,(A[Z0>>2]|0)==(S|0)&&(A[Z0+4>>2]|0)==(L|0))break;c=c+1|0}if((Q0|0)==70&&(Q0=0,!0&(F&117440512|0)==100663296))break;Z0=u+(g<<3)|0,A[Z0>>2]=U,A[Z0+4>>2]=x,g=g+1|0}while(0);if(l=l+1|0,(l|0)>=(p|0)){p=c0;break t}x=o1+(l<<3)|0,U=A[x>>2]|0,x=A[x+4>>2]|0}for(l=0,g=0;;){do if(!((U|0)==0&(x|0)==0)){if(L=N0(U|0,x|0,52)|0,s0()|0,L=L&15,(L|0)>=(O0|0))if((L|0)!=(O0|0))if(c=U|r0,_=x&-15728641|y0,L>>>0<S0>>>0)L=_;else{S=O0;do Z0=K0(7,0,(14-S|0)*3|0)|0,S=S+1|0,c=Z0|c,_=s0()|0|_;while(S>>>0<L>>>0);L=_}else c=U,L=x;else c=0,L=0;for(S=O4(c|0,L|0,p|0,C0|0)|0,s0()|0,_=0;;){if((_|0)>(p|0)){Q0=98;break e}if(Z0=f0+(S<<3)|0,F=A[Z0+4>>2]|0,(F&-117440513|0)==(L|0)&&(A[Z0>>2]|0)==(c|0)){Q0=93;break}if(S=(S+1|0)%(p|0)|0,Z0=f0+(S<<3)|0,(A[Z0>>2]|0)==(c|0)&&(A[Z0+4>>2]|0)==(L|0))break;_=_+1|0}if((Q0|0)==93&&(Q0=0,!0&(F&117440512|0)==100663296))break;Z0=u+(g<<3)|0,A[Z0>>2]=U,A[Z0+4>>2]=x,g=g+1|0}while(0);if(l=l+1|0,(l|0)>=(p|0)){p=c0;break t}x=o1+(l<<3)|0,U=A[x>>2]|0,x=A[x+4>>2]|0}}else g=0,p=c0}else g=0,p=0;while(0);if(q2(f0|0,0,n1|0)|0,d8(o1|0,R0|0,p<<3|0)|0,E1(R0),p)u=u+(g<<3)|0;else break}return(Q0|0)==41?(E1(o1),E1(f0),Z0=-1,Z0|0):(Q0|0)==51?(E1(o1),E1(f0),Z0=-2,Z0|0):(Q0|0)==58?(E1(o1),E1(f0),Z0=-3,Z0|0):(Q0|0)==98?(E1(R0),E1(o1),E1(f0),Z0=-1,Z0|0):((Q0|0)==99&&d8(u|0,o1|0,p<<3|0)|0,E1(o1),E1(f0),Z0=0,Z0|0)}function Vc(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0;if((u|0)<=0)return g=0,g|0;if((g|0)>=16){for(_=0;;){if(U=l+(_<<3)|0,!((A[U>>2]|0)==0&(A[U+4>>2]|0)==0)){_=14;break}if(_=_+1|0,(_|0)>=(u|0)){x=0,_=16;break}}if((_|0)==14)return((p|0)>0?-2:-1)|0;if((_|0)==16)return x|0}_=0,U=0;e:for(;;){F=l+(U<<3)|0,S=F,x=A[S>>2]|0,S=A[S+4>>2]|0;do if(!((x|0)==0&(S|0)==0)){if((_|0)>=(p|0)){x=-1,_=16;break e}if(L=N0(x|0,S|0,52)|0,s0()|0,L=L&15,(L|0)>(g|0)){x=-2,_=16;break e}if((L|0)==(g|0)){F=c+(_<<3)|0,A[F>>2]=x,A[F+4>>2]=S,_=_+1|0;break}if(x=(c8(7,g-L|0)|0)+_|0,(x|0)>(p|0)){x=-1,_=16;break e}t2(A[F>>2]|0,A[F+4>>2]|0,g,c+(_<<3)|0),_=x}while(0);if(U=U+1|0,(U|0)>=(u|0)){x=0,_=16;break}}return(_|0)==16?x|0:0}function Wc(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0;if((u|0)<=0)return c=0,c|0;if((c|0)>=16){for(p=0;;){if(x=l+(p<<3)|0,!((A[x>>2]|0)==0&(A[x+4>>2]|0)==0)){p=-1,g=13;break}if(p=p+1|0,(p|0)>=(u|0)){p=0,g=13;break}}if((g|0)==13)return p|0}p=0,x=0;e:for(;;){g=l+(x<<3)|0,_=A[g>>2]|0,g=A[g+4>>2]|0;do if(!((_|0)==0&(g|0)==0)){if(g=N0(_|0,g|0,52)|0,s0()|0,g=g&15,(g|0)>(c|0)){p=-1,g=13;break e}if((g|0)==(c|0)){p=p+1|0;break}else{p=(c8(7,c-g|0)|0)+p|0;break}}while(0);if(x=x+1|0,(x|0)>=(u|0)){g=13;break}}return(g|0)==13?p|0:0}function jc(l,u){return l=l|0,u=u|0,u=N0(l|0,u|0,52)|0,s0()|0,u&1|0}function n2(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;if(g=N0(l|0,u|0,52)|0,s0()|0,g=g&15,!g)return g=0,g|0;for(p=1;;){if(c=N0(l|0,u|0,(15-p|0)*3|0)|0,s0()|0,c=c&7,c|0){p=5;break}if(p>>>0<g>>>0)p=p+1|0;else{c=0,p=5;break}}return(p|0)==5?c|0:0}function Ne(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0;if(L=N0(l|0,u|0,52)|0,s0()|0,L=L&15,!L)return S=u,L=l,A1(S|0),L|0;for(S=1,c=0;;){_=(15-S|0)*3|0,p=K0(7,0,_|0)|0,g=s0()|0,x=N0(l|0,u|0,_|0)|0,s0()|0,_=K0(m5(x&7)|0,0,_|0)|0,x=s0()|0,l=_|l&~p,u=x|u&~g;e:do if(!c)if((_&p|0)==0&(x&g|0)==0)c=0;else if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,!p)c=1;else{c=1;t:for(;;){switch(x=N0(l|0,u|0,(15-c|0)*3|0)|0,s0()|0,x&7){case 1:break t;case 0:break;default:{c=1;break e}}if(c>>>0<p>>>0)c=c+1|0;else{c=1;break e}}for(c=1;;)if(x=(15-c|0)*3|0,g=N0(l|0,u|0,x|0)|0,s0()|0,_=K0(7,0,x|0)|0,u=u&~(s0()|0),x=K0(m5(g&7)|0,0,x|0)|0,l=l&~_|x,u=u|(s0()|0),c>>>0<p>>>0)c=c+1|0;else{c=1;break}}while(0);if(S>>>0<L>>>0)S=S+1|0;else break}return A1(u|0),l|0}function B4(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,!p)return c=u,p=l,A1(c|0),p|0;for(c=1;_=(15-c|0)*3|0,x=N0(l|0,u|0,_|0)|0,s0()|0,g=K0(7,0,_|0)|0,u=u&~(s0()|0),_=K0(m5(x&7)|0,0,_|0)|0,l=_|l&~g,u=s0()|0|u,c>>>0<p>>>0;)c=c+1|0;return A1(u|0),l|0}function Qc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0;if(L=N0(l|0,u|0,52)|0,s0()|0,L=L&15,!L)return S=u,L=l,A1(S|0),L|0;for(S=1,c=0;;){_=(15-S|0)*3|0,p=K0(7,0,_|0)|0,g=s0()|0,x=N0(l|0,u|0,_|0)|0,s0()|0,_=K0(I4(x&7)|0,0,_|0)|0,x=s0()|0,l=_|l&~p,u=x|u&~g;e:do if(!c)if((_&p|0)==0&(x&g|0)==0)c=0;else if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,!p)c=1;else{c=1;t:for(;;){switch(x=N0(l|0,u|0,(15-c|0)*3|0)|0,s0()|0,x&7){case 1:break t;case 0:break;default:{c=1;break e}}if(c>>>0<p>>>0)c=c+1|0;else{c=1;break e}}for(c=1;;)if(g=(15-c|0)*3|0,_=K0(7,0,g|0)|0,x=u&~(s0()|0),u=N0(l|0,u|0,g|0)|0,s0()|0,u=K0(I4(u&7)|0,0,g|0)|0,l=l&~_|u,u=x|(s0()|0),c>>>0<p>>>0)c=c+1|0;else{c=1;break}}while(0);if(S>>>0<L>>>0)S=S+1|0;else break}return A1(u|0),l|0}function Ue(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0;if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,!p)return c=u,p=l,A1(c|0),p|0;for(c=1;x=(15-c|0)*3|0,_=K0(7,0,x|0)|0,g=u&~(s0()|0),u=N0(l|0,u|0,x|0)|0,s0()|0,u=K0(I4(u&7)|0,0,x|0)|0,l=u|l&~_,u=s0()|0|g,c>>>0<p>>>0;)c=c+1|0;return A1(u|0),l|0}function $c(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0;if(L=t0,t0=t0+64|0,S=L+40|0,p=L+24|0,g=L+12|0,_=L,K0(u|0,0,52)|0,c=s0()|0|134225919,!u)return(A[l+4>>2]|0)>2||(A[l+8>>2]|0)>2||(A[l+12>>2]|0)>2?(x=0,S=0,A1(x|0),t0=L,S|0):(K0(rr(l)|0,0,45)|0,x=s0()|0|c,S=-1,A1(x|0),t0=L,S|0);if(A[S>>2]=A[l>>2],A[S+4>>2]=A[l+4>>2],A[S+8>>2]=A[l+8>>2],A[S+12>>2]=A[l+12>>2],x=S+4|0,(u|0)>0)for(l=-1;A[p>>2]=A[x>>2],A[p+4>>2]=A[x+4>>2],A[p+8>>2]=A[x+8>>2],u&1?(Ar(x),A[g>>2]=A[x>>2],A[g+4>>2]=A[x+4>>2],A[g+8>>2]=A[x+8>>2],l8(g)):(qe(x),A[g>>2]=A[x>>2],A[g+4>>2]=A[x+4>>2],A[g+8>>2]=A[x+8>>2],p5(g)),Oe(p,g,_),k9(_),U=(15-u|0)*3|0,F=K0(7,0,U|0)|0,c=c&~(s0()|0),U=K0(a8(_)|0,0,U|0)|0,l=U|l&~F,c=s0()|0|c,(u|0)>1;)u=u+-1|0;else l=-1;e:do if((A[x>>2]|0)<=2&&(A[S+8>>2]|0)<=2&&(A[S+12>>2]|0)<=2){if(p=rr(S)|0,u=K0(p|0,0,45)|0,u=u|l,l=s0()|0|c&-1040385,_=uc(S)|0,!(s9(p)|0)){if((_|0)<=0)break;for(g=0;;){if(p=N0(u|0,l|0,52)|0,s0()|0,p=p&15,p)for(c=1;U=(15-c|0)*3|0,S=N0(u|0,l|0,U|0)|0,s0()|0,F=K0(7,0,U|0)|0,l=l&~(s0()|0),U=K0(m5(S&7)|0,0,U|0)|0,u=u&~F|U,l=l|(s0()|0),c>>>0<p>>>0;)c=c+1|0;if(g=g+1|0,(g|0)==(_|0))break e}}g=N0(u|0,l|0,52)|0,s0()|0,g=g&15;t:do if(g){c=1;n:for(;;){switch(U=N0(u|0,l|0,(15-c|0)*3|0)|0,s0()|0,U&7){case 1:break n;case 0:break;default:break t}if(c>>>0<g>>>0)c=c+1|0;else break t}if(or(p,A[S>>2]|0)|0)for(c=1;S=(15-c|0)*3|0,F=K0(7,0,S|0)|0,U=l&~(s0()|0),l=N0(u|0,l|0,S|0)|0,s0()|0,l=K0(I4(l&7)|0,0,S|0)|0,u=u&~F|l,l=U|(s0()|0),c>>>0<g>>>0;)c=c+1|0;else for(c=1;U=(15-c|0)*3|0,S=N0(u|0,l|0,U|0)|0,s0()|0,F=K0(7,0,U|0)|0,l=l&~(s0()|0),U=K0(m5(S&7)|0,0,U|0)|0,u=u&~F|U,l=l|(s0()|0),c>>>0<g>>>0;)c=c+1|0}while(0);if((_|0)>0){c=0;do u=Ne(u,l)|0,l=s0()|0,c=c+1|0;while((c|0)!=(_|0))}}else u=0,l=0;while(0);return F=l,U=u,A1(F|0),t0=L,U|0}function M2(l){return l=l|0,(l|0)%2|0|0}function _r(l,u){l=l|0,u=u|0;var c=0,p=0;return p=t0,t0=t0+16|0,c=p,u>>>0<=15&&(A[l+4>>2]&2146435072|0)!=2146435072&&(A[l+8+4>>2]&2146435072|0)!=2146435072?(_c(l,u,c),u=$c(c,u)|0,l=s0()|0):(l=0,u=0),A1(l|0),t0=p,u|0}function ze(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0;if(g=c+4|0,_=N0(l|0,u|0,52)|0,s0()|0,_=_&15,x=N0(l|0,u|0,45)|0,s0()|0,p=(_|0)==0,s9(x&127)|0){if(p)return x=1,x|0;p=1}else{if(p)return x=0,x|0;(A[g>>2]|0)==0&&(A[c+8>>2]|0)==0?p=(A[c+12>>2]|0)!=0&1:p=1}for(c=1;c&1?l8(g):p5(g),x=N0(l|0,u|0,(15-c|0)*3|0)|0,s0()|0,ur(g,x&7),c>>>0<_>>>0;)c=c+1|0;return p|0}function e7(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0;U=t0,t0=t0+16|0,L=U,F=N0(l|0,u|0,45)|0,s0()|0,F=F&127;e:do if((s9(F)|0)!=0&&(_=N0(l|0,u|0,52)|0,s0()|0,_=_&15,(_|0)!=0)){p=1;t:for(;;){switch(S=N0(l|0,u|0,(15-p|0)*3|0)|0,s0()|0,S&7){case 5:break t;case 0:break;default:{p=u;break e}}if(p>>>0<_>>>0)p=p+1|0;else{p=u;break e}}for(g=1,p=u;u=(15-g|0)*3|0,x=K0(7,0,u|0)|0,S=p&~(s0()|0),p=N0(l|0,p|0,u|0)|0,s0()|0,p=K0(I4(p&7)|0,0,u|0)|0,l=l&~x|p,p=S|(s0()|0),g>>>0<_>>>0;)g=g+1|0}else p=u;while(0);if(S=7728+(F*28|0)|0,A[c>>2]=A[S>>2],A[c+4>>2]=A[S+4>>2],A[c+8>>2]=A[S+8>>2],A[c+12>>2]=A[S+12>>2],!(ze(l,p,c)|0)){t0=U;return}if(x=c+4|0,A[L>>2]=A[x>>2],A[L+4>>2]=A[x+4>>2],A[L+8>>2]=A[x+8>>2],_=N0(l|0,p|0,52)|0,s0()|0,S=_&15,_&1?(p5(x),_=S+1|0):_=S,!(s9(F)|0))p=0;else{e:do if(!S)p=0;else for(u=1;;){if(g=N0(l|0,p|0,(15-u|0)*3|0)|0,s0()|0,g=g&7,g|0){p=g;break e}if(u>>>0<S>>>0)u=u+1|0;else{p=0;break}}while(0);p=(p|0)==4&1}if(!(z5(c,_,p,0)|0))(_|0)!=(S|0)&&(A[x>>2]=A[L>>2],A[x+4>>2]=A[L+4>>2],A[x+8>>2]=A[L+8>>2]);else{if(s9(F)|0)do;while((z5(c,_,0,0)|0)!=0);(_|0)!=(S|0)&&qe(x)}t0=U}function g5(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;p=t0,t0=t0+16|0,g=p,e7(l,u,g),u=N0(l|0,u|0,52)|0,s0()|0,wc(g,u&15,c),t0=p}function y5(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0;x=t0,t0=t0+16|0,_=x,e7(l,u,_),p=N0(l|0,u|0,45)|0,s0()|0,p=(s9(p&127)|0)==0,g=N0(l|0,u|0,52)|0,s0()|0,g=g&15;e:do if(!p){if(g|0)for(p=1;;){if(S=K0(7,0,(15-p|0)*3|0)|0,!((S&l|0)==0&((s0()|0)&u|0)==0))break e;if(p>>>0<g>>>0)p=p+1|0;else break}pr(_,g,0,5,c),t0=x;return}while(0);gr(_,g,0,6,c),t0=x}function Yc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;if(p=N0(l|0,u|0,45)|0,s0()|0,!(s9(p&127)|0))return p=2,p|0;if(p=N0(l|0,u|0,52)|0,s0()|0,p=p&15,!p)return p=5,p|0;for(c=1;;){if(g=K0(7,0,(15-c|0)*3|0)|0,!((g&l|0)==0&((s0()|0)&u|0)==0)){c=2,l=6;break}if(c>>>0<p>>>0)c=c+1|0;else{c=5,l=6;break}}return(l|0)==6?c|0:0}function br(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0;r0=t0,t0=t0+128|0,F=r0+112|0,_=r0+96|0,U=r0,g=N0(l|0,u|0,52)|0,s0()|0,S=g&15,A[F>>2]=S,x=N0(l|0,u|0,45)|0,s0()|0,x=x&127;e:do if(s9(x)|0){if(S|0)for(p=1;;){if(L=K0(7,0,(15-p|0)*3|0)|0,!((L&l|0)==0&((s0()|0)&u|0)==0)){g=0;break e}if(p>>>0<S>>>0)p=p+1|0;else break}if(g&1)g=1;else{L=K0(S+1|0,0,52)|0,U=s0()|0|u&-15728641,F=K0(7,0,(14-S|0)*3|0)|0,br((L|l)&~F,U&~(s0()|0),c),t0=r0;return}}else g=0;while(0);e7(l,u,_),g?(mr(_,F,U),L=5):(yr(_,F,U),L=6);e:do if(s9(x)|0)if(!S)p=20;else for(p=1;;){if(x=K0(7,0,(15-p|0)*3|0)|0,!((x&l|0)==0&((s0()|0)&u|0)==0)){p=8;break e}if(p>>>0<S>>>0)p=p+1|0;else{p=20;break}}else p=8;while(0);if(q2(c|0,-1,p|0)|0,g){g=0;do{for(_=U+(g<<4)|0,Mc(_,A[F>>2]|0)|0,_=A[_>>2]|0,p=0;x=c+(p<<2)|0,S=A[x>>2]|0,!((S|0)==-1|(S|0)==(_|0));)p=p+1|0;A[x>>2]=_,g=g+1|0}while((g|0)!=(L|0))}else{g=0;do{for(_=U+(g<<4)|0,z5(_,A[F>>2]|0,0,1)|0,_=A[_>>2]|0,p=0;x=c+(p<<2)|0,S=A[x>>2]|0,!((S|0)==-1|(S|0)==(_|0));)p=p+1|0;A[x>>2]=_,g=g+1|0}while((g|0)!=(L|0))}t0=r0}function Xc(){return 12}function Ge(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0;if(K0(l|0,0,52)|0,S=s0()|0|134225919,(l|0)<1){p=0,c=0;do s9(p)|0&&(K0(p|0,0,45)|0,x=S|(s0()|0),l=u+(c<<3)|0,A[l>>2]=-1,A[l+4>>2]=x,c=c+1|0),p=p+1|0;while((p|0)!=122);return}x=0,c=0;do{if(s9(x)|0){for(K0(x|0,0,45)|0,p=1,g=-1,_=S|(s0()|0);L=K0(7,0,(15-p|0)*3|0)|0,g=g&~L,_=_&~(s0()|0),(p|0)!=(l|0);)p=p+1|0;L=u+(c<<3)|0,A[L>>2]=g,A[L+4>>2]=_,c=c+1|0}x=x+1|0}while((x|0)!=122)}function wr(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0;if(S=t0,t0=t0+64|0,x=S,(l|0)==(c|0)&(u|0)==(p|0)|(!1|(u&2013265920|0)!=134217728|(!1|(p&2013265920|0)!=134217728))||(g=N0(l|0,u|0,52)|0,s0()|0,g=g&15,_=N0(c|0,p|0,52)|0,s0()|0,(g|0)!=(_&15|0)))return x=0,t0=S,x|0;if(_=g+-1|0,g>>>0>1&&(F=ke(l,u,_)|0,L=s0()|0,_=ke(c,p,_)|0,(F|0)==(_|0)&(L|0)==(s0()|0))&&(_=(g^15)*3|0,g=N0(l|0,u|0,_|0)|0,s0()|0,g=g&7,_=N0(c|0,p|0,_|0)|0,s0()|0,_=_&7,(g|0)==0|(_|0)==0||(A[21136+(g<<2)>>2]|0)==(_|0)||(A[21168+(g<<2)>>2]|0)==(_|0)))return F=1,t0=S,F|0;g=x,_=g+56|0;do A[g>>2]=0,g=g+4|0;while((g|0)<(_|0));return nr(l,u,1,x),F=x,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0))&&(F=x+8|0,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0)))&&(F=x+16|0,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0)))&&(F=x+24|0,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0)))&&(F=x+32|0,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0)))&&(F=x+40|0,!((A[F>>2]|0)==(c|0)&&(A[F+4>>2]|0)==(p|0)))?(g=x+48|0,g=((A[g>>2]|0)==(c|0)?(A[g+4>>2]|0)==(p|0):0)&1):g=1,F=g,t0=S,F|0}function Zc(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0;if(F=t0,t0=t0+16|0,x=F,!(wr(l,u,c,p)|0))return S=0,L=0,A1(S|0),t0=F,L|0;for(S=u&-2130706433,g=(M9(l,u)|0)==0,g=g?1:2;A[x>>2]=0,U=g9(l,u,g,x)|0,_=g+1|0,!((U|0)==(c|0)&(s0()|0)==(p|0));)if(_>>>0<7)g=_;else{g=0,l=0,L=6;break}return(L|0)==6?(A1(g|0),t0=F,l|0):(U=K0(g|0,0,56)|0,L=S|(s0()|0)|268435456,U=l|U,A1(L|0),t0=F,U|0)}function Jc(l,u){l=l|0,u=u|0;var c=0;return c=!0&(u&2013265920|0)==268435456,A1((c?u&-2130706433|134217728:0)|0),(c?l:0)|0}function Kc(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;return p=t0,t0=t0+16|0,c=p,!0&(u&2013265920|0)==268435456?(g=N0(l|0,u|0,56)|0,s0()|0,A[c>>2]=0,c=g9(l,u&-2130706433|134217728,g&7,c)|0,u=s0()|0,A1(u|0),t0=p,c|0):(u=0,c=0,A1(u|0),t0=p,c|0)}function ef(l,u){l=l|0,u=u|0;var c=0;if(!(!0&(u&2013265920|0)==268435456))return c=0,c|0;switch(c=N0(l|0,u|0,56)|0,s0()|0,c&7){case 0:case 7:return c=0,c|0}return c=u&-2130706433|134217728,!0&(u&117440512|0)==16777216&(M9(l,c)|0)!=0?(c=0,c|0):(c=xr(l,c)|0,c|0)}function tf(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0;_=t0,t0=t0+16|0,p=_,x=!0&(u&2013265920|0)==268435456,g=u&-2130706433|134217728,S=c,A[S>>2]=x?l:0,A[S+4>>2]=x?g:0,x?(u=N0(l|0,u|0,56)|0,s0()|0,A[p>>2]=0,l=g9(l,g,u&7,p)|0,u=s0()|0):(l=0,u=0),S=c+8|0,A[S>>2]=l,A[S+4>>2]=u,t0=_}function nf(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;g=(M9(l,u)|0)==0,u=u&-2130706433,p=c,A[p>>2]=g?l:0,A[p+4>>2]=g?u|285212672:0,p=c+8|0,A[p>>2]=l,A[p+4>>2]=u|301989888,p=c+16|0,A[p>>2]=l,A[p+4>>2]=u|318767104,p=c+24|0,A[p>>2]=l,A[p+4>>2]=u|335544320,p=c+32|0,A[p>>2]=l,A[p+4>>2]=u|352321536,c=c+40|0,A[c>>2]=l,A[c+4>>2]=u|369098752}function u8(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0;if(x=t0,t0=t0+16|0,_=x,p=N0(l|0,u|0,56)|0,s0()|0,S=!0&(u&2013265920|0)==268435456,g=S?l:0,l=S?u&-2130706433|134217728:0,u=Mf(g,l,p&7)|0,(u|0)==-1){A[c>>2]=0,t0=x;return}e7(g,l,_),p=N0(g|0,l|0,52)|0,s0()|0,p=p&15,M9(g,l)|0?pr(_,p,u,2,c):gr(_,p,u,2,c),t0=x}function rf(l){l=l|0;var u=0,c=0,p=0;return u=O2(1,12)|0,u||q1(22691,22646,49,22704),c=l+4|0,p=A[c>>2]|0,p|0?(p=p+8|0,A[p>>2]=u,A[c>>2]=u,u|0):(A[l>>2]|0&&q1(22721,22646,61,22744),p=l,A[p>>2]=u,A[c>>2]=u,u|0)}function of(l,u){l=l|0,u=u|0;var c=0,p=0;return p=X2(24)|0,p||q1(22758,22646,78,22772),A[p>>2]=A[u>>2],A[p+4>>2]=A[u+4>>2],A[p+8>>2]=A[u+8>>2],A[p+12>>2]=A[u+12>>2],A[p+16>>2]=0,u=l+4|0,c=A[u>>2]|0,c|0?(A[c+16>>2]=p,A[u>>2]=p,p|0):(A[l>>2]|0&&q1(22787,22646,82,22772),A[l>>2]=p,A[u>>2]=p,p|0)}function sf(l){l=l|0;var u=0,c=0,p=0,g=0;if(!!l)for(p=1;;){if(u=A[l>>2]|0,u|0)do{if(c=A[u>>2]|0,c|0)do g=c,c=A[c+16>>2]|0,E1(g);while((c|0)!=0);g=u,u=A[u+8>>2]|0,E1(g)}while((u|0)!=0);if(u=l,l=A[l+8>>2]|0,p||E1(u),l)p=0;else break}}function Mr(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0,Z0=0,w1=0,j1=0,G1=0,Z1=0,U1=0,n9=0,i9=0,x1=0;if(g=l+8|0,A[g>>2]|0)return x1=1,x1|0;if(p=A[l>>2]|0,!p)return x1=0,x1|0;u=p,c=0;do c=c+1|0,u=A[u+8>>2]|0;while((u|0)!=0);if(c>>>0<2)return x1=0,x1|0;n9=X2(c<<2)|0,n9||q1(22807,22646,317,22826),U1=X2(c<<5)|0,U1||q1(22848,22646,321,22826),A[l>>2]=0,o1=l+4|0,A[o1>>2]=0,A[g>>2]=0,c=0,Z1=0,n1=0,r0=0;e:for(;;){if(U=A[p>>2]|0,U){_=0,x=U;do{if(L=+W[x+8>>3],u=x,x=A[x+16>>2]|0,F=(x|0)==0,g=F?U:x,S=+W[g+8>>3],+i1(+(L-S))>3.141592653589793){x1=14;break}_=_+(S-L)*(+W[u>>3]+ +W[g>>3])}while(!F);if((x1|0)==14){x1=0,_=0,u=U;do f0=+W[u+8>>3],G1=u+16|0,j1=A[G1>>2]|0,j1=(j1|0)==0?U:j1,O0=+W[j1+8>>3],_=_+(+W[u>>3]+ +W[j1>>3])*((O0<0?O0+6.283185307179586:O0)-(f0<0?f0+6.283185307179586:f0)),u=A[((u|0)==0?p:G1)>>2]|0;while((u|0)!=0)}_>0?(A[n9+(Z1<<2)>>2]=p,Z1=Z1+1|0,g=n1,u=r0):x1=19}else x1=19;if((x1|0)==19){x1=0;do if(c){if(u=c+8|0,A[u>>2]|0){x1=21;break e}if(c=O2(1,12)|0,!c){x1=23;break e}A[u>>2]=c,g=c+4|0,x=c,u=r0}else if(r0){g=o1,x=r0+8|0,u=p,c=l;break}else if(A[l>>2]|0){x1=27;break e}else{g=o1,x=l,u=p,c=l;break}while(0);if(A[x>>2]=p,A[g>>2]=p,x=U1+(n1<<5)|0,F=A[p>>2]|0,F){for(U=U1+(n1<<5)+8|0,W[U>>3]=17976931348623157e292,r0=U1+(n1<<5)+24|0,W[r0>>3]=17976931348623157e292,W[x>>3]=-17976931348623157e292,c0=U1+(n1<<5)+16|0,W[c0>>3]=-17976931348623157e292,e1=17976931348623157e292,S0=-17976931348623157e292,g=0,y0=F,L=17976931348623157e292,R0=17976931348623157e292,z0=-17976931348623157e292,S=-17976931348623157e292;_=+W[y0>>3],f0=+W[y0+8>>3],y0=A[y0+16>>2]|0,C0=(y0|0)==0,O0=+W[(C0?F:y0)+8>>3],_<L&&(W[U>>3]=_,L=_),f0<R0&&(W[r0>>3]=f0,R0=f0),_>z0?W[x>>3]=_:_=z0,f0>S&&(W[c0>>3]=f0,S=f0),e1=f0>0&f0<e1?f0:e1,S0=f0<0&f0>S0?f0:S0,g=g|+i1(+(f0-O0))>3.141592653589793,!C0;)z0=_;g&&(W[c0>>3]=S0,W[r0>>3]=e1)}else A[x>>2]=0,A[x+4>>2]=0,A[x+8>>2]=0,A[x+12>>2]=0,A[x+16>>2]=0,A[x+20>>2]=0,A[x+24>>2]=0,A[x+28>>2]=0;g=n1+1|0}if(G1=p+8|0,p=A[G1>>2]|0,A[G1>>2]=0,p)n1=g,r0=u;else{x1=45;break}}if((x1|0)==21)q1(22624,22646,35,22658);else if((x1|0)==23)q1(22678,22646,37,22658);else if((x1|0)==27)q1(22721,22646,61,22744);else if((x1|0)==45){e:do if((Z1|0)>0){for(G1=(g|0)==0,w1=g<<2,j1=(l|0)==0,Z0=0,u=0;;){if(Q0=A[n9+(Z0<<2)>>2]|0,G1)x1=73;else{if(n1=X2(w1)|0,!n1){x1=50;break}if(o1=X2(w1)|0,!o1){x1=52;break}t:do if(j1)c=0;else{for(g=0,c=0,x=l;p=U1+(g<<5)|0,Sr(A[x>>2]|0,p,A[Q0>>2]|0)|0?(A[n1+(c<<2)>>2]=x,A[o1+(c<<2)>>2]=p,C0=c+1|0):C0=c,x=A[x+8>>2]|0,x;)g=g+1|0,c=C0;if((C0|0)>0)if(p=A[n1>>2]|0,(C0|0)==1)c=p;else for(c0=0,y0=-1,c=p,r0=p;;){for(F=A[r0>>2]|0,p=0,x=0;g=A[A[n1+(x<<2)>>2]>>2]|0,(g|0)==(F|0)?U=p:U=p+((Sr(g,A[o1+(x<<2)>>2]|0,A[F>>2]|0)|0)&1)|0,x=x+1|0,(x|0)!=(C0|0);)p=U;if(g=(U|0)>(y0|0),c=g?r0:c,p=c0+1|0,(p|0)==(C0|0))break t;c0=p,y0=g?U:y0,r0=A[n1+(p<<2)>>2]|0}else c=0}while(0);if(E1(n1),E1(o1),c){if(g=c+4|0,p=A[g>>2]|0,p)c=p+8|0;else if(A[c>>2]|0){x1=70;break}A[c>>2]=Q0,A[g>>2]=Q0}else x1=73}if((x1|0)==73){if(x1=0,u=A[Q0>>2]|0,u|0)do o1=u,u=A[u+16>>2]|0,E1(o1);while((u|0)!=0);E1(Q0),u=2}if(Z0=Z0+1|0,(Z0|0)>=(Z1|0)){i9=u;break e}}(x1|0)==50?q1(22863,22646,249,22882):(x1|0)==52?q1(22901,22646,252,22882):(x1|0)==70&&q1(22721,22646,61,22744)}else i9=0;while(0);return E1(n9),E1(U1),x1=i9,x1|0}return 0}function Sr(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0;if(!(ar(u,c)|0)||(u=sr(u)|0,F=+W[c>>3],p=+W[c+8>>3],p=u&p<0?p+6.283185307179586:p,l=A[l>>2]|0,!l))return l=0,l|0;if(u){u=0,c=l;e:for(;;){for(;x=+W[c>>3],L=+W[c+8>>3],c=c+16|0,U=A[c>>2]|0,U=(U|0)==0?l:U,_=+W[U>>3],g=+W[U+8>>3],x>_?(S=x,x=L):(S=_,_=x,x=g,g=L),!!(F<_|F>S);)if(c=A[c>>2]|0,!c){c=22;break e}if(L=g<0?g+6.283185307179586:g,x=x<0?x+6.283185307179586:x,p=x==p|L==p?p+-2220446049250313e-31:p,L=L+(F-_)/(S-_)*(x-L),(L<0?L+6.283185307179586:L)>p&&(u=u^1),c=A[c>>2]|0,!c){c=22;break}}if((c|0)==22)return u|0}else{u=0,c=l;e:for(;;){for(;x=+W[c>>3],L=+W[c+8>>3],c=c+16|0,U=A[c>>2]|0,U=(U|0)==0?l:U,_=+W[U>>3],g=+W[U+8>>3],x>_?(S=x,x=L):(S=_,_=x,x=g,g=L),!!(F<_|F>S);)if(c=A[c>>2]|0,!c){c=22;break e}if(p=x==p|g==p?p+-2220446049250313e-31:p,g+(F-_)/(S-_)*(x-g)>p&&(u=u^1),c=A[c>>2]|0,!c){c=22;break}}if((c|0)==22)return u|0}return 0}function A4(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0;if(S0=t0,t0=t0+32|0,e1=S0+16|0,z0=S0,_=N0(l|0,u|0,52)|0,s0()|0,_=_&15,y0=N0(c|0,p|0,52)|0,s0()|0,(_|0)!=(y0&15|0))return e1=1,t0=S0,e1|0;if(F=N0(l|0,u|0,45)|0,s0()|0,F=F&127,U=N0(c|0,p|0,45)|0,s0()|0,U=U&127,y0=(F|0)!=(U|0),y0){if(S=Ie(F,U)|0,(S|0)==7)return e1=2,t0=S0,e1|0;L=Ie(U,F)|0,(L|0)==7?q1(22925,22949,151,22959):(C0=S,x=L)}else C0=0,x=0;r0=s9(F)|0,c0=s9(U)|0,A[e1>>2]=0,A[e1+4>>2]=0,A[e1+8>>2]=0,A[e1+12>>2]=0;do if(C0){if(U=A[4304+(F*28|0)+(C0<<2)>>2]|0,S=(U|0)>0,c0)if(S){F=0,L=c,S=p;do L=Qc(L,S)|0,S=s0()|0,x=I4(x)|0,(x|0)==1&&(x=I4(1)|0),F=F+1|0;while((F|0)!=(U|0));U=x,F=L,L=S}else U=x,F=c,L=p;else if(S){F=0,L=c,S=p;do L=Ue(L,S)|0,S=s0()|0,x=I4(x)|0,F=F+1|0;while((F|0)!=(U|0));U=x,F=L,L=S}else U=x,F=c,L=p;if(ze(F,L,e1)|0,y0||q1(22972,22949,181,22959),S=(r0|0)!=0,x=(c0|0)!=0,S&x&&q1(22999,22949,182,22959),S){if(x=n2(l,u)|0,q0[22032+(x*7|0)+C0>>0]|0){_=3;break}L=A[21200+(x*28|0)+(C0<<2)>>2]|0,F=L,R0=26}else if(x){if(x=n2(F,L)|0,q0[22032+(x*7|0)+U>>0]|0){_=4;break}F=0,L=A[21200+(U*28|0)+(x<<2)>>2]|0,R0=26}else x=0;if((R0|0)==26)if((L|0)<=-1&&q1(23030,22949,212,22959),(F|0)<=-1&&q1(23053,22949,213,22959),(L|0)>0){S=e1+4|0,x=0;do A8(S),x=x+1|0;while((x|0)!=(L|0));x=F}else x=F;if(A[z0>>2]=0,A[z0+4>>2]=0,A[z0+8>>2]=0,ur(z0,C0),_|0)for(;M2(_)|0?l8(z0):p5(z0),(_|0)>1;)_=_+-1|0;if((x|0)>0){_=0;do A8(z0),_=_+1|0;while((_|0)!=(x|0))}R0=e1+4|0,V9(R0,z0,R0),k9(R0),R0=50}else if(ze(c,p,e1)|0,(r0|0)!=0&(c0|0)!=0)if((U|0)!=(F|0)&&q1(23077,22949,243,22959),x=n2(l,u)|0,_=n2(c,p)|0,q0[22032+(x*7|0)+_>>0]|0)_=5;else if(x=A[21200+(x*28|0)+(_<<2)>>2]|0,(x|0)>0){S=e1+4|0,_=0;do A8(S),_=_+1|0;while((_|0)!=(x|0));R0=50}else R0=50;else R0=50;while(0);return(R0|0)==50&&(_=e1+4|0,A[g>>2]=A[_>>2],A[g+4>>2]=A[_+4>>2],A[g+8>>2]=A[_+8>>2],_=0),e1=_,t0=S0,e1|0}function Er(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0;if(C0=t0,t0=t0+48|0,x=C0+36|0,S=C0+24|0,L=C0+12|0,F=C0,_=N0(l|0,u|0,52)|0,s0()|0,_=_&15,c0=N0(l|0,u|0,45)|0,s0()|0,c0=c0&127,U=s9(c0)|0,K0(_|0,0,52)|0,z0=s0()|0|134225919,R0=p,A[R0>>2]=-1,A[R0+4>>2]=z0,!_)return(A[c>>2]|0)>1||(A[c+4>>2]|0)>1||(A[c+8>>2]|0)>1||(g=De(c0,a8(c)|0)|0,(g|0)==127)?(z0=1,t0=C0,z0|0):(y0=K0(g|0,0,45)|0,R0=s0()|0,c0=p,R0=A[c0+4>>2]&-1040385|R0,z0=p,A[z0>>2]=A[c0>>2]|y0,A[z0+4>>2]=R0,z0=0,t0=C0,z0|0);for(A[x>>2]=A[c>>2],A[x+4>>2]=A[c+4>>2],A[x+8>>2]=A[c+8>>2];A[S>>2]=A[x>>2],A[S+4>>2]=A[x+4>>2],A[S+8>>2]=A[x+8>>2],M2(_)|0?(Ar(x),A[L>>2]=A[x>>2],A[L+4>>2]=A[x+4>>2],A[L+8>>2]=A[x+8>>2],l8(L)):(qe(x),A[L>>2]=A[x>>2],A[L+4>>2]=A[x+4>>2],A[L+8>>2]=A[x+8>>2],p5(L)),Oe(S,L,F),k9(F),R0=p,e1=A[R0>>2]|0,R0=A[R0+4>>2]|0,S0=(15-_|0)*3|0,c=K0(7,0,S0|0)|0,R0=R0&~(s0()|0),S0=K0(a8(F)|0,0,S0|0)|0,R0=s0()|0|R0,z0=p,A[z0>>2]=S0|e1&~c,A[z0+4>>2]=R0,(_|0)>1;)_=_+-1|0;e:do if((A[x>>2]|0)<=1&&(A[x+4>>2]|0)<=1&&(A[x+8>>2]|0)<=1){_=a8(x)|0,S=De(c0,_)|0,(S|0)==127?F=0:F=s9(S)|0;t:do if(_){if(U){if(x=21408+((n2(l,u)|0)*28|0)+(_<<2)|0,x=A[x>>2]|0,(x|0)>0){c=0;do _=m5(_)|0,c=c+1|0;while((c|0)!=(x|0))}if((_|0)==1){g=3;break e}c=De(c0,_)|0,(c|0)==127&&q1(23104,22949,376,23134),s9(c)|0?q1(23147,22949,377,23134):(y0=x,r0=_,g=c)}else y0=0,r0=_,g=S;if(L=A[4304+(c0*28|0)+(r0<<2)>>2]|0,(L|0)<=-1&&q1(23178,22949,384,23134),!F){if((y0|0)<=-1&&q1(23030,22949,417,23134),y0|0){x=p,_=0,c=A[x>>2]|0,x=A[x+4>>2]|0;do c=B4(c,x)|0,x=s0()|0,S0=p,A[S0>>2]=c,A[S0+4>>2]=x,_=_+1|0;while((_|0)<(y0|0))}if((L|0)<=0){_=54;break}for(x=p,_=0,c=A[x>>2]|0,x=A[x+4>>2]|0;;)if(c=B4(c,x)|0,x=s0()|0,S0=p,A[S0>>2]=c,A[S0+4>>2]=x,_=_+1|0,(_|0)==(L|0)){_=54;break t}}if(S=Ie(g,c0)|0,(S|0)==7&&q1(22925,22949,393,23134),_=p,c=A[_>>2]|0,_=A[_+4>>2]|0,(L|0)>0){x=0;do c=B4(c,_)|0,_=s0()|0,S0=p,A[S0>>2]=c,A[S0+4>>2]=_,x=x+1|0;while((x|0)!=(L|0))}if(c=n2(c,_)|0,S0=Le(g)|0,c=A[(S0?21824:21616)+(S*28|0)+(c<<2)>>2]|0,(c|0)<=-1&&q1(23030,22949,412,23134),!c)_=54;else{S=p,_=0,x=A[S>>2]|0,S=A[S+4>>2]|0;do x=Ne(x,S)|0,S=s0()|0,S0=p,A[S0>>2]=x,A[S0+4>>2]=S,_=_+1|0;while((_|0)<(c|0));_=54}}else if((U|0)!=0&(F|0)!=0)if(S0=n2(l,u)|0,_=p,_=21408+(S0*28|0)+((n2(A[_>>2]|0,A[_+4>>2]|0)|0)<<2)|0,_=A[_>>2]|0,(_|0)<=-1&&q1(23201,22949,433,23134),!_)g=S,_=55;else{x=p,g=0,c=A[x>>2]|0,x=A[x+4>>2]|0;do c=B4(c,x)|0,x=s0()|0,S0=p,A[S0>>2]=c,A[S0+4>>2]=x,g=g+1|0;while((g|0)<(_|0));g=S,_=54}else g=S,_=54;while(0);if((_|0)==54&&F&&(_=55),(_|0)==55&&(S0=p,(n2(A[S0>>2]|0,A[S0+4>>2]|0)|0)==1)){g=4;break}S0=p,z0=A[S0>>2]|0,S0=A[S0+4>>2]&-1040385,e1=K0(g|0,0,45)|0,S0=S0|(s0()|0),g=p,A[g>>2]=z0|e1,A[g+4>>2]=S0,g=0}else g=2;while(0);return S0=g,t0=C0,S0|0}function af(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0;return x=t0,t0=t0+16|0,_=x,l=A4(l,u,c,p,_)|0,l||(yc(_,g),l=0),t0=x,l|0}function lf(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0;return g=t0,t0=t0+16|0,_=g,vc(c,_),p=Er(l,u,_,p)|0,t0=g,p|0}function Af(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0;return x=t0,t0=t0+32|0,g=x+12|0,_=x,(A4(l,u,l,u,g)|0)==0&&(A4(l,u,c,p,_)|0)==0?l=Fe(g,_)|0:l=-1,t0=x,l|0}function uf(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0,x=0;return x=t0,t0=t0+32|0,g=x+12|0,_=x,(A4(l,u,l,u,g)|0)==0&&(A4(l,u,c,p,_)|0)==0?l=Fe(g,_)|0:l=-1,t0=x,(l>>>31^1)+l|0}function cf(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0;if(n1=t0,t0=t0+48|0,_=n1+24|0,x=n1+12|0,f0=n1,(A4(l,u,l,u,_)|0)==0&&(A4(l,u,c,p,x)|0)==0){if(O0=Fe(_,x)|0,(O0|0)<0)return f0=O0,t0=n1,f0|0;for(A[_>>2]=0,A[_+4>>2]=0,A[_+8>>2]=0,A[x>>2]=0,A[x+4>>2]=0,A[x+8>>2]=0,A4(l,u,l,u,_)|0,A4(l,u,c,p,x)|0,dr(_),dr(x),O0?(U=A[_>>2]|0,y0=+(O0|0),z0=_+4|0,r0=A[z0>>2]|0,e1=_+8|0,c0=A[e1>>2]|0,S0=_,c=U,p=r0,_=c0,C0=+((A[x>>2]|0)-U|0)/y0,R0=+((A[x+4>>2]|0)-r0|0)/y0,y0=+((A[x+8>>2]|0)-c0|0)/y0):(p=_+4|0,c0=_+8|0,z0=p,e1=c0,S0=_,c=A[_>>2]|0,p=A[p>>2]|0,_=A[c0>>2]|0,C0=0,R0=0,y0=0),A[f0>>2]=c,c0=f0+4|0,A[c0>>2]=p,r0=f0+8|0,A[r0>>2]=_,U=0;;){L=+(U|0),o1=C0*L+ +(c|0),S=R0*L+ +(A[z0>>2]|0),L=y0*L+ +(A[e1>>2]|0),p=~~+h8(+o1),x=~~+h8(+S),c=~~+h8(+L),o1=+i1(+(+(p|0)-o1)),S=+i1(+(+(x|0)-S)),L=+i1(+(+(c|0)-L));do if(o1>S&o1>L)p=0-(x+c)|0,_=x;else if(F=0-p|0,S>L){_=F-c|0;break}else{_=x,c=F-x|0;break}while(0);if(A[f0>>2]=p,A[c0>>2]=_,A[r0>>2]=c,xc(f0),Er(l,u,f0,g+(U<<3)|0)|0,(U|0)==(O0|0))break;U=U+1|0,c=A[S0>>2]|0}return f0=0,t0=n1,f0|0}return f0=-1,t0=n1,f0|0}function c8(l,u){l=l|0,u=u|0;var c=0;if(!u)return c=1,c|0;c=l,l=1;do l=C9((u&1|0)==0?1:c,l)|0,u=u>>1,c=C9(c,c)|0;while((u|0)!=0);return l|0}function Tr(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0;if(!(ar(u,c)|0)||(u=sr(u)|0,c0=+W[c>>3],p=+W[c+8>>3],p=u&p<0?p+6.283185307179586:p,r0=A[l>>2]|0,(r0|0)<=0))return r0=0,r0|0;if(U=A[l+4>>2]|0,u){u=0,c=-1,l=0;e:for(;;){for(F=l;x=+W[U+(F<<4)>>3],L=+W[U+(F<<4)+8>>3],l=(c+2|0)%(r0|0)|0,_=+W[U+(l<<4)>>3],g=+W[U+(l<<4)+8>>3],x>_?(S=x,x=L):(S=_,_=x,x=g,g=L),!!(c0<_|c0>S);)if(c=F+1|0,(c|0)<(r0|0))l=F,F=c,c=l;else{c=22;break e}if(L=g<0?g+6.283185307179586:g,x=x<0?x+6.283185307179586:x,p=x==p|L==p?p+-2220446049250313e-31:p,L=L+(c0-_)/(S-_)*(x-L),(L<0?L+6.283185307179586:L)>p&&(u=u^1),l=F+1|0,(l|0)>=(r0|0)){c=22;break}else c=F}if((c|0)==22)return u|0}else{u=0,c=-1,l=0;e:for(;;){for(F=l;x=+W[U+(F<<4)>>3],L=+W[U+(F<<4)+8>>3],l=(c+2|0)%(r0|0)|0,_=+W[U+(l<<4)>>3],g=+W[U+(l<<4)+8>>3],x>_?(S=x,x=L):(S=_,_=x,x=g,g=L),!!(c0<_|c0>S);)if(c=F+1|0,(c|0)<(r0|0))l=F,F=c,c=l;else{c=22;break e}if(p=x==p|g==p?p+-2220446049250313e-31:p,g+(c0-_)/(S-_)*(x-g)>p&&(u=u^1),l=F+1|0,(l|0)>=(r0|0)){c=22;break}else c=F}if((c|0)==22)return u|0}return 0}function He(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0;if(C0=A[l>>2]|0,!C0){A[u>>2]=0,A[u+4>>2]=0,A[u+8>>2]=0,A[u+12>>2]=0,A[u+16>>2]=0,A[u+20>>2]=0,A[u+24>>2]=0,A[u+28>>2]=0;return}if(R0=u+8|0,W[R0>>3]=17976931348623157e292,z0=u+24|0,W[z0>>3]=17976931348623157e292,W[u>>3]=-17976931348623157e292,e1=u+16|0,W[e1>>3]=-17976931348623157e292,!((C0|0)<=0)){for(c0=A[l+4>>2]|0,F=17976931348623157e292,U=-17976931348623157e292,r0=0,l=-1,_=17976931348623157e292,x=17976931348623157e292,L=-17976931348623157e292,p=-17976931348623157e292,y0=0;c=+W[c0+(y0<<4)>>3],S=+W[c0+(y0<<4)+8>>3],l=l+2|0,g=+W[c0+(((l|0)==(C0|0)?0:l)<<4)+8>>3],c<_&&(W[R0>>3]=c,_=c),S<x&&(W[z0>>3]=S,x=S),c>L?W[u>>3]=c:c=L,S>p&&(W[e1>>3]=S,p=S),F=S>0&S<F?S:F,U=S<0&S>U?S:U,r0=r0|+i1(+(S-g))>3.141592653589793,l=y0+1|0,(l|0)!=(C0|0);)S0=y0,L=c,y0=l,l=S0;!r0||(W[e1>>3]=U,W[z0>>3]=F)}}function ff(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0,o1=0,Q0=0;if(C0=A[l>>2]|0,C0){if(R0=u+8|0,W[R0>>3]=17976931348623157e292,z0=u+24|0,W[z0>>3]=17976931348623157e292,W[u>>3]=-17976931348623157e292,e1=u+16|0,W[e1>>3]=-17976931348623157e292,(C0|0)>0){for(g=A[l+4>>2]|0,c0=17976931348623157e292,y0=-17976931348623157e292,p=0,c=-1,L=17976931348623157e292,F=17976931348623157e292,r0=-17976931348623157e292,x=-17976931348623157e292,S0=0;_=+W[g+(S0<<4)>>3],U=+W[g+(S0<<4)+8>>3],o1=c+2|0,S=+W[g+(((o1|0)==(C0|0)?0:o1)<<4)+8>>3],_<L&&(W[R0>>3]=_,L=_),U<F&&(W[z0>>3]=U,F=U),_>r0?W[u>>3]=_:_=r0,U>x&&(W[e1>>3]=U,x=U),c0=U>0&U<c0?U:c0,y0=U<0&U>y0?U:y0,p=p|+i1(+(U-S))>3.141592653589793,c=S0+1|0,(c|0)!=(C0|0);)o1=S0,r0=_,S0=c,c=o1;p&&(W[e1>>3]=y0,W[z0>>3]=c0)}}else A[u>>2]=0,A[u+4>>2]=0,A[u+8>>2]=0,A[u+12>>2]=0,A[u+16>>2]=0,A[u+20>>2]=0,A[u+24>>2]=0,A[u+28>>2]=0;if(o1=l+8|0,c=A[o1>>2]|0,!((c|0)<=0)){n1=l+12|0,f0=0;do if(g=A[n1>>2]|0,p=f0,f0=f0+1|0,z0=u+(f0<<5)|0,e1=A[g+(p<<3)>>2]|0,e1){if(S0=u+(f0<<5)+8|0,W[S0>>3]=17976931348623157e292,l=u+(f0<<5)+24|0,W[l>>3]=17976931348623157e292,W[z0>>3]=-17976931348623157e292,O0=u+(f0<<5)+16|0,W[O0>>3]=-17976931348623157e292,(e1|0)>0){for(C0=A[g+(p<<3)+4>>2]|0,c0=17976931348623157e292,y0=-17976931348623157e292,g=0,p=-1,R0=0,L=17976931348623157e292,F=17976931348623157e292,U=-17976931348623157e292,x=-17976931348623157e292;_=+W[C0+(R0<<4)>>3],r0=+W[C0+(R0<<4)+8>>3],p=p+2|0,S=+W[C0+(((p|0)==(e1|0)?0:p)<<4)+8>>3],_<L&&(W[S0>>3]=_,L=_),r0<F&&(W[l>>3]=r0,F=r0),_>U?W[z0>>3]=_:_=U,r0>x&&(W[O0>>3]=r0,x=r0),c0=r0>0&r0<c0?r0:c0,y0=r0<0&r0>y0?r0:y0,g=g|+i1(+(r0-S))>3.141592653589793,p=R0+1|0,(p|0)!=(e1|0);)Q0=R0,R0=p,U=_,p=Q0;g&&(W[O0>>3]=y0,W[l>>3]=c0)}}else A[z0>>2]=0,A[z0+4>>2]=0,A[z0+8>>2]=0,A[z0+12>>2]=0,A[z0+16>>2]=0,A[z0+20>>2]=0,A[z0+24>>2]=0,A[z0+28>>2]=0,c=A[o1>>2]|0;while((f0|0)<(c|0))}}function hf(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0;if(!(Tr(l,u,c)|0))return g=0,g|0;if(g=l+8|0,(A[g>>2]|0)<=0)return g=1,g|0;for(p=l+12|0,l=0;;){if(_=l,l=l+1|0,Tr((A[p>>2]|0)+(_<<3)|0,u+(l<<5)|0,c)|0){l=0,p=6;break}if((l|0)>=(A[g>>2]|0)){l=1,p=6;break}}return(p|0)==6?l|0:0}function df(){return 8}function pf(){return 16}function mf(){return 168}function gf(){return 8}function yf(){return 16}function vf(){return 12}function xf(){return 8}function _f(l){l=l|0;var u=0,c=0;return c=+W[l>>3],u=+W[l+8>>3],+ +a1(+(c*c+u*u))}function Cr(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0;F=+W[l>>3],L=+W[u>>3]-F,S=+W[l+8>>3],x=+W[u+8>>3]-S,r0=+W[c>>3],_=+W[p>>3]-r0,c0=+W[c+8>>3],U=+W[p+8>>3]-c0,_=(_*(S-c0)-(F-r0)*U)/(L*U-x*_),W[g>>3]=F+L*_,W[g+8>>3]=S+x*_}function Pr(l,u){return l=l|0,u=u|0,+W[l>>3]!=+W[u>>3]?(u=0,u|0):(u=+W[l+8>>3]==+W[u+8>>3],u|0)}function y9(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;return g=+W[l>>3]-+W[u>>3],p=+W[l+8>>3]-+W[u+8>>3],c=+W[l+16>>3]-+W[u+16>>3],+(g*g+p*p+c*c)}function bf(l,u){l=l|0,u=u|0;var c=0,p=0,g=0;c=+W[l>>3],p=+D1(+c),c=+R1(+c),W[u+16>>3]=c,c=+W[l+8>>3],g=p*+D1(+c),W[u>>3]=g,c=p*+R1(+c),W[u+8>>3]=c}function wf(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0;if(F=t0,t0=t0+32|0,g=F+16|0,_=F,e7(l,u,g),x=vr(l,u)|0,L=n2(l,u)|0,cc(x,_),u=fc(x,A[g>>2]|0)|0,!(s9(x)|0))return L=u,t0=F,L|0;do switch(x|0){case 4:{l=0,c=14;break}case 14:{l=1,c=14;break}case 24:{l=2,c=14;break}case 38:{l=3,c=14;break}case 49:{l=4,c=14;break}case 58:{l=5,c=14;break}case 63:{l=6,c=14;break}case 72:{l=7,c=14;break}case 83:{l=8,c=14;break}case 97:{l=9,c=14;break}case 107:{l=10,c=14;break}case 117:{l=11,c=14;break}default:S=0,p=0}while(0);return(c|0)==14&&(S=A[22096+(l*24|0)+8>>2]|0,p=A[22096+(l*24|0)+16>>2]|0),l=A[g>>2]|0,(l|0)!=(A[_>>2]|0)&&(x=Le(x)|0,l=A[g>>2]|0,x|(l|0)==(p|0)&&(u=(u+1|0)%6|0)),(L|0)==3&(l|0)==(p|0)?(L=(u+5|0)%6|0,t0=F,L|0):(L|0)==5&(l|0)==(S|0)?(L=(u+1|0)%6|0,t0=F,L|0):(L=u,t0=F,L|0)}function Mf(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;return p=M9(l,u)|0,(c+-1|0)>>>0>5||(g=(p|0)!=0,(c|0)==1&g)?(c=-1,c|0):(p=wf(l,u)|0,g?(c=(5-p+(A[22384+(c<<2)>>2]|0)|0)%5|0,c|0):(c=(6-p+(A[22416+(c<<2)>>2]|0)|0)%6|0,c|0))}function Rr(l,u,c){l=l|0,u=u|0,c=c|0;var p=0;(u|0)>0?(p=O2(u,4)|0,A[l>>2]=p,p||q1(23230,23253,40,23267)):A[l>>2]=0,A[l+4>>2]=u,A[l+8>>2]=0,A[l+12>>2]=c}function Lr(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0;g=l+4|0,_=l+12|0,x=l+8|0;e:for(;;){for(c=A[g>>2]|0,u=0;;){if((u|0)>=(c|0))break e;if(p=A[l>>2]|0,S=A[p+(u<<2)>>2]|0,!S)u=u+1|0;else break}u=p+(~~(+i1(+(+S1(10,+ +(15-(A[_>>2]|0)|0))*(+W[S>>3]+ +W[S+8>>3])))%+(c|0))>>>0<<2)|0,c=A[u>>2]|0;t:do if(c|0){if(p=S+32|0,(c|0)==(S|0))A[u>>2]=A[p>>2];else{if(c=c+32|0,u=A[c>>2]|0,!u)break;for(;(u|0)!=(S|0);)if(c=u+32|0,u=A[c>>2]|0,!u)break t;A[c>>2]=A[p>>2]}E1(S),A[x>>2]=(A[x>>2]|0)+-1}while(0)}E1(A[l>>2]|0)}function Dr(l){l=l|0;var u=0,c=0,p=0;for(p=A[l+4>>2]|0,c=0;;){if((c|0)>=(p|0)){u=0,c=4;break}if(u=A[(A[l>>2]|0)+(c<<2)>>2]|0,!u)c=c+1|0;else{c=4;break}}return(c|0)==4?u|0:0}function Ir(l,u){l=l|0,u=u|0;var c=0,p=0,g=0,_=0;if(c=~~(+i1(+(+S1(10,+ +(15-(A[l+12>>2]|0)|0))*(+W[u>>3]+ +W[u+8>>3])))%+(A[l+4>>2]|0))>>>0,c=(A[l>>2]|0)+(c<<2)|0,p=A[c>>2]|0,!p)return _=1,_|0;_=u+32|0;do if((p|0)!=(u|0)){if(c=A[p+32>>2]|0,!c)return _=1,_|0;for(g=c;;){if((g|0)==(u|0)){g=8;break}if(c=A[g+32>>2]|0,c)p=g,g=c;else{c=1,g=10;break}}if((g|0)==8){A[p+32>>2]=A[_>>2];break}else if((g|0)==10)return c|0}else A[c>>2]=A[_>>2];while(0);return E1(u),_=l+8|0,A[_>>2]=(A[_>>2]|0)+-1,_=0,_|0}function Sf(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0;_=X2(40)|0,_||q1(23283,23253,98,23296),A[_>>2]=A[u>>2],A[_+4>>2]=A[u+4>>2],A[_+8>>2]=A[u+8>>2],A[_+12>>2]=A[u+12>>2],g=_+16|0,A[g>>2]=A[c>>2],A[g+4>>2]=A[c+4>>2],A[g+8>>2]=A[c+8>>2],A[g+12>>2]=A[c+12>>2],A[_+32>>2]=0,g=~~(+i1(+(+S1(10,+ +(15-(A[l+12>>2]|0)|0))*(+W[u>>3]+ +W[u+8>>3])))%+(A[l+4>>2]|0))>>>0,g=(A[l>>2]|0)+(g<<2)|0,p=A[g>>2]|0;do if(!p)A[g>>2]=_;else{for(;!(G5(p,u)|0&&G5(p+16|0,c)|0);)if(g=A[p+32>>2]|0,p=(g|0)==0?p:g,!(A[p+32>>2]|0)){x=10;break}if((x|0)==10){A[p+32>>2]=_;break}return E1(_),x=p,x|0}while(0);return x=l+8|0,A[x>>2]=(A[x>>2]|0)+1,x=_,x|0}function Ef(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0;if(g=~~(+i1(+(+S1(10,+ +(15-(A[l+12>>2]|0)|0))*(+W[u>>3]+ +W[u+8>>3])))%+(A[l+4>>2]|0))>>>0,g=A[(A[l>>2]|0)+(g<<2)>>2]|0,!g)return c=0,c|0;if(!c){for(l=g;;){if(G5(l,u)|0){p=10;break}if(l=A[l+32>>2]|0,!l){l=0,p=10;break}}if((p|0)==10)return l|0}for(l=g;;){if(G5(l,u)|0&&G5(l+16|0,c)|0){p=10;break}if(l=A[l+32>>2]|0,!l){l=0,p=10;break}}return(p|0)==10?l|0:0}function Tf(l,u){l=l|0,u=u|0;var c=0;if(c=~~(+i1(+(+S1(10,+ +(15-(A[l+12>>2]|0)|0))*(+W[u>>3]+ +W[u+8>>3])))%+(A[l+4>>2]|0))>>>0,l=A[(A[l>>2]|0)+(c<<2)>>2]|0,!l)return c=0,c|0;for(;;){if(G5(l,u)|0){u=5;break}if(l=A[l+32>>2]|0,!l){l=0,u=5;break}}return(u|0)==5?l|0:0}function Cf(){return 23312}function Pf(l){return l=+l,+ +qr(+l)}function f8(l){return l=+l,~~+Pf(l)|0}function X2(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0,R0=0,z0=0,e1=0,S0=0,O0=0,f0=0,n1=0;n1=t0,t0=t0+16|0,c0=n1;do if(l>>>0<245){if(F=l>>>0<11?16:l+11&-8,l=F>>>3,r0=A[5829]|0,c=r0>>>l,c&3|0)return u=(c&1^1)+l|0,l=23356+(u<<1<<2)|0,c=l+8|0,p=A[c>>2]|0,g=p+8|0,_=A[g>>2]|0,(_|0)==(l|0)?A[5829]=r0&~(1<<u):(A[_+12>>2]=l,A[c>>2]=_),f0=u<<3,A[p+4>>2]=f0|3,f0=p+f0+4|0,A[f0>>2]=A[f0>>2]|1,f0=g,t0=n1,f0|0;if(U=A[5831]|0,F>>>0>U>>>0){if(c|0)return u=2<<l,u=c<<l&(u|0-u),u=(u&0-u)+-1|0,S=u>>>12&16,u=u>>>S,c=u>>>5&8,u=u>>>c,_=u>>>2&4,u=u>>>_,l=u>>>1&2,u=u>>>l,p=u>>>1&1,p=(c|S|_|l|p)+(u>>>p)|0,u=23356+(p<<1<<2)|0,l=u+8|0,_=A[l>>2]|0,S=_+8|0,c=A[S>>2]|0,(c|0)==(u|0)?(l=r0&~(1<<p),A[5829]=l):(A[c+12>>2]=u,A[l>>2]=c,l=r0),f0=p<<3,x=f0-F|0,A[_+4>>2]=F|3,g=_+F|0,A[g+4>>2]=x|1,A[_+f0>>2]=x,U|0&&(p=A[5834]|0,u=U>>>3,c=23356+(u<<1<<2)|0,u=1<<u,l&u?(l=c+8|0,u=A[l>>2]|0):(A[5829]=l|u,u=c,l=c+8|0),A[l>>2]=p,A[u+12>>2]=p,A[p+8>>2]=u,A[p+12>>2]=c),A[5831]=x,A[5834]=g,f0=S,t0=n1,f0|0;if(_=A[5830]|0,_){for(c=(_&0-_)+-1|0,g=c>>>12&16,c=c>>>g,p=c>>>5&8,c=c>>>p,x=c>>>2&4,c=c>>>x,S=c>>>1&2,c=c>>>S,L=c>>>1&1,L=A[23620+((p|g|x|S|L)+(c>>>L)<<2)>>2]|0,c=L,S=L,L=(A[L+4>>2]&-8)-F|0;l=A[c+16>>2]|0,!(!l&&(l=A[c+20>>2]|0,!l));)x=(A[l+4>>2]&-8)-F|0,g=x>>>0<L>>>0,c=l,S=g?l:S,L=g?x:L;if(x=S+F|0,x>>>0>S>>>0){g=A[S+24>>2]|0,u=A[S+12>>2]|0;do if((u|0)==(S|0)){if(l=S+20|0,u=A[l>>2]|0,!u&&(l=S+16|0,u=A[l>>2]|0,!u)){c=0;break}for(;;)if(p=u+20|0,c=A[p>>2]|0,c)u=c,l=p;else if(p=u+16|0,c=A[p>>2]|0,c)u=c,l=p;else break;A[l>>2]=0,c=u}else c=A[S+8>>2]|0,A[c+12>>2]=u,A[u+8>>2]=c,c=u;while(0);do if(g|0){if(u=A[S+28>>2]|0,l=23620+(u<<2)|0,(S|0)==(A[l>>2]|0)){if(A[l>>2]=c,!c){A[5830]=_&~(1<<u);break}}else if(f0=g+16|0,A[((A[f0>>2]|0)==(S|0)?f0:g+20|0)>>2]=c,!c)break;A[c+24>>2]=g,u=A[S+16>>2]|0,u|0&&(A[c+16>>2]=u,A[u+24>>2]=c),u=A[S+20>>2]|0,u|0&&(A[c+20>>2]=u,A[u+24>>2]=c)}while(0);return L>>>0<16?(f0=L+F|0,A[S+4>>2]=f0|3,f0=S+f0+4|0,A[f0>>2]=A[f0>>2]|1):(A[S+4>>2]=F|3,A[x+4>>2]=L|1,A[x+L>>2]=L,U|0&&(p=A[5834]|0,u=U>>>3,c=23356+(u<<1<<2)|0,u=1<<u,u&r0?(l=c+8|0,u=A[l>>2]|0):(A[5829]=u|r0,u=c,l=c+8|0),A[l>>2]=p,A[u+12>>2]=p,A[p+8>>2]=u,A[p+12>>2]=c),A[5831]=L,A[5834]=x),f0=S+8|0,t0=n1,f0|0}else r0=F}else r0=F}else r0=F}else if(l>>>0<=4294967231)if(l=l+11|0,F=l&-8,p=A[5830]|0,p){g=0-F|0,l=l>>>8,l?F>>>0>16777215?L=31:(r0=(l+1048320|0)>>>16&8,R0=l<<r0,S=(R0+520192|0)>>>16&4,R0=R0<<S,L=(R0+245760|0)>>>16&2,L=14-(S|r0|L)+(R0<<L>>>15)|0,L=F>>>(L+7|0)&1|L<<1):L=0,c=A[23620+(L<<2)>>2]|0;e:do if(!c)c=0,l=0,R0=61;else for(l=0,S=F<<((L|0)==31?0:25-(L>>>1)|0),_=0;;){if(x=(A[c+4>>2]&-8)-F|0,x>>>0<g>>>0)if(x)l=c,g=x;else{l=c,g=0,R0=65;break e}if(R0=A[c+20>>2]|0,c=A[c+16+(S>>>31<<2)>>2]|0,_=(R0|0)==0|(R0|0)==(c|0)?_:R0,c)S=S<<1;else{c=_,R0=61;break}}while(0);if((R0|0)==61){if((c|0)==0&(l|0)==0){if(l=2<<L,l=(l|0-l)&p,!l){r0=F;break}r0=(l&0-l)+-1|0,x=r0>>>12&16,r0=r0>>>x,_=r0>>>5&8,r0=r0>>>_,S=r0>>>2&4,r0=r0>>>S,L=r0>>>1&2,r0=r0>>>L,c=r0>>>1&1,l=0,c=A[23620+((_|x|S|L|c)+(r0>>>c)<<2)>>2]|0}c?R0=65:(S=l,x=g)}if((R0|0)==65)for(_=c;;)if(r0=(A[_+4>>2]&-8)-F|0,c=r0>>>0<g>>>0,g=c?r0:g,l=c?_:l,c=A[_+16>>2]|0,c||(c=A[_+20>>2]|0),c)_=c;else{S=l,x=g;break}if((S|0)!=0&&x>>>0<((A[5831]|0)-F|0)>>>0&&(U=S+F|0,U>>>0>S>>>0)){_=A[S+24>>2]|0,u=A[S+12>>2]|0;do if((u|0)==(S|0)){if(l=S+20|0,u=A[l>>2]|0,!u&&(l=S+16|0,u=A[l>>2]|0,!u)){u=0;break}for(;;)if(g=u+20|0,c=A[g>>2]|0,c)u=c,l=g;else if(g=u+16|0,c=A[g>>2]|0,c)u=c,l=g;else break;A[l>>2]=0}else f0=A[S+8>>2]|0,A[f0+12>>2]=u,A[u+8>>2]=f0;while(0);do if(_){if(l=A[S+28>>2]|0,c=23620+(l<<2)|0,(S|0)==(A[c>>2]|0)){if(A[c>>2]=u,!u){p=p&~(1<<l),A[5830]=p;break}}else if(f0=_+16|0,A[((A[f0>>2]|0)==(S|0)?f0:_+20|0)>>2]=u,!u)break;A[u+24>>2]=_,l=A[S+16>>2]|0,l|0&&(A[u+16>>2]=l,A[l+24>>2]=u),l=A[S+20>>2]|0,l&&(A[u+20>>2]=l,A[l+24>>2]=u)}while(0);e:do if(x>>>0<16)f0=x+F|0,A[S+4>>2]=f0|3,f0=S+f0+4|0,A[f0>>2]=A[f0>>2]|1;else{if(A[S+4>>2]=F|3,A[U+4>>2]=x|1,A[U+x>>2]=x,u=x>>>3,x>>>0<256){c=23356+(u<<1<<2)|0,l=A[5829]|0,u=1<<u,l&u?(l=c+8|0,u=A[l>>2]|0):(A[5829]=l|u,u=c,l=c+8|0),A[l>>2]=U,A[u+12>>2]=U,A[U+8>>2]=u,A[U+12>>2]=c;break}if(u=x>>>8,u?x>>>0>16777215?c=31:(O0=(u+1048320|0)>>>16&8,f0=u<<O0,S0=(f0+520192|0)>>>16&4,f0=f0<<S0,c=(f0+245760|0)>>>16&2,c=14-(S0|O0|c)+(f0<<c>>>15)|0,c=x>>>(c+7|0)&1|c<<1):c=0,u=23620+(c<<2)|0,A[U+28>>2]=c,l=U+16|0,A[l+4>>2]=0,A[l>>2]=0,l=1<<c,!(p&l)){A[5830]=p|l,A[u>>2]=U,A[U+24>>2]=u,A[U+12>>2]=U,A[U+8>>2]=U;break}u=A[u>>2]|0;t:do if((A[u+4>>2]&-8|0)!=(x|0)){for(p=x<<((c|0)==31?0:25-(c>>>1)|0);c=u+16+(p>>>31<<2)|0,l=A[c>>2]|0,!!l;)if((A[l+4>>2]&-8|0)==(x|0)){u=l;break t}else p=p<<1,u=l;A[c>>2]=U,A[U+24>>2]=u,A[U+12>>2]=U,A[U+8>>2]=U;break e}while(0);O0=u+8|0,f0=A[O0>>2]|0,A[f0+12>>2]=U,A[O0>>2]=U,A[U+8>>2]=f0,A[U+12>>2]=u,A[U+24>>2]=0}while(0);return f0=S+8|0,t0=n1,f0|0}else r0=F}else r0=F;else r0=-1;while(0);if(c=A[5831]|0,c>>>0>=r0>>>0)return u=c-r0|0,l=A[5834]|0,u>>>0>15?(f0=l+r0|0,A[5834]=f0,A[5831]=u,A[f0+4>>2]=u|1,A[l+c>>2]=u,A[l+4>>2]=r0|3):(A[5831]=0,A[5834]=0,A[l+4>>2]=c|3,f0=l+c+4|0,A[f0>>2]=A[f0>>2]|1),f0=l+8|0,t0=n1,f0|0;if(x=A[5832]|0,x>>>0>r0>>>0)return S0=x-r0|0,A[5832]=S0,f0=A[5835]|0,O0=f0+r0|0,A[5835]=O0,A[O0+4>>2]=S0|1,A[f0+4>>2]=r0|3,f0=f0+8|0,t0=n1,f0|0;if(A[5947]|0?l=A[5949]|0:(A[5949]=4096,A[5948]=4096,A[5950]=-1,A[5951]=-1,A[5952]=0,A[5940]=0,A[5947]=c0&-16^1431655768,l=4096),S=r0+48|0,L=r0+47|0,_=l+L|0,g=0-l|0,F=_&g,F>>>0<=r0>>>0||(l=A[5939]|0,l|0&&(U=A[5937]|0,c0=U+F|0,c0>>>0<=U>>>0|c0>>>0>l>>>0)))return f0=0,t0=n1,f0|0;e:do if(A[5940]&4)u=0,R0=143;else{c=A[5835]|0;t:do if(c){for(p=23764;c0=A[p>>2]|0,!(c0>>>0<=c>>>0&&(c0+(A[p+4>>2]|0)|0)>>>0>c>>>0);)if(l=A[p+8>>2]|0,l)p=l;else{R0=128;break t}if(u=_-x&g,u>>>0<2147483647)if(l=q4(u|0)|0,(l|0)==((A[p>>2]|0)+(A[p+4>>2]|0)|0)){if((l|0)!=-1){x=u,_=l,R0=145;break e}}else p=l,R0=136;else u=0}else R0=128;while(0);do if((R0|0)==128)if(c=q4(0)|0,(c|0)!=-1&&(u=c,y0=A[5948]|0,C0=y0+-1|0,u=((C0&u|0)==0?0:(C0+u&0-y0)-u|0)+F|0,y0=A[5937]|0,C0=u+y0|0,u>>>0>r0>>>0&u>>>0<2147483647)){if(c0=A[5939]|0,c0|0&&C0>>>0<=y0>>>0|C0>>>0>c0>>>0){u=0;break}if(l=q4(u|0)|0,(l|0)==(c|0)){x=u,_=c,R0=145;break e}else p=l,R0=136}else u=0;while(0);do if((R0|0)==136){if(c=0-u|0,!(S>>>0>u>>>0&(u>>>0<2147483647&(p|0)!=-1)))if((p|0)==-1){u=0;break}else{x=u,_=p,R0=145;break e}if(l=A[5949]|0,l=L-u+l&0-l,l>>>0>=2147483647){x=u,_=p,R0=145;break e}if((q4(l|0)|0)==-1){q4(c|0)|0,u=0;break}else{x=l+u|0,_=p,R0=145;break e}}while(0);A[5940]=A[5940]|4,R0=143}while(0);if((R0|0)==143&&F>>>0<2147483647&&(S0=q4(F|0)|0,C0=q4(0)|0,z0=C0-S0|0,e1=z0>>>0>(r0+40|0)>>>0,!((S0|0)==-1|e1^1|S0>>>0<C0>>>0&((S0|0)!=-1&(C0|0)!=-1)^1))&&(x=e1?z0:u,_=S0,R0=145),(R0|0)==145){u=(A[5937]|0)+x|0,A[5937]=u,u>>>0>(A[5938]|0)>>>0&&(A[5938]=u),L=A[5835]|0;e:do if(L){for(u=23764;;){if(l=A[u>>2]|0,c=A[u+4>>2]|0,(_|0)==(l+c|0)){R0=154;break}if(p=A[u+8>>2]|0,p)u=p;else break}if((R0|0)==154&&(O0=u+4|0,(A[u+12>>2]&8|0)==0)&&_>>>0>L>>>0&l>>>0<=L>>>0){A[O0>>2]=c+x,f0=(A[5832]|0)+x|0,S0=L+8|0,S0=(S0&7|0)==0?0:0-S0&7,O0=L+S0|0,S0=f0-S0|0,A[5835]=O0,A[5832]=S0,A[O0+4>>2]=S0|1,A[L+f0+4>>2]=40,A[5836]=A[5951];break}for(_>>>0<(A[5833]|0)>>>0&&(A[5833]=_),c=_+x|0,u=23764;;){if((A[u>>2]|0)==(c|0)){R0=162;break}if(l=A[u+8>>2]|0,l)u=l;else break}if((R0|0)==162&&(A[u+12>>2]&8|0)==0){A[u>>2]=_,U=u+4|0,A[U>>2]=(A[U>>2]|0)+x,U=_+8|0,U=_+((U&7|0)==0?0:0-U&7)|0,u=c+8|0,u=c+((u&7|0)==0?0:0-u&7)|0,F=U+r0|0,S=u-U-r0|0,A[U+4>>2]=r0|3;t:do if((L|0)==(u|0))f0=(A[5832]|0)+S|0,A[5832]=f0,A[5835]=F,A[F+4>>2]=f0|1;else{if((A[5834]|0)==(u|0)){f0=(A[5831]|0)+S|0,A[5831]=f0,A[5834]=F,A[F+4>>2]=f0|1,A[F+f0>>2]=f0;break}if(l=A[u+4>>2]|0,(l&3|0)==1){x=l&-8,p=l>>>3;n:do if(l>>>0<256)if(l=A[u+8>>2]|0,c=A[u+12>>2]|0,(c|0)==(l|0)){A[5829]=A[5829]&~(1<<p);break}else{A[l+12>>2]=c,A[c+8>>2]=l;break}else{_=A[u+24>>2]|0,l=A[u+12>>2]|0;do if((l|0)==(u|0)){if(c=u+16|0,p=c+4|0,l=A[p>>2]|0,l)c=p;else if(l=A[c>>2]|0,!l){l=0;break}for(;;)if(g=l+20|0,p=A[g>>2]|0,p)l=p,c=g;else if(g=l+16|0,p=A[g>>2]|0,p)l=p,c=g;else break;A[c>>2]=0}else f0=A[u+8>>2]|0,A[f0+12>>2]=l,A[l+8>>2]=f0;while(0);if(!_)break;c=A[u+28>>2]|0,p=23620+(c<<2)|0;do if((A[p>>2]|0)!=(u|0)){if(f0=_+16|0,A[((A[f0>>2]|0)==(u|0)?f0:_+20|0)>>2]=l,!l)break n}else{if(A[p>>2]=l,l|0)break;A[5830]=A[5830]&~(1<<c);break n}while(0);if(A[l+24>>2]=_,c=u+16|0,p=A[c>>2]|0,p|0&&(A[l+16>>2]=p,A[p+24>>2]=l),c=A[c+4>>2]|0,!c)break;A[l+20>>2]=c,A[c+24>>2]=l}while(0);u=u+x|0,g=x+S|0}else g=S;if(u=u+4|0,A[u>>2]=A[u>>2]&-2,A[F+4>>2]=g|1,A[F+g>>2]=g,u=g>>>3,g>>>0<256){c=23356+(u<<1<<2)|0,l=A[5829]|0,u=1<<u,l&u?(l=c+8|0,u=A[l>>2]|0):(A[5829]=l|u,u=c,l=c+8|0),A[l>>2]=F,A[u+12>>2]=F,A[F+8>>2]=u,A[F+12>>2]=c;break}u=g>>>8;do if(!u)p=0;else{if(g>>>0>16777215){p=31;break}O0=(u+1048320|0)>>>16&8,f0=u<<O0,S0=(f0+520192|0)>>>16&4,f0=f0<<S0,p=(f0+245760|0)>>>16&2,p=14-(S0|O0|p)+(f0<<p>>>15)|0,p=g>>>(p+7|0)&1|p<<1}while(0);if(u=23620+(p<<2)|0,A[F+28>>2]=p,l=F+16|0,A[l+4>>2]=0,A[l>>2]=0,l=A[5830]|0,c=1<<p,!(l&c)){A[5830]=l|c,A[u>>2]=F,A[F+24>>2]=u,A[F+12>>2]=F,A[F+8>>2]=F;break}u=A[u>>2]|0;n:do if((A[u+4>>2]&-8|0)!=(g|0)){for(p=g<<((p|0)==31?0:25-(p>>>1)|0);c=u+16+(p>>>31<<2)|0,l=A[c>>2]|0,!!l;)if((A[l+4>>2]&-8|0)==(g|0)){u=l;break n}else p=p<<1,u=l;A[c>>2]=F,A[F+24>>2]=u,A[F+12>>2]=F,A[F+8>>2]=F;break t}while(0);O0=u+8|0,f0=A[O0>>2]|0,A[f0+12>>2]=F,A[O0>>2]=F,A[F+8>>2]=f0,A[F+12>>2]=u,A[F+24>>2]=0}while(0);return f0=U+8|0,t0=n1,f0|0}for(u=23764;l=A[u>>2]|0,!(l>>>0<=L>>>0&&(f0=l+(A[u+4>>2]|0)|0,f0>>>0>L>>>0));)u=A[u+8>>2]|0;g=f0+-47|0,l=g+8|0,l=g+((l&7|0)==0?0:0-l&7)|0,g=L+16|0,l=l>>>0<g>>>0?L:l,u=l+8|0,c=x+-40|0,S0=_+8|0,S0=(S0&7|0)==0?0:0-S0&7,O0=_+S0|0,S0=c-S0|0,A[5835]=O0,A[5832]=S0,A[O0+4>>2]=S0|1,A[_+c+4>>2]=40,A[5836]=A[5951],c=l+4|0,A[c>>2]=27,A[u>>2]=A[5941],A[u+4>>2]=A[5942],A[u+8>>2]=A[5943],A[u+12>>2]=A[5944],A[5941]=_,A[5942]=x,A[5944]=0,A[5943]=u,u=l+24|0;do O0=u,u=u+4|0,A[u>>2]=7;while((O0+8|0)>>>0<f0>>>0);if((l|0)!=(L|0)){if(_=l-L|0,A[c>>2]=A[c>>2]&-2,A[L+4>>2]=_|1,A[l>>2]=_,u=_>>>3,_>>>0<256){c=23356+(u<<1<<2)|0,l=A[5829]|0,u=1<<u,l&u?(l=c+8|0,u=A[l>>2]|0):(A[5829]=l|u,u=c,l=c+8|0),A[l>>2]=L,A[u+12>>2]=L,A[L+8>>2]=u,A[L+12>>2]=c;break}if(u=_>>>8,u?_>>>0>16777215?p=31:(O0=(u+1048320|0)>>>16&8,f0=u<<O0,S0=(f0+520192|0)>>>16&4,f0=f0<<S0,p=(f0+245760|0)>>>16&2,p=14-(S0|O0|p)+(f0<<p>>>15)|0,p=_>>>(p+7|0)&1|p<<1):p=0,c=23620+(p<<2)|0,A[L+28>>2]=p,A[L+20>>2]=0,A[g>>2]=0,u=A[5830]|0,l=1<<p,!(u&l)){A[5830]=u|l,A[c>>2]=L,A[L+24>>2]=c,A[L+12>>2]=L,A[L+8>>2]=L;break}u=A[c>>2]|0;t:do if((A[u+4>>2]&-8|0)!=(_|0)){for(p=_<<((p|0)==31?0:25-(p>>>1)|0);c=u+16+(p>>>31<<2)|0,l=A[c>>2]|0,!!l;)if((A[l+4>>2]&-8|0)==(_|0)){u=l;break t}else p=p<<1,u=l;A[c>>2]=L,A[L+24>>2]=u,A[L+12>>2]=L,A[L+8>>2]=L;break e}while(0);O0=u+8|0,f0=A[O0>>2]|0,A[f0+12>>2]=L,A[O0>>2]=L,A[L+8>>2]=f0,A[L+12>>2]=u,A[L+24>>2]=0}}else f0=A[5833]|0,(f0|0)==0|_>>>0<f0>>>0&&(A[5833]=_),A[5941]=_,A[5942]=x,A[5944]=0,A[5838]=A[5947],A[5837]=-1,A[5842]=23356,A[5841]=23356,A[5844]=23364,A[5843]=23364,A[5846]=23372,A[5845]=23372,A[5848]=23380,A[5847]=23380,A[5850]=23388,A[5849]=23388,A[5852]=23396,A[5851]=23396,A[5854]=23404,A[5853]=23404,A[5856]=23412,A[5855]=23412,A[5858]=23420,A[5857]=23420,A[5860]=23428,A[5859]=23428,A[5862]=23436,A[5861]=23436,A[5864]=23444,A[5863]=23444,A[5866]=23452,A[5865]=23452,A[5868]=23460,A[5867]=23460,A[5870]=23468,A[5869]=23468,A[5872]=23476,A[5871]=23476,A[5874]=23484,A[5873]=23484,A[5876]=23492,A[5875]=23492,A[5878]=23500,A[5877]=23500,A[5880]=23508,A[5879]=23508,A[5882]=23516,A[5881]=23516,A[5884]=23524,A[5883]=23524,A[5886]=23532,A[5885]=23532,A[5888]=23540,A[5887]=23540,A[5890]=23548,A[5889]=23548,A[5892]=23556,A[5891]=23556,A[5894]=23564,A[5893]=23564,A[5896]=23572,A[5895]=23572,A[5898]=23580,A[5897]=23580,A[5900]=23588,A[5899]=23588,A[5902]=23596,A[5901]=23596,A[5904]=23604,A[5903]=23604,f0=x+-40|0,S0=_+8|0,S0=(S0&7|0)==0?0:0-S0&7,O0=_+S0|0,S0=f0-S0|0,A[5835]=O0,A[5832]=S0,A[O0+4>>2]=S0|1,A[_+f0+4>>2]=40,A[5836]=A[5951];while(0);if(u=A[5832]|0,u>>>0>r0>>>0)return S0=u-r0|0,A[5832]=S0,f0=A[5835]|0,O0=f0+r0|0,A[5835]=O0,A[O0+4>>2]=S0|1,A[f0+4>>2]=r0|3,f0=f0+8|0,t0=n1,f0|0}return f0=Cf()|0,A[f0>>2]=12,f0=0,t0=n1,f0|0}function E1(l){l=l|0;var u=0,c=0,p=0,g=0,_=0,x=0,S=0,L=0;if(!l)return;c=l+-8|0,g=A[5833]|0,l=A[l+-4>>2]|0,u=l&-8,L=c+u|0;do if(l&1)S=c,x=c;else{if(p=A[c>>2]|0,!(l&3)||(x=c+(0-p)|0,_=p+u|0,x>>>0<g>>>0))return;if((A[5834]|0)==(x|0)){if(l=L+4|0,u=A[l>>2]|0,(u&3|0)!=3){S=x,u=_;break}A[5831]=_,A[l>>2]=u&-2,A[x+4>>2]=_|1,A[x+_>>2]=_;return}if(c=p>>>3,p>>>0<256)if(l=A[x+8>>2]|0,u=A[x+12>>2]|0,(u|0)==(l|0)){A[5829]=A[5829]&~(1<<c),S=x,u=_;break}else{A[l+12>>2]=u,A[u+8>>2]=l,S=x,u=_;break}g=A[x+24>>2]|0,l=A[x+12>>2]|0;do if((l|0)==(x|0)){if(u=x+16|0,c=u+4|0,l=A[c>>2]|0,l)u=c;else if(l=A[u>>2]|0,!l){l=0;break}for(;;)if(p=l+20|0,c=A[p>>2]|0,c)l=c,u=p;else if(p=l+16|0,c=A[p>>2]|0,c)l=c,u=p;else break;A[u>>2]=0}else S=A[x+8>>2]|0,A[S+12>>2]=l,A[l+8>>2]=S;while(0);if(g){if(u=A[x+28>>2]|0,c=23620+(u<<2)|0,(A[c>>2]|0)==(x|0)){if(A[c>>2]=l,!l){A[5830]=A[5830]&~(1<<u),S=x,u=_;break}}else if(S=g+16|0,A[((A[S>>2]|0)==(x|0)?S:g+20|0)>>2]=l,!l){S=x,u=_;break}A[l+24>>2]=g,u=x+16|0,c=A[u>>2]|0,c|0&&(A[l+16>>2]=c,A[c+24>>2]=l),u=A[u+4>>2]|0,u?(A[l+20>>2]=u,A[u+24>>2]=l,S=x,u=_):(S=x,u=_)}else S=x,u=_}while(0);if(x>>>0>=L>>>0||(l=L+4|0,p=A[l>>2]|0,!(p&1)))return;if(p&2)A[l>>2]=p&-2,A[S+4>>2]=u|1,A[x+u>>2]=u,g=u;else{if((A[5835]|0)==(L|0)){if(L=(A[5832]|0)+u|0,A[5832]=L,A[5835]=S,A[S+4>>2]=L|1,(S|0)!=(A[5834]|0))return;A[5834]=0,A[5831]=0;return}if((A[5834]|0)==(L|0)){L=(A[5831]|0)+u|0,A[5831]=L,A[5834]=x,A[S+4>>2]=L|1,A[x+L>>2]=L;return}g=(p&-8)+u|0,c=p>>>3;do if(p>>>0<256)if(u=A[L+8>>2]|0,l=A[L+12>>2]|0,(l|0)==(u|0)){A[5829]=A[5829]&~(1<<c);break}else{A[u+12>>2]=l,A[l+8>>2]=u;break}else{_=A[L+24>>2]|0,l=A[L+12>>2]|0;do if((l|0)==(L|0)){if(u=L+16|0,c=u+4|0,l=A[c>>2]|0,l)u=c;else if(l=A[u>>2]|0,!l){c=0;break}for(;;)if(p=l+20|0,c=A[p>>2]|0,c)l=c,u=p;else if(p=l+16|0,c=A[p>>2]|0,c)l=c,u=p;else break;A[u>>2]=0,c=l}else c=A[L+8>>2]|0,A[c+12>>2]=l,A[l+8>>2]=c,c=l;while(0);if(_|0){if(l=A[L+28>>2]|0,u=23620+(l<<2)|0,(A[u>>2]|0)==(L|0)){if(A[u>>2]=c,!c){A[5830]=A[5830]&~(1<<l);break}}else if(p=_+16|0,A[((A[p>>2]|0)==(L|0)?p:_+20|0)>>2]=c,!c)break;A[c+24>>2]=_,l=L+16|0,u=A[l>>2]|0,u|0&&(A[c+16>>2]=u,A[u+24>>2]=c),l=A[l+4>>2]|0,l|0&&(A[c+20>>2]=l,A[l+24>>2]=c)}}while(0);if(A[S+4>>2]=g|1,A[x+g>>2]=g,(S|0)==(A[5834]|0)){A[5831]=g;return}}if(l=g>>>3,g>>>0<256){c=23356+(l<<1<<2)|0,u=A[5829]|0,l=1<<l,u&l?(u=c+8|0,l=A[u>>2]|0):(A[5829]=u|l,l=c,u=c+8|0),A[u>>2]=S,A[l+12>>2]=S,A[S+8>>2]=l,A[S+12>>2]=c;return}l=g>>>8,l?g>>>0>16777215?p=31:(x=(l+1048320|0)>>>16&8,L=l<<x,_=(L+520192|0)>>>16&4,L=L<<_,p=(L+245760|0)>>>16&2,p=14-(_|x|p)+(L<<p>>>15)|0,p=g>>>(p+7|0)&1|p<<1):p=0,l=23620+(p<<2)|0,A[S+28>>2]=p,A[S+20>>2]=0,A[S+16>>2]=0,u=A[5830]|0,c=1<<p;e:do if(!(u&c))A[5830]=u|c,A[l>>2]=S,A[S+24>>2]=l,A[S+12>>2]=S,A[S+8>>2]=S;else{l=A[l>>2]|0;t:do if((A[l+4>>2]&-8|0)!=(g|0)){for(p=g<<((p|0)==31?0:25-(p>>>1)|0);c=l+16+(p>>>31<<2)|0,u=A[c>>2]|0,!!u;)if((A[u+4>>2]&-8|0)==(g|0)){l=u;break t}else p=p<<1,l=u;A[c>>2]=S,A[S+24>>2]=l,A[S+12>>2]=S,A[S+8>>2]=S;break e}while(0);x=l+8|0,L=A[x>>2]|0,A[L+12>>2]=S,A[x>>2]=S,A[S+8>>2]=L,A[S+12>>2]=l,A[S+24>>2]=0}while(0);if(L=(A[5837]|0)+-1|0,A[5837]=L,!(L|0)){for(l=23772;l=A[l>>2]|0,l;)l=l+8|0;A[5837]=-1}}function O2(l,u){l=l|0,u=u|0;var c=0;return l?(c=C9(u,l)|0,(u|l)>>>0>65535&&(c=((c>>>0)/(l>>>0)|0|0)==(u|0)?c:-1)):c=0,l=X2(c)|0,!l||!(A[l+-4>>2]&3)||q2(l|0,0,c|0)|0,l|0}function Rf(l,u,c,p){return l=l|0,u=u|0,c=c|0,p=p|0,c=l+c>>>0,A1(u+p+(c>>>0<l>>>0|0)>>>0|0),c|0|0}function t7(l,u,c,p){return l=l|0,u=u|0,c=c|0,p=p|0,p=u-p-(c>>>0>l>>>0|0)>>>0,A1(p|0),l-c>>>0|0|0}function Br(l){return l=l|0,(l?31-(B2(l^l-1)|0)|0:32)|0}function Lf(l,u,c,p,g){l=l|0,u=u|0,c=c|0,p=p|0,g=g|0;var _=0,x=0,S=0,L=0,F=0,U=0,r0=0,c0=0,y0=0,C0=0;if(U=l,L=u,F=L,x=c,c0=p,S=c0,!F)return _=(g|0)!=0,S?_?(A[g>>2]=l|0,A[g+4>>2]=u&0,c0=0,g=0,A1(c0|0),g|0):(c0=0,g=0,A1(c0|0),g|0):(_&&(A[g>>2]=(U>>>0)%(x>>>0),A[g+4>>2]=0),c0=0,g=(U>>>0)/(x>>>0)>>>0,A1(c0|0),g|0);_=(S|0)==0;do if(x){if(!_){if(_=(B2(S|0)|0)-(B2(F|0)|0)|0,_>>>0<=31){r0=_+1|0,S=31-_|0,u=_-31>>31,x=r0,l=U>>>(r0>>>0)&u|F<<S,u=F>>>(r0>>>0)&u,_=0,S=U<<S;break}return g?(A[g>>2]=l|0,A[g+4>>2]=L|u&0,c0=0,g=0,A1(c0|0),g|0):(c0=0,g=0,A1(c0|0),g|0)}if(_=x-1|0,_&x|0){S=(B2(x|0)|0)+33-(B2(F|0)|0)|0,C0=64-S|0,r0=32-S|0,L=r0>>31,y0=S-32|0,u=y0>>31,x=S,l=r0-1>>31&F>>>(y0>>>0)|(F<<r0|U>>>(S>>>0))&u,u=u&F>>>(S>>>0),_=U<<C0&L,S=(F<<C0|U>>>(y0>>>0))&L|U<<r0&S-33>>31;break}return g|0&&(A[g>>2]=_&U,A[g+4>>2]=0),(x|0)==1?(y0=L|u&0,C0=l|0|0,A1(y0|0),C0|0):(C0=Br(x|0)|0,y0=F>>>(C0>>>0)|0,C0=F<<32-C0|U>>>(C0>>>0)|0,A1(y0|0),C0|0)}else{if(_)return g|0&&(A[g>>2]=(F>>>0)%(x>>>0),A[g+4>>2]=0),y0=0,C0=(F>>>0)/(x>>>0)>>>0,A1(y0|0),C0|0;if(!U)return g|0&&(A[g>>2]=0,A[g+4>>2]=(F>>>0)%(S>>>0)),y0=0,C0=(F>>>0)/(S>>>0)>>>0,A1(y0|0),C0|0;if(_=S-1|0,!(_&S))return g|0&&(A[g>>2]=l|0,A[g+4>>2]=_&F|u&0),y0=0,C0=F>>>((Br(S|0)|0)>>>0),A1(y0|0),C0|0;if(_=(B2(S|0)|0)-(B2(F|0)|0)|0,_>>>0<=30){u=_+1|0,S=31-_|0,x=u,l=F<<S|U>>>(u>>>0),u=F>>>(u>>>0),_=0,S=U<<S;break}return g?(A[g>>2]=l|0,A[g+4>>2]=L|u&0,y0=0,C0=0,A1(y0|0),C0|0):(y0=0,C0=0,A1(y0|0),C0|0)}while(0);if(!x)F=S,L=0,S=0;else{r0=c|0|0,U=c0|p&0,F=Rf(r0|0,U|0,-1,-1)|0,c=s0()|0,L=S,S=0;do p=L,L=_>>>31|L<<1,_=S|_<<1,p=l<<1|p>>>31|0,c0=l>>>31|u<<1|0,t7(F|0,c|0,p|0,c0|0)|0,C0=s0()|0,y0=C0>>31|((C0|0)<0?-1:0)<<1,S=y0&1,l=t7(p|0,c0|0,y0&r0|0,(((C0|0)<0?-1:0)>>31|((C0|0)<0?-1:0)<<1)&U|0)|0,u=s0()|0,x=x-1|0;while((x|0)!=0);F=L,L=0}return x=0,g|0&&(A[g>>2]=l,A[g+4>>2]=u),y0=(_|0)>>>31|(F|x)<<1|(x<<1|_>>>31)&0|L,C0=(_<<1|0>>>31)&-2|S,A1(y0|0),C0|0}function O4(l,u,c,p){l=l|0,u=u|0,c=c|0,p=p|0;var g=0,_=0;return _=t0,t0=t0+16|0,g=_|0,Lf(l,u,c,p,g)|0,t0=_,A1(A[g+4>>2]|0),A[g>>2]|0|0}function N0(l,u,c){return l=l|0,u=u|0,c=c|0,(c|0)<32?(A1(u>>>c|0),l>>>c|(u&(1<<c)-1)<<32-c):(A1(0),u>>>c-32|0)}function K0(l,u,c){return l=l|0,u=u|0,c=c|0,(c|0)<32?(A1(u<<c|(l&(1<<c)-1<<32-c)>>>32-c|0),l<<c):(A1(l<<c-32|0),0)}function Or(l,u){return l=+l,u=+u,l!=l?+u:u!=u?+l:+h5(+l,+u)}function h8(l){return l=+l,l>=0?+u1(l+.5):+H9(l-.5)}function d8(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0;if((c|0)>=8192)return $u(l|0,u|0,c|0)|0,l|0;if(_=l|0,g=l+c|0,(l&3)==(u&3)){for(;l&3;){if(!c)return _|0;q0[l>>0]=q0[u>>0]|0,l=l+1|0,u=u+1|0,c=c-1|0}for(c=g&-4|0,p=c-64|0;(l|0)<=(p|0);)A[l>>2]=A[u>>2],A[l+4>>2]=A[u+4>>2],A[l+8>>2]=A[u+8>>2],A[l+12>>2]=A[u+12>>2],A[l+16>>2]=A[u+16>>2],A[l+20>>2]=A[u+20>>2],A[l+24>>2]=A[u+24>>2],A[l+28>>2]=A[u+28>>2],A[l+32>>2]=A[u+32>>2],A[l+36>>2]=A[u+36>>2],A[l+40>>2]=A[u+40>>2],A[l+44>>2]=A[u+44>>2],A[l+48>>2]=A[u+48>>2],A[l+52>>2]=A[u+52>>2],A[l+56>>2]=A[u+56>>2],A[l+60>>2]=A[u+60>>2],l=l+64|0,u=u+64|0;for(;(l|0)<(c|0);)A[l>>2]=A[u>>2],l=l+4|0,u=u+4|0}else for(c=g-4|0;(l|0)<(c|0);)q0[l>>0]=q0[u>>0]|0,q0[l+1>>0]=q0[u+1>>0]|0,q0[l+2>>0]=q0[u+2>>0]|0,q0[l+3>>0]=q0[u+3>>0]|0,l=l+4|0,u=u+4|0;for(;(l|0)<(g|0);)q0[l>>0]=q0[u>>0]|0,l=l+1|0,u=u+1|0;return _|0}function q2(l,u,c){l=l|0,u=u|0,c=c|0;var p=0,g=0,_=0,x=0;if(_=l+c|0,u=u&255,(c|0)>=67){for(;l&3;)q0[l>>0]=u,l=l+1|0;for(p=_&-4|0,x=u|u<<8|u<<16|u<<24,g=p-64|0;(l|0)<=(g|0);)A[l>>2]=x,A[l+4>>2]=x,A[l+8>>2]=x,A[l+12>>2]=x,A[l+16>>2]=x,A[l+20>>2]=x,A[l+24>>2]=x,A[l+28>>2]=x,A[l+32>>2]=x,A[l+36>>2]=x,A[l+40>>2]=x,A[l+44>>2]=x,A[l+48>>2]=x,A[l+52>>2]=x,A[l+56>>2]=x,A[l+60>>2]=x,l=l+64|0;for(;(l|0)<(p|0);)A[l>>2]=x,l=l+4|0}for(;(l|0)<(_|0);)q0[l>>0]=u,l=l+1|0;return _-c|0}function qr(l){return l=+l,l>=0?+u1(l+.5):+H9(l-.5)}function q4(l){l=l|0;var u=0,c=0,p=0;return p=Qu()|0,c=A[t1>>2]|0,u=c+l|0,(l|0)>0&(u|0)<(c|0)|(u|0)<0?(Xu(u|0)|0,f2(12),-1):(u|0)>(p|0)&&!(Yu(u|0)|0)?(f2(12),-1):(A[t1>>2]=u,c|0)}return{___uremdi3:O4,_bitshift64Lshr:N0,_bitshift64Shl:K0,_calloc:O2,_cellAreaKm2:Oc,_cellAreaM2:qc,_cellAreaRads2:Bc,_compact:Hc,_destroyLinkedPolygon:sf,_edgeLengthKm:Lc,_edgeLengthM:Dc,_emscripten_replace_memory:Zu,_exactEdgeLengthKm:kc,_exactEdgeLengthM:Nc,_exactEdgeLengthRads:Fc,_experimentalH3ToLocalIj:af,_experimentalLocalIjToH3:lf,_free:E1,_geoToH3:_r,_getDestinationH3IndexFromUnidirectionalEdge:Kc,_getH3IndexesFromUnidirectionalEdge:tf,_getH3UnidirectionalEdge:Zc,_getH3UnidirectionalEdgeBoundary:u8,_getH3UnidirectionalEdgesFromHexagon:nf,_getOriginH3IndexFromUnidirectionalEdge:Jc,_getPentagonIndexes:Ge,_getRes0Indexes:dc,_h3Distance:Af,_h3GetBaseCell:vr,_h3GetFaces:br,_h3GetResolution:Uc,_h3IndexesAreNeighbors:wr,_h3IsPentagon:M9,_h3IsResClassIII:jc,_h3IsValid:xr,_h3Line:cf,_h3LineSize:uf,_h3SetToLinkedGeo:Ac,_h3ToCenterChild:Gc,_h3ToChildren:t2,_h3ToGeo:g5,_h3ToGeoBoundary:y5,_h3ToParent:ke,_h3UnidirectionalEdgeIsValid:ef,_hexAreaKm2:Pc,_hexAreaM2:Rc,_hexRing:rc,_i64Subtract:t7,_kRing:nr,_kRingDistances:ic,_llvm_minnum_f64:Or,_llvm_round_f64:h8,_malloc:X2,_maxFaceCount:Yc,_maxH3ToChildrenSize:zc,_maxKringSize:nc,_maxPolyfillSize:oc,_maxUncompactSize:Wc,_memcpy:d8,_memset:q2,_numHexagons:Ic,_pentagonIndexCount:Xc,_pointDistKm:K6,_pointDistM:Ec,_pointDistRads:Sc,_polyfill:sc,_res0IndexCount:hc,_round:qr,_sbrk:q4,_sizeOfCoordIJ:xf,_sizeOfGeoBoundary:mf,_sizeOfGeoCoord:pf,_sizeOfGeoPolygon:yf,_sizeOfGeofence:gf,_sizeOfH3Index:df,_sizeOfLinkedGeoPolygon:vf,_uncompact:Vc,establishStackSpace:tc,stackAlloc:Ju,stackRestore:ec,stackSave:Ku}}(V1,B1,B);e.___uremdi3=F0.___uremdi3,e._bitshift64Lshr=F0._bitshift64Lshr,e._bitshift64Shl=F0._bitshift64Shl,e._calloc=F0._calloc,e._cellAreaKm2=F0._cellAreaKm2,e._cellAreaM2=F0._cellAreaM2,e._cellAreaRads2=F0._cellAreaRads2,e._compact=F0._compact,e._destroyLinkedPolygon=F0._destroyLinkedPolygon,e._edgeLengthKm=F0._edgeLengthKm,e._edgeLengthM=F0._edgeLengthM;var w2=e._emscripten_replace_memory=F0._emscripten_replace_memory;e._exactEdgeLengthKm=F0._exactEdgeLengthKm,e._exactEdgeLengthM=F0._exactEdgeLengthM,e._exactEdgeLengthRads=F0._exactEdgeLengthRads,e._experimentalH3ToLocalIj=F0._experimentalH3ToLocalIj,e._experimentalLocalIjToH3=F0._experimentalLocalIjToH3,e._free=F0._free,e._geoToH3=F0._geoToH3,e._getDestinationH3IndexFromUnidirectionalEdge=F0._getDestinationH3IndexFromUnidirectionalEdge,e._getH3IndexesFromUnidirectionalEdge=F0._getH3IndexesFromUnidirectionalEdge,e._getH3UnidirectionalEdge=F0._getH3UnidirectionalEdge,e._getH3UnidirectionalEdgeBoundary=F0._getH3UnidirectionalEdgeBoundary,e._getH3UnidirectionalEdgesFromHexagon=F0._getH3UnidirectionalEdgesFromHexagon,e._getOriginH3IndexFromUnidirectionalEdge=F0._getOriginH3IndexFromUnidirectionalEdge,e._getPentagonIndexes=F0._getPentagonIndexes,e._getRes0Indexes=F0._getRes0Indexes,e._h3Distance=F0._h3Distance,e._h3GetBaseCell=F0._h3GetBaseCell,e._h3GetFaces=F0._h3GetFaces,e._h3GetResolution=F0._h3GetResolution,e._h3IndexesAreNeighbors=F0._h3IndexesAreNeighbors,e._h3IsPentagon=F0._h3IsPentagon,e._h3IsResClassIII=F0._h3IsResClassIII,e._h3IsValid=F0._h3IsValid,e._h3Line=F0._h3Line,e._h3LineSize=F0._h3LineSize,e._h3SetToLinkedGeo=F0._h3SetToLinkedGeo,e._h3ToCenterChild=F0._h3ToCenterChild,e._h3ToChildren=F0._h3ToChildren,e._h3ToGeo=F0._h3ToGeo,e._h3ToGeoBoundary=F0._h3ToGeoBoundary,e._h3ToParent=F0._h3ToParent,e._h3UnidirectionalEdgeIsValid=F0._h3UnidirectionalEdgeIsValid,e._hexAreaKm2=F0._hexAreaKm2,e._hexAreaM2=F0._hexAreaM2,e._hexRing=F0._hexRing,e._i64Subtract=F0._i64Subtract,e._kRing=F0._kRing,e._kRingDistances=F0._kRingDistances,e._llvm_minnum_f64=F0._llvm_minnum_f64,e._llvm_round_f64=F0._llvm_round_f64,e._malloc=F0._malloc,e._maxFaceCount=F0._maxFaceCount,e._maxH3ToChildrenSize=F0._maxH3ToChildrenSize,e._maxKringSize=F0._maxKringSize,e._maxPolyfillSize=F0._maxPolyfillSize,e._maxUncompactSize=F0._maxUncompactSize,e._memcpy=F0._memcpy,e._memset=F0._memset,e._numHexagons=F0._numHexagons,e._pentagonIndexCount=F0._pentagonIndexCount,e._pointDistKm=F0._pointDistKm,e._pointDistM=F0._pointDistM,e._pointDistRads=F0._pointDistRads,e._polyfill=F0._polyfill,e._res0IndexCount=F0._res0IndexCount,e._round=F0._round,e._sbrk=F0._sbrk,e._sizeOfCoordIJ=F0._sizeOfCoordIJ,e._sizeOfGeoBoundary=F0._sizeOfGeoBoundary,e._sizeOfGeoCoord=F0._sizeOfGeoCoord,e._sizeOfGeoPolygon=F0._sizeOfGeoPolygon,e._sizeOfGeofence=F0._sizeOfGeofence,e._sizeOfH3Index=F0._sizeOfH3Index,e._sizeOfLinkedGeoPolygon=F0._sizeOfLinkedGeoPolygon,e._uncompact=F0._uncompact,e.establishStackSpace=F0.establishStackSpace;var r8=e.stackAlloc=F0.stackAlloc,N5=e.stackRestore=F0.stackRestore,Pe=e.stackSave=F0.stackSave;if(e.asm=F0,e.cwrap=C,e.setValue=v,e.getValue=b,e.getTempRet0=m,s1){V(s1)||(s1=o(s1));{U0();var f5=function(Q){Q.byteLength&&(Q=new Uint8Array(Q)),Y.set(Q,y),e.memoryInitializerRequest&&delete e.memoryInitializerRequest.response,c1()},X6=function(){s(s1,f5,function(){throw"could not load memory initializer "+s1})},o8=y1(s1);if(o8)f5(o8.buffer);else if(e.memoryInitializerRequest){var s8=function(){var Q=e.memoryInitializerRequest,n0=Q.response;if(Q.status!==200&&Q.status!==0){var h0=y1(e.memoryInitializerRequestURL);if(h0)n0=h0.buffer;else{console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+Q.status+", retrying "+s1),X6();return}}f5(n0)};e.memoryInitializerRequest.response?setTimeout(s8,0):e.memoryInitializerRequest.addEventListener("load",s8)}else X6()}}var U5;m0=function Q(){U5||K(),U5||(m0=Q)};function K(Q){if(L0>0||(p0(),L0>0))return;function n0(){U5||(U5=!0,!M&&(E0(),I0(),e.onRuntimeInitialized&&e.onRuntimeInitialized(),_0()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),n0()},1)):n0()}e.run=K;function x0(Q){throw e.onAbort&&e.onAbort(Q),Q+="",a(Q),h(Q),M=!0,"abort("+Q+"). Build with -s ASSERTIONS=1 for more info."}if(e.abort=x0,e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return K(),i}(typeof z1=="object"?z1:{}),p1="number",h7=p1,_1=p1,P1=p1,i2=p1,F1=p1,eS=[["sizeOfH3Index",p1],["sizeOfGeoCoord",p1],["sizeOfGeoBoundary",p1],["sizeOfGeoPolygon",p1],["sizeOfGeofence",p1],["sizeOfLinkedGeoPolygon",p1],["sizeOfCoordIJ",p1],["h3IsValid",h7,[_1,P1]],["geoToH3",_1,[p1,p1,i2]],["h3ToGeo",null,[_1,P1,F1]],["h3ToGeoBoundary",null,[_1,P1,F1]],["maxKringSize",p1,[p1]],["kRing",null,[_1,P1,p1,F1]],["kRingDistances",null,[_1,P1,p1,F1,F1]],["hexRing",null,[_1,P1,p1,F1]],["maxPolyfillSize",p1,[F1,i2]],["polyfill",null,[F1,i2,F1]],["h3SetToLinkedGeo",null,[F1,p1,F1]],["destroyLinkedPolygon",null,[F1]],["compact",p1,[F1,F1,p1]],["uncompact",p1,[F1,p1,F1,p1,i2]],["maxUncompactSize",p1,[F1,p1,i2]],["h3IsPentagon",h7,[_1,P1]],["h3IsResClassIII",h7,[_1,P1]],["h3GetBaseCell",p1,[_1,P1]],["h3GetResolution",p1,[_1,P1]],["maxFaceCount",p1,[_1,P1]],["h3GetFaces",null,[_1,P1,F1]],["h3ToParent",_1,[_1,P1,i2]],["h3ToChildren",null,[_1,P1,i2,F1]],["h3ToCenterChild",_1,[_1,P1,i2]],["maxH3ToChildrenSize",p1,[_1,P1,i2]],["h3IndexesAreNeighbors",h7,[_1,P1,_1,P1]],["getH3UnidirectionalEdge",_1,[_1,P1,_1,P1]],["getOriginH3IndexFromUnidirectionalEdge",_1,[_1,P1]],["getDestinationH3IndexFromUnidirectionalEdge",_1,[_1,P1]],["h3UnidirectionalEdgeIsValid",h7,[_1,P1]],["getH3IndexesFromUnidirectionalEdge",null,[_1,P1,F1]],["getH3UnidirectionalEdgesFromHexagon",null,[_1,P1,F1]],["getH3UnidirectionalEdgeBoundary",null,[_1,P1,F1]],["h3Distance",p1,[_1,P1,_1,P1]],["h3Line",p1,[_1,P1,_1,P1,F1]],["h3LineSize",p1,[_1,P1,_1,P1]],["experimentalH3ToLocalIj",p1,[_1,P1,_1,P1,F1]],["experimentalLocalIjToH3",p1,[_1,P1,F1,F1]],["hexAreaM2",p1,[i2]],["hexAreaKm2",p1,[i2]],["edgeLengthM",p1,[i2]],["edgeLengthKm",p1,[i2]],["pointDistM",p1,[F1,F1]],["pointDistKm",p1,[F1,F1]],["pointDistRads",p1,[F1,F1]],["cellAreaM2",p1,[_1,P1]],["cellAreaKm2",p1,[_1,P1]],["cellAreaRads2",p1,[_1,P1]],["exactEdgeLengthM",p1,[_1,P1]],["exactEdgeLengthKm",p1,[_1,P1]],["exactEdgeLengthRads",p1,[_1,P1]],["numHexagons",p1,[i2]],["getRes0Indexes",null,[F1]],["res0IndexCount",p1],["getPentagonIndexes",null,[p1,F1]],["pentagonIndexCount",p1]],_2={};eS.forEach(function(e){_2[e[0]]=z1.cwrap.apply(z1,e)});var E6=16,z6=4,G6=8,tS=_2.sizeOfH3Index(),Zi=_2.sizeOfGeoCoord(),nS=_2.sizeOfGeoBoundary(),iS=_2.sizeOfGeoPolygon(),T7=_2.sizeOfGeofence();_2.sizeOfLinkedGeoPolygon();_2.sizeOfCoordIJ();function rS(i){if(typeof i!="number"||i<0||i>15||Math.floor(i)!==i)throw new Error("Invalid resolution: "+i)}var oS=/[^0-9a-fA-F]/;function au(i){if(Array.isArray(i)&&i.length===2&&Number.isInteger(i[0])&&Number.isInteger(i[1]))return i;if(typeof i!="string"||oS.test(i))return[0,0];var e=parseInt(i.substring(0,i.length-8),E6),t=parseInt(i.substring(i.length-8),E6);return[t,e]}function za(i){if(i>=0)return i.toString(E6);i=i&2147483647;var e=Au(8,i.toString(E6)),t=(parseInt(e[0],E6)+8).toString(E6);return e=t+e.substring(1),e}function lu(i,e){return za(e)+Au(8,za(i))}function Au(i,e){for(var t=i-e.length,n="",r=0;r<t;r++)n+="0";return n=n+e,n}function Ga(i,e,t){for(var n=i.length,r=z1._calloc(n,Zi),o=t?1:0,s=t?0:1,a=0;a<n*2;a+=2)z1.HEAPF64.set([i[a/2][o],i[a/2][s]].map(hu),r/G6+a);return z1.HEAPU32.set([n,r],e/z6),e}function sS(i,e){var t=i.length-1,n=z1._calloc(iS),r=0,o=r+T7,s=o+z6;Ga(i[0],n+r,e);var a;if(t>0){a=z1._calloc(t,T7);for(var h=0;h<t;h++)Ga(i[h+1],a+T7*h,e)}return z1.setValue(n+o,t,"i32"),z1.setValue(n+s,a,"i32"),n}function aS(i){var e=0,t=e+T7,n=t+z6,r=z6;z1._free(z1.getValue(i+e+r,"i8*"));var o=z1.getValue(i+t,"i32");if(o>0){for(var s=z1.getValue(i+n,"i32"),a=0;a<o;a++)z1._free(z1.getValue(s+T7*a+r,"i8*"));z1._free(s)}z1._free(i)}function lS(i){var e=z1.getTempRet0();return[i,e]}function AS(i){var e=lS(i),t=e[0],n=e[1];return n?lu(t,n):null}function uS(i,e){e===void 0&&(e=0);var t=z1.getValue(i+z6*e*2,"i32"),n=z1.getValue(i+z6*(e*2+1),"i32");return n?lu(t,n):null}function cS(i,e){for(var t=[],n=0;n<e;n++){var r=uS(i,n);r!==null&&t.push(r)}return t}function se(i){return pS(z1.getValue(i,"double"))}function uu(i){return[se(i),se(i+G6)]}function fS(i){return[se(i+G6),se(i)]}function hS(i,e,t){for(var n=z1.getValue(i,"i32"),r=i+G6,o=[],s=e?fS:uu,a=0;a<n*2;a+=2)o.push(s(r+G6*a));return t&&o.push(o[0]),o}function dS(i,e,t){var n=z1._malloc(Zi);z1.HEAPF64.set([i,e].map(hu),n/G6);var r=AS(_2.geoToH3(n,t));return z1._free(n),r}function cu(i){var e=z1._malloc(Zi),t=au(i),n=t[0],r=t[1];_2.h3ToGeo(n,r,e);var o=uu(e);return z1._free(e),o}function fu(i,e){var t=z1._malloc(nS),n=au(i),r=n[0],o=n[1];_2.h3ToGeoBoundary(r,o,t);var s=hS(t,e,e);return z1._free(t),s}function Ha(i,e,t){if(rS(e),t=Boolean(t),i.length===0||i[0].length===0)return[];typeof i[0][0]=="number"&&(i=[i]);var n=sS(i,t),r=_2.maxPolyfillSize(n,e),o=z1._calloc(r,tS);_2.polyfill(n,e,o);var s=cS(o,r);return z1._free(o),aS(n),s}function hu(i){return i*Math.PI/180}function pS(i){return i*180/Math.PI}const Q9=window.THREE?window.THREE:{Box3:c2,BufferGeometry:C1,Float32BufferAttribute:T1,InstancedBufferGeometry:sA,InstancedInterleavedBuffer:Di,InterleavedBufferAttribute:t5,Sphere:s5,Vector3:$,WireframeGeometry:Cv};var c6=new Q9.BufferGeometry().setAttribute?"setAttribute":"addAttribute";const Va=new Q9.Box3,a3=new Q9.Vector3;class Ji extends Q9.InstancedBufferGeometry{constructor(){super();this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this[c6]("position",new Q9.Float32BufferAttribute(e,3)),this[c6]("uv",new Q9.Float32BufferAttribute(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new Q9.InstancedInterleavedBuffer(t,6,1);return this[c6]("instanceStart",new Q9.InterleavedBufferAttribute(n,3,0)),this[c6]("instanceEnd",new Q9.InterleavedBufferAttribute(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new Q9.InstancedInterleavedBuffer(t,6,1);return this[c6]("instanceColorStart",new Q9.InterleavedBufferAttribute(n,3,0)),this[c6]("instanceColorEnd",new Q9.InterleavedBufferAttribute(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Q9.WireframeGeometry(e.geometry)),this}fromLineSegments(e){const t=e.geometry;if(t.isGeometry){console.error("LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.");return}else t.isBufferGeometry&&this.setPositions(t.attributes.position.array);return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Q9.Box3);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),Va.setFromBufferAttribute(t),this.boundingBox.union(Va))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Q9.Sphere),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let r=0;for(let o=0,s=e.count;o<s;o++)a3.fromBufferAttribute(e,o),r=Math.max(r,n.distanceToSquared(a3)),a3.fromBufferAttribute(t,o),r=Math.max(r,n.distanceToSquared(a3));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}Ji.prototype.isLineSegmentsGeometry=!0;const P2=window.THREE?window.THREE:{ShaderLib:z2,ShaderMaterial:F9,UniformsLib:X0,UniformsUtils:ai,Vector2:D0};P2.UniformsLib.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new P2.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1}};P2.ShaderLib.line={uniforms:P2.UniformsUtils.merge([P2.UniformsLib.common,P2.UniformsLib.fog,P2.UniformsLib.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		varying vec2 vUv;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;

			#endif

			float aspect = resolution.x / resolution.y;

			vUv = uv;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			worldStart = start.xyz;
			worldEnd = end.xyz;

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				// get the offset direction as perpendicular to the view vector
				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 offset;
				if ( position.y < 0.5 ) {

					offset = normalize( cross( start.xyz, worldDir ) );

				} else {

					offset = normalize( cross( end.xyz, worldDir ) );

				}

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// extend the line bounds to encompass  endcaps
					start.xyz += - worldDir * linewidth * 0.5;
					end.xyz += worldDir * linewidth * 0.5;

					// shift the position of the quad so it hugs the forward edge of the line
					offset.xy -= dir * forwardOffset;
					offset.z += 0.5;

				#endif

				// endcaps
				if ( position.y > 1.0 || position.y < 0.0 ) {

					offset.xy += dir * 2.0 * forwardOffset;

				}

				// adjust for linewidth
				offset *= linewidth * 0.5;

				// set the world position
				worldPos = ( position.y < 0.5 ) ? start : end;
				worldPos.xyz += offset;

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segements overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

			vec2 offset = vec2( dir.y, - dir.x );
			// undo aspect ratio adjustment
			dir.x /= aspect;
			offset.x /= aspect;

			// sign flip
			if ( position.x < 0.0 ) offset *= - 1.0;

			// endcaps
			if ( position.y < 0.0 ) {

				offset += - dir;

			} else if ( position.y > 1.0 ) {

				offset += dir;

			}

			// adjust for linewidth
			offset *= linewidth;

			// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
			offset /= resolution.y;

			// select end
			vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

			// back to clip space
			offset *= clip.w;

			clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		varying vec2 vUv;

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

			#endif

			#else

				#ifdef ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

			if ( abs( vUv.y ) > 1.0 ) {

				float a = vUv.x;
				float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
				float len2 = a * a + b * b;

				if ( len2 > 1.0 ) discard;

			}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <encodings_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class Ee extends P2.ShaderMaterial{constructor(e){super({type:"LineMaterial",uniforms:P2.UniformsUtils.clone(P2.ShaderLib.line.uniforms),vertexShader:P2.ShaderLib.line.vertexShader,fragmentShader:P2.ShaderLib.line.fragmentShader,clipping:!0});Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(t){t===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set(t){Boolean(t)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),t===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("ALPHA_TO_COVERAGE"in this.defines)},set:function(t){Boolean(t)!==Boolean("ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),t===!0?(this.defines.ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}Ee.prototype.isLineMaterial=!0;const x9=window.THREE?window.THREE:{Box3:c2,BufferGeometry:C1,InstancedInterleavedBuffer:Di,InterleavedBufferAttribute:t5,Line3:lA,MathUtils:m3,Matrix4:m1,Mesh:K1,Sphere:s5,Vector3:$,Vector4:Y1};var Wa=new x9.BufferGeometry().setAttribute?"setAttribute":"addAttribute";const ja=new x9.Vector3,Qa=new x9.Vector3,I9=new x9.Vector4,B9=new x9.Vector4,K2=new x9.Vector4,Nt=new x9.Vector3,Ut=new x9.Matrix4,E2=new x9.Line3,$a=new x9.Vector3,m4=new x9.Box3,l3=new x9.Sphere,e4=new x9.Vector4;class du extends x9.Mesh{constructor(e=new Ji,t=new Ee({color:Math.random()*16777215})){super(e,t);this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,r=new Float32Array(2*t.count);for(let s=0,a=0,h=t.count;s<h;s++,a+=2)ja.fromBufferAttribute(t,s),Qa.fromBufferAttribute(n,s),r[a]=a===0?0:r[a-1],r[a+1]=r[a]+ja.distanceTo(Qa);const o=new x9.InstancedInterleavedBuffer(r,2,1);return e[Wa]("instanceDistanceStart",new x9.InterleavedBufferAttribute(o,1,0)),e[Wa]("instanceDistanceEnd",new x9.InterleavedBufferAttribute(o,1,1)),this}raycast(e,t){e.camera===null&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');const n=e.params.Line2!==void 0&&e.params.Line2.threshold||0,r=e.ray,o=e.camera,s=o.projectionMatrix,a=this.matrixWorld,h=this.geometry,f=this.material,d=f.resolution,m=f.linewidth+n,y=h.attributes.instanceStart,v=h.attributes.instanceEnd,b=-o.near,M=2*Math.max(m/d.width,m/d.height);h.boundingSphere===null&&h.computeBoundingSphere(),l3.copy(h.boundingSphere).applyMatrix4(a);const w=Math.max(o.near,l3.distanceToPoint(r.origin));e4.set(0,0,-w,1).applyMatrix4(o.projectionMatrix),e4.multiplyScalar(1/e4.w),e4.applyMatrix4(o.projectionMatrixInverse);const E=Math.abs(M/e4.w)*.5;if(l3.radius+=E,e.ray.intersectsSphere(l3)===!1)return;h.boundingBox===null&&h.computeBoundingBox(),m4.copy(h.boundingBox).applyMatrix4(a);const T=Math.max(o.near,m4.distanceToPoint(r.origin));e4.set(0,0,-T,1).applyMatrix4(o.projectionMatrix),e4.multiplyScalar(1/e4.w),e4.applyMatrix4(o.projectionMatrixInverse);const C=Math.abs(M/e4.w)*.5;if(m4.max.x+=C,m4.max.y+=C,m4.max.z+=C,m4.min.x-=C,m4.min.y-=C,m4.min.z-=C,e.ray.intersectsBox(m4)!==!1){r.at(1,K2),K2.w=1,K2.applyMatrix4(o.matrixWorldInverse),K2.applyMatrix4(s),K2.multiplyScalar(1/K2.w),K2.x*=d.x/2,K2.y*=d.y/2,K2.z=0,Nt.copy(K2),Ut.multiplyMatrices(o.matrixWorldInverse,a);for(let R=0,I=y.count;R<I;R++){I9.fromBufferAttribute(y,R),B9.fromBufferAttribute(v,R),I9.w=1,B9.w=1,I9.applyMatrix4(Ut),B9.applyMatrix4(Ut);var P=I9.z>b&&B9.z>b;if(P)continue;if(I9.z>b){const B=I9.z-B9.z,j=(I9.z-b)/B;I9.lerp(B9,j)}else if(B9.z>b){const B=B9.z-I9.z,j=(B9.z-b)/B;B9.lerp(I9,j)}I9.applyMatrix4(s),B9.applyMatrix4(s),I9.multiplyScalar(1/I9.w),B9.multiplyScalar(1/B9.w),I9.x*=d.x/2,I9.y*=d.y/2,B9.x*=d.x/2,B9.y*=d.y/2,E2.start.copy(I9),E2.start.z=0,E2.end.copy(B9),E2.end.z=0;const q=E2.closestPointToPointParameter(Nt,!0);E2.at(q,$a);const D=x9.MathUtils.lerp(I9.z,B9.z,q),O=D>=-1&&D<=1,k=Nt.distanceTo($a)<m*.5;if(O&&k){E2.start.fromBufferAttribute(y,R),E2.end.fromBufferAttribute(v,R),E2.start.applyMatrix4(a),E2.end.applyMatrix4(a);const B=new x9.Vector3,j=new x9.Vector3;r.distanceSqToSegment(E2.start,E2.end,j,B),t.push({point:j,pointOnLine:B,distance:r.origin.distanceTo(j),object:this,face:null,faceIndex:R,uv:null,uv2:null})}}}}}du.prototype.LineSegments2=!0;class Ki extends Ji{constructor(){super();this.type="LineGeometry"}setPositions(e){for(var t=e.length-3,n=new Float32Array(2*t),r=0;r<t;r+=3)n[2*r]=e[r],n[2*r+1]=e[r+1],n[2*r+2]=e[r+2],n[2*r+3]=e[r+3],n[2*r+4]=e[r+4],n[2*r+5]=e[r+5];return super.setPositions(n),this}setColors(e){for(var t=e.length-3,n=new Float32Array(2*t),r=0;r<t;r+=3)n[2*r]=e[r],n[2*r+1]=e[r+1],n[2*r+2]=e[r+2],n[2*r+3]=e[r+3],n[2*r+4]=e[r+4],n[2*r+5]=e[r+5];return super.setColors(n),this}fromLine(e){var t=e.geometry;if(t.isGeometry){console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.");return}else t.isBufferGeometry&&this.setPositions(t.attributes.position.array);return this}}Ki.prototype.isLineGeometry=!0;class pu extends du{constructor(e=new Ki,t=new Ee({color:Math.random()*16777215})){super(e,t);this.type="Line2"}}pu.prototype.isLine2=!0;class Ya extends k5{constructor(e,t={}){const n=t.font;if(n===void 0)super();else{const r=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1);super(r,t)}this.type="TextGeometry"}}class mu{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],r=mS(e,t,this.data);for(let o=0,s=r.length;o<s;o++)Array.prototype.push.apply(n,r[o].toShapes());return n}}function mS(i,e,t){const n=Array.from(i),r=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*r,s=[];let a=0,h=0;for(let f=0;f<n.length;f++){const d=n[f];if(d===`
`)a=0,h-=o;else{const m=gS(d,r,a,h,t);a+=m.offsetX,s.push(m.path)}}return s}function gS(i,e,t,n,r){const o=r.glyphs[i]||r.glyphs["?"];if(!o){console.error('THREE.Font: character "'+i+'" does not exists in font family '+r.familyName+".");return}const s=new cx;let a,h,f,d,m,y,v,b;if(o.o){const M=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let w=0,E=M.length;w<E;)switch(M[w++]){case"m":a=M[w++]*e+t,h=M[w++]*e+n,s.moveTo(a,h);break;case"l":a=M[w++]*e+t,h=M[w++]*e+n,s.lineTo(a,h);break;case"q":f=M[w++]*e+t,d=M[w++]*e+n,m=M[w++]*e+t,y=M[w++]*e+n,s.quadraticCurveTo(m,y,f,d);break;case"b":f=M[w++]*e+t,d=M[w++]*e+n,m=M[w++]*e+t,y=M[w++]*e+n,v=M[w++]*e+t,b=M[w++]*e+n,s.bezierCurveTo(m,y,v,b,f,d);break}}return{offsetX:o.ha*e,path:s}}mu.prototype.isFont=!0;function Xa(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Q1(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?Xa(Object(t),!0).forEach(function(n){e2(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):Xa(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function gu(i,e){if(!(i instanceof e))throw new TypeError("Cannot call a class as a function")}function Za(i,e){for(var t=0;t<e.length;t++){var n=e[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function yu(i,e,t){return e&&Za(i.prototype,e),t&&Za(i,t),Object.defineProperty(i,"prototype",{writable:!1}),i}function e2(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function vu(i,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");i.prototype=Object.create(e&&e.prototype,{constructor:{value:i,writable:!0,configurable:!0}}),Object.defineProperty(i,"prototype",{writable:!1}),e&&le(i,e)}function ae(i){return ae=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},ae(i)}function le(i,e){return le=Object.setPrototypeOf||function(n,r){return n.__proto__=r,n},le(i,e)}function xu(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function w3(i,e,t){return xu()?w3=Reflect.construct:w3=function(r,o,s){var a=[null];a.push.apply(a,o);var h=Function.bind.apply(r,a),f=new h;return s&&le(f,s.prototype),f},w3.apply(null,arguments)}function yS(i,e){if(i==null)return{};var t={},n=Object.keys(i),r,o;for(o=0;o<n.length;o++)r=n[o],!(e.indexOf(r)>=0)&&(t[r]=i[r]);return t}function vS(i,e){if(i==null)return{};var t=yS(i,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(i);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&(!Object.prototype.propertyIsEnumerable.call(i,n)||(t[n]=i[n]))}return t}function _u(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function xS(i,e){if(e&&(typeof e=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return _u(i)}function bu(i){var e=xu();return function(){var n=ae(i),r;if(e){var o=ae(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return xS(this,r)}}function A2(i,e){return bS(i)||MS(i,e)||wu(i,e)||ES()}function o9(i){return _S(i)||wS(i)||wu(i)||SS()}function _S(i){if(Array.isArray(i))return Xn(i)}function bS(i){if(Array.isArray(i))return i}function wS(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function MS(i,e){var t=i==null?null:typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function wu(i,e){if(!!i){if(typeof i=="string")return Xn(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Xn(i,e)}}function Xn(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function SS(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function ES(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var TS=function i(e){e instanceof Array?e.forEach(i):(e.map&&e.map.dispose(),e.dispose())},Mu=function i(e){e.geometry&&e.geometry.dispose(),e.material&&TS(e.material),e.texture&&e.texture.dispose(),e.children&&e.children.forEach(i)},m9=function(e){if(e&&e.children)for(;e.children.length;){var t=e.children[0];e.remove(t),Mu(t)}};function b2(i,e){var t=new e;return{linkProp:function(r){return{default:t[r](),onChange:function(s,a){a[i][r](s)},triggerUpdate:!1}},linkMethod:function(r){return function(o){for(var s=o[i],a=arguments.length,h=new Array(a>1?a-1:0),f=1;f<a;f++)h[f-1]=arguments[f];var d=s[r].apply(s,h);return d===s?this:d}}}}var L9=100;function Ja(){return L9}function c5(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,n=(90-i)*Math.PI/180,r=(90-e)*Math.PI/180,o=L9*(1+t);return{x:o*Math.sin(n)*Math.cos(r),y:o*Math.cos(n),z:o*Math.sin(n)*Math.sin(r)}}function CS(i){var e=i.x,t=i.y,n=i.z,r=Math.sqrt(e*e+t*t+n*n),o=Math.acos(t/r),s=Math.atan2(n,e);return{lat:90-o*180/Math.PI,lng:90-s*180/Math.PI-(s<-Math.PI/2?360:0),altitude:r/L9-1}}var Q7=window.THREE?window.THREE:{BackSide:y2,BufferAttribute:t9,Color:l1,Mesh:K1,ShaderMaterial:F9},PS=`
uniform vec3 color;
uniform float coefficient;
uniform float power;
varying vec3 vVertexNormal;
varying vec3 vVertexWorldPosition;
void main() {
  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;
  vec3 viewCameraToVertex	= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;
  viewCameraToVertex = normalize(viewCameraToVertex);
  float intensity	= pow(
    coefficient + dot(vVertexNormal, viewCameraToVertex),
    power
  );
  gl_FragColor = vec4(color, intensity);
}`,RS=`
varying vec3 vVertexWorldPosition;
varying vec3 vVertexNormal;
void main() {
  vVertexNormal	= normalize(normalMatrix * normal);
  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;
  gl_Position	= projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,LS={backside:!0,coefficient:.5,color:"gold",size:2,power:1};function DS(i,e,t){return new Q7.ShaderMaterial({depthWrite:!1,fragmentShader:PS,transparent:!0,uniforms:{coefficient:{value:i},color:{value:new Q7.Color(e)},power:{value:t}},vertexShader:RS})}function IS(i,e){for(var t=i.clone(),n=new Float32Array(i.attributes.position.count*3),r=0,o=n.length;r<o;r++){var s=i.attributes.normal.array[r],a=i.attributes.position.array[r];n[r]=a+s*e}return t.setAttribute("position",new Q7.BufferAttribute(n,3)),t}function BS(i){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:LS,t=e.backside,n=e.coefficient,r=e.color,o=e.size,s=e.power,a=IS(i,o),h=DS(n,r,s);return t&&(h.side=Q7.BackSide),new Q7.Mesh(a,h)}var j4=window.THREE?window.THREE:{Color:l1,LineBasicMaterial:D4,LineSegments:Z7,Mesh:K1,MeshPhongMaterial:_e,SphereBufferGeometry:Q6,TextureLoader:be},Su=G9({props:{globeImageUrl:{},bumpImageUrl:{},showGlobe:{default:!0,onChange:function(e,t){t.globeObj.visible=!!e},triggerUpdate:!1},showGraticules:{default:!1,onChange:function(e,t){t.graticulesObj.visible=!!e},triggerUpdate:!1},showAtmosphere:{default:!0,onChange:function(e,t){t.atmosphereObj&&(t.atmosphereObj.visible=!!e)},triggerUpdate:!1},atmosphereColor:{default:"lightskyblue"},atmosphereAltitude:{default:.15},onReady:{default:function(){},triggerUpdate:!1}},methods:{globeMaterial:function(e,t){return t!==void 0?(e.globeObj.material=t||e.defaultGlobeMaterial,this):e.globeObj.material}},stateInit:function(){var e=new j4.SphereBufferGeometry(L9,75,75),t=new j4.MeshPhongMaterial({color:0,transparent:!0}),n=new j4.Mesh(e,t);n.rotation.y=-Math.PI/2,n.__globeObjType="globe";var r=new j4.LineSegments(new GA(J_(),L9,2),new j4.LineBasicMaterial({color:"lightgrey",transparent:!0,opacity:.1}));return{globeObj:n,graticulesObj:r,defaultGlobeMaterial:t}},init:function(e,t){m9(e),t.scene=e,t.scene.add(t.globeObj),t.scene.add(t.graticulesObj),t.ready=!1},update:function(e,t){var n=e.globeObj.material;if(t.hasOwnProperty("globeImageUrl")&&(e.globeImageUrl?new j4.TextureLoader().load(e.globeImageUrl,function(o){n.map=o,n.color=null,n.needsUpdate=!0,!e.ready&&(e.ready=!0)&&setTimeout(e.onReady)}):!n.color&&(n.color=new j4.Color(0))),t.hasOwnProperty("bumpImageUrl")&&(e.bumpImageUrl?e.bumpImageUrl&&new j4.TextureLoader().load(e.bumpImageUrl,function(o){n.bumpMap=o,n.needsUpdate=!0}):(n.bumpMap=null,n.needsUpdate=!0)),(t.hasOwnProperty("atmosphereColor")||t.hasOwnProperty("atmosphereAltitude"))&&(e.atmosphereObj&&(e.scene.remove(e.atmosphereObj),m9(e.atmosphereObj)),e.atmosphereColor&&e.atmosphereAltitude)){var r=e.atmosphereObj=BS(e.globeObj.geometry,{backside:!0,color:e.atmosphereColor,size:L9*e.atmosphereAltitude,power:3.5,coefficient:.1});r.visible=!!e.showAtmosphere,r.__globeObjType="atmosphere",e.scene.add(r)}!e.ready&&!e.globeImageUrl&&(e.ready=!0,e.onReady())}}),L4=function(e){return isNaN(e)?parseInt(Ui(e).toHex(),16):e},o4=function(e){return isNaN(e)?Ui(e).getAlpha():1},Ae=function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,n=Ui(e).toRgb(),r=["r","g","b"].map(function(o){return n[o]/255});return t?[].concat(o9(r),[n.a]):r};function OS(i,e,t){return i.opacity=e,i.transparent=e<1,i.depthWrite=t===void 0?e>=1:t,i}function I2(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},r=n.removeDelay,o=r===void 0?0:r;return rw(i,e.children,function(s){return e.add(s)},function(s){var a=function(){e.remove(s),m9(s),s&&s.hasOwnProperty("__data")&&delete s.__data.__currentTargetD};o?setTimeout(a,o):a()},Q1({objBindAttr:"__threeObj"},t))}var r2=window.THREE?window.THREE:{BufferAttribute:t9,BufferGeometry:C1,Color:l1,CylinderBufferGeometry:Mi,Matrix4:m1,Mesh:K1,MeshBasicMaterial:l5,MeshLambertMaterial:A5,Object3D:H1,Vector3:$},Ka=Object.assign({},Ni),qS=Ka.BufferGeometryUtils||Ka,zt=new r2.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",Eu=G9({props:{pointsData:{default:[]},pointLat:{default:"lat"},pointLng:{default:"lng"},pointColor:{default:function(){return"#ffffaa"}},pointAltitude:{default:.1},pointRadius:{default:.25},pointResolution:{default:12,triggerUpdate:!1},pointsMerge:{default:!1},pointsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.pointLat),n=G0(e.pointLng),r=G0(e.pointAltitude),o=G0(e.pointRadius),s=G0(e.pointColor),a=new r2.CylinderBufferGeometry(1,1,1,e.pointResolution);a[zt](new r2.Matrix4().makeRotationX(Math.PI/2)),a[zt](new r2.Matrix4().makeTranslation(0,0,-.5));var h=2*Math.PI*L9/360,f={},d=e.pointsMerge?new r2.Object3D:e.scene;if(I2(e.pointsData,d,{createObj:v,updateObj:b}),e.pointsMerge){var m=e.pointsData.length?qS.mergeBufferGeometries(e.pointsData.map(function(M){var w=M.__threeObj;M.__threeObj=void 0;var E=w.geometry.clone();w.updateMatrix(),E[zt](w.matrix);for(var T=new r2.Color(s(M)),C=E.attributes.position.count,P=new Float32Array(C*3),R=0,I=C;R<I;R++){var q=R*3;P[q]=T.r,P[q+1]=T.g,P[q+2]=T.b}return E.setAttribute("color",new r2.BufferAttribute(P,3)),E})):new r2.BufferGeometry,y=new r2.Mesh(m,new r2.MeshBasicMaterial({color:16777215,vertexColors:!0}));y.__globeObjType="points",y.__data=e.pointsData,m9(e.scene),e.scene.add(y)}function v(){var M=new r2.Mesh(a);return M.__globeObjType="point",M}function b(M,w){var E=function(D){var O=M.__currentTargetD=D,k=O.r,B=O.alt,j=O.lat,Y=O.lng;Object.assign(M.position,c5(j,Y));var z=e.pointsMerge?new r2.Vector3(0,0,0):e.scene.localToWorld(new r2.Vector3(0,0,0));M.lookAt(z),M.scale.x=M.scale.y=Math.min(30,k)*h,M.scale.z=Math.max(B*L9,.1)},T={alt:+r(w),r:+o(w),lat:+t(w),lng:+n(w)},C=M.__currentTargetD||Object.assign({},T,{alt:-.001});if(Object.keys(T).some(function(q){return C[q]!==T[q]})&&(e.pointsMerge||!e.pointsTransitionDuration||e.pointsTransitionDuration<0?E(T):new W1.Tween(C).to(T,e.pointsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(E).start()),!e.pointsMerge){var P=s(w),R=P?o4(P):0,I=!!R;M.visible=I,I&&(f.hasOwnProperty(P)||(f[P]=new r2.MeshLambertMaterial({color:L4(P),transparent:R<1,opacity:R})),M.material=f[P])}}}}),FS=["stroke"],o2=window.THREE?window.THREE:{BufferGeometry:C1,CubicBezierCurve3:vi,Curve:v2,Float32BufferAttribute:T1,Group:R2,Line:j6,Mesh:K1,NormalBlending:Z4,QuadraticBezierCurve3:ve,ShaderMaterial:F9,TubeBufferGeometry:Ei,Vector3:$},A3=new o2.BufferGeometry().setAttribute?"setAttribute":"addAttribute",kS={uniforms:{dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}},vertexShader:`
    uniform float dashTranslate; 

    attribute vec4 vertexColor;
    varying vec4 vColor;
    
    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    uniform float dashOffset; 
    uniform float dashSize;
    uniform float gapSize; 
    
    varying vec4 vColor;
    varying float vRelDistance;
    
    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;
    
      // set px color: [r, g, b, a], interpolated between vertices 
      gl_FragColor = vColor; 
    }
  `},Tu=G9({props:{arcsData:{default:[]},arcStartLat:{default:"startLat"},arcStartLng:{default:"startLng"},arcEndLat:{default:"endLat"},arcEndLng:{default:"endLng"},arcColor:{default:function(){return"#ffffaa"}},arcAltitude:{},arcAltitudeAutoScale:{default:.5},arcStroke:{},arcCurveResolution:{default:64,triggerUpdate:!1},arcCircularResolution:{default:6,triggerUpdate:!1},arcDashLength:{default:1},arcDashGap:{default:0},arcDashInitialGap:{default:0},arcDashAnimateTime:{default:0},arcsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e,new zi().onTick.add(function(n,r){t.arcsData.filter(function(o){return o.__threeObj&&o.__threeObj.children.length&&o.__threeObj.children[0].material&&o.__threeObj.children[0].__dashAnimateStep}).forEach(function(o){var s=o.__threeObj.children[0],a=s.__dashAnimateStep*r,h=s.material.uniforms.dashTranslate.value%1e9;s.material.uniforms.dashTranslate.value=h+a})})},update:function(e){var t=G0(e.arcStartLat),n=G0(e.arcStartLng),r=G0(e.arcEndLat),o=G0(e.arcEndLng),s=G0(e.arcAltitude),a=G0(e.arcAltitudeAutoScale),h=G0(e.arcStroke),f=G0(e.arcColor),d=G0(e.arcDashLength),m=G0(e.arcDashGap),y=G0(e.arcDashInitialGap),v=G0(e.arcDashAnimateTime),b=new o2.ShaderMaterial(Q1(Q1({},kS),{},{transparent:!0,blending:o2.NormalBlending}));I2(e.arcsData,e.scene,{createObj:function(){var C=new o2.Group;return C.__globeObjType="arc",C},updateObj:function(C,P){var R=h(P),I=R!=null;if(!C.children.length||I!==(C.children[0].type==="Mesh")){m9(C);var q=I?new o2.Mesh:new o2.Line(new o2.BufferGeometry);q.material=b.clone(),C.add(q)}var D=C.children[0];Object.assign(D.material.uniforms,{dashSize:{value:d(P)},gapSize:{value:m(P)},dashOffset:{value:y(P)}});var O=v(P);D.__dashAnimateStep=O>0?1e3/O:0;var k=w(f(P),e.arcCurveResolution,I?e.arcCircularResolution+1:1),B=E(e.arcCurveResolution,I?e.arcCircularResolution+1:1,!0);D.geometry[A3]("vertexColor",k),D.geometry[A3]("vertexRelDistance",B);var j=function(X){var o0=P.__currentTargetD=X,a0=o0.stroke,u0=vS(o0,FS),l0=M(u0);I?(D.geometry&&D.geometry.dispose(),D.geometry=new o2.TubeBufferGeometry(l0,e.arcCurveResolution,a0/2,e.arcCircularResolution),D.geometry[A3]("vertexColor",k),D.geometry[A3]("vertexRelDistance",B)):D.geometry.setFromPoints(l0.getPoints(e.arcCurveResolution))},Y={stroke:R,alt:s(P),altAutoScale:+a(P),startLat:+t(P),startLng:+n(P),endLat:+r(P),endLng:+o(P)},z=P.__currentTargetD||Object.assign({},Y,{altAutoScale:-.001});Object.keys(Y).some(function(G){return z[G]!==Y[G]})&&(!e.arcsTransitionDuration||e.arcsTransitionDuration<0?j(Y):new W1.Tween(z).to(Y,e.arcsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(j).start())}});function M(T){var C=T.alt,P=T.altAutoScale,R=T.startLat,I=T.startLng,q=T.endLat,D=T.endLng,O=function(i0){var g0=A2(i0,3),P0=g0[0],T0=g0[1],d0=g0[2],p0=c5(T0,P0,d0),E0=p0.x,I0=p0.y,_0=p0.z;return new o2.Vector3(E0,I0,_0)},k=[I,R],B=[D,q],j=C;if(j==null&&(j=o5(k,B)/2*P),j){var Y=qi(k,B),z=[.25,.75].map(function(b0){return[].concat(o9(Y(b0)),[j*1.5])}),G=A2(z,2),X=G[0],o0=G[1],a0=w3(o2.CubicBezierCurve3,o9([k,X,o0,B].map(O)));return a0}else{var u0=.001;return l0.apply(void 0,o9([[].concat(k,[u0]),[].concat(B,[u0])].map(O)))}function l0(b0,i0){var g0=b0.angleTo(i0),P0=g0===0?function(){return b0.clone()}:function(d0){return new o2.Vector3().addVectors(b0.clone().multiplyScalar(Math.sin((1-d0)*g0)),i0.clone().multiplyScalar(Math.sin(d0*g0))).divideScalar(Math.sin(g0))},T0=new o2.Curve;return T0.getPoint=P0,T0}}function w(T,C){var P=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,R=C+1,I;if(T instanceof Array||T instanceof Function){var q=T instanceof Array?U6().domain(T.map(function(z,G){return G/(T.length-1)})).range(T):T;I=function(G){return Ae(q(G))}}else{var D=Ae(T);I=function(){return D}}for(var O=new o2.Float32BufferAttribute(R*4*P,4),k=0,B=R;k<B;k++)for(var j=I(k/(B-1)),Y=0;Y<P;Y++)O.set(j,(k*P+Y)*4);return O}function E(T){for(var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,P=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,R=T+1,I=R*C,q=new o2.Float32BufferAttribute(I,1),D=0,O=R;D<O;D++)for(var k=D/(O-1),B=0;B<C;B++){var j=D*C+B,Y=P?I-1-j:j;q.setX(Y,k)}return q}}}),T2=window.THREE?window.THREE:{BufferAttribute:t9,BufferGeometry:C1,Color:l1,DoubleSide:E4,Mesh:K1,MeshBasicMaterial:l5,MeshLambertMaterial:A5,Object3D:H1},el=Object.assign({},Ni),NS=el.BufferGeometryUtils||el,US=new T2.BufferGeometry().applyMatrix4?"applyMatrix4":"applyMatrix",Cu=G9({props:{hexBinPointsData:{default:[]},hexBinPointLat:{default:"lat"},hexBinPointLng:{default:"lng"},hexBinPointWeight:{default:1},hexBinResolution:{default:4},hexMargin:{default:.2},hexTopCurvatureResolution:{default:5},hexTopColor:{default:function(){return"#ffffaa"}},hexSideColor:{default:function(){return"#ffffaa"}},hexAltitude:{default:function(e){var t=e.sumWeight;return t*.01}},hexBinMerge:{default:!1},hexTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.hexBinPointLat),n=G0(e.hexBinPointLng),r=G0(e.hexBinPointWeight),o=G0(e.hexAltitude),s=G0(e.hexTopColor),a=G0(e.hexSideColor),h=G0(e.hexMargin),f=zn(e.hexBinPointsData.map(function(E){return Q1(Q1({},E),{},{h3Idx:dS(t(E),n(E),e.hexBinResolution)})}),"h3Idx"),d=Object.entries(f).map(function(E){var T=A2(E,2),C=T[0],P=T[1];return{h3Idx:C,points:P,sumWeight:P.reduce(function(R,I){return R+ +r(I)},0)}}),m={},y=e.hexBinMerge?new T2.Object3D:e.scene;if(I2(d,y,{createObj:M,updateObj:w,idAccessor:function(T){return T.h3Idx}}),e.hexBinMerge){var v=d.length?NS.mergeBufferGeometries(d.map(function(E){var T=E.__threeObj;E.__threeObj=void 0;var C=T.geometry.toNonIndexed();T.updateMatrix(),C[US](T.matrix);for(var P=new T2.Color(s(E)),R=new T2.Color(a(E)),I=C.attributes.position.count,q=C.groups[0].count,D=new Float32Array(I*3),O=0,k=I;O<k;O++){var B=O*3,j=O>=q?P:R;D[B]=j.r,D[B+1]=j.g,D[B+2]=j.b}return C.setAttribute("color",new T2.BufferAttribute(D,3)),C})):new T2.BufferGeometry,b=new T2.Mesh(v,new T2.MeshBasicMaterial({color:16777215,vertexColors:!0,side:T2.DoubleSide}));b.__globeObjType="hexBinPoints",b.__data=d,m9(e.scene),e.scene.add(b)}function M(E){var T=new T2.Mesh;T.__hexCenter=cu(E.h3Idx),T.__hexGeoJson=fu(E.h3Idx,!0).reverse();var C=T.__hexCenter[1];return T.__hexGeoJson.forEach(function(P){var R=P[0];Math.abs(C-R)>170&&(P[0]+=C>R?360:-360)}),T.__globeObjType="hexbin",T}function w(E,T){var C=function(X,o0,a0){return X-(X-o0)*a0},P=Math.max(0,Math.min(1,+h(T))),R=A2(E.__hexCenter,2),I=R[0],q=R[1],D=P===0?E.__hexGeoJson:E.__hexGeoJson.map(function(G){var X=A2(G,2),o0=X[0],a0=X[1];return[[o0,q],[a0,I]].map(function(u0){var l0=A2(u0,2),b0=l0[0],i0=l0[1];return C(b0,i0,P)})}),O=e.hexTopCurvatureResolution;E.geometry=new Xi([D],0,L9,!1,!0,!0,O);var k={alt:+o(T)},B=function(X){var o0=E.__currentTargetD=X,a0=o0.alt;E.scale.x=E.scale.y=E.scale.z=1+a0},j=E.__currentTargetD||Object.assign({},k,{alt:-.001});if(Object.keys(k).some(function(G){return j[G]!==k[G]})&&(e.hexBinMerge||!e.hexTransitionDuration||e.hexTransitionDuration<0?B(k):new W1.Tween(j).to(k,e.hexTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(B).start()),!e.hexBinMerge){var Y=a(T),z=s(T);[Y,z].forEach(function(G){if(!m.hasOwnProperty(G)){var X=o4(G);m[G]=new T2.MeshLambertMaterial({color:L4(G),transparent:X<1,opacity:X,side:T2.DoubleSide})}}),E.material=[Y,z].map(function(G){return m[G]})}}}}),Q4=window.THREE?window.THREE:{DoubleSide:E4,Group:R2,LineBasicMaterial:D4,LineSegments:Z7,Mesh:K1,MeshBasicMaterial:l5},Pu=G9({props:{polygonsData:{default:[]},polygonGeoJsonGeometry:{default:"geometry"},polygonSideColor:{default:function(){return"#ffffaa"}},polygonSideMaterial:{},polygonCapColor:{default:function(){return"#ffffaa"}},polygonCapMaterial:{},polygonStrokeColor:{},polygonAltitude:{default:.01},polygonCapCurvatureResolution:{default:5},polygonsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.polygonGeoJsonGeometry),n=G0(e.polygonAltitude),r=G0(e.polygonCapCurvatureResolution),o=G0(e.polygonCapColor),s=G0(e.polygonCapMaterial),a=G0(e.polygonSideColor),h=G0(e.polygonSideMaterial),f=G0(e.polygonStrokeColor),d=[];e.polygonsData.forEach(function(m){var y={data:m,capColor:o(m),capMaterial:s(m),sideColor:a(m),sideMaterial:h(m),strokeColor:f(m),altitude:+n(m),capCurvatureResolution:+r(m)},v=t(m),b=m.__id||"".concat(Math.round(Math.random()*1e9));m.__id=b,v.type==="Polygon"?d.push(Q1({id:"".concat(b,"_0"),coords:v.coordinates},y)):v.type==="MultiPolygon"?d.push.apply(d,o9(v.coordinates.map(function(M,w){return Q1({id:"".concat(b,"_").concat(w),coords:M},y)}))):console.warn("Unsupported GeoJson geometry type: ".concat(v.type,". Skipping geometry..."))}),I2(d,e.scene,{idAccessor:function(y){return y.id},createObj:function(){var y=new Q4.Group;return y.__defaultSideMaterial=new Q4.MeshBasicMaterial({side:Q4.DoubleSide,depthWrite:!0}),y.__defaultCapMaterial=new Q4.MeshBasicMaterial({side:Q4.DoubleSide,depthWrite:!0}),y.add(new Q4.Mesh(void 0,[y.__defaultSideMaterial,y.__defaultCapMaterial])),y.add(new Q4.LineSegments(void 0,new Q4.LineBasicMaterial)),y.__globeObjType="polygon",y},updateObj:function(y,v){var b=v.coords,M=v.capColor,w=v.capMaterial,E=v.sideColor,T=v.sideMaterial,C=v.strokeColor,P=v.altitude,R=v.capCurvatureResolution,I=A2(y.children,2),q=I[0],D=I[1],O=!!C;if(D.visible=O,!zS(q.geometry.parameters||{},{polygonGeoJson:b,curvatureResolution:R})&&(q.geometry=new Xi(b,0,L9,!1,!0,!0,R)),O&&(!D.geometry.parameters||D.geometry.parameters.geoJson.coordinates!==b||D.geometry.parameters.resolution!==R)&&(D.geometry=new GA({type:"Polygon",coordinates:b},L9,R)),q.material[0]=T||y.__defaultSideMaterial,q.material[1]=w||y.__defaultCapMaterial,[!T&&E,!w&&M].forEach(function(G,X){if(!!G){var o0=q.material[X],a0=o4(G);o0.color.set(L4(G)),o0.transparent=a0<1,o0.opacity=a0}}),O){var k=D.material,B=o4(C);k.color.set(L4(C)),k.transparent=B<1,k.opacity=B}var j={alt:P},Y=function(X){var o0=y.__currentTargetD=X,a0=o0.alt;q.scale.x=q.scale.y=q.scale.z=1+a0,O&&(D.scale.x=D.scale.y=D.scale.z=1+a0+1e-4)},z=y.__currentTargetD||Object.assign({},j,{alt:-.001});Object.keys(j).some(function(G){return z[G]!==j[G]})&&(!e.polygonsTransitionDuration||e.polygonsTransitionDuration<0||z.alt===j.alt?Y(j):new W1.Tween(z).to(j,e.polygonsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(Y).start())}})}});function zS(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:function(){return function(n,r){return n===r}};return Object.entries(e).every(function(n){var r=A2(n,2),o=r[0],s=r[1];return i.hasOwnProperty(o)&&t(o)(i[o],s)})}var u3=window.THREE?window.THREE:{BufferGeometry:C1,DoubleSide:E4,Mesh:K1,MeshLambertMaterial:A5},tl=Object.assign({},Ni),GS=tl.BufferGeometryUtils||tl,Ru=G9({props:{hexPolygonsData:{default:[]},hexPolygonGeoJsonGeometry:{default:"geometry"},hexPolygonColor:{default:function(){return"#ffffaa"}},hexPolygonAltitude:{default:.001},hexPolygonResolution:{default:3},hexPolygonMargin:{default:.2},hexPolygonCurvatureResolution:{default:5},hexPolygonsTransitionDuration:{default:0,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.hexPolygonGeoJsonGeometry),n=G0(e.hexPolygonColor),r=G0(e.hexPolygonAltitude),o=G0(e.hexPolygonResolution),s=G0(e.hexPolygonMargin),a=G0(e.hexPolygonCurvatureResolution);I2(e.hexPolygonsData,e.scene,{createObj:function(f){var d=new u3.Mesh(void 0,new u3.MeshLambertMaterial({side:u3.DoubleSide}));return d.__globeObjType="hexPolygon",d},updateObj:function(f,d){var m=t(d),y=o(d),v=r(d),b=Math.max(0,Math.min(1,+s(d))),M=a(d),w=n(d),E=o4(w);f.material.color.set(L4(w)),f.material.transparent=E<1,f.material.opacity=E;var T=[];m.type==="Polygon"?Ha(m.coordinates,y,!0).forEach(function(q){return T.push(q)}):m.type==="MultiPolygon"?m.coordinates.forEach(function(q){return Ha(q,y,!0).forEach(function(D){return T.push(D)})}):console.warn("Unsupported GeoJson geometry type: ".concat(m.type,". Skipping geometry..."));var C=T.map(function(q){var D=cu(q),O=fu(q,!0).reverse(),k=D[1];return O.forEach(function(B){var j=B[0];Math.abs(k-j)>170&&(B[0]+=k>j?360:-360)}),{h3Idx:q,hexCenter:D,hexGeoJson:O}}),P={alt:v,margin:b,curvatureResolution:M},R=function(D){var O=f.__currentTargetD=D,k=O.alt,B=O.margin,j=O.curvatureResolution;f.geometry&&f.geometry.dispose(),f.geometry=C.length?GS.mergeBufferGeometries(C.map(function(Y){var z=function(l0,b0,i0){return l0-(l0-b0)*i0},G=A2(Y.hexCenter,2),X=G[0],o0=G[1],a0=B===0?Y.hexGeoJson:Y.hexGeoJson.map(function(u0){var l0=A2(u0,2),b0=l0[0],i0=l0[1];return[[b0,o0],[i0,X]].map(function(g0){var P0=A2(g0,2),T0=P0[0],d0=P0[1];return z(T0,d0,B)})});return new Xi([a0],L9,L9*(1+k),!1,!0,!1,j)})):new u3.BufferGeometry},I=f.__currentTargetD||Object.assign({},P,{alt:-.001});Object.keys(P).some(function(q){return I[q]!==P[q]})&&(!e.hexPolygonsTransitionDuration||e.hexPolygonsTransitionDuration<0?R(P):new W1.Tween(I).to(P,e.hexPolygonsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(R).start())}})}}),HS=window.THREE?window.THREE:{Vector3:$};function VS(i,e){var t=function(s,a){var h=s[s.length-1];return[].concat(o9(s),o9(o9(new Array(a-s.length)).map(function(){return h})))},n=Math.max(i.length,e.length),r=_w.apply(void 0,o9([i,e].map(function(o){return o.map(function(s){var a=s.x,h=s.y,f=s.z;return[a,h,f]})}).map(function(o){return t(o,n)})));return function(o){return o===0?i:o===1?e:r(o).map(function(s){var a=A2(s,3),h=a[0],f=a[1],d=a[2];return new HS.Vector3(h,f,d)})}}var C2=window.THREE?window.THREE:{BufferGeometry:C1,Color:l1,Float32BufferAttribute:T1,Group:R2,Line:j6,NoColors:hx,NormalBlending:Z4,ShaderMaterial:F9,Vector3:$,VertexColors:dx},nl=new C2.BufferGeometry().setAttribute?"setAttribute":"addAttribute",WS={uniforms:{dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}},vertexShader:`
    uniform float dashTranslate;

    attribute vec4 vertexColor;
    varying vec4 vColor;

    attribute float vertexRelDistance;
    varying float vRelDistance;

    void main() {
      // pass through colors and distances
      vColor = vertexColor;
      vRelDistance = vertexRelDistance + dashTranslate;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,fragmentShader:`
    uniform float dashOffset;
    uniform float dashSize;
    uniform float gapSize;

    varying vec4 vColor;
    varying float vRelDistance;

    void main() {
      // ignore pixels in the gap
      if (vRelDistance < dashOffset) discard;
      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;

      // set px color: [r, g, b, a], interpolated between vertices
      gl_FragColor = vColor;
    }
  `},Lu=G9({props:{pathsData:{default:[]},pathPoints:{default:function(e){return e}},pathPointLat:{default:function(e){return e[0]}},pathPointLng:{default:function(e){return e[1]}},pathPointAlt:{default:.001},pathResolution:{default:2},pathColor:{default:function(){return"#ffffaa"}},pathStroke:{},pathDashLength:{default:1},pathDashGap:{default:0},pathDashInitialGap:{default:0},pathDashAnimateTime:{default:0},pathTransitionDuration:{default:1e3,triggerUpdate:!1},rendererSize:{}},init:function(e,t){m9(e),t.scene=e,new zi().onTick.add(function(n,r){t.pathsData.filter(function(o){return o.__threeObj&&o.__threeObj.children.length&&o.__threeObj.children[0].material&&o.__threeObj.children[0].__dashAnimateStep}).forEach(function(o){var s=o.__threeObj.children[0],a=s.__dashAnimateStep*r;if(s.type==="Line"){var h=s.material.uniforms.dashTranslate.value%1e9;s.material.uniforms.dashTranslate.value=h+a}else if(s.type==="Line2"){for(var f=s.material.dashOffset-a,d=s.material.dashSize+s.material.gapSize;f<=-d;)f+=d;s.material.dashOffset=f}})})},update:function(e){var t=G0(e.pathPoints),n=G0(e.pathPointLat),r=G0(e.pathPointLng),o=G0(e.pathPointAlt),s=G0(e.pathStroke),a=G0(e.pathColor),h=G0(e.pathDashLength),f=G0(e.pathDashGap),d=G0(e.pathDashInitialGap),m=G0(e.pathDashAnimateTime),y=new C2.ShaderMaterial(Q1(Q1({},WS),{},{transparent:!0,blending:C2.NormalBlending}));I2(e.pathsData,e.scene,{createObj:function(){var T=new C2.Group;return T.__globeObjType="path",T},updateObj:function(T,C){var P=s(C),R=P!=null;if(!T.children.length||R===(T.children[0].type==="Line")){m9(T);var I=R?new pu(new Ki,new Ee):new C2.Line(new C2.BufferGeometry,y.clone());T.add(I)}var q=T.children[0],D=b(t(C),n,r,o,e.pathResolution),O=m(C);if(q.__dashAnimateStep=O>0?1e3/O:0,R){q.material.resolution=e.rendererSize;{var j=h(C),Y=f(C),z=d(C);q.material.dashed=Y>0,q.material.dashed?q.material.defines.USE_DASH="":delete q.material.defines.USE_DASH,q.material.dashed&&(q.material.dashScale=1/v(D),q.material.dashSize=j,q.material.gapSize=Y,q.material.dashOffset=-z)}{var G=a(C);if(G instanceof Array){var X=M(a(C),D.length-1,1,!1);q.geometry.setColors(X.array),q.material.vertexColors=C2.VertexColors}else{var o0=G,a0=o4(o0);q.material.color=new C2.Color(L4(o0)),q.material.transparent=a0<1,q.material.opacity=a0,q.material.vertexColors=C2.NoColors}}q.material.needsUpdate=!0}else{Object.assign(q.material.uniforms,{dashSize:{value:h(C)},gapSize:{value:f(C)},dashOffset:{value:d(C)}});var k=M(a(C),D.length),B=w(D.length,1,!0);q.geometry[nl]("vertexColor",k),q.geometry[nl]("vertexRelDistance",B)}var u0=VS(C.__currentTargetD&&C.__currentTargetD.points||[D[0]],D),l0=function(P0){var T0=C.__currentTargetD=P0,d0=T0.stroke,p0=T0.interpolK,E0=C.__currentTargetD.points=u0(p0);if(R){var I0;q.geometry.setPositions((I0=[]).concat.apply(I0,o9(E0.map(function(_0){var H0=_0.x,w0=_0.y,N=_0.z;return[H0,w0,N]})))),q.material.linewidth=d0,q.material.dashed&&q.computeLineDistances()}else q.geometry.setFromPoints(E0),q.geometry.computeBoundingSphere()},b0={stroke:P,interpolK:1},i0=Object.assign({},C.__currentTargetD||b0,{interpolK:0});Object.keys(b0).some(function(g0){return i0[g0]!==b0[g0]})&&(!e.pathTransitionDuration||e.pathTransitionDuration<0?l0(b0):new W1.Tween(i0).to(b0,e.pathTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(l0).start())}});function v(E){var T=0,C;return E.forEach(function(P){C&&(T+=C.distanceTo(P)),C=P}),T}function b(E,T,C,P,R){var I=function(k,B,j){for(var Y=[],z=1;z<=j;z++)Y.push(k+(B-k)*z/(j+1));return Y},q=function(){var k=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],B=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,j=[],Y=null;return k.forEach(function(z){if(Y){for(;Math.abs(Y[1]-z[1])>180;)Y[1]+=360*(Y[1]<z[1]?1:-1);var G=Math.sqrt(Math.pow(z[0]-Y[0],2)+Math.pow(z[1]-Y[1],2));if(G>B)for(var X=Math.floor(G/B),o0=I(Y[0],z[0],X),a0=I(Y[1],z[1],X),u0=I(Y[2],z[2],X),l0=0,b0=o0.length;l0<b0;l0++)j.push([o0[l0],a0[l0],u0[l0]])}j.push(Y=z)}),j},D=function(k){var B=A2(k,3),j=B[0],Y=B[1],z=B[2],G=c5(j,Y,z),X=G.x,o0=G.y,a0=G.z;return new C2.Vector3(X,o0,a0)};return q(E.map(function(O){return[T(O),C(O),P(O)]}),R).map(D)}function M(E,T){var C=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1,P=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,R=T+1,I;if(E instanceof Array||E instanceof Function){var q=E instanceof Array?U6().domain(E.map(function(G,X){return X/(E.length-1)})).range(E):E;I=function(X){return Ae(q(X),P)}}else{var D=Ae(E,P);I=function(){return D}}for(var O=P?4:3,k=new C2.Float32BufferAttribute(R*O*C,O),B=0,j=R;B<j;B++)for(var Y=I(B/(j-1)),z=0;z<C;z++)k.set(Y,(B*C+z)*O);return k}function w(E){for(var T=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,C=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,P=E+1,R=P*T,I=new C2.Float32BufferAttribute(R,1),q=0,D=P;q<D;q++)for(var O=q/(D-1),k=0;k<T;k++){var B=q*T+k,j=C?R-1-B:B;I.setX(j,O)}return I}}}),c3=window.THREE?window.THREE:{Euler:a5,Mesh:K1,MeshLambertMaterial:A5,SphereBufferGeometry:Q6},Du=G9({props:{tilesData:{default:[]},tileLat:{default:"lat"},tileLng:{default:"lng"},tileAltitude:{default:.01},tileWidth:{default:1},tileHeight:{default:1},tileUseGlobeProjection:{default:!0},tileMaterial:{default:function(){return new c3.MeshLambertMaterial({color:"#ffbb88",opacity:.4,transparent:!0})}},tileCurvatureResolution:{default:5},tilesTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.tileLat),n=G0(e.tileLng),r=G0(e.tileAltitude),o=G0(e.tileWidth),s=G0(e.tileHeight),a=G0(e.tileUseGlobeProjection),h=G0(e.tileMaterial),f=G0(e.tileCurvatureResolution);I2(e.tilesData,e.scene,{createObj:function(){var m=new c3.Mesh;return m.__globeObjType="tile",m},updateObj:function(m,y){m.material=h(y);var v=a(y),b=f(y),M=function(C){var P=m.__currentTargetD=C,R=P.lat,I=P.lng,q=P.alt,D=P.width,O=P.height,k=f6(I),B=f6(-R);m.geometry&&m.geometry.dispose(),m.geometry=new c3.SphereBufferGeometry(L9*(1+q),Math.ceil(D/(b||-1)),Math.ceil(O/(b||-1)),f6(90-D/2)+(v?k:0),f6(D),f6(90-O/2)+(v?B:0),f6(O)),v||m.setRotationFromEuler(new c3.Euler(B,k,0,"YXZ"))},w={lat:+t(y),lng:+n(y),alt:+r(y),width:+o(y),height:+s(y)},E=m.__currentTargetD||Object.assign({},w,{width:0,height:0});Object.keys(w).some(function(T){return E[T]!==w[T]})&&(!e.tilesTransitionDuration||e.tilesTransitionDuration<0?M(w):new W1.Tween(E).to(w,e.tilesTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(M).start())}})}}),f6=function(e){return e*Math.PI/180},jS={"0":{x_min:73,x_max:715,ha:792,o:"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},"1":{x_min:215.671875,x_max:574,ha:792,o:"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},"2":{x_min:59,x_max:731,ha:792,o:"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},"3":{x_min:54,x_max:737,ha:792,o:"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},"4":{x_min:48,x_max:742.453125,ha:792,o:"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},"5":{x_min:54.171875,x_max:738,ha:792,o:"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},"6":{x_min:53,x_max:739,ha:792,o:"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},"7":{x_min:58.71875,x_max:730.953125,ha:792,o:"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},"8":{x_min:55,x_max:736,ha:792,o:"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},"9":{x_min:53,x_max:739,ha:792,o:"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},\u03BF:{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},S:{x_min:0,x_max:788,ha:890,o:"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"\xA6":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"/":{x_min:183.25,x_max:608.328125,ha:792,o:"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},\u03A4:{x_min:-.4375,x_max:777.453125,ha:839,o:"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},y:{x_min:0,x_max:684.78125,ha:771,o:"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},\u03A0:{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},\u0390:{x_min:-111,x_max:339,ha:361,o:"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},g:{x_min:0,x_max:686,ha:838,o:"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"\xB2":{x_min:0,x_max:442,ha:539,o:"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"\u2013":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},\u039A:{x_min:0,x_max:819.5625,ha:893,o:"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},\u0192:{x_min:-46.265625,x_max:392,ha:513,o:"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},e:{x_min:0,x_max:714,ha:813,o:"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},\u03CC:{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},J:{x_min:0,x_max:588,ha:699,o:"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"\xBB":{x_min:-1,x_max:503,ha:601,o:"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"\xA9":{x_min:-3,x_max:1008,ha:1106,o:"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},\u03CE:{x_min:0,x_max:922,ha:1030,o:"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{x_min:193.0625,x_max:598.609375,ha:792,o:"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"\xAB":{x_min:0,x_max:507.203125,ha:604,o:"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},D:{x_min:0,x_max:828,ha:935,o:"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"\u2219":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},\u00FF:{x_min:0,x_max:47,ha:125,o:"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},w:{x_min:0,x_max:1009.71875,ha:1100,o:"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},$:{x_min:0,x_max:700,ha:793,o:"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\":{x_min:-.015625,x_max:425.0625,ha:522,o:"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},\u00B5:{x_min:0,x_max:697.21875,ha:747,o:"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},\u0399:{x_min:42,x_max:181,ha:297,o:"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},\u038E:{x_min:0,x_max:1144.5,ha:1214,o:"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u2019":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},\u039D:{x_min:0,x_max:801,ha:915,o:"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{x_min:8.71875,x_max:350.390625,ha:478,o:"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},Q:{x_min:0,x_max:968,ha:1072,o:"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},\u03C2:{x_min:1,x_max:676.28125,ha:740,o:"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},M:{x_min:0,x_max:954,ha:1067,o:"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},\u03A8:{x_min:0,x_max:1006,ha:1094,o:"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},C:{x_min:0,x_max:886,ha:944,o:"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{x_min:0,x_max:138,ha:236,o:"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{x_min:0,x_max:480.5625,ha:578,o:"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},X:{x_min:-.015625,x_max:854.15625,ha:940,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{x_min:0,x_max:963.890625,ha:1061,o:"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},\u03B9:{x_min:42,x_max:284,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},\u0386:{x_min:0,x_max:906.953125,ha:982,o:"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{x_min:0,x_max:318,ha:415,o:"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},\u03B5:{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},\u0394:{x_min:0,x_max:952.78125,ha:1028,o:"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{x_min:0,x_max:481,ha:578,o:"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"\u2030":{x_min:-3,x_max:1672,ha:1821,o:"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},a:{x_min:0,x_max:698.609375,ha:794,o:"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"\u2014":{x_min:0,x_max:941.671875,ha:1039,o:"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{x_min:8.71875,x_max:780.953125,ha:792,o:"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},N:{x_min:0,x_max:801,ha:914,o:"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},\u03C1:{x_min:0,x_max:712,ha:797,o:"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},"\xAF":{x_min:0,x_max:941.671875,ha:938,o:"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},Z:{x_min:0,x_max:779,ha:849,o:"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},u:{x_min:0,x_max:617,ha:729,o:"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},k:{x_min:0,x_max:612.484375,ha:697,o:"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},\u0397:{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},\u0391:{x_min:0,x_max:906.953125,ha:985,o:"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},s:{x_min:0,x_max:604,ha:697,o:"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},B:{x_min:0,x_max:778,ha:876,o:"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"\u2026":{x_min:0,x_max:614,ha:708,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{x_min:0,x_max:607,ha:704,o:"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},H:{x_min:0,x_max:803,ha:915,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},\u03BD:{x_min:0,x_max:675,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},c:{x_min:1,x_max:701.390625,ha:775,o:"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"\xB6":{x_min:0,x_max:566.671875,ha:678,o:"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},\u03B2:{x_min:0,x_max:660,ha:745,o:"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},\u039C:{x_min:0,x_max:954,ha:1068,o:"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},\u038C:{x_min:.109375,x_max:1120,ha:1217,o:"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},\u0389:{x_min:0,x_max:1158,ha:1275,o:"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"\u2022":{x_min:0,x_max:663.890625,ha:775,o:"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"\xA5":{x_min:.1875,x_max:819.546875,ha:886,o:"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{x_min:0,x_max:318.0625,ha:415,o:"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},U:{x_min:0,x_max:796,ha:904,o:"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},\u03B3:{x_min:.5,x_max:744.953125,ha:822,o:"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},\u03B1:{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},F:{x_min:0,x_max:683.328125,ha:717,o:"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"\xAD":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},\u03A7:{x_min:0,x_max:854.171875,ha:935,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{x_min:116,x_max:674,ha:792,o:"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"\u2020":{x_min:0,x_max:777,ha:835,o:"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"\xB0":{x_min:0,x_max:347,ha:444,o:"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},V:{x_min:0,x_max:862.71875,ha:940,o:"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},\u039E:{x_min:0,x_max:734.71875,ha:763,o:"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "},"\xA0":{x_min:0,x_max:0,ha:853},\u03AB:{x_min:.328125,x_max:819.515625,ha:889,o:"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},"\u201D":{x_min:0,x_max:347,ha:454,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{x_min:0,x_max:1260,ha:1357,o:"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},\u038A:{x_min:0,x_max:499,ha:613,o:"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},i:{x_min:14,x_max:136,ha:275,o:"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},\u0392:{x_min:0,x_max:778,ha:877,o:"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},\u03C5:{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{x_min:0,x_max:275,ha:372,o:"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},m:{x_min:0,x_max:1019,ha:1128,o:"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},\u03C7:{x_min:8.328125,x_max:780.5625,ha:815,o:"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},\u03AF:{x_min:42,x_max:326.71875,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},\u0396:{x_min:0,x_max:779.171875,ha:850,o:"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},R:{x_min:0,x_max:781.953125,ha:907,o:"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},o:{x_min:0,x_max:713,ha:821,o:"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},K:{x_min:0,x_max:819.46875,ha:906,o:"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{x_min:0,x_max:142,ha:239,o:"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},d:{x_min:0,x_max:683,ha:796,o:"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"\xA8":{x_min:-109,x_max:247,ha:232,o:"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},E:{x_min:0,x_max:736.109375,ha:789,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},Y:{x_min:0,x_max:820,ha:886,o:"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},'"':{x_min:0,x_max:299,ha:396,o:"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"\u2039":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"\u201E":{x_min:0,x_max:364,ha:467,o:"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},\u03B4:{x_min:1,x_max:710,ha:810,o:"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},\u03AD:{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},\u03C9:{x_min:0,x_max:922,ha:1031,o:"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"\xB4":{x_min:0,x_max:96,ha:251,o:"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"\xB1":{x_min:11,x_max:781,ha:792,o:"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},\u03CB:{x_min:0,x_max:617,ha:725,o:"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"\xA7":{x_min:0,x_max:593,ha:690,o:"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},b:{x_min:0,x_max:685,ha:783,o:"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},q:{x_min:0,x_max:683,ha:876,o:"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},\u03A9:{x_min:-.171875,x_max:969.5625,ha:1068,o:"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},\u03CD:{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},z:{x_min:-.015625,x_max:613.890625,ha:697,o:"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"\u2122":{x_min:0,x_max:894,ha:1e3,o:"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},\u03AE:{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},\u0398:{x_min:0,x_max:960,ha:1056,o:"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"\xAE":{x_min:-3,x_max:1008,ha:1106,o:"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{x_min:0,x_max:833,ha:931,o:"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},\u0395:{x_min:0,x_max:736.21875,ha:778,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"\xB3":{x_min:0,x_max:450,ha:547,o:"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{x_min:0,x_max:273.609375,ha:371,o:"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},L:{x_min:0,x_max:645.828125,ha:696,o:"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},\u03C3:{x_min:0,x_max:803.390625,ha:894,o:"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},\u03B6:{x_min:0,x_max:573,ha:642,o:"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},\u03B8:{x_min:0,x_max:674,ha:778,o:"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},\u039F:{x_min:0,x_max:958,ha:1054,o:"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},\u0393:{x_min:0,x_max:705.28125,ha:749,o:"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "}," ":{x_min:0,x_max:0,ha:375},"%":{x_min:-3,x_max:1089,ha:1186,o:"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},P:{x_min:0,x_max:726,ha:806,o:"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},\u0388:{x_min:0,x_max:1078.21875,ha:1118,o:"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},\u038F:{x_min:.125,x_max:1136.546875,ha:1235,o:"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},_:{x_min:0,x_max:705.5625,ha:803,o:"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},\u03AA:{x_min:-110,x_max:246,ha:275,o:"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{x_min:23,x_max:768,ha:792,o:"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"\xBD":{x_min:0,x_max:1050,ha:1149,o:"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},\u03A1:{x_min:0,x_max:720,ha:783,o:"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"'":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},\u00AA:{x_min:0,x_max:350,ha:397,o:"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"\u0385":{x_min:0,x_max:450,ha:553,o:"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},T:{x_min:0,x_max:777,ha:835,o:"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},\u03A6:{x_min:0,x_max:915,ha:997,o:"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"\u204B":{x_min:0,x_max:0,ha:694},j:{x_min:-77.78125,x_max:167,ha:349,o:"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},\u03A3:{x_min:0,x_max:756.953125,ha:819,o:"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},"\u203A":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"\xA3":{x_min:0,x_max:704.484375,ha:801,o:"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},t:{x_min:0,x_max:367,ha:458,o:"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"\xAC":{x_min:0,x_max:706,ha:803,o:"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},\u03BB:{x_min:0,x_max:750,ha:803,o:"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},W:{x_min:0,x_max:1263.890625,ha:1351,o:"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},v:{x_min:0,x_max:675.15625,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},\u03C4:{x_min:.28125,x_max:644.5,ha:703,o:"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},\u03BE:{x_min:0,x_max:624.9375,ha:699,o:"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{x_min:-3,x_max:894.25,ha:992,o:"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},\u039B:{x_min:0,x_max:862.5,ha:942,o:"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},I:{x_min:41,x_max:180,ha:293,o:"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},G:{x_min:0,x_max:921,ha:1011,o:"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},\u03B0:{x_min:0,x_max:617,ha:725,o:"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{x_min:0,x_max:138.890625,ha:236,o:"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"\xB7":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},\u03A5:{x_min:.328125,x_max:819.515625,ha:889,o:"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},r:{x_min:0,x_max:355.5625,ha:432,o:"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},x:{x_min:0,x_max:675,ha:764,o:"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},\u03BC:{x_min:0,x_max:696.609375,ha:747,o:"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},h:{x_min:0,x_max:615,ha:724,o:"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{x_min:0,x_max:142,ha:239,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},\u03C6:{x_min:-2,x_max:878,ha:974,o:"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},f:{x_min:0,x_max:378,ha:472,o:"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"\u201C":{x_min:1,x_max:348.21875,ha:454,o:"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},A:{x_min:.03125,x_max:906.953125,ha:1008,o:"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},"\u2018":{x_min:1,x_max:139.890625,ha:236,o:"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},\u03CA:{x_min:-70,x_max:283,ha:361,o:"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},\u03C0:{x_min:-.21875,x_max:773.21875,ha:857,o:"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},\u03AC:{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},O:{x_min:0,x_max:958,ha:1057,o:"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},n:{x_min:0,x_max:615,ha:724,o:"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},l:{x_min:41,x_max:166,ha:279,o:"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"\xA4":{x_min:40.09375,x_max:728.796875,ha:825,o:"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},\u03BA:{x_min:0,x_max:632.328125,ha:679,o:"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},p:{x_min:0,x_max:685,ha:786,o:"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"\u2021":{x_min:0,x_max:777,ha:835,o:"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},\u03C8:{x_min:0,x_max:808,ha:907,o:"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},\u03B7:{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},QS="normal",$S=1189,YS=-100,XS="normal",ZS={yMin:-334,xMin:-111,yMax:1189,xMax:1672},JS=1e3,KS={postscript_name:"Helvetiker-Regular",version_string:"Version 1.00 2004 initial release",vendor_url:"http://www.magenta.gr/",full_font_name:"Helvetiker",font_family_name:"Helvetiker",copyright:"Copyright (c) \u039Cagenta ltd, 2004",description:"",trademark:"",designer:"",designer_url:"",unique_font_identifier:"\u039Cagenta ltd:Helvetiker:22-10-104",license_url:"http://www.ellak.gr/fonts/MgOpen/license.html",license_description:`Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\r
\r
Permission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \r
\r
The above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\r
\r
The Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "MgOpen", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\r
\r
This License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "MgOpen" name.\r
\r
The Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \r
\r
THE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.`,manufacturer_name:"\u039Cagenta ltd",font_sub_family_name:"Regular"},eE=-334,tE="Helvetiker",nE=1522,iE=50,rE={glyphs:jS,cssFontWeight:QS,ascender:$S,underlinePosition:YS,cssFontStyle:XS,boundingBox:ZS,resolution:JS,original_font_information:KS,descender:eE,familyName:tE,lineHeight:nE,underlineThickness:iE},$4=Q1(Q1({},window.THREE?window.THREE:{CircleBufferGeometry:wi,Group:R2,Mesh:K1,MeshLambertMaterial:A5,TextGeometry:Ya,Vector3:$}),{},{Font:mu,TextGeometry:Ya}),Iu=G9({props:{labelsData:{default:[]},labelLat:{default:"lat"},labelLng:{default:"lng"},labelAltitude:{default:0},labelText:{default:"text"},labelSize:{default:.5},labelTypeFace:{default:rE,onChange:function(e,t){t.font=new $4.Font(e)}},labelColor:{default:function(){return"lightgrey"}},labelRotation:{default:0},labelResolution:{default:3},labelIncludeDot:{default:!0},labelDotRadius:{default:.1},labelDotOrientation:{default:function(){return"bottom"}},labelsTransitionDuration:{default:1e3,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e){var t=G0(e.labelLat),n=G0(e.labelLng),r=G0(e.labelAltitude),o=G0(e.labelText),s=G0(e.labelSize),a=G0(e.labelRotation),h=G0(e.labelColor),f=G0(e.labelIncludeDot),d=G0(e.labelDotRadius),m=G0(e.labelDotOrientation),y=new Set(["right","top","bottom"]),v=2*Math.PI*L9/360,b=new $4.CircleBufferGeometry(1,16);I2(e.labelsData,e.scene,{createObj:function(){var w=new $4.MeshLambertMaterial,E=new $4.Group;return E.add(new $4.Mesh(b,w)),E.add(new $4.Mesh(void 0,w)),E.__globeObjType="label",E},updateObj:function(w,E){var T=A2(w.children,2),C=T[0],P=T[1],R=h(E),I=o4(R);P.material.color.set(L4(R)),P.material.transparent=I<1,P.material.opacity=I;var q=f(E),D=m(E);!q||!y.has(D)&&(D="bottom");var O=q?+d(E)*v:1e-12;C.scale.x=C.scale.y=O;var k=+s(E)*v;if(P.geometry=new $4.TextGeometry(o(E),{font:e.font,size:k,height:0,curveSegments:e.labelResolution}),D!=="right"&&P.geometry.center(),q){var B=O+k/2;D==="right"&&(P.position.x=B),P.position.y={right:-k/2,top:B+k/2,bottom:-B-k/2}[D]}var j=function(X){var o0=w.__currentTargetD=X,a0=o0.lat,u0=o0.lng,l0=o0.alt,b0=o0.rot,i0=o0.scale;Object.assign(w.position,c5(a0,u0,l0)),w.lookAt(e.scene.localToWorld(new $4.Vector3(0,0,0))),w.rotateY(Math.PI),w.rotateZ(-b0*Math.PI/180),w.scale.x=w.scale.y=w.scale.z=i0},Y={lat:+t(E),lng:+n(E),alt:+r(E),rot:+a(E),scale:1},z=w.__currentTargetD||Object.assign({},Y,{scale:1e-12});Object.keys(Y).some(function(G){return z[G]!==Y[G]})&&(!e.labelsTransitionDuration||e.labelsTransitionDuration<0?j(Y):new W1.Tween(z).to(Y,e.labelsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(j).start())}})}}),oE=window.THREE?window.THREE:{BufferGeometry:C1},sE=function(i){vu(t,i);var e=bu(t);function t(){var n,r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:1,o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:32;gu(this,t),n=e.call(this),n.type="CircleLineGeometry",n.parameters={radius:r,segmentCount:o};for(var s=[],a=0;a<=o;a++){var h=(a/o-.25)*Math.PI*2;s.push({x:Math.cos(h)*r,y:Math.sin(h)*r,z:0})}return n.setFromPoints(s),n}return yu(t)}(oE.BufferGeometry),h6=window.THREE?window.THREE:{Color:l1,Group:R2,Line:j6,LineBasicMaterial:D4,Vector3:$},Bu=G9({props:{ringsData:{default:[]},ringLat:{default:"lat"},ringLng:{default:"lng"},ringAltitude:{default:.0015},ringColor:{default:function(){return"#ffffaa"},triggerUpdate:!1},ringResolution:{default:64,triggerUpdate:!1},ringMaxRadius:{default:2,triggerUpdate:!1},ringPropagationSpeed:{default:1,triggerUpdate:!1},ringRepeatPeriod:{default:700,triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e,new zi().onTick.add(function(n){if(!!t.ringsData.length){var r=G0(t.ringColor),o=G0(t.ringAltitude),s=G0(t.ringMaxRadius),a=G0(t.ringPropagationSpeed),h=G0(t.ringRepeatPeriod);t.ringsData.filter(function(f){return f.__threeObj}).forEach(function(f){var d=f.__threeObj;if((d.__nextRingTime||0)<=n){var m=h(f)/1e3;d.__nextRingTime=n+(m<=0?1/0:m);var y=new h6.Line(new sE(1,t.ringResolution),new h6.LineBasicMaterial),v=r(f),b=v instanceof Array||v instanceof Function,M;b?v instanceof Array?(M=U6().domain(v.map(function(q,D){return D/(v.length-1)})).range(v),y.material.transparent=v.some(function(q){return o4(q)<1})):(M=v,y.material.transparent=!0):(y.material.color=new h6.Color(L4(v)),OS(y.material,o4(v)));var w=L9*(1+o(f)),E=s(f),T=E*Math.PI/180,C=a(f),P=C<=0,R=function(D){var O=D.t,k=(P?1-O:O)*T;if(y.scale.x=y.scale.y=w*Math.sin(k),y.position.z=w*(1-Math.cos(k)),b){var B=M(O);y.material.color=new h6.Color(L4(B)),y.material.transparent&&(y.material.opacity=o4(B))}};if(C===0)R({t:0}),d.add(y);else{var I=Math.abs(E/C)*1e3;new W1.Tween({t:0}).to({t:1},I).onUpdate(R).onStart(function(){return d.add(y)}).onComplete(function(){d.remove(y),Mu(y)}).start()}}})}})},update:function(e){var t=G0(e.ringLat),n=G0(e.ringLng),r=G0(e.ringAltitude),o=e.scene.localToWorld(new h6.Vector3(0,0,0));I2(e.ringsData,e.scene,{createObj:function(){var a=new h6.Group;return a.__globeObjType="ring",a},updateObj:function(a,h){var f=t(h),d=n(h),m=r(h);Object.assign(a.position,c5(f,d,m)),a.lookAt(o)}},{removeDelay:3e4})}}),aE=Q1(Q1({},window.THREE?window.THREE:{}),{},{CSS2DObject:hA}),Ou=G9({props:{htmlElementsData:{default:[]},htmlLat:{default:"lat"},htmlLng:{default:"lng"},htmlAltitude:{default:0},htmlElement:{},htmlTransitionDuration:{default:1e3,triggerUpdate:!1},isBehindGlobe:{onChange:function(){this.updateObjVisibility()},triggerUpdate:!1}},methods:{updateObjVisibility:function(e,t){var n=t?[t]:e.htmlElementsData.map(function(r){return r.__threeObj}).filter(function(r){return r});n.forEach(function(r){return r.visible=!e.isBehindGlobe||!e.isBehindGlobe(r.position)})}},init:function(e,t){m9(e),t.scene=e},update:function(e,t){var n=this,r=G0(e.htmlLat),o=G0(e.htmlLng),s=G0(e.htmlAltitude),a=G0(e.htmlElement);I2(e.htmlElementsData,e.scene,{purge:t.hasOwnProperty("htmlElement"),createObj:function(f){var d=a(f),m=new aE.CSS2DObject(d);return m.__globeObjType="html",m},updateObj:function(f,d){var m=function(b){var M=f.__currentTargetD=b,w=M.alt,E=M.lat,T=M.lng;Object.assign(f.position,c5(E,T,w)),n.updateObjVisibility(f)},y={lat:+r(d),lng:+o(d),alt:+s(d)};!e.htmlTransitionDuration||e.htmlTransitionDuration<0||!f.__currentTargetD?m(y):new W1.Tween(f.__currentTargetD).to(y,e.pointsTransitionDuration).easing(W1.Easing.Quadratic.InOut).onUpdate(m).start()}})}}),Gt=window.THREE?window.THREE:{Mesh:K1,MeshLambertMaterial:A5,SphereGeometry:Q6},qu=G9({props:{objectsData:{default:[]},objectLat:{default:"lat"},objectLng:{default:"lng"},objectAltitude:{default:.01},objectThreeObject:{default:new Gt.Mesh(new Gt.SphereGeometry(1,16,8),new Gt.MeshLambertMaterial({color:"#ffffaa",transparent:!0,opacity:.7}))}},init:function(e,t){m9(e),t.scene=e},update:function(e,t){var n=G0(e.objectLat),r=G0(e.objectLng),o=G0(e.objectAltitude),s=G0(e.objectThreeObject);I2(e.objectsData,e.scene,{purge:t.hasOwnProperty("objectThreeObject"),createObj:function(h){var f=s(h);return e.objectThreeObject===f&&(f=f.clone()),f.__globeObjType="object",f},updateObj:function(h,f){var d=+n(f),m=+r(f),y=+o(f);Object.assign(h.position,c5(d,m,y))}})}}),Fu=G9({props:{customLayerData:{default:[]},customThreeObject:{},customThreeObjectUpdate:{triggerUpdate:!1}},init:function(e,t){m9(e),t.scene=e},update:function(e,t){e.customThreeObjectUpdate||m9(e.scene);var n=G0(e.customThreeObject),r=G0(e.customThreeObjectUpdate);I2(e.customLayerData,e.scene,{purge:t.hasOwnProperty("customThreeObject"),createObj:function(s){var a=n(s,L9);return a&&(e.customThreeObject===a&&(a=a.clone()),a.__globeObjType="custom"),a},updateObj:function(s,a){return r(s,a,L9)}})}}),f3=window.THREE?window.THREE:{Group:R2,Vector2:D0,Vector3:$},lE=["globeLayer","pointsLayer","arcsLayer","hexBinLayer","polygonsLayer","hexedPolygonsLayer","pathsLayer","tilesLayer","labelsLayer","ringsLayer","htmlElementsLayer","objectsLayer","customLayer"],ku=b2("globeLayer",Su),AE=Object.assign.apply(Object,o9(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude"].map(function(i){return e2({},i,ku.linkProp(i))}))),uE=Object.assign.apply(Object,o9(["globeMaterial"].map(function(i){return e2({},i,ku.linkMethod(i))}))),cE=b2("pointsLayer",Eu),fE=Object.assign.apply(Object,o9(["pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration"].map(function(i){return e2({},i,cE.linkProp(i))}))),hE=b2("arcsLayer",Tu),dE=Object.assign.apply(Object,o9(["arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration"].map(function(i){return e2({},i,hE.linkProp(i))}))),pE=b2("hexBinLayer",Cu),mE=Object.assign.apply(Object,o9(["hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration"].map(function(i){return e2({},i,pE.linkProp(i))}))),gE=b2("hexedPolygonsLayer",Ru),yE=Object.assign.apply(Object,o9(["hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonCurvatureResolution","hexPolygonsTransitionDuration"].map(function(i){return e2({},i,gE.linkProp(i))}))),vE=b2("polygonsLayer",Pu),xE=Object.assign.apply(Object,o9(["polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration"].map(function(i){return e2({},i,vE.linkProp(i))}))),_E=b2("pathsLayer",Lu),bE=Object.assign.apply(Object,o9(["pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration"].map(function(i){return e2({},i,_E.linkProp(i))}))),wE=b2("tilesLayer",Du),ME=Object.assign.apply(Object,o9(["tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration"].map(function(i){return e2({},i,wE.linkProp(i))}))),SE=b2("labelsLayer",Iu),EE=Object.assign.apply(Object,o9(["labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration"].map(function(i){return e2({},i,SE.linkProp(i))}))),TE=b2("ringsLayer",Bu),CE=Object.assign.apply(Object,o9(["ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod"].map(function(i){return e2({},i,TE.linkProp(i))}))),PE=b2("htmlElementsLayer",Ou),RE=Object.assign.apply(Object,o9(["htmlElementsData","htmlLat","htmlLng","htmlAltitude","htmlElement","htmlTransitionDuration"].map(function(i){return e2({},i,PE.linkProp(i))}))),LE=b2("objectsLayer",qu),DE=Object.assign.apply(Object,o9(["objectsData","objectLat","objectLng","objectAltitude","objectThreeObject"].map(function(i){return e2({},i,LE.linkProp(i))}))),IE=b2("customLayer",Fu),BE=Object.assign.apply(Object,o9(["customLayerData","customThreeObject","customThreeObjectUpdate"].map(function(i){return e2({},i,IE.linkProp(i))}))),OE=G9({props:Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1(Q1({onGlobeReady:{triggerUpdate:!1},rendererSize:{default:new f3.Vector2(window.innerWidth,window.innerHeight),onChange:function(e,t){t.pathsLayer.rendererSize(e)},triggerUpdate:!1}},AE),fE),dE),mE),xE),yE),bE),ME),EE),CE),RE),DE),BE),methods:Q1({getGlobeRadius:Ja,getCoords:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return c5.apply(void 0,n)},toGeoCoords:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return CS.apply(void 0,n)},setPointOfView:function(e,t,n){var r=void 0;if(t){var o=Ja(),s=n?t.clone().sub(n):t,a,h,f;r=function(m){a===void 0&&(a=s.length()),h===void 0&&(h=Math.sqrt(Math.pow(a,2)-Math.pow(o,2))),f===void 0&&(f=Math.acos(h/a));var y=s.distanceTo(m);if(y<h)return!1;var v=m.length(),b=Math.acos((Math.pow(a,2)+Math.pow(y,2)-Math.pow(v,2))/(2*a*y));return b<f}}e.layersThatNeedBehindGlobeChecker.forEach(function(d){return d.isBehindGlobe(r)})}},uE),stateInit:function(){var e={globeLayer:Su(),pointsLayer:Eu(),arcsLayer:Tu(),hexBinLayer:Cu(),polygonsLayer:Pu(),hexedPolygonsLayer:Ru(),pathsLayer:Lu(),tilesLayer:Du(),labelsLayer:Iu(),ringsLayer:Bu(),htmlElementsLayer:Ou(),objectsLayer:qu(),customLayer:Fu()};return Q1(Q1({},e),{},{layersThatNeedBehindGlobeChecker:Object.values(e).filter(function(t){return t.hasOwnProperty("isBehindGlobe")})})},init:function(e,t,n){var r=n.animateIn,o=r===void 0?!0:r,s=n.waitForGlobeReady,a=s===void 0?!0:s;m9(e),e.add(t.scene=new f3.Group),t.scene.visible=!1,lE.forEach(function(f){var d=new f3.Group;t.scene.add(d),t[f](d)});var h=function(){if(o){t.scene.scale.set(1e-6,1e-6,1e-6),new W1.Tween({k:1e-6}).to({k:1},600).easing(W1.Easing.Quadratic.Out).onUpdate(function(m){var y=m.k;return t.scene.scale.set(y,y,y)}).start();var d=new f3.Vector3(0,1,0);new W1.Tween({rot:Math.PI*2}).to({rot:0},1200).easing(W1.Easing.Quintic.Out).onUpdate(function(m){var y=m.rot;return t.scene.setRotationFromAxisAngle(d,y)}).start()}t.scene.visible=!0,t.onGlobeReady&&t.onGlobeReady()};a?t.globeLayer.onReady(h):h(),function f(){requestAnimationFrame(f),W1.update()}()},update:function(e){}});function qE(i){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Object,t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,n=function(r){vu(s,r);var o=bu(s);function s(){var a;gu(this,s);for(var h=arguments.length,f=new Array(h),d=0;d<h;d++)f[d]=arguments[d];return a=o.call.apply(o,[this].concat(f)),a.__kapsuleInstance=i.apply(void 0,f).apply(void 0,[].concat(o9(t?[_u(a)]:[]),f)),a}return yu(s)}(e);return Object.keys(i()).forEach(function(r){return n.prototype[r]=function(){var o,s=(o=this.__kapsuleInstance)[r].apply(o,arguments);return s===this.__kapsuleInstance?this:s}}),n}var FE=window.THREE?window.THREE:{Group:R2},Nu=qE(OE,FE.Group,!0);const Ht={type:"change"},Vt={type:"start"},Wt={type:"end"};class kE extends Q2{constructor(e,t){super();t===void 0&&console.warn('THREE.TrackballControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.TrackballControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.');const n=this,r={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:t4.ROTATE,MIDDLE:t4.DOLLY,RIGHT:t4.PAN},this.target=new $;const o=1e-6,s=new $;let a=1,h=r.NONE,f=r.NONE,d=0,m=0,y=0;const v=new $,b=new D0,M=new D0,w=new $,E=new D0,T=new D0,C=new D0,P=new D0,R=[],I={};this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,this.handleResize=function(){const p0=n.domElement.getBoundingClientRect(),E0=n.domElement.ownerDocument.documentElement;n.screen.left=p0.left+window.pageXOffset-E0.clientLeft,n.screen.top=p0.top+window.pageYOffset-E0.clientTop,n.screen.width=p0.width,n.screen.height=p0.height};const q=function(){const p0=new D0;return function(I0,_0){return p0.set((I0-n.screen.left)/n.screen.width,(_0-n.screen.top)/n.screen.height),p0}}(),D=function(){const p0=new D0;return function(I0,_0){return p0.set((I0-n.screen.width*.5-n.screen.left)/(n.screen.width*.5),(n.screen.height+2*(n.screen.top-_0))/n.screen.width),p0}}();this.rotateCamera=function(){const p0=new $,E0=new b9,I0=new $,_0=new $,H0=new $,w0=new $;return function(){w0.set(M.x-b.x,M.y-b.y,0);let Z=w0.length();Z?(v.copy(n.object.position).sub(n.target),I0.copy(v).normalize(),_0.copy(n.object.up).normalize(),H0.crossVectors(_0,I0).normalize(),_0.setLength(M.y-b.y),H0.setLength(M.x-b.x),w0.copy(_0.add(H0)),p0.crossVectors(w0,v).normalize(),Z*=n.rotateSpeed,E0.setFromAxisAngle(p0,Z),v.applyQuaternion(E0),n.object.up.applyQuaternion(E0),w.copy(p0),y=Z):!n.staticMoving&&y&&(y*=Math.sqrt(1-n.dynamicDampingFactor),v.copy(n.object.position).sub(n.target),E0.setFromAxisAngle(w,y),v.applyQuaternion(E0),n.object.up.applyQuaternion(E0)),b.copy(M)}}(),this.zoomCamera=function(){let p0;h===r.TOUCH_ZOOM_PAN?(p0=d/m,d=m,n.object.isPerspectiveCamera?v.multiplyScalar(p0):n.object.isOrthographicCamera?(n.object.zoom/=p0,n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(p0=1+(T.y-E.y)*n.zoomSpeed,p0!==1&&p0>0&&(n.object.isPerspectiveCamera?v.multiplyScalar(p0):n.object.isOrthographicCamera?(n.object.zoom/=p0,n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),n.staticMoving?E.copy(T):E.y+=(T.y-E.y)*this.dynamicDampingFactor)},this.panCamera=function(){const p0=new D0,E0=new $,I0=new $;return function(){if(p0.copy(P).sub(C),p0.lengthSq()){if(n.object.isOrthographicCamera){const H0=(n.object.right-n.object.left)/n.object.zoom/n.domElement.clientWidth,w0=(n.object.top-n.object.bottom)/n.object.zoom/n.domElement.clientWidth;p0.x*=H0,p0.y*=w0}p0.multiplyScalar(v.length()*n.panSpeed),I0.copy(v).cross(n.object.up).setLength(p0.x),I0.add(E0.copy(n.object.up).setLength(p0.y)),n.object.position.add(I0),n.target.add(I0),n.staticMoving?C.copy(P):C.add(p0.subVectors(P,C).multiplyScalar(n.dynamicDampingFactor))}}}(),this.checkDistances=function(){(!n.noZoom||!n.noPan)&&(v.lengthSq()>n.maxDistance*n.maxDistance&&(n.object.position.addVectors(n.target,v.setLength(n.maxDistance)),E.copy(T)),v.lengthSq()<n.minDistance*n.minDistance&&(n.object.position.addVectors(n.target,v.setLength(n.minDistance)),E.copy(T)))},this.update=function(){v.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,v),n.object.isPerspectiveCamera?(n.checkDistances(),n.object.lookAt(n.target),s.distanceToSquared(n.object.position)>o&&(n.dispatchEvent(Ht),s.copy(n.object.position))):n.object.isOrthographicCamera?(n.object.lookAt(n.target),(s.distanceToSquared(n.object.position)>o||a!==n.object.zoom)&&(n.dispatchEvent(Ht),s.copy(n.object.position),a=n.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){h=r.NONE,f=r.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),v.subVectors(n.object.position,n.target),n.object.lookAt(n.target),n.dispatchEvent(Ht),s.copy(n.object.position),a=n.object.zoom};function O(p0){n.enabled!==!1&&(R.length===0&&(n.domElement.setPointerCapture(p0.pointerId),n.domElement.addEventListener("pointermove",k),n.domElement.addEventListener("pointerup",B)),g0(p0),p0.pointerType==="touch"?u0(p0):G(p0))}function k(p0){n.enabled!==!1&&(p0.pointerType==="touch"?l0(p0):X(p0))}function B(p0){n.enabled!==!1&&(p0.pointerType==="touch"?b0(p0):o0(),P0(p0),R.length===0&&(n.domElement.releasePointerCapture(p0.pointerId),n.domElement.removeEventListener("pointermove",k),n.domElement.removeEventListener("pointerup",B)))}function j(p0){P0(p0)}function Y(p0){n.enabled!==!1&&(window.removeEventListener("keydown",Y),f===r.NONE&&(p0.code===n.keys[r.ROTATE]&&!n.noRotate?f=r.ROTATE:p0.code===n.keys[r.ZOOM]&&!n.noZoom?f=r.ZOOM:p0.code===n.keys[r.PAN]&&!n.noPan&&(f=r.PAN)))}function z(){n.enabled!==!1&&(f=r.NONE,window.addEventListener("keydown",Y))}function G(p0){if(h===r.NONE)switch(p0.button){case n.mouseButtons.LEFT:h=r.ROTATE;break;case n.mouseButtons.MIDDLE:h=r.ZOOM;break;case n.mouseButtons.RIGHT:h=r.PAN;break}const E0=f!==r.NONE?f:h;E0===r.ROTATE&&!n.noRotate?(M.copy(D(p0.pageX,p0.pageY)),b.copy(M)):E0===r.ZOOM&&!n.noZoom?(E.copy(q(p0.pageX,p0.pageY)),T.copy(E)):E0===r.PAN&&!n.noPan&&(C.copy(q(p0.pageX,p0.pageY)),P.copy(C)),n.dispatchEvent(Vt)}function X(p0){const E0=f!==r.NONE?f:h;E0===r.ROTATE&&!n.noRotate?(b.copy(M),M.copy(D(p0.pageX,p0.pageY))):E0===r.ZOOM&&!n.noZoom?T.copy(q(p0.pageX,p0.pageY)):E0===r.PAN&&!n.noPan&&P.copy(q(p0.pageX,p0.pageY))}function o0(){h=r.NONE,n.dispatchEvent(Wt)}function a0(p0){if(n.enabled!==!1&&n.noZoom!==!0){switch(p0.preventDefault(),p0.deltaMode){case 2:E.y-=p0.deltaY*.025;break;case 1:E.y-=p0.deltaY*.01;break;default:E.y-=p0.deltaY*25e-5;break}n.dispatchEvent(Vt),n.dispatchEvent(Wt)}}function u0(p0){switch(T0(p0),R.length){case 1:h=r.TOUCH_ROTATE,M.copy(D(R[0].pageX,R[0].pageY)),b.copy(M);break;default:h=r.TOUCH_ZOOM_PAN;const E0=R[0].pageX-R[1].pageX,I0=R[0].pageY-R[1].pageY;m=d=Math.sqrt(E0*E0+I0*I0);const _0=(R[0].pageX+R[1].pageX)/2,H0=(R[0].pageY+R[1].pageY)/2;C.copy(q(_0,H0)),P.copy(C);break}n.dispatchEvent(Vt)}function l0(p0){switch(T0(p0),R.length){case 1:b.copy(M),M.copy(D(p0.pageX,p0.pageY));break;default:const E0=d0(p0),I0=p0.pageX-E0.x,_0=p0.pageY-E0.y;m=Math.sqrt(I0*I0+_0*_0);const H0=(p0.pageX+E0.x)/2,w0=(p0.pageY+E0.y)/2;P.copy(q(H0,w0));break}}function b0(p0){switch(R.length){case 0:h=r.NONE;break;case 1:h=r.TOUCH_ROTATE,M.copy(D(p0.pageX,p0.pageY)),b.copy(M);break;case 2:h=r.TOUCH_ZOOM_PAN,M.copy(D(p0.pageX-b.x,p0.pageY-b.y)),b.copy(M);break}n.dispatchEvent(Wt)}function i0(p0){n.enabled!==!1&&p0.preventDefault()}function g0(p0){R.push(p0)}function P0(p0){delete I[p0.pointerId];for(let E0=0;E0<R.length;E0++)if(R[E0].pointerId==p0.pointerId){R.splice(E0,1);return}}function T0(p0){let E0=I[p0.pointerId];E0===void 0&&(E0=new D0,I[p0.pointerId]=E0),E0.set(p0.pageX,p0.pageY)}function d0(p0){const E0=p0.pointerId===R[0].pointerId?R[1]:R[0];return I[E0.pointerId]}this.dispose=function(){n.domElement.removeEventListener("contextmenu",i0),n.domElement.removeEventListener("pointerdown",O),n.domElement.removeEventListener("pointercancel",j),n.domElement.removeEventListener("wheel",a0),n.domElement.removeEventListener("pointermove",k),n.domElement.removeEventListener("pointerup",B),window.removeEventListener("keydown",Y),window.removeEventListener("keyup",z)},this.domElement.addEventListener("contextmenu",i0),this.domElement.addEventListener("pointerdown",O),this.domElement.addEventListener("pointercancel",j),this.domElement.addEventListener("wheel",a0,{passive:!1}),window.addEventListener("keydown",Y),window.addEventListener("keyup",z),this.handleResize(),this.update()}}const il={type:"change"},jt={type:"start"},rl={type:"end"};class NE extends Q2{constructor(e,t){super();t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new $,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:t4.ROTATE,MIDDLE:t4.DOLLY,RIGHT:t4.PAN},this.touches={ONE:V5.ROTATE,TWO:V5.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(J){J.addEventListener("keydown",s1),this._domElementKeyEvents=J},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(il),n.update(),o=r.NONE},this.update=function(){const J=new $,k0=new b9().setFromUnitVectors(e.up,new $(0,1,0)),f1=k0.clone().invert(),$0=new $,A0=new b9,W0=2*Math.PI;return function(){const g1=n.object.position;J.copy(g1).sub(n.target),J.applyQuaternion(k0),a.setFromVector3(J),n.autoRotate&&o===r.NONE&&O(q()),n.enableDamping?(a.theta+=h.theta*n.dampingFactor,a.phi+=h.phi*n.dampingFactor):(a.theta+=h.theta,a.phi+=h.phi);let J0=n.minAzimuthAngle,h1=n.maxAzimuthAngle;return isFinite(J0)&&isFinite(h1)&&(J0<-Math.PI?J0+=W0:J0>Math.PI&&(J0-=W0),h1<-Math.PI?h1+=W0:h1>Math.PI&&(h1-=W0),J0<=h1?a.theta=Math.max(J0,Math.min(h1,a.theta)):a.theta=a.theta>(J0+h1)/2?Math.max(J0,a.theta):Math.min(h1,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=f,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),J.setFromSpherical(a),J.applyQuaternion(f1),g1.copy(n.target).add(J),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),d.set(0,0,0)),f=1,m||$0.distanceToSquared(n.object.position)>s||8*(1-A0.dot(n.object.quaternion))>s?(n.dispatchEvent(il),$0.copy(n.object.position),A0.copy(n.object.quaternion),m=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",M0),n.domElement.removeEventListener("pointerdown",Z),n.domElement.removeEventListener("pointercancel",L0),n.domElement.removeEventListener("wheel",c1),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",v0),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",s1)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let o=r.NONE;const s=1e-6,a=new un,h=new un;let f=1;const d=new $;let m=!1;const y=new D0,v=new D0,b=new D0,M=new D0,w=new D0,E=new D0,T=new D0,C=new D0,P=new D0,R=[],I={};function q(){return 2*Math.PI/60/60*n.autoRotateSpeed}function D(){return Math.pow(.95,n.zoomSpeed)}function O(J){h.theta-=J}function k(J){h.phi-=J}const B=function(){const J=new $;return function(f1,$0){J.setFromMatrixColumn($0,0),J.multiplyScalar(-f1),d.add(J)}}(),j=function(){const J=new $;return function(f1,$0){n.screenSpacePanning===!0?J.setFromMatrixColumn($0,1):(J.setFromMatrixColumn($0,0),J.crossVectors(n.object.up,J)),J.multiplyScalar(f1),d.add(J)}}(),Y=function(){const J=new $;return function(f1,$0){const A0=n.domElement;if(n.object.isPerspectiveCamera){const W0=n.object.position;J.copy(W0).sub(n.target);let V0=J.length();V0*=Math.tan(n.object.fov/2*Math.PI/180),B(2*f1*V0/A0.clientHeight,n.object.matrix),j(2*$0*V0/A0.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(B(f1*(n.object.right-n.object.left)/n.object.zoom/A0.clientWidth,n.object.matrix),j($0*(n.object.top-n.object.bottom)/n.object.zoom/A0.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function z(J){n.object.isPerspectiveCamera?f/=J:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*J)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function G(J){n.object.isPerspectiveCamera?f*=J:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/J)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(J){y.set(J.clientX,J.clientY)}function o0(J){T.set(J.clientX,J.clientY)}function a0(J){M.set(J.clientX,J.clientY)}function u0(J){v.set(J.clientX,J.clientY),b.subVectors(v,y).multiplyScalar(n.rotateSpeed);const k0=n.domElement;O(2*Math.PI*b.x/k0.clientHeight),k(2*Math.PI*b.y/k0.clientHeight),y.copy(v),n.update()}function l0(J){C.set(J.clientX,J.clientY),P.subVectors(C,T),P.y>0?z(D()):P.y<0&&G(D()),T.copy(C),n.update()}function b0(J){w.set(J.clientX,J.clientY),E.subVectors(w,M).multiplyScalar(n.panSpeed),Y(E.x,E.y),M.copy(w),n.update()}function i0(J){J.deltaY<0?G(D()):J.deltaY>0&&z(D()),n.update()}function g0(J){let k0=!1;switch(J.code){case n.keys.UP:Y(0,n.keyPanSpeed),k0=!0;break;case n.keys.BOTTOM:Y(0,-n.keyPanSpeed),k0=!0;break;case n.keys.LEFT:Y(n.keyPanSpeed,0),k0=!0;break;case n.keys.RIGHT:Y(-n.keyPanSpeed,0),k0=!0;break}k0&&(J.preventDefault(),n.update())}function P0(){if(R.length===1)y.set(R[0].pageX,R[0].pageY);else{const J=.5*(R[0].pageX+R[1].pageX),k0=.5*(R[0].pageY+R[1].pageY);y.set(J,k0)}}function T0(){if(R.length===1)M.set(R[0].pageX,R[0].pageY);else{const J=.5*(R[0].pageX+R[1].pageX),k0=.5*(R[0].pageY+R[1].pageY);M.set(J,k0)}}function d0(){const J=R[0].pageX-R[1].pageX,k0=R[0].pageY-R[1].pageY,f1=Math.sqrt(J*J+k0*k0);T.set(0,f1)}function p0(){n.enableZoom&&d0(),n.enablePan&&T0()}function E0(){n.enableZoom&&d0(),n.enableRotate&&P0()}function I0(J){if(R.length==1)v.set(J.pageX,J.pageY);else{const f1=d1(J),$0=.5*(J.pageX+f1.x),A0=.5*(J.pageY+f1.y);v.set($0,A0)}b.subVectors(v,y).multiplyScalar(n.rotateSpeed);const k0=n.domElement;O(2*Math.PI*b.x/k0.clientHeight),k(2*Math.PI*b.y/k0.clientHeight),y.copy(v)}function _0(J){if(R.length===1)w.set(J.pageX,J.pageY);else{const k0=d1(J),f1=.5*(J.pageX+k0.x),$0=.5*(J.pageY+k0.y);w.set(f1,$0)}E.subVectors(w,M).multiplyScalar(n.panSpeed),Y(E.x,E.y),M.copy(w)}function H0(J){const k0=d1(J),f1=J.pageX-k0.x,$0=J.pageY-k0.y,A0=Math.sqrt(f1*f1+$0*$0);C.set(0,A0),P.set(0,Math.pow(C.y/T.y,n.zoomSpeed)),z(P.y),T.copy(C)}function w0(J){n.enableZoom&&H0(J),n.enablePan&&_0(J)}function N(J){n.enableZoom&&H0(J),n.enableRotate&&I0(J)}function Z(J){n.enabled!==!1&&(R.length===0&&(n.domElement.setPointerCapture(J.pointerId),n.domElement.addEventListener("pointermove",H),n.domElement.addEventListener("pointerup",v0)),B0(J),J.pointerType==="touch"?e0(J):m0(J))}function H(J){n.enabled!==!1&&(J.pointerType==="touch"?V(J):U0(J))}function v0(J){Y0(J),R.length===0&&(n.domElement.releasePointerCapture(J.pointerId),n.domElement.removeEventListener("pointermove",H),n.domElement.removeEventListener("pointerup",v0)),n.dispatchEvent(rl),o=r.NONE}function L0(J){Y0(J)}function m0(J){let k0;switch(J.button){case 0:k0=n.mouseButtons.LEFT;break;case 1:k0=n.mouseButtons.MIDDLE;break;case 2:k0=n.mouseButtons.RIGHT;break;default:k0=-1}switch(k0){case t4.DOLLY:if(n.enableZoom===!1)return;o0(J),o=r.DOLLY;break;case t4.ROTATE:if(J.ctrlKey||J.metaKey||J.shiftKey){if(n.enablePan===!1)return;a0(J),o=r.PAN}else{if(n.enableRotate===!1)return;X(J),o=r.ROTATE}break;case t4.PAN:if(J.ctrlKey||J.metaKey||J.shiftKey){if(n.enableRotate===!1)return;X(J),o=r.ROTATE}else{if(n.enablePan===!1)return;a0(J),o=r.PAN}break;default:o=r.NONE}o!==r.NONE&&n.dispatchEvent(jt)}function U0(J){if(n.enabled!==!1)switch(o){case r.ROTATE:if(n.enableRotate===!1)return;u0(J);break;case r.DOLLY:if(n.enableZoom===!1)return;l0(J);break;case r.PAN:if(n.enablePan===!1)return;b0(J);break}}function c1(J){n.enabled===!1||n.enableZoom===!1||o!==r.NONE||(J.preventDefault(),n.dispatchEvent(jt),i0(J),n.dispatchEvent(rl))}function s1(J){n.enabled===!1||n.enablePan===!1||g0(J)}function e0(J){switch(r1(J),R.length){case 1:switch(n.touches.ONE){case V5.ROTATE:if(n.enableRotate===!1)return;P0(),o=r.TOUCH_ROTATE;break;case V5.PAN:if(n.enablePan===!1)return;T0(),o=r.TOUCH_PAN;break;default:o=r.NONE}break;case 2:switch(n.touches.TWO){case V5.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;p0(),o=r.TOUCH_DOLLY_PAN;break;case V5.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;E0(),o=r.TOUCH_DOLLY_ROTATE;break;default:o=r.NONE}break;default:o=r.NONE}o!==r.NONE&&n.dispatchEvent(jt)}function V(J){switch(r1(J),o){case r.TOUCH_ROTATE:if(n.enableRotate===!1)return;I0(J),n.update();break;case r.TOUCH_PAN:if(n.enablePan===!1)return;_0(J),n.update();break;case r.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;w0(J),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;N(J),n.update();break;default:o=r.NONE}}function M0(J){n.enabled!==!1&&J.preventDefault()}function B0(J){R.push(J)}function Y0(J){delete I[J.pointerId];for(let k0=0;k0<R.length;k0++)if(R[k0].pointerId==J.pointerId){R.splice(k0,1);return}}function r1(J){let k0=I[J.pointerId];k0===void 0&&(k0=new D0,I[J.pointerId]=k0),k0.set(J.pageX,J.pageY)}function d1(J){const k0=J.pointerId===R[0].pointerId?R[1]:R[0];return I[k0.pointerId]}n.domElement.addEventListener("contextmenu",M0),n.domElement.addEventListener("pointerdown",Z),n.domElement.addEventListener("pointercancel",L0),n.domElement.addEventListener("wheel",c1,{passive:!1}),this.update()}}const UE={type:"change"};class zE extends Q2{constructor(e,t){super();t===void 0&&(console.warn('THREE.FlyControls: The second parameter "domElement" is now mandatory.'),t=document),this.object=e,this.domElement=t,this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1;const n=this,r=1e-6,o=new b9,s=new $;this.tmpQuaternion=new b9,this.mouseStatus=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new $(0,0,0),this.rotationVector=new $(0,0,0),this.keydown=function(y){if(!y.altKey){switch(y.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this.moveState.forward=1;break;case"KeyS":this.moveState.back=1;break;case"KeyA":this.moveState.left=1;break;case"KeyD":this.moveState.right=1;break;case"KeyR":this.moveState.up=1;break;case"KeyF":this.moveState.down=1;break;case"ArrowUp":this.moveState.pitchUp=1;break;case"ArrowDown":this.moveState.pitchDown=1;break;case"ArrowLeft":this.moveState.yawLeft=1;break;case"ArrowRight":this.moveState.yawRight=1;break;case"KeyQ":this.moveState.rollLeft=1;break;case"KeyE":this.moveState.rollRight=1;break}this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(y){switch(y.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this.moveState.forward=0;break;case"KeyS":this.moveState.back=0;break;case"KeyA":this.moveState.left=0;break;case"KeyD":this.moveState.right=0;break;case"KeyR":this.moveState.up=0;break;case"KeyF":this.moveState.down=0;break;case"ArrowUp":this.moveState.pitchUp=0;break;case"ArrowDown":this.moveState.pitchDown=0;break;case"ArrowLeft":this.moveState.yawLeft=0;break;case"ArrowRight":this.moveState.yawRight=0;break;case"KeyQ":this.moveState.rollLeft=0;break;case"KeyE":this.moveState.rollRight=0;break}this.updateMovementVector(),this.updateRotationVector()},this.mousedown=function(y){if(this.dragToLook)this.mouseStatus++;else{switch(y.button){case 0:this.moveState.forward=1;break;case 2:this.moveState.back=1;break}this.updateMovementVector()}},this.mousemove=function(y){if(!this.dragToLook||this.mouseStatus>0){const v=this.getContainerDimensions(),b=v.size[0]/2,M=v.size[1]/2;this.moveState.yawLeft=-(y.pageX-v.offset[0]-b)/b,this.moveState.pitchDown=(y.pageY-v.offset[1]-M)/M,this.updateRotationVector()}},this.mouseup=function(y){if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else{switch(y.button){case 0:this.moveState.forward=0;break;case 2:this.moveState.back=0;break}this.updateMovementVector()}this.updateRotationVector()},this.update=function(y){const v=y*n.movementSpeed,b=y*n.rollSpeed;n.object.translateX(n.moveVector.x*v),n.object.translateY(n.moveVector.y*v),n.object.translateZ(n.moveVector.z*v),n.tmpQuaternion.set(n.rotationVector.x*b,n.rotationVector.y*b,n.rotationVector.z*b,1).normalize(),n.object.quaternion.multiply(n.tmpQuaternion),(s.distanceToSquared(n.object.position)>r||8*(1-o.dot(n.object.quaternion))>r)&&(n.dispatchEvent(UE),o.copy(n.object.quaternion),s.copy(n.object.position))},this.updateMovementVector=function(){const y=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-y+this.moveState.back},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},this.dispose=function(){this.domElement.removeEventListener("contextmenu",ol),this.domElement.removeEventListener("mousedown",h),this.domElement.removeEventListener("mousemove",a),this.domElement.removeEventListener("mouseup",f),window.removeEventListener("keydown",d),window.removeEventListener("keyup",m)};const a=this.mousemove.bind(this),h=this.mousedown.bind(this),f=this.mouseup.bind(this),d=this.keydown.bind(this),m=this.keyup.bind(this);this.domElement.addEventListener("contextmenu",ol),this.domElement.addEventListener("mousemove",a),this.domElement.addEventListener("mousedown",h),this.domElement.addEventListener("mouseup",f),window.addEventListener("keydown",d),window.addEventListener("keyup",m),this.updateMovementVector(),this.updateRotationVector()}}function ol(i){i.preventDefault()}const sl={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class Te{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const GE=new X7(-1,1,1,-1,0,1),er=new C1;er.setAttribute("position",new T1([-1,3,0,-1,-1,0,3,-1,0],3));er.setAttribute("uv",new T1([0,2,0,0,2,0],2));class HE{constructor(e){this._mesh=new K1(er,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,GE)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class al extends Te{constructor(e,t){super();this.textureID=t!==void 0?t:"tDiffuse",e instanceof F9?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ai.clone(e.uniforms),this.material=new F9({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new HE(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class ll extends Te{constructor(e,t){super();this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const r=e.getContext(),o=e.state;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0);let s,a;this.inverse?(s=0,a=1):(s=1,a=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),o.buffers.stencil.setFunc(r.ALWAYS,s,4294967295),o.buffers.stencil.setClear(a),o.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(r.EQUAL,1,4294967295),o.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),o.buffers.stencil.setLocked(!0)}}class VE extends Te{constructor(){super();this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class WE{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new D0);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new u2(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],sl===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),al===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new al(sl),this.clock=new aA}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let r=0,o=this.passes.length;r<o;r++){const s=this.passes[r];if(s.enabled!==!1){if(s.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),s.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),s.needsSwap){if(n){const a=this.renderer.getContext(),h=this.renderer.state.buffers.stencil;h.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),h.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}ll!==void 0&&(s instanceof ll?n=!0:s instanceof VE&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new D0);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let o=0;o<this.passes.length;o++)this.passes[o].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new X7(-1,1,1,-1,0,1);const Uu=new C1;Uu.setAttribute("position",new T1([-1,3,0,-1,-1,0,3,-1,0],3));Uu.setAttribute("uv",new T1([0,2,0,0,2,0],2));class jE extends Te{constructor(e,t,n,r,o){super();this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=o!==void 0?o:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new l1}render(e,t,n){const r=e.autoClear;e.autoClear=!1;let o,s;this.overrideMaterial!==void 0&&(s=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),o=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,o),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=s),e.autoClear=r}}function QE(i){if(i===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return i}function $7(i,e){return $7=Object.setPrototypeOf||function(n,r){return n.__proto__=r,n},$7(i,e)}function $E(i,e){i.prototype=Object.create(e.prototype),i.prototype.constructor=i,$7(i,e)}function Zn(i){return Zn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Zn(i)}function YE(i){return Function.toString.call(i).indexOf("[native code]")!==-1}function XE(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function M3(i,e,t){return XE()?M3=Reflect.construct:M3=function(r,o,s){var a=[null];a.push.apply(a,o);var h=Function.bind.apply(r,a),f=new h;return s&&$7(f,s.prototype),f},M3.apply(null,arguments)}function Jn(i){var e=typeof Map=="function"?new Map:void 0;return Jn=function(n){if(n===null||!YE(n))return n;if(typeof n!="function")throw new TypeError("Super expression must either be null or a function");if(typeof e!="undefined"){if(e.has(n))return e.get(n);e.set(n,r)}function r(){return M3(n,arguments,Zn(this).constructor)}return r.prototype=Object.create(n.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),$7(r,n)},Jn(i)}var T6=function(i){$E(e,i);function e(t){var n;return n=i.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this,QE(n)}return e}(Jn(Error));function Qt(i){return Math.round(i*255)}function ZE(i,e,t){return Qt(i)+","+Qt(e)+","+Qt(t)}function Al(i,e,t,n){if(n===void 0&&(n=ZE),e===0)return n(t,t,t);var r=(i%360+360)%360/60,o=(1-Math.abs(2*t-1))*e,s=o*(1-Math.abs(r%2-1)),a=0,h=0,f=0;r>=0&&r<1?(a=o,h=s):r>=1&&r<2?(a=s,h=o):r>=2&&r<3?(h=o,f=s):r>=3&&r<4?(h=s,f=o):r>=4&&r<5?(a=s,f=o):r>=5&&r<6&&(a=o,f=s);var d=t-o/2,m=a+d,y=h+d,v=f+d;return n(m,y,v)}var ul={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};function JE(i){if(typeof i!="string")return i;var e=i.toLowerCase();return ul[e]?"#"+ul[e]:i}var KE=/^#[a-fA-F0-9]{6}$/,eT=/^#[a-fA-F0-9]{8}$/,tT=/^#[a-fA-F0-9]{3}$/,nT=/^#[a-fA-F0-9]{4}$/,$t=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,iT=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,rT=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,oT=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;function tr(i){if(typeof i!="string")throw new T6(3);var e=JE(i);if(e.match(KE))return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16)};if(e.match(eT)){var t=parseFloat((parseInt(""+e[7]+e[8],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[2],16),green:parseInt(""+e[3]+e[4],16),blue:parseInt(""+e[5]+e[6],16),alpha:t}}if(e.match(tT))return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16)};if(e.match(nT)){var n=parseFloat((parseInt(""+e[4]+e[4],16)/255).toFixed(2));return{red:parseInt(""+e[1]+e[1],16),green:parseInt(""+e[2]+e[2],16),blue:parseInt(""+e[3]+e[3],16),alpha:n}}var r=$t.exec(e);if(r)return{red:parseInt(""+r[1],10),green:parseInt(""+r[2],10),blue:parseInt(""+r[3],10)};var o=iT.exec(e.substring(0,50));if(o)return{red:parseInt(""+o[1],10),green:parseInt(""+o[2],10),blue:parseInt(""+o[3],10),alpha:parseFloat(""+o[4])>1?parseFloat(""+o[4])/100:parseFloat(""+o[4])};var s=rT.exec(e);if(s){var a=parseInt(""+s[1],10),h=parseInt(""+s[2],10)/100,f=parseInt(""+s[3],10)/100,d="rgb("+Al(a,h,f)+")",m=$t.exec(d);if(!m)throw new T6(4,e,d);return{red:parseInt(""+m[1],10),green:parseInt(""+m[2],10),blue:parseInt(""+m[3],10)}}var y=oT.exec(e.substring(0,50));if(y){var v=parseInt(""+y[1],10),b=parseInt(""+y[2],10)/100,M=parseInt(""+y[3],10)/100,w="rgb("+Al(v,b,M)+")",E=$t.exec(w);if(!E)throw new T6(4,e,w);return{red:parseInt(""+E[1],10),green:parseInt(""+E[2],10),blue:parseInt(""+E[3],10),alpha:parseFloat(""+y[4])>1?parseFloat(""+y[4])/100:parseFloat(""+y[4])}}throw new T6(5)}var sT=function(e){return e.length===7&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e},cl=sT;function d6(i){var e=i.toString(16);return e.length===1?"0"+e:e}function fl(i,e,t){if(typeof i=="number"&&typeof e=="number"&&typeof t=="number")return cl("#"+d6(i)+d6(e)+d6(t));if(typeof i=="object"&&e===void 0&&t===void 0)return cl("#"+d6(i.red)+d6(i.green)+d6(i.blue));throw new T6(6)}function aT(i,e,t,n){if(typeof i=="string"&&typeof e=="number"){var r=tr(i);return"rgba("+r.red+","+r.green+","+r.blue+","+e+")"}else{if(typeof i=="number"&&typeof e=="number"&&typeof t=="number"&&typeof n=="number")return n>=1?fl(i,e,t):"rgba("+i+","+e+","+t+","+n+")";if(typeof i=="object"&&e===void 0&&t===void 0&&n===void 0)return i.alpha>=1?fl(i.red,i.green,i.blue):"rgba("+i.red+","+i.green+","+i.blue+","+i.alpha+")"}throw new T6(7)}function zu(i,e,t){return function(){var r=t.concat(Array.prototype.slice.call(arguments));return r.length>=e?i.apply(this,r):zu(i,e,r)}}function lT(i){return zu(i,i.length,[])}function AT(i,e,t){return Math.max(i,Math.min(e,t))}function uT(i,e){if(e==="transparent")return e;var t=tr(e),n=typeof t.alpha=="number"?t.alpha:1,r=Bf({},t,{alpha:AT(0,1,(n*100+parseFloat(i)*100)/100)});return aT(r)}var cT=lT(uT),fT=cT;function hT(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(!i||typeof document=="undefined")){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",t==="top"&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=i:r.appendChild(document.createTextNode(i))}}var dT=`.scene-nav-info {
  bottom: 5px;
  width: 100%;
  text-align: center;
  color: slategrey;
  opacity: 0.7;
  font-size: 10px;
}

.scene-tooltip {
  top: 0;
  color: lavender;
  font-size: 15px;
}

.scene-nav-info, .scene-tooltip {
  position: absolute;
  font-family: sans-serif;
  pointer-events: none;
}

.scene-container canvas:focus {
  outline: none;
}`;hT(dT);function pT(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function mT(i,e){return yT(i)||xT(i,e)||Gu(i,e)||bT()}function d7(i){return gT(i)||vT(i)||Gu(i)||_T()}function gT(i){if(Array.isArray(i))return Kn(i)}function yT(i){if(Array.isArray(i))return i}function vT(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function xT(i,e){var t=i==null?null:typeof Symbol!="undefined"&&i[Symbol.iterator]||i["@@iterator"];if(t!=null){var n=[],r=!0,o=!1,s,a;try{for(t=t.call(i);!(r=(s=t.next()).done)&&(n.push(s.value),!(e&&n.length===e));r=!0);}catch(h){o=!0,a=h}finally{try{!r&&t.return!=null&&t.return()}finally{if(o)throw a}}return n}}function Gu(i,e){if(!!i){if(typeof i=="string")return Kn(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Kn(i,e)}}function Kn(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function _T(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function bT(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var A9=window.THREE?window.THREE:{WebGLRenderer:X1,Scene:di,PerspectiveCamera:$9,Raycaster:lx,TextureLoader:be,Vector2:D0,Vector3:$,Box3:c2,Color:l1,Mesh:K1,SphereGeometry:Q6,MeshBasicMaterial:l5,BackSide:y2,EventDispatcher:Q2,MOUSE:t4,Quaternion:b9,Spherical:un,Clock:aA},Hu=G9({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,t){t.hoverObj=null,t.toolTipElem&&(t.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return-1},triggerUpdate:!1},hoverFilter:{default:function(){return!0},triggerUpdate:!1},tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){if(e.controls.update&&e.controls.update(e.clock.getDelta()),e.postProcessingComposer?e.postProcessingComposer.render():e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(o){return o.render(e.scene,e.camera)}),e.enablePointerInteraction){var t=null;if(e.hoverDuringDrag||!e.isPointerDragging){var n=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y).filter(function(o){return e.hoverFilter(o.object)}).sort(function(o,s){return e.hoverOrderComparator(o.object,s.object)}),r=n.length?n[0]:null;t=r?r.object:null,e.intersectionPoint=r?r.point:null}t!==e.hoverObj&&(e.onHover(t,e.hoverObj),e.toolTipElem.innerHTML=t&&G0(e.tooltipContent)(t)||"",e.hoverObj=t)}W1.update()}return this},getPointerPos:function(e){var t=e.pointerPos,n=t.x,r=t.y;return{x:n,y:r}},cameraPosition:function(e,t,n,r){var o=e.camera;if(t&&e.initialised){var s=t,a=n||{x:0,y:0,z:0};if(!r)d(s),m(a);else{var h=Object.assign({},o.position),f=y();new W1.Tween(h).to(s,r).easing(W1.Easing.Quadratic.Out).onUpdate(d).start(),new W1.Tween(f).to(a,r/3).easing(W1.Easing.Quadratic.Out).onUpdate(m).start()}return this}return Object.assign({},o.position,{lookAt:y()});function d(v){var b=v.x,M=v.y,w=v.z;b!==void 0&&(o.position.x=b),M!==void 0&&(o.position.y=M),w!==void 0&&(o.position.z=w)}function m(v){var b=new A9.Vector3(v.x,v.y,v.z);e.controls.target?e.controls.target=b:o.lookAt(b)}function y(){return Object.assign(new A9.Vector3(0,0,-1e3).applyQuaternion(o.quaternion).add(o.position))}},zoomToFit:function(e){for(var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:10,r=arguments.length,o=new Array(r>3?r-3:0),s=3;s<r;s++)o[s-3]=arguments[s];return this.fitToBbox(this.getBbox.apply(this,o),t,n)},fitToBbox:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:10,o=e.camera;if(t){var s=new A9.Vector3(0,0,0),a=Math.max.apply(Math,d7(Object.entries(t).map(function(v){var b=mT(v,2),M=b[0],w=b[1];return Math.max.apply(Math,d7(w.map(function(E){return Math.abs(s[M]-E)})))})))*2,h=(1-r*2/e.height)*o.fov,f=a/Math.atan(h*Math.PI/180),d=f/o.aspect,m=Math.max(f,d);if(m>0){var y=s.clone().sub(o.position).normalize().multiplyScalar(-m);this.cameraPosition(y,s,n)}}return this},getBbox:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:function(){return!0},n=new A9.Box3(new A9.Vector3(0,0,0),new A9.Vector3(0,0,0)),r=e.objects.filter(t);return r.length?(r.forEach(function(o){return n.expandByObject(o)}),Object.assign.apply(Object,d7(["x","y","z"].map(function(o){return pT({},o,[n.min[o],n.max[o]])})))):null},getScreenCoords:function(e,t,n,r){var o=new A9.Vector3(t,n,r);return o.project(this.camera()),{x:(o.x+1)*e.width/2,y:-(o.y-1)*e.height/2}},getSceneCoords:function(e,t,n){var r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,o=new A9.Vector2(t/e.width*2-1,-(n/e.height)*2+1),s=new A9.Raycaster;return s.setFromCamera(o,e.camera),Object.assign({},s.ray.at(r,new A9.Vector3))},intersectingObjects:function(e,t,n){var r=new A9.Vector2(t/e.width*2-1,-(n/e.height)*2+1),o=new A9.Raycaster;return o.params.Line.threshold=e.lineHoverPrecision,o.setFromCamera(r,e.camera),o.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}},stateInit:function(){return{scene:new A9.Scene,camera:new A9.PerspectiveCamera,clock:new A9.Clock}},init:function(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=n.controlType,o=r===void 0?"trackball":r,s=n.rendererConfig,a=s===void 0?{}:s,h=n.extraRenderers,f=h===void 0?[]:h,d=n.waitForLoadComplete,m=d===void 0?!0:d;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.className="scene-container",t.container.style.position="relative",t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent={orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"}[o]||"",t.navInfo.style.display=t.showNavInfo?null:"none",t.toolTipElem=document.createElement("div"),t.toolTipElem.classList.add("scene-tooltip"),t.container.appendChild(t.toolTipElem),t.pointerPos=new A9.Vector2,t.pointerPos.x=-2,t.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(y){return t.container.addEventListener(y,function(v){if(y==="pointerdown"&&(t.isPointerPressed=!0),!t.isPointerDragging&&v.type==="pointermove"&&(v.pressure>0||t.isPointerPressed)&&(v.pointerType!=="touch"||v.movementX===void 0||[v.movementX,v.movementY].some(function(w){return Math.abs(w)>1}))&&(t.isPointerDragging=!0),t.enablePointerInteraction){var b=M(t.container);t.pointerPos.x=v.pageX-b.left,t.pointerPos.y=v.pageY-b.top,t.toolTipElem.style.top="".concat(t.pointerPos.y,"px"),t.toolTipElem.style.left="".concat(t.pointerPos.x,"px"),t.toolTipElem.style.transform="translate(-".concat(t.pointerPos.x/t.width*100,"%, 21px)")}function M(w){var E=w.getBoundingClientRect(),T=window.pageXOffset||document.documentElement.scrollLeft,C=window.pageYOffset||document.documentElement.scrollTop;return{top:E.top+C,left:E.left+T}}},{passive:!0})}),t.container.addEventListener("pointerup",function(y){t.isPointerPressed=!1,!(t.isPointerDragging&&(t.isPointerDragging=!1,!t.clickAfterDrag))&&requestAnimationFrame(function(){y.button===0&&t.onClick(t.hoverObj||null,y,t.intersectionPoint),y.button===2&&t.onRightClick&&t.onRightClick(t.hoverObj||null,y,t.intersectionPoint)})},{passive:!0,capture:!0}),t.container.addEventListener("contextmenu",function(y){t.onRightClick&&y.preventDefault()}),t.renderer=new A9.WebGLRenderer(Object.assign({antialias:!0,alpha:!0},a)),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),t.container.appendChild(t.renderer.domElement),t.extraRenderers=f,t.extraRenderers.forEach(function(y){y.domElement.style.position="absolute",y.domElement.style.top="0px",y.domElement.style.pointerEvents="none",t.container.appendChild(y.domElement)}),t.postProcessingComposer=new WE(t.renderer),t.postProcessingComposer.addPass(new jE(t.scene,t.camera)),t.controls=new{trackball:kE,orbit:NE,fly:zE}[o](t.camera,t.renderer.domElement),o==="fly"&&(t.controls.movementSpeed=300,t.controls.rollSpeed=Math.PI/6,t.controls.dragToLook=!0),(o==="trackball"||o==="orbit")&&(t.controls.minDistance=.1,t.controls.maxDistance=t.skyRadius,t.controls.addEventListener("start",function(){t.controlsEngaged=!0}),t.controls.addEventListener("change",function(){t.controlsEngaged&&(t.controlsDragging=!0)}),t.controls.addEventListener("end",function(){t.controlsEngaged=!1,t.controlsDragging=!1})),[t.renderer,t.postProcessingComposer].concat(d7(t.extraRenderers)).forEach(function(y){return y.setSize(t.width,t.height)}),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,t.scene.add(t.skysphere=new A9.Mesh),t.skysphere.visible=!1,t.loadComplete=t.scene.visible=!m,window.scene=t.scene},update:function(e,t){if(e.width&&e.height&&(t.hasOwnProperty("width")||t.hasOwnProperty("height"))&&(e.container.style.width="".concat(e.width,"px"),e.container.style.height="".concat(e.height,"px"),[e.renderer,e.postProcessingComposer].concat(d7(e.extraRenderers)).forEach(function(o){return o.setSize(e.width,e.height)}),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix()),t.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&t.skyRadius&&(e.controls.maxDistance=e.skyRadius),e.camera.far=e.skyRadius*2.5,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new A9.SphereGeometry(e.skyRadius)),t.hasOwnProperty("backgroundColor")){var n=tr(e.backgroundColor).alpha;n===void 0&&(n=1),e.renderer.setClearColor(new A9.Color(fT(1,e.backgroundColor)),n)}t.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new A9.TextureLoader().load(e.backgroundImageUrl,function(o){e.skysphere.material=new A9.MeshBasicMaterial({map:o,side:A9.BackSide}),e.skysphere.visible=!0,e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),!e.loadComplete&&r()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,!e.loadComplete&&r())),t.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),t.hasOwnProperty("objects")&&((t.objects||[]).forEach(function(o){return e.scene.remove(o)}),e.objects.forEach(function(o){return e.scene.add(o)}));function r(){e.loadComplete=e.scene.visible=!0}}});function wT(i,e){e===void 0&&(e={});var t=e.insertAt;if(!(!i||typeof document=="undefined")){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css",t==="top"&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=i:r.appendChild(document.createTextNode(i))}}var MT=`.scene-container .clickable {
  cursor: pointer;
}`;wT(MT);function hl(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function E5(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?hl(Object(t),!0).forEach(function(n){i8(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):hl(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function i8(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function ST(i,e){if(i==null)return{};var t={},n=Object.keys(i),r,o;for(o=0;o<n.length;o++)r=n[o],!(e.indexOf(r)>=0)&&(t[r]=i[r]);return t}function ET(i,e){if(i==null)return{};var t=ST(i,e),n,r;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(i);for(r=0;r<o.length;r++)n=o[r],!(e.indexOf(n)>=0)&&(!Object.prototype.propertyIsEnumerable.call(i,n)||(t[n]=i[n]))}return t}function Ce(i){return TT(i)||CT(i)||PT(i)||RT()}function TT(i){if(Array.isArray(i))return ei(i)}function CT(i){if(typeof Symbol!="undefined"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function PT(i,e){if(!!i){if(typeof i=="string")return ei(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ei(i,e)}}function ei(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function RT(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Vu(i,e){var t=new e;return{linkProp:function(r){return{default:t[r](),onChange:function(s,a){a[i][r](s)},triggerUpdate:!1}},linkMethod:function(r){return function(o){for(var s=o[i],a=arguments.length,h=new Array(a>1?a-1:0),f=1;f<a;f++)h[f-1]=arguments[f];var d=s[r].apply(s,h);return d===s?this:d}}}}var LT=["rendererConfig","waitForGlobeReady"],h3=E5(E5({},window.THREE?window.THREE:{AmbientLight:rA,DirectionalLight:iA,Vector2:D0}),{},{CSS2DRenderer:Ix}),Wu=Vu("globe",Nu),DT=Object.assign.apply(Object,Ce(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude","globeMaterial","onGlobeReady","pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration","arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration","polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration","pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration","hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration","hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonCurvatureResolution","hexPolygonsTransitionDuration","tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration","ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration","htmlElementsData","htmlLat","htmlLng","htmlAltitude","htmlElement","htmlTransitionDuration","objectsData","objectLat","objectLng","objectAltitude","objectThreeObject","customLayerData","customThreeObject","customThreeObjectUpdate"].map(function(i){return i8({},i,Wu.linkProp(i))}))),IT=Object.assign.apply(Object,Ce(["getGlobeRadius","getCoords","toGeoCoords"].map(function(i){return i8({},i,Wu.linkMethod(i))}))),ju=Vu("renderObjs",Hu),BT=Object.assign.apply(Object,Ce(["width","height","backgroundColor","backgroundImageUrl","enablePointerInteraction"].map(function(i){return i8({},i,ju.linkProp(i))}))),OT=Object.assign.apply(Object,Ce(["postProcessingComposer"].map(function(i){return i8({},i,ju.linkMethod(i))}))),qT=G9({props:E5(E5({onZoom:{triggerUpdate:!1},onGlobeClick:{triggerUpdate:!1},onGlobeRightClick:{triggerUpdate:!1},pointLabel:{default:"name",triggerUpdate:!1},onPointClick:{triggerUpdate:!1},onPointRightClick:{triggerUpdate:!1},onPointHover:{triggerUpdate:!1},arcLabel:{default:"name",triggerUpdate:!1},onArcClick:{triggerUpdate:!1},onArcRightClick:{triggerUpdate:!1},onArcHover:{triggerUpdate:!1},polygonLabel:{default:"name",triggerUpdate:!1},onPolygonClick:{triggerUpdate:!1},onPolygonRightClick:{triggerUpdate:!1},onPolygonHover:{triggerUpdate:!1},pathLabel:{default:"name",triggerUpdate:!1},onPathClick:{triggerUpdate:!1},onPathRightClick:{triggerUpdate:!1},onPathHover:{triggerUpdate:!1},hexLabel:{triggerUpdate:!1},onHexClick:{triggerUpdate:!1},onHexRightClick:{triggerUpdate:!1},onHexHover:{triggerUpdate:!1},hexPolygonLabel:{triggerUpdate:!1},onHexPolygonClick:{triggerUpdate:!1},onHexPolygonRightClick:{triggerUpdate:!1},onHexPolygonHover:{triggerUpdate:!1},tileLabel:{default:"name",triggerUpdate:!1},onTileClick:{triggerUpdate:!1},onTileRightClick:{triggerUpdate:!1},onTileHover:{triggerUpdate:!1},labelLabel:{triggerUpdate:!1},onLabelClick:{triggerUpdate:!1},onLabelRightClick:{triggerUpdate:!1},onLabelHover:{triggerUpdate:!1},objectLabel:{default:"name",triggerUpdate:!1},onObjectClick:{triggerUpdate:!1},onObjectRightClick:{triggerUpdate:!1},onObjectHover:{triggerUpdate:!1},customLayerLabel:{default:"name",triggerUpdate:!1},onCustomLayerClick:{triggerUpdate:!1},onCustomLayerRightClick:{triggerUpdate:!1},onCustomLayerHover:{triggerUpdate:!1},pointerEventsFilter:{default:function(){return!0},triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.hoverFilter(function(n){return e(n,n.__data)})}},lineHoverPrecision:{default:.2,triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)}}},DT),BT),methods:E5(E5({pauseAnimation:function(e){return e.animationFrameRequestId!==null&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),this},resumeAnimation:function(e){return e.animationFrameRequestId===null&&this._animationCycle(),this},_animationCycle:function(e){e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},pointOfView:function(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,r=s();if(t.lat===void 0&&t.lng===void 0&&t.altitude===void 0)return r;var o=Object.assign({},r,t);if(["lat","lng","altitude"].forEach(function(h){return o[h]=+o[h]}),!n)a(o);else{for(;r.lng-o.lng>180;)r.lng-=360;for(;r.lng-o.lng<-180;)r.lng+=360;new W1.Tween(r).to(o,n).easing(W1.Easing.Cubic.InOut).onUpdate(a).start()}return this;function s(){return e.globe.toGeoCoords(e.renderObjs.cameraPosition())}function a(h){var f=h.lat,d=h.lng,m=h.altitude;e.renderObjs.cameraPosition(e.globe.getCoords(f,d,m))}},getScreenCoords:function(e){for(var t,n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];var s=(t=e.globe).getCoords.apply(t,r);return e.renderObjs.getScreenCoords(s.x,s.y,s.z)},toGlobeCoords:function(e,t,n){var r=e.renderObjs.intersectingObjects(t,n).find(function(h){return h.object.__globeObjType==="globe"});if(!r)return null;var o=e.globe.toGeoCoords(r.point),s=o.lat,a=o.lng;return{lat:s,lng:a}},scene:function(e){return e.renderObjs.scene()},camera:function(e){return e.renderObjs.camera()},renderer:function(e){return e.renderObjs.renderer()},controls:function(e){return e.renderObjs.controls()},_destructor:function(){this.pauseAnimation(),this.pointsData([]),this.arcsData([]),this.polygonsData([]),this.pathsData([]),this.hexBinPointsData([]),this.hexPolygonsData([]),this.tilesData([]),this.labelsData([]),this.htmlElementsData([]),this.objectsData([]),this.customLayerData([])}},IT),OT),stateInit:function(e){var t=e.rendererConfig,n=e.waitForGlobeReady,r=n===void 0?!0:n,o=ET(e,LT),s=new Nu(E5({waitForGlobeReady:r},o));return{globe:s,renderObjs:Hu({controlType:"orbit",rendererConfig:t,waitForLoadComplete:r,extraRenderers:[new h3.CSS2DRenderer]}).skyRadius(s.getGlobeRadius()*500).showNavInfo(!1)}},init:function(e,t){var n=this;e.innerHTML="",e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";var r=document.createElement("div");t.container.appendChild(r),t.renderObjs(r),t.globe.rendererSize(t.renderObjs.renderer().getSize(new h3.Vector2)),this.pointOfView({altitude:2.5});var o=t.globe.getGlobeRadius(),s=t.renderObjs.controls();s.minDistance=o*1.01,setTimeout(function(){return s.maxDistance=o*100}),s.enablePan=!1,s.enableDamping=!0,s.dampingFactor=.1,s.rotateSpeed=.3,s.zoomSpeed=.3,s.addEventListener("change",function(){var f=n.pointOfView();s.rotateSpeed=f.altitude*.2,s.zoomSpeed=(f.altitude+1)*.1,t.globe.setPointOfView(t.renderObjs.camera().position),t.onZoom&&t.onZoom(f)});var a=function(d){for(var m=d;m&&!m.hasOwnProperty("__globeObjType");)m=m.parent;return m},h={point:function(d){return d},arc:function(d){return d},polygon:function(d){return d.data},path:function(d){return d},hexbin:function(d){return d},hexPolygon:function(d){return d},tile:function(d){return d},label:function(d){return d},object:function(d){return d},custom:function(d){return d}};t.renderObjs.objects([new h3.AmbientLight(12303291),new h3.DirectionalLight(16777215,.6),t.globe]).hoverOrderComparator(function(f,d){var m=a(f),y=a(d),v=function(M){return!M};return v(m)-v(y)}).tooltipContent(function(f){var d={point:t.pointLabel,arc:t.arcLabel,polygon:t.polygonLabel,path:t.pathLabel,hexbin:t.hexLabel,hexPolygon:t.hexPolygonLabel,tile:t.tileLabel,label:t.labelLabel,object:t.objectLabel,custom:t.customLayerLabel},m=a(f),y=m&&m.__globeObjType;return m&&y&&d.hasOwnProperty(y)&&h.hasOwnProperty(y)&&G0(d[y])(h[y](m.__data))||""}).onHover(function(f){var d={point:t.onPointHover,arc:t.onArcHover,polygon:t.onPolygonHover,path:t.onPathHover,hexbin:t.onHexHover,hexPolygon:t.onHexPolygonHover,tile:t.onTileHover,label:t.onLabelHover,object:t.onObjectHover,custom:t.onCustomLayerHover},m={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,object:t.onObjectClick,custom:t.onCustomLayerClick},y=a(f);if(y&&!d.hasOwnProperty(y.__globeObjType)&&(y=null),y!==t.hoverObj){var v=t.hoverObj?t.hoverObj.__globeObjType:null,b=t.hoverObj?h[v](t.hoverObj.__data):null,M=y?y.__globeObjType:null,w=y?h[M](y.__data):null;v&&v!==M&&d[v]&&d[v](null,b),M&&d[M]&&d[M](w,v===M?b:null),t.renderObjs.renderer().domElement.classList[M&&m[M]?"add":"remove"]("clickable"),t.hoverObj=y}}).onClick(function(f,d,m){if(!!f){var y={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,object:t.onObjectClick,custom:t.onCustomLayerClick},v=a(f),b=v.__globeObjType;if(v&&y.hasOwnProperty(b)&&y[b]){var M=[d];if(b==="globe"){var w=n.toGeoCoords(m),E=w.lat,T=w.lng;M.unshift({lat:E,lng:T})}else M.push(n.toGeoCoords(m));h.hasOwnProperty(b)&&M.unshift(h[b](v.__data)),y[b].apply(y,M)}}}).onRightClick(function(f,d,m){if(!!f){var y={globe:t.onGlobeRightClick,point:t.onPointRightClick,arc:t.onArcRightClick,polygon:t.onPolygonRightClick,path:t.onPathRightClick,hexbin:t.onHexRightClick,hexPolygon:t.onHexPolygonRightClick,tile:t.onTileRightClick,label:t.onLabelRightClick,object:t.onObjectRightClick,custom:t.onCustomLayerRightClick},v=a(f),b=v.__globeObjType;if(v&&y.hasOwnProperty(b)&&y[b]){var M=[d];if(b==="globe"){var w=n.toGeoCoords(m),E=w.lat,T=w.lng;M.unshift({lat:E,lng:T})}else M.push(n.toGeoCoords(m));h.hasOwnProperty(b)&&M.unshift(h[b](v.__data)),y[b].apply(y,M)}}}),this._animationCycle()}});const m6=Dx(qT,{methodNames:["pauseAnimation","geometry","radius","roughness","bumpMap","bumpScale","imageUtils","resumeAnimation","pointOfView","scene","camera","renderer","postProcessingComposer","controls","getGlobeRadius","getCoords","getScreenCoords","toGeoCoords","toGlobeCoords"],initPropNames:["animateIn","waitForGlobeReady","rendererConfig"]});m6.displayName="Globe";function FT({success:i,flag:e,onClick:t,fail:n,name:r,capital:o,children:s,disabled:a}){return J1("div",{className:"wrapperRep",children:_4("button",{type:"button",className:`ctaRep ${i?"greenBtn":""}${n?"redBtn":""}`,onClick:()=>!a&&t(),name:r,disabled:a,children:[s,o,e]})})}function kT({className:i,countryRandom:e,countryToGuess:t,isGoodResponse:n,isBadResponse:r,canRespond:o,onResponse:s,renderResponse:a}){return J1("div",{className:i,children:e.map(h=>J1(FT,{success:n&&h.name.common===t.name.common,fail:r&&h.name.common!==t.name.common,image:h.flags.png,disabled:!o,onClick:()=>s(h),children:a(h)},h.cca3))})}function NT({onFinished:i}){let e;const[t,n]=d9.exports.useState(61);return d9.exports.useEffect(()=>(e=setInterval(()=>{n(r=>{r<=1?(clearInterval(e),i()):n(r-1)})},1e3),()=>{clearInterval(e)}),[]),J1("div",{className:"BtnGameCountdown",children:t})}var Yt="/assets/earth4K.e937f37e.jpg",d3="/assets/night-sky.a40d2cbc.png",UT="/assets/rick-and-morty-rtj.5c3cd9ae.gif";function zT({namePaysBravo:i}){return _4("div",{className:"modale","aria-labelledby":"modal-title",role:"dialog","aria-modal":"true",children:[J1("div",{className:"fixed z-100000 inset-0 bg-gray-500 bg-opacity-75 transition-opacity"}),J1("div",{className:"center z-100000 inset-0 overflow-y-auto",children:J1("div",{className:"flex center items-end sm:items-center justify-center min-h-full p-4 text-center sm:p-0",children:_4("div",{className:"relative bg-white center rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:max-w-lg sm:w-full",children:[J1("div",{className:"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4",children:_4("div",{className:"namepaysbravo",children:["Tu d\xE9chire!! la r\xE9ponse \xE9tait bien ",i,J1("div",{className:"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10",children:J1("img",{className:"imagebravo top-200 z-10000 absolute",src:UT,alt:" rick et morty bravo"})})]})}),J1("div",{className:"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse"})]})})})]})}var GT="/assets/rickandmortyloose.817f5765.gif";function HT({namePaysLoose:i}){return _4("div",{className:"modale","aria-labelledby":"modal-title",role:"dialog","aria-modal":"true",children:[J1("div",{className:"fixed z-100000 inset-0 bg-gray-500 bg-opacity-75 transition-opacity"}),J1("div",{className:"fixed z-100000 inset-0 overflow-y-auto",children:J1("div",{className:"flex items-center justify-center min-h-full p-4 text-center sm:p-0",children:_4("div",{className:"relative center bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:max-w-lg sm:w-full",children:[J1("div",{className:"bg-white center px-4 pt-5 pb-4 sm:p-6 sm:pb-4",children:_4("div",{className:"namepaysloose",children:[" ","Oh non! tu t' es tromp\xE9,la r\xE9ponse \xE9tait ",i,J1("div",{className:"mx-auto center flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10",children:J1("img",{className:"imageloose top-200 z-10000 absolute",src:GT,alt:"perduu c'est ..."})})]})}),J1("div",{className:"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse"})]})})})]})}var VT="/assets/laterre4k.88ab060b.jpeg";const x4=new _e;x4.bumpScale=10;x4.bumpAltitude=1;new be().load(px,i=>{x4.specularMap=i,x4.specular=new l1("grey"),x4.shininess=18});function QT({score:i,setScore:e,playerName:t,onFinished:n,renderQuestion:r,renderResponse:o}){const s=d9.exports.useRef(),[a,h]=d9.exports.useState([]),[f,d]=d9.exports.useState(),[m,y]=d9.exports.useState(!1),[v,b]=d9.exports.useState(!1),[M,w]=d9.exports.useState(!1),[E,T]=d9.exports.useState(0),C=p7.exports.useMediaQuery({minWidth:677}),P=p7.exports.useMediaQuery({minWidth:390,maxWidth:460}),R=p7.exports.useMediaQuery({maxWidth:390}),I=p7.exports.useMediaQuery({minWidth:460,maxWidth:677}),q=d9.exports.useRef(null),D=B=>B>1e7?C?1.8:2.2:B>5e6?C?1.5:1.9:B>1e6?C?1.3:1.6:B>5e5?C?1.2:1.4:B>1e5?C?.9:1.3:B>5e4?C?.8:1.2:B>1e4?C?.7:1:B>5e3?C?.6:.9:B>2500?C?.5:.7:B>1500?C?.4:.6:B>500?C?.2:.4:B>100?C?.1:.3:.035;d9.exports.useEffect(()=>{Of.loadAnimation({container:q.current,render:"svg",loop:!1,autoplay:!0,animationData:qf})},[]);async function O(){y(!1),b(!1);const B=await kf(4),j=Nf(B),Y={lat:j.latlng[0],lng:j.latlng[1],altitude:D(j.area)},z={altitude:C?1.4:2.2};s.current.pointOfView(z,1500),setTimeout(()=>{s.current.pointOfView(Y,2e3),h(B),d(j),setTimeout(()=>{w(!0)},400)},400)}d9.exports.useEffect(()=>{O(),s.current.controls().enabled=!1},[m6]);function k(B){w(!1),B.name.common===f.name.common?(y(!0),T(E+1),e(i+10),setTimeout(()=>O(),1500)):(b(!0),T(E+1),setTimeout(()=>O(),1500))}return _4("div",{className:"Jeu",children:[J1(Ff,{playerName:t,score:i}),J1(NT,{onFinished:n}),m&&J1(zT,{className:"goodResp z-100000 absolute",namePaysBravo:f.name.common}),v&&J1(HT,{namePaysLoose:f.name.common}),R&&J1(m6,{height:680,width:360,ref:s,globeMaterial:x4,bumpImageUrl:Ve,bumpMap:!0,alpha:!0,showAtmosphere:!0,globeImageUrl:Yt,backgroundImageUrl:d3,lineHoverPrecision:0,polygonsData:$8.features.filter(B=>B.id!=="AQ"),polygonAltitude:.004,polygonCapColor:B=>f&&f.cca3===B.id?"#ffee03a1":"transparent",polygonSideColor:()=>"rgba(0, 20, 0, 0.00001)",polygonStrokeColor:()=>"#111",polygonsTransitionDuration:300}),I&&J1(m6,{height:800,width:650,ref:s,globeMaterial:x4,bumpImageUrl:C?We:Ve,bumpMap:!0,alpha:!0,showAtmosphere:!0,globeImageUrl:Yt,backgroundImageUrl:d3,lineHoverPrecision:0,polygonsData:$8.features.filter(B=>B.id!=="AQ"),polygonAltitude:.004,polygonCapColor:B=>f&&f.cca3===B.id?"#ffee03a1":"transparent",polygonSideColor:()=>"rgba(0, 20, 0, 0.00001)",polygonStrokeColor:()=>"#111",polygonsTransitionDuration:300}),C&&J1(m6,{height:750,width:1300,ref:s,globeMaterial:x4,bumpImageUrl:We,bumpMap:!0,alpha:!0,showAtmosphere:!0,globeImageUrl:VT,backgroundImageUrl:d3,lineHoverPrecision:0,polygonsData:$8.features.filter(B=>B.id!=="AQ"),polygonAltitude:.004,polygonCapColor:B=>f&&f.cca3===B.id?"#ffee03a1":"transparent",polygonSideColor:()=>"rgba(0, 20, 0, 0.00001)",polygonStrokeColor:()=>"#111",polygonsTransitionDuration:300}),P&&J1(m6,{height:820,width:390,ref:s,globeMaterial:x4,bumpImageUrl:C?We:Ve,bumpMap:!0,alpha:!0,showAtmosphere:!0,globeImageUrl:Yt,backgroundImageUrl:d3,lineHoverPrecision:0,polygonsData:$8.features.filter(B=>B.id!=="AQ"),polygonAltitude:.004,polygonCapColor:B=>f&&f.cca3===B.id?"#ffee03a1":"transparent",polygonSideColor:()=>"rgba(0, 20, 0, 0.00001)",polygonStrokeColor:()=>"#111",polygonsTransitionDuration:300}),f&&r(f),J1(kT,{className:`responses${R?"-mobile":""}`,countryRandom:a,countryToGuess:f,isGoodResponse:m,isBadResponse:v,canRespond:M,renderResponse:o,onResponse:k})]})}function $T({countryQuestion:i,name:e,flag:t}){return _4("div",{className:"champsQst",children:[i,e,t]})}export{QT as J,$T as Q};
